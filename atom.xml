<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://blog.gasolin.idv.tw/</id>
    <title>蓋索林 Gasolin Blog</title>
    <updated>2025-05-20T11:55:31.000Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://blog.gasolin.idv.tw/"/>
    <subtitle>蓋索林 Gasolin Blog</subtitle>
    <icon>https://blog.gasolin.idv.tw/img/favicon.ico</icon>
    <entry>
        <title type="html"><![CDATA[不用伺服器也能通訊？P2P 聊天 App 的啟動魔法]]></title>
        <id>https://blog.gasolin.idv.tw/service/p2p-and-dht</id>
        <link href="https://blog.gasolin.idv.tw/service/p2p-and-dht"/>
        <updated>2025-05-20T11:55:31.000Z</updated>
        <summary type="html"><![CDATA[之前介紹過我正在參與的 Keet 聊天應用程式，它使用 P2P 架構，傳訊時直接連接你和朋友的裝置，訊息不經過伺服器，有很好的隱私與通訊品質。]]></summary>
        <content type="html"><![CDATA[<p>之前介紹過我正在參與的 <a href="/service/tools/keet_2024">Keet 聊天應用程式</a>，它使用 P2P 架構，傳訊時直接連接你和朋友的裝置，訊息不經過伺服器，有很好的隱私與通訊品質。</p><p>P2P App 之間是怎麼找到彼此，互相連接的呢？就像我們要打電話給朋友，要怎麼知道對方的號碼呢？今天我們就來聊聊這個 P2P 連線背後的網路架構。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="p2p-網路自由自在的通訊">P2P 網路：自由自在的通訊<a href="#p2p-網路自由自在的通訊" class="hash-link" aria-label="Direct link to P2P 網路：自由自在的通訊" title="Direct link to P2P 網路：自由自在的通訊">​</a></h3><p>首先，我們來複習一下 P2P 網路。P2P (peer to peer) 就是「點對點」的意思，想像成你和你班上的同學可以直接互相打電話聊天，而不是每次都要先打到學校，再請學校老師轉接給同學。</p><ul><li><strong>優點</strong>： 這樣很自由，沒有一個老師在中間管理你們的通話。通話建立得快，而且就算老師不在，你們還是可以互相打電話。這就像一些下載電影的軟體，你直接從別人的電腦下載，而不是從一個中央伺服器下載。</li><li><strong>問題</strong>： 雖然自由，但也有個大問題：如果你們是第一次打電話給對方，根本不知道對方的電話號碼，那怎麼辦？如果不是同一班上的同學，你怎麼知道你的同學現在在哪裡呢？難道在網路時代，還要面對面才能交換號碼嗎？</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="p2p-的啟動困境你我的手機號碼是多少">P2P 的啟動困境：你、我的手機號碼是多少？<a href="#p2p-的啟動困境你我的手機號碼是多少" class="hash-link" aria-label="Direct link to P2P 的啟動困境：你、我的手機號碼是多少？" title="Direct link to P2P 的啟動困境：你、我的手機號碼是多少？">​</a></h3><p>這就是 P2P 網路遇到的「<strong>啟動困境</strong>」。當你和你的朋友小明都剛加入一個聊天應用程式，你們彼此都不知道對方的「網路地址」（就像你不知道小明的手機號碼）。</p><ul><li><p>傳統做法（<strong>中央管理</strong>）： 如果有一個「中華電信」伺服器，你們兩個都連上這個伺服器，然後問：「小明的手機號碼是多少？」「我的手機號碼是多少？」，伺服器再將對方的號碼告訴你們，然後你們就可以互相打電話聊天了。但是萬一「中華電信」伺服器壞了，你們就不能連線了，這不是真的點對點通訊。</p></li><li><p><strong>P2P</strong> 的理想（沒有中央管理）： P2P 網路的目標是沒有中央管理，所以我們不能依賴一個「老師」或「中華電信」來幫我們轉接。但如果沒有人告訴我們彼此的地址，我們怎麼才能找到對方，並開始玩聊天呢？</p></li></ul><p>這就像在一個新學校裡，沒有老師介紹，你想和一個別班的新同學聊天，但你們連對方叫什麼、電話號碼是什麼都不知道，根本沒辦法開始聊。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="dht-的救援一本分散式電話簿">DHT 的救援：一本「分散式電話簿」<a href="#dht-的救援一本分散式電話簿" class="hash-link" aria-label="Direct link to DHT 的救援：一本「分散式電話簿」" title="Direct link to DHT 的救援：一本「分散式電話簿」">​</a></h3><p>這時候，DHT 網路 (Distributed Hash Table 分散式雜湊表) 就登場了！它就像一本「分散式電話簿」，專門解決「你、我的手機號碼是多少？」的問題。</p><p>DHT 網路有幾個關鍵的特點：</p><ul><li><strong>沒有中央電話簿管理員，大家都維護一份自己的「電話簿」</strong>： 雖然沒有中央管理員，但每個參與 DHT 網路的機器，都會幫忙記住一部分其他機器的「身份證號碼」（ID）和「電話號碼」（IP 位址）。不是記住全部，而是記住跟自己「比較近」的那些。</li><li><strong>聰明的指路系統</strong>：當你想找某個人（某台電腦）時，你只要告訴 DHT 網路他／她的 ID。DHT 網路會很聰明地一步一步地把你「指引」到目標。就像你打電話問朋友：「請問小華的電話號碼是多少？」這個朋友可能不知道，但他會告訴你：「你問小明看看，他可能知道。」然後你就一步一步地被指引到目的地。</li><li><strong>隨時可以加入或離開</strong>：就像你可以隨時買一支新手機加入電話網，或者有人換號碼離開一樣，DHT 網路中的機器可以隨時加入或離開，不會影響整個網路的運作。</li></ul><p>所以，P2P 網路可以透過 DHT 來「啟動」連線，就像你需要一本分散式的「電話簿」來找到你的朋友。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="dht-網路如何用來啟動bootstrap-p2p-連線">DHT 網路如何用來啟動 (Bootstrap) P2P 連線？<a href="#dht-網路如何用來啟動bootstrap-p2p-連線" class="hash-link" aria-label="Direct link to DHT 網路如何用來啟動 (Bootstrap) P2P 連線？" title="Direct link to DHT 網路如何用來啟動 (Bootstrap) P2P 連線？">​</a></h3><p>現在，我們來看看 DHT 網路協助 P2P 連線的步驟。</p><ul><li>第一步：<strong>進入「分散式電話簿」</strong>： 當你剛加入 P2P 網路時，你會先連上幾個<strong>已知的 DHT 節點</strong>（就像拿到幾頁電話簿的影本）。這些通常是預先設定好的、較穩定的節點。</li><li>第二步：<strong>在「分散式電話簿」上登記自己</strong>： 你會把自己（你的 ID 和 IP 地址，也就是「電話號碼」）告訴 DHT 網路中的一些電腦，讓大家知道你的存在。小明一樣也會把自己登記進去。</li><li>第三步：<strong>透過「分散式電話簿」找到對方</strong>： 當你想跟小明連線時，你只需要小明的 ID。DHT 網路會幫你查詢，一步一步引導你找到小明的 IP 地址。</li><li>第四步：<strong>直接通話！</strong> 一旦你知道了小明的 IP 地址，你們就可以直接建立 P2P 連線了！就像你拿到了小明的電話號碼，以後就可以直接打電話給他，不用每次都去查電話簿。</li></ul><p>一旦你在茫茫網路中找到你的朋友後，你就可以直接打電話給他，不用每次都查電話簿了。這個「第一次連線」的過程，就是 P2P 連線的啟動過程（Bootstrap）。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="用流程圖來解釋">用流程圖來解釋<a href="#用流程圖來解釋" class="hash-link" aria-label="Direct link to 用流程圖來解釋" title="Direct link to 用流程圖來解釋">​</a></h3><p>再以流程圖來解釋一次，請參考以下流程圖：</p><div class="mermaid" data-mermaid-src="sequenceDiagram
    participant 我方電腦
    participant DHT入門節點1
    participant DHT節點A
    participant 小明電腦

    我方電腦->>DHT入門節點1: (1) 請求加入分散式電話簿 (附上我的ID)

    DHT入門節點1-->>我方電腦: (2) 回覆附近電話簿中的節點列表

    我方電腦->>DHT節點A: (3) 告知我方ID與電話號碼(IP) (在電話簿上登記自己)

    Note over 小明電腦: 小明電腦也執行了類似的加入流程

    我方電腦->>DHT節點A: (4) 查詢小明電腦的ID (在電話簿中尋找小明)
    DHT節點A-->>我方電腦: (9) 回傳小明電腦的電話號碼(IP)

    我方電腦->>小明電腦: (10) 直接建立P2P連線！(開始聊天)">sequenceDiagram
    participant 我方電腦
    participant DHT入門節點1
    participant DHT節點A
    participant 小明電腦

    我方電腦-&gt;&gt;DHT入門節點1: (1) 請求加入分散式電話簿 (附上我的ID)

    DHT入門節點1--&gt;&gt;我方電腦: (2) 回覆附近電話簿中的節點列表

    我方電腦-&gt;&gt;DHT節點A: (3) 告知我方ID與電話號碼(IP) (在電話簿上登記自己)

    Note over 小明電腦: 小明電腦也執行了類似的加入流程

    我方電腦-&gt;&gt;DHT節點A: (4) 查詢小明電腦的ID (在電話簿中尋找小明)
    DHT節點A--&gt;&gt;我方電腦: (9) 回傳小明電腦的電話號碼(IP)

    我方電腦-&gt;&gt;小明電腦: (10) 直接建立P2P連線！(開始聊天)</div><ol><li>我方電腦 剛啟動時，會先聯絡預先設定好的 DHT 入門節點 (通常是幾個穩定的節點，就像電話簿的入門處)。</li><li>DHT 入門節點 會回覆我方電腦一些它所知道的 DHT 節點 清單，讓它能深入這個分散式電話簿網路。</li><li>我方電腦會向這些 DHT 節點 「發佈」自己的 ID 和 IP 地址（電話號碼），讓整個 DHT 網路知道它的存在。小明電腦也做了同樣的事情。</li><li>當我方電腦想要找到小明電腦時，它會向 DHT 節點 查詢小明電腦的 ID。</li><li>如果查詢的節點不知道，它會幫忙轉發請求給它知道的更接近目標 ID 的其他 DHT 節點。</li><li>最終，某個 DHT 節點會找到小明電腦的資訊，並把小明電腦的 IP 地址（電話號碼） 傳回來。</li><li>一旦我方電腦獲取了小明電腦的 IP 地址，它們就可以直接建立 P2P 連線了，而不需要再透過 DHT 網路。</li></ol><p>這樣看下來，有沒比較了解 P2P 網路的運作，和 DHT 對 P2P 網路的幫助哩？</p><hr><p>資訊公開：我目前負責 Keet 的 Mobile 端的開發，分享自己對整個架構設計的理解。Keet 使用的很多元件都是開源的，你可以在 <a href="https://github.com/holepunchto" target="_blank" rel="noopener noreferrer">https://github.com/holepunchto</a> 查看，或看看我整理的 <a href="https://github.com/gasolin/awesome-pears" target="_blank" rel="noopener noreferrer">Awesome-pears</a>，裡面有更多 P2P 應用程式喔！</p><p>對相關技術感興趣的朋友，也歡迎參考<a href="https://holepunch.recruitee.com/" target="_blank" rel="noopener noreferrer">徵才訊息</a>，歡迎對 P2P 技術有研究，或 React Native 的開發者加入。</p>]]></content>
        <category label="network" term="network"/>
        <category label="P2P" term="P2P"/>
        <category label="DHT" term="DHT"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[使用 Ollama 與 Holesail 遠端運行本地模型]]></title>
        <id>https://blog.gasolin.idv.tw/tools/ollama</id>
        <link href="https://blog.gasolin.idv.tw/tools/ollama"/>
        <updated>2025-05-12T11:41:46.000Z</updated>
        <summary type="html"><![CDATA[Ollama 介紹]]></summary>
        <content type="html"><![CDATA[<h3 class="anchor anchorWithStickyNavbar_LWe7" id="ollama-介紹">Ollama 介紹<a href="#ollama-介紹" class="hash-link" aria-label="Direct link to Ollama 介紹" title="Direct link to Ollama 介紹">​</a></h3><p>Ollama 是一款相當方便使用的本地大模型命令行工具，使用者可以透過 Ollama，使用一些簡單的命令，就能在本地下載與執行語言模型。</p><p>可以到 <a href="https://ollama.com/" target="_blank" rel="noopener noreferrer">https://ollama.com/</a> 下載來安裝</p><blockquote><p>在 Mac 上用 <code>brew install ollama</code> 命令來安裝的話，預設開機不會自動執行，需用命令 <code>ollama serve</code> 執行。用瀏覽器開啟 <a href="http://127.0.0.1:11434" target="_blank" rel="noopener noreferrer">http://127.0.0.1:11434</a> 可以看到 <code>ollama is running</code> 字樣。<code>11434</code> 是 Ollama 預設的 port，等下會用到。</p></blockquote><p>Ollama 網站裡 <a href="https://ollama.com/search" target="_blank" rel="noopener noreferrer">https://ollama.com/search</a> 可以找到各種可以在本地運行的模型，
如要安裝近期較佳的本地模型如 gemma3 或 qwen3，可運行命令如 <code>ollama run gemma3</code>，若本地沒有此模型，就會先自動下載 Google 的 gemma3 模型，下載完後自動在本機執行。</p><p></p><p>(選擇想要使用的模型後，在右上角可以直接複製對應的命令)</p><p>用命令 <code>ollama list</code> 即可查看已安裝的模型：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">NAME                       ID              SIZE      MODIFIED     </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">qwen2.5-coder:7b           2b0496514337    4.7 GB    2 months ago    </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">nomic-embed-text:latest    0a109f422b47    274 MB    4 months ago    </span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>前面 <code>NAME</code> 表示下載的模型名稱，<code>SIZE</code> 表示模型佔用的空間。</p><p>用命令 <code>ollama --help</code> 可以查看其他支援的命令。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="如何挑適合的大模型">如何挑適合的大模型<a href="#如何挑適合的大模型" class="hash-link" aria-label="Direct link to 如何挑適合的大模型" title="Direct link to 如何挑適合的大模型">​</a></h3><blockquote><ol><li>同一代的本地模型數字越大，能力越強</li><li>剩餘多大的 RAM -&gt; 跑多少 B 的模型</li></ol></blockquote><p>一般而言，在同一架構或系列的本地模型中，參數規模（通常以 B 為單位表示）較大的模型往往擁有更強的理解和生成能力。<strong>在執行順暢的前提下盡量跑大一點的模型</strong>，最終得到的效果會更出色。</p><p>在選擇模型時，<strong>機器剩餘的 RAM 容量</strong>是很重要的限制。模型的運行需要佔用大量的系統記憶體（RAM）。模型的參數規模越大，所需的 RAM 也越高。因此機器剩餘的 RAM 大小，直接影響可以跑得動的本地模型。</p><p>簡單的選擇方法是看你的系統在跑作業系統和開啟各種服務後，還剩餘多大的 RAM，就可以跑多少 B 的模型。
一種特別狀況是特別標注使用 4 bit 採樣的本地模型，可以跑 RAM x2 倍大小的模型。</p><p>就自己的使用經驗，使用 Mac M2 + 16GB RAM 的機型，標示小於 8B 的模型大都可以跑的順，再大的話執行時就比較容易出現系統卡頓等問題，影響使用體驗。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="用-holesail-遠端跑本地模型">用 Holesail 遠端跑本地模型<a href="#用-holesail-遠端跑本地模型" class="hash-link" aria-label="Direct link to 用 Holesail 遠端跑本地模型" title="Direct link to 用 Holesail 遠端跑本地模型">​</a></h3><p>要順暢的使用本地模型，除了在本機上使用小一點的本地模型跑之外，還有一種選擇，就是將較大的本地模型跑在更強勁的桌機上，遠端連線回去使用，但是傳統的遠端連線設定較麻煩，需要處理各種網路設定後才能使用。</p><p>我使用 holesail 這個點對點的新工具，它可以<strong>將遠端機器的 port 對應到本地機器的某個 port</strong>，從而得到類似在本地執行的效果（底層也是使用 <a href="https://holepunch.to/" target="_blank" rel="noopener noreferrer">holepunch</a> 的技術）。</p><p>可以透過命令 <code>npm install -g holesail</code> 安裝 holesail。</p><p>在桌機上：</p><p>執行 Ollama 服務後，使用命令</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ holesail --live 11434</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><code>11434</code> 是 Ollama 預設的 port，這命令的作用是通知 holesail 將 port <code>11434</code> 映射出去。
這時 holesail 會回報一個雜湊碼（hashcode），將這個雜湊碼透過備忘錄等工具記下來，將在另一台機器上使用。</p><p>在想使用 Ollama 服務的本地機器上，輸入以下命令</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">holesail [hashcode]</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>會回報另一個 port (ex: 8989, 可透過 <code>--port [num]</code> 指定)，這時 holesail 已經將遠端主機的 port <code>11434</code> 上的服務，映射到本地 port <code>8989</code> 上，若用瀏覽器開啟網址 <a href="http://127.0.0.1:8989" target="_blank" rel="noopener noreferrer">http://127.0.0.1:8989</a> ，可以看到 <code>ollama is running</code> 字樣，表示跑在桌機上的 Ollama 已經透過 port 8989 得以模擬在本機執行。</p><p></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="透過-cherry-studio-使用本地模型">透過 Cherry Studio 使用本地模型<a href="#透過-cherry-studio-使用本地模型" class="hash-link" aria-label="Direct link to 透過 Cherry Studio 使用本地模型" title="Direct link to 透過 Cherry Studio 使用本地模型">​</a></h3><p>Ollama 提供了命令行介面，但是一般使用時還是用<strong>類似 ChatGPT 的介面</strong>更方便。
目前我比較常用的是 <code>Cherry Studio</code> 這套工具（透過 <code>brew cherry-studio</code> 安裝），可以方便的在各家線上大模型與本地模型間切換，也提供許多預設的助手類型可供選擇 (或再進一步修改)。</p><p>到<code>設定 &gt; 模型提供者 &gt; Ollama</code>，將 <code>API 主機地址</code> 改為 <code>http://127.0.0.1:8989/v1/</code>，再選擇想使用的模型，如此一來就可以在本機上正常使用桌機上的本地模型了。</p><p></p>]]></content>
        <category label="tools, ollama, holepunch" term="tools, ollama, holepunch"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[目前使用的電腦應用程式 (2025)]]></title>
        <id>https://blog.gasolin.idv.tw/tools/my-app-2025</id>
        <link href="https://blog.gasolin.idv.tw/tools/my-app-2025"/>
        <updated>2025-05-07T10:15:31.000Z</updated>
        <summary type="html"><![CDATA[使用 Macbook Air M2 已二年，延續去年的設定，除了使用系統內建功能外，還得安裝一些便捷程式以提高使用效率。在此順道紀錄目前使用的應用程式。]]></summary>
        <content type="html"><![CDATA[<p></p><p>使用 Macbook Air M2 已二年，<a href="/tools/tools/my-app-2024">延續去年的設定</a>，除了使用系統內建功能外，還得安裝一些便捷程式以提高使用效率。在此順道紀錄目前使用的應用程式。</p><p>今年也添購了一台 Mac Studio M4，之後再來紀錄跨裝置使用的設定。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="半自動安裝">半自動安裝<a href="#半自動安裝" class="hash-link" aria-label="Direct link to 半自動安裝" title="Direct link to 半自動安裝">​</a></h2><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># xcode 命令行工具</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ xcode-select --install</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ brew install brave-browser cherry-studio dropbox fava gnupg gnu-sed hiddenbar itsycal jetbrains-toolbox java logseq nvm ollama raycast slack starship steam surfshark the-unarchiver visual-studio-code yarn zsh</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>額外安裝 git 工具、nvm (nodejs 版本管理)、設定 openjdk 連結</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ brew tap microsoft/git</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ brew install git-credential-manager-core</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ nvm install 22</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ sudo ln -sfn /opt/homebrew/opt/openjdk/libexec/openjdk.jdk \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     /Library/Java/JavaVirtualMachines/openjdk.jdk</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="設定腳本">設定腳本<a href="#設定腳本" class="hash-link" aria-label="Direct link to 設定腳本" title="Direct link to 設定腳本">​</a></h3><p>% code ~/.zshrc</p><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># Set PATH, MANPATH, etc., for Homebrew.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">eval "$(/opt/homebrew/bin/brew shellenv)"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># Set PATH, MANPATH, etc., for Homebrew.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">export NVM_DIR="$HOME/.nvm"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  [ -s "/opt/homebrew/opt/nvm/nvm.sh" ] &amp;&amp; \. "/opt/homebrew/opt/nvm/nvm.sh"  # This loads nvm</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  [ -s "/opt/homebrew/opt/nvm/etc/bash_completion.d/nvm" ] &amp;&amp; \. "/opt/homebrew/opt/nvm/etc/bash_completion.d/nvm"  # This loads nvm bash_completion</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># starship</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">eval "$(starship init zsh)"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># Android</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">PATH="/opt/homebrew/opt/openjdk/bin:/opt/homebrew/opt/gnu-sed/libexec/gnubin:$PATH"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">export CPPFLAGS="-I/opt/homebrew/opt/openjdk/include"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">export ANDROID_HOME=$HOME/Library/Android/sdk</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">export ANDROID_NDK_HOME=$ANDROID_HOME/ndk/25.1.8937393</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">export PATH=$PATH:$ANDROID_HOME/emulator</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">export PATH=$PATH:$ANDROID_HOME/platform-tools</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">export PATH=$PATH:$ANDROID_HOME/tools/bin</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">export PATH=$PATH:/Applications/CMake.app/Contents/bin</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># find local ip</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">ip(){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  ifconfig -a|grep inet|grep -v 127.0.0.1|grep -v inet6|awk '{print $2}'|tr -d "addr:"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># kill process by port</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">kp() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  npx kill-port --port $1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># apply PR to codebase</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">pr() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  git fetch upstream pull/$1/head:pr-$1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  git checkout pr-$1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># format chinese article spaces</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">pangu() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  npx pangu "$1"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># list short changelog</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">changelog() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  echo "changelog:"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  LANG=en_US git log --no-merges --pretty=format:"* %h - %s (%ar) &lt;%an&gt;" -n $1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>加入一些 bash 命令，如 <code>kp [port]</code> 可以馬上刪掉佔用 port 的服務。</p><p>% code ~/.gitconfig</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">[user]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        email = my@mail.com</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        name = ABC</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        signingkey= </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[alias]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        co = checkout</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        st = status</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        rc = rebase --continue</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        ci = commit</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        df = diff</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        lg = log -p</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        br = branch</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        up = remote update</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        cp = cherry-pick</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[filter "lfs"]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        clean = git-lfs clean -- %f</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        smudge = git-lfs smudge -- %f</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        process = git-lfs filter-process</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        required = true</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[credential]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        helper = </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        helper = /usr/local/share/gcm-core/git-credential-manager</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[credential "https://dev.azure.com"]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        useHttpPath = true</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>加入一些 git 快捷命令。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="app-store">App Store<a href="#app-store" class="hash-link" aria-label="Direct link to App Store" title="Direct link to App Store">​</a></h2><ul><li>Transporter：👨‍💻 App 上傳工具</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="其他應用">其他應用<a href="#其他應用" class="hash-link" aria-label="Direct link to 其他應用" title="Direct link to 其他應用">​</a></h3><ul><li><a href="https://www.pcloud.com/" target="_blank" rel="noopener noreferrer">pCloud</a>：備用的快速備份資料夾，一次付清後有 2TB 空間，目前拿來備份 Dropbox 資料夾。</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="我到底裝了什麼">我到底裝了什麼<a href="#我到底裝了什麼" class="hash-link" aria-label="Direct link to 我到底裝了什麼" title="Direct link to 我到底裝了什麼">​</a></h2><p>這麼多的程式，可以概略再分為系統增強、工作、生活相關幾類：</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="系統增強">系統增強<a href="#系統增強" class="hash-link" aria-label="Direct link to 系統增強" title="Direct link to 系統增強">​</a></h3><ul><li>homebrew：所有可以透過 <a href="https://brew.sh/" target="_blank" rel="noopener noreferrer">homebrew</a> 安裝的程式，都應透過 homebrew 安裝。</li><li>brave-browser：🌐 主要使用的瀏覽器<ul><li>重新整理目前的網頁：<code>command + r</code> (+ shift 完整重新整理)</li><li>關閉目前分頁：<code>command + w</code></li><li>開新分頁：<code>command + t</code></li><li>回到上一頁：<code>command + 左方向鍵</code></li></ul></li><li>ollama: 本地 LLM 工具。</li><li>cherry-studio: 便於使用 ollama 和各種線上 llm 的前端介面。</li><li>dropbox：快速備份資料夾（空間 15.x GB）</li><li><a href="https://github.com/dwarvesf/hidden" target="_blank" rel="noopener noreferrer">hiddenbar</a>：隱藏多餘的狀態列圖示<ul><li><code>在狀態列圖示上按著 cmd 鍵可以拖曳改變順序</code></li></ul></li><li>itsycal：📅 狀態列日曆</li><li>the-unarchiver：解壓縮工具</li><li>raycast：透過鍵盤快速啟動工具
-（<a href="https://manual.raycast.com/hotkey" target="_blank" rel="noopener noreferrer">取代 spotlight</a>）用 <code>Command + 空白鍵</code> 啟動。<ul><li>取代系統內建的 <a href="https://www.raycast.com/changelog/1-29-0" target="_blank" rel="noopener noreferrer">emoji keyboard</a>，在 Extentions &gt; Search Emoji 綁定 <code>Control + Command</code> 快捷鍵。</li><li>取代 rectangle 安排視窗位置，在 <code>Extentions &gt; Window Management</code> 綁定 <code>Option + Command + 方向鍵</code> 快捷鍵。</li><li>snippets 綁定 <code>Option + /</code> 快捷鍵，儲存預先定義的 gpt prompts 外派幫手。</li></ul></li></ul><p>原本用 microsoft-edge 來開 chatgpt /new bing 搜尋，但太耗費空間已移除。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="工作">工作<a href="#工作" class="hash-link" aria-label="Direct link to 工作" title="Direct link to 工作">​</a></h3><ul><li>jetbrains-toolbox：檢查最新的 Android 開發環境（android-studio）</li><li>git-credential-manager-core：👨‍💻 <a href="https://docs.github.com/en/get-started/getting-started-with-git/caching-your-github-credentials-in-git#git-credential-manager" target="_blank" rel="noopener noreferrer">搭配 github 使用</a></li><li>gnupg：👨‍💻 <a href="https://tourcoder.com/gpg-on-macos/" target="_blank" rel="noopener noreferrer">加密工具</a>(Pretty Good Privacy)，我用來簽署 git commit</li><li>gnu-sed：👨‍💻 命令行字串取代工具</li><li>java：👨‍💻 跑一些程式用</li><li>nvm：👨‍💻 Node 版本管理工具<ul><li>透過 <code>nvm install 16</code> 可以安裝最新版的 Nodejs 16.x，透過 <code>nvm ls-remote</code> 可以查看已安裝的版本</li></ul></li><li>slack：👨‍💻 溝通工具</li><li>starship：👨‍💻 命令行高亮提示</li><li>visual-studio-code：👨‍💻 程式編輯工具<ul><li>用 <code>CMD + J</code> 命令可以在編輯模式與內建的 Terminal 工具之間切換。</li><li>用 <code>CMD + B</code> 命令可以開關側邊欄。</li></ul></li><li>yarn：👨‍💻 node 套件管理工具</li><li>surfshark: VPN 工具</li><li>quicktime：螢幕錄製工具 (原來用的 recordit 已經 gg 了)</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="生活">生活<a href="#生活" class="hash-link" aria-label="Direct link to 生活" title="Direct link to 生活">​</a></h3><ul><li>fava: beancount 文字記帳視覺化</li><li>logseq：每日記事工具，記事是用 markdown 格式儲存，放在 Dropbox 資料夾中</li><li>steam: 遊戲管理工具</li></ul><hr><p>除了應用程式之外，電腦上還會裝瀏覽器插件、Raycast 插件、與編輯器插件。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="瀏覽器插件">瀏覽器插件<a href="#瀏覽器插件" class="hash-link" aria-label="Direct link to 瀏覽器插件" title="Direct link to 瀏覽器插件">​</a></h2><ul><li>Bitwarden：密碼管理工具</li><li>Pocket：📰 稍後閱讀</li><li>Youtube 雙字幕：可同時顯示兩種語言</li><li>電子錢包：👛 Metamask、Tally Ho</li></ul><p>分頁使用瀏覽器內建的分頁群組功能</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="raycast-插件">Raycast 插件<a href="#raycast-插件" class="hash-link" aria-label="Direct link to Raycast 插件" title="Direct link to Raycast 插件">​</a></h2><ul><li>Google Translate</li><li>Visual Studio Recent Projects</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="visual-studio-code-插件">Visual Studio Code 插件<a href="#visual-studio-code-插件" class="hash-link" aria-label="Direct link to Visual Studio Code 插件" title="Direct link to Visual Studio Code 插件">​</a></h2><ul><li>Background Terminal Notifier：命令執行後跳系統通知</li><li>Beancount：Beancount 格式補完</li><li>Blank Line at the End：檔尾自動加入空白行</li><li>Color Info：行內 CSS 顏色顯示 / 選擇器</li><li>EditorConfig for VSCode</li><li>ESLint：程式碼樣式檢查</li><li>Indent-rainbow: 快速辨識不同層的括號</li><li>Path Intellisense：改進檔案路徑搜尋</li><li>Trailing Spaces：去除行尾的空白。</li><li>Version Lens: 快速檢查 package.json 檔案中套件是否有更新的版本</li><li>WakaTime：紀錄使用編輯器的時間</li></ul><hr><h2 class="anchor anchorWithStickyNavbar_LWe7" id="web-應用">Web 應用<a href="#web-應用" class="hash-link" aria-label="Direct link to Web 應用" title="Direct link to Web 應用">​</a></h2><ul><li>✉️ 信箱：gmail</li><li>🗺️ 地圖：Google 地圖</li><li>👥 社群：<a href="https://www.facebook.com/" target="_blank" rel="noopener noreferrer">Facebook</a>、<a href="https://twitter.com/gasolin" target="_blank" rel="noopener noreferrer">Twitter</a>、Slack、Keet、Discord、Telegram</li><li>📝 記事：Keet（開一個私人聊天室）、<a href="http://keep.google.com/" target="_blank" rel="noopener noreferrer">Google keep</a></li><li>待辦事項：<a href="https://habitica.com/" target="_blank" rel="noopener noreferrer">habitica</a></li><li>🔐 密碼管理：Bitwarden，Yubi Authenticator（2 步驟認證）</li><li>相簿：Google Photo、Dropbox</li><li>📺 線上影片： Youtube、Netflix</li><li>🎥 觀影記錄：Simkl</li><li>線上學習：PressPlay</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="web-服務">Web 服務<a href="#web-服務" class="hash-link" aria-label="Direct link to Web 服務" title="Direct link to Web 服務">​</a></h2><ul><li>🗂️ 個人網站：<a href="http://www.gasolin.idv.tw/" target="_blank" rel="noopener noreferrer">個人網站</a>、<a href="https://github.com/gasolin/blog/" target="_blank" rel="noopener noreferrer">Github</a>、<a href="https://www.linkedin.com/in/fredglin/" target="_blank" rel="noopener noreferrer">Linkedin</a></li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="系統內建快速鍵和手勢">系統內建快速鍵和手勢<a href="#系統內建快速鍵和手勢" class="hash-link" aria-label="Direct link to 系統內建快速鍵和手勢" title="Direct link to 系統內建快速鍵和手勢">​</a></h3><ul><li>切換輸入法：<code>Control + 空白鍵</code></li><li>切換程式：<code>command + tab</code></li><li>切換虛擬桌面： 用三指在觸控板上同時向左或右撥動，或 <code>Control + 方向鍵</code></li></ul>]]></content>
        <category label="tool" term="tool"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[個人工具箱（2025四月）]]></title>
        <id>https://blog.gasolin.idv.tw/tools/tooling-in-2025-Apr</id>
        <link href="https://blog.gasolin.idv.tw/tools/tooling-in-2025-Apr"/>
        <updated>2025-04-10T16:30:00.000Z</updated>
        <summary type="html"><![CDATA[先記錄下來手邊使用的工具，才有機會從繁雜中歸納出簡單的使用規則。]]></summary>
        <content type="html"><![CDATA[<p><code>先記錄下來手邊使用的工具，才有機會從繁雜中歸納出簡單的使用規則。</code></p><p>更新一下手邊常用的設備。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="主要裝備">主要裝備<a href="#主要裝備" class="hash-link" aria-label="Direct link to 主要裝備" title="Direct link to 主要裝備">​</a></h2><ul><li><p>💻 Apple Macbook Pro 13 M2 16GB RAM, 512GB SSD，作業系統：15.3</p></li><li><p>📱 Google Pixel 8a, Android 15, 6.1", Grephene OS</p></li><li><p>🎧  Nothing Ear(2)</p></li><li><p>U2F (兩步驟驗證): Ubikey 5 NFC, Ledger Nano S+</p></li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="️-外出攜帶">🚶‍♂️ 外出攜帶<a href="#️-外出攜帶" class="hash-link" aria-label="Direct link to 🚶‍♂️ 外出攜帶" title="Direct link to 🚶‍♂️ 外出攜帶">​</a></h2><ul><li>💻 筆電，📱 手機，OriMouse 折疊滑鼠</li><li>🔌   45W 雙模行動電源充電器 (10000mAh)</li><li>🎧  降噪耳機</li></ul><p>用行動電源 + 45W 充電器 (二合一)，在出門的行程中可以保持電腦的電量。停留的地點有插座的時候，也可以直接插上為筆電供電。
（原本使用多年的<code>倍思10000mAh</code>終於電池膨脹，改用 idmix CH6 pro，上面印有神奈川沖浪裡 🌊 看起來賞心悅目，但相較之前用的偏重，不特別推薦。）</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="-家">🏠 家<a href="#-家" class="hash-link" aria-label="Direct link to 🏠 家" title="Direct link to 🏠 家">​</a></h3><ul><li>🔌  Apple 雙 USB C 電源插座，二合一充電器。</li><li>🖱 羅技 Lift 滑鼠</li><li>📦 Synology NAS: 電影，影集，照片，資料備份，Dropbox, Google Photos</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="️-網站工具">🕸️ 網站工具<a href="#️-網站工具" class="hash-link" aria-label="Direct link to 🕸️ 網站工具" title="Direct link to 🕸️ 網站工具">​</a></h3><ul><li>🕸️ 主要瀏覽器：<code>Brave</code></li><li>瀏覽器插件<ul><li>密碼管理：Bitwarden</li><li>分頁管理：瀏覽器內建的群組分類（分 Work, idv, gov 三類）</li></ul></li><li>瀏覽器常駐分頁<ul><li>✉️ <a href="http://mail.google.com/" target="_blank" rel="noopener noreferrer">GMail</a>,</li><li>✅待辦事項：<a href="https://habitica.com/" target="_blank" rel="noopener noreferrer">Habitica</a></li></ul></li></ul><p>不再使用稍後閱讀（Pocket），如果開在分頁裡的文章都還沒讀完，那也不會再去看稍後閱讀了。</p><ul><li>👥 主要社交網站：<a href="http://www.facebook.com/" target="_blank" rel="noopener noreferrer">Facebook</a>、<a href="https://twitter.com/gasolin" target="_blank" rel="noopener noreferrer">Twitter</a></li><li>📝 記事：Logseq, Keet</li><li>💾 網路硬碟：<a href="http://www.dropbox.com/" target="_blank" rel="noopener noreferrer">Dropbox</a>, 主要用作同步照片、LocalSend</li><li>🔑密碼管理：<a href="https://www.bitwarden.com/" target="_blank" rel="noopener noreferrer">Bitwarden</a></li><li>🎥 看電影記錄：<a href="https://simkl.com/" target="_blank" rel="noopener noreferrer">Simkl</a></li><li>看書紀錄 Logseq, <a href="https://www.goodreads.com/" target="_blank" rel="noopener noreferrer">goodreads</a></li><li>🗂️ 個人網站：<a href="http://www.gasolin.idv.tw" target="_blank" rel="noopener noreferrer">個人網站</a>, <a href="https://github.com/gasolin/blog/" target="_blank" rel="noopener noreferrer">Github</a></li><li>🗂️ 個人履歷：<a href="https://www.linkedin.com/in/fredglin/" target="_blank" rel="noopener noreferrer">Linkedin</a></li><li>🔗 自動記錄：n8n</li><li>📺 <a href="https://www.youtube.com/" target="_blank" rel="noopener noreferrer">Youtube</a></li><li>Podcast：Youtube Music</li><li>👛 電子錢包 Metamask, <a href="/crypto/setup_ledger_nano_on_linux">Ledger Nano S+</a></li></ul><p>最大的改變是退訂 IFTTT，改用筆電跑 <code>npx n8n</code> 定期執行 RSS 比較，寫入 logseq。
另外 Google Podcast 關閉，改用 Youtube Music 聽 Podcast。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="設計工具">設計工具<a href="#設計工具" class="hash-link" aria-label="Direct link to 設計工具" title="Direct link to 設計工具">​</a></h3><ul><li>螢幕動畫錄製： QuickTime</li><li>流程圖、心智圖：Mermaid.js</li></ul><p>不再使用 Recordit，直接用 QuickTime 做螢幕錄製。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="開發工具">開發工具<a href="#開發工具" class="hash-link" aria-label="Direct link to 開發工具" title="Direct link to 開發工具">​</a></h3><ul><li>編輯器：VS Code<ul><li>Blank Line at the End</li><li>Diff Tool</li><li>EditorConfig for VSCode</li><li>Guides: more guide line</li><li>GitLens: more git info</li><li>Settings Sync</li><li>solidity</li><li>Trailing Spaces</li></ul></li><li>版本控制：git</li><li>套件管理：brew, <a href="https://github.com/creationix/nvm" target="_blank" rel="noopener noreferrer">nvm</a></li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="-android-手機應用">📱 Android 手機應用<a href="#-android-手機應用" class="hash-link" aria-label="Direct link to 📱 Android 手機應用" title="Direct link to 📱 Android 手機應用">​</a></h2><ul><li>🕸️ 瀏覽器：Brave</li><li>📰 閱讀：MooRead</li><li>✉️ 信箱：Gmail</li><li>🗺️ 地圖：Google 地圖</li><li>記事：Logseq, Keet</li><li>日曆：Logseq, Google 日曆</li><li>待辦事項：Habitica</li><li>內建相機，內建時鐘</li><li>相簿：內建相簿，Google 相簿，Dropbox</li><li>社交：LINE, Facebook, Twitter (網頁版), Keet</li><li>🔐 密碼管理：Bitwarden，Yubi Authenticator（2 步驟認證）</li><li>📺 線上影片：Youtube, Netflix</li><li>音樂：Youtube Music</li><li>🚶‍♂️ 健康：Amazfit T-Rex 2 運動手錶 + Zepp</li><li>遊戲：steam</li><li>🤖 LLM：Cherry Studio &amp; Ollama</li></ul><p>手機瀏覽器使用 <code>Brave</code> 瀏覽器。使用實體筆記本 + Logseq 紀錄。
<a href="/life/handbook">完整的實體筆記配置</a></p><p>增加使用 LLM，透過 Ollama 可以使用一些本地 LLM 協助 Code Review 等事情。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="其他工具">其他工具<a href="#其他工具" class="hash-link" aria-label="Direct link to 其他工具" title="Direct link to 其他工具">​</a></h3><ul><li>旅遊：Google 翻譯，TripAdvisor (旅遊時才裝)</li><li>記錄看書狀況：Logseq</li><li>線上學習：PressPlay, Youtube</li><li>💳 Taiwan Pay</li><li>記帳用 moneybook</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="reference">Reference<a href="#reference" class="hash-link" aria-label="Direct link to Reference" title="Direct link to Reference">​</a></h2><ul><li><sup id="fnref-1-6d0c99"><a href="#fn-1-6d0c99" class="footnote-ref">1</a></sup> <a href="/tools/tools/tooling-in-2011-May.md">個人工具箱 2011 五月</a></li><li><sup id="fnref-2-6d0c99"><a href="#fn-2-6d0c99" class="footnote-ref">2</a></sup> <a href="/tools/tooling-in-2011">個人工具箱 2011</a></li><li><sup id="fnref-3-6d0c99"><a href="#fn-3-6d0c99" class="footnote-ref">3</a></sup> <a href="/tools/tooling-in-2016">個人工具箱 2016</a></li><li><sup id="fnref-4-6d0c99"><a href="#fn-4-6d0c99" class="footnote-ref">4</a></sup> <a href="/tools/tooling-in-2017">個人工具箱 2017</a></li><li><sup id="fnref-5-6d0c99"><a href="#fn-5-6d0c99" class="footnote-ref">5</a></sup> <a href="/tools/tooling-in-2017-sep">個人工具箱 2017 九月</a></li><li><sup id="fnref-6-6d0c99"><a href="#fn-6-6d0c99" class="footnote-ref">6</a></sup> <a href="/tools/tooling-in-2018-feb">個人工具箱 2018 二月</a></li><li><sup id="fnref-7-6d0c99"><a href="#fn-7-6d0c99" class="footnote-ref">7</a></sup> <a href="/tools/tooling-in-2018-jun">個人工具箱 2018 六月</a></li><li><sup id="fnref-8-6d0c99"><a href="#fn-8-6d0c99" class="footnote-ref">8</a></sup> <a href="/tools/tooling-in-2019-Mar">個人工具箱 2019 三月</a></li><li><sup id="fnref-9-6d0c99"><a href="#fn-9-6d0c99" class="footnote-ref">9</a></sup> <a href="/tools/tooling-in-2019-Nov">個人工具箱 2019 十一月</a></li><li><sup id="fnref-10-6d0c99"><a href="#fn-10-6d0c99" class="footnote-ref">10</a></sup> <a href="/tools/tooling-in-2020-Nov">個人工具箱 2020 十一月</a></li><li><sup id="fnref-11-6d0c99"><a href="#fn-11-6d0c99" class="footnote-ref">11</a></sup> <a href="/tools/tooling-in-2021-May">個人工具箱 2021 五月</a></li><li><sup id="fnref-12-6d0c99"><a href="#fn-12-6d0c99" class="footnote-ref">12</a></sup> <a href="/tools/tooling-in-2021-Dec">個人工具箱 2021 十二月</a></li><li><sup id="fnref-13-6d0c99"><a href="#fn-13-6d0c99" class="footnote-ref">13</a></sup> <a href="/tools/tooling-in-2024-Mar">個人工具箱 2024 三月</a></li></ul>]]></content>
        <category label="life" term="life"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[這一年的投資 (2024)]]></title>
        <id>https://blog.gasolin.idv.tw/life/my-investment-2024</id>
        <link href="https://blog.gasolin.idv.tw/life/my-investment-2024"/>
        <updated>2025-02-17T11:40:31.000Z</updated>
        <summary type="html"><![CDATA[遠端工作多年，少了通勤，卻多了一些時間可以出門走走。且隨著世界的變化，未來的趨勢，我也開始嘗試許多不同的敗家投資。]]></summary>
        <content type="html"><![CDATA[<p>遠端工作多年，少了通勤，卻多了一些時間可以出門走走。且隨著世界的變化，未來的趨勢，我也開始嘗試許多不同的<del>敗家</del>投資。</p><p>雖然以下內容看似都是在花錢，但內在的邏輯是：身邊圍繞著自己喜歡的人事物，讓你每次接觸時都感到愉悅。常保身心健康也是對自己，對家人最好的投資。</p><p>此外，我覺得並不是買下來的東西才是投資。
有些東西你沒有購買，但是你也投資了充足的時間去研究，查看，最後得出不購買的決定。
這些都是投資的過程。</p><p>上年度的回顧直接更新在<a href="/life/my-investment-2023">這一年的投資 (2023)</a>。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="投資我的工具箱">投資我的工具箱<a href="#投資我的工具箱" class="hash-link" aria-label="Direct link to 投資我的工具箱" title="Direct link to 投資我的工具箱">​</a></h2><blockquote><p>集資網站上購入快手錢包 5⭐</p></blockquote><p>設計精緻，鈔票可以平放收納，收零錢後不需拉拉鍊，三折後體積只比信用卡稍大。</p><blockquote><p>購入全型三向機能背包 5⭐
<a href="https://www.grday.com/portfolio-item/marcher-pro/" target="_blank" rel="noopener noreferrer">https://www.grday.com/portfolio-item/marcher-pro/</a></p></blockquote><p>收到快手錢包使用後很滿意，到廠商 GreenRoom 網站上逛發現他們也有出斜背包，
有兩個拉鏈袋，可以臨時擴充容量，有趣又實用，剛好打到我的興趣上。使用後也相當滿意。</p><blockquote><p>鞋全家福購入 Goodyear M2 防水戶外踏青鞋 5⭐</p></blockquote><p>雖然網路上購買可以省 300 塊左右，但還是願意鼓勵讓人可以現場試鞋的店家。
之前穿 Solomon 的也有靜態防水，在雨天或潮濕的環境很方便。</p><blockquote><p>蝦皮上購入 Anbernic RG35XX-H 3⭐</p></blockquote><p>DOS 之類的 2D 遊戲都沒問題，效能也夠跑 PSP，但 3.5 吋方形螢幕應該不太適合。小小一台，偶而把玩心情好。</p><p>Update: 作工堪虞，過一陣子沒玩就開不了機。</p><blockquote><p>PCHOME 購入 Ally X 4⭐</p></blockquote><p>上面的模擬器壞掉後，看到新出的 Ally X 就入手了... 入手後各種 steam 上的遊戲都可以玩，沒有 Steam Deck 相容問題。
比較驚訝的是雖然 Ally X 是跑 Windows 11 系統，但按關機鍵重開後，多數情況下也可以繼續遊玩。使用上已經是相當可用的狀態。</p><blockquote><p>Nothing Ear(2) 4⭐</p></blockquote><p>之前的無線耳機不見了，在機場另買一副。收納盒做的像是一個珠寶盒，相當美觀，有把玩價值。使用起來算滿意。但是感覺耳壓比較高，帶久耳朵容易痛。</p><blockquote><p>防災包 v3 (第三版)</p></blockquote><p>更換防災包中的內容物，加入多功能鉗。
之前預備的水與食物份量依然不夠全家人用，但已經過重（只有我背得動），趁掃除的機會改用輕量的背包。找出新的存放位置後，將朝向分兩包存放的方向改版。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="投資工作生產力">投資工作生產力<a href="#投資工作生產力" class="hash-link" aria-label="Direct link to 投資工作生產力" title="Direct link to 投資工作生產力">​</a></h2><ul><li>Goovis Art 懸鏡式頭戴顯示器 3.5 ⭐</li></ul><p>顯示效果很 OK，之後換手機時也會考慮支援 USB Type-C (DisplayPort Alt mode) 傳輸影像的機種，這樣在輕度辦公 / 看 Youtube 影片時，用手機跟頭顯就可以解決了。
只是在外頭室內空間使用時，戴在頭上的造型仍然太顯眼，因此（恥度）限縮了它的應用範圍。</p><ul><li>TILLAK 迷你小折疊桌 4⭐</li></ul><p>有時候會帶椅子到戶外工作，帶這個輕量的小桌相當方便，打開就可用。節省了一些設置和收拾時間。
金屬材質散熱也不錯，在家時往桌上一放可以墊高筆電，坐沙發上時也可墊在腳上，筆電的熱氣就不會直接傳到大腿。</p><ul><li>OriMouse 折疊滑鼠 3.5⭐</li></ul><p>收納時可以攤平非常有趣，使用時手感不是特別好，但勝在攜帶方便，出門時依然會帶著。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="投資家人的共同記憶">投資家人的共同記憶<a href="#投資家人的共同記憶" class="hash-link" aria-label="Direct link to 投資家人的共同記憶" title="Direct link to 投資家人的共同記憶">​</a></h2><blockquote><p>一台 CUV 小車 5⭐️</p></blockquote><p>作為一個不擅長也不特別愛開車的人，我希望全自動駕駛早點到來。
但是在降到合理價格之前，一些車子的配備已經可以解決許多我的問題：
比如配有 360 環景功能，在會車、停車時都非常方便；
有了定速巡航可以降低開車時的疲勞度，同時也可以節省汽油。</p><p>有車之後由於在路上的安全性提升了，更方便帶家人造訪一些需要較長車程的地方。</p><blockquote><p>Panasonic 洗脫烘洗衣機 5⭐</p></blockquote><p>既然家裡沒人喜歡晾衣服，那就試試看洗脫烘洗衣機。
把衣服放進洗衣機，按了按鈕後就沒事了，熱泵烘乾效果相當好，拿出來衣服都乾的。
只是每次洗完後，都需要清潔濾網上的毛絮。我們發現使用過的口罩是很好的擦拭工具，在濾網上一擦就可以處理掉毛絮。</p><blockquote><p>RioBuds 擦窗機器人 4⭐</p></blockquote><p>有兩個履帶可以在玻璃上行走，擦窗的效果還可以，偶而還是會卡在邊角處脫出。</p><blockquote><p>Youtube Premium / Netflix 4⭐</p></blockquote><p>觀影需求。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="投資健康">投資健康<a href="#投資健康" class="hash-link" aria-label="Direct link to 投資健康" title="Direct link to 投資健康">​</a></h2><ul><li>超慢跑 4⭐</li></ul><p>天氣普普或沒出門運動的時候，手錶預先設成每分鐘 180 步，每 4 步一個提示。
把地墊一鋪，電視播個節目，邊看節目邊跑起來，這樣運動還是蠻簡便的。</p><ul><li>新 SUP 板 (Freesun 黑閃電) 4⭐</li></ul><p>我用原來的板子已划了 60 多趟，現在對划行速度有了更高的要求，因此權衡自己的平衡能力後，購入長 14 呎寬 27 吋的 SUP 板。較長的粄身可以增加吃水線長度，施加同樣的划行力道時，可以得到更高的速度。</p>]]></content>
        <category label="life" term="life"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Keet 聊天應用程式介紹，解決傳統 P2P 聊天應用痛點的新選擇]]></title>
        <id>https://blog.gasolin.idv.tw/tools/keet_2024</id>
        <link href="https://blog.gasolin.idv.tw/tools/keet_2024"/>
        <updated>2024-11-27T12:15:31.000Z</updated>
        <summary type="html"><![CDATA[Keet 是一款新穎又好用的聊天應用程式，讓你可以和朋友直接進行視訊或文字聊天。以下是它的幾個亮點：]]></summary>
        <content type="html"><![CDATA[<p><a href="https://keet.io" target="_blank" rel="noopener noreferrer">Keet</a> 是一款新穎又好用的聊天應用程式，讓你可以和朋友直接進行視訊或文字聊天。以下是它的幾個亮點：</p><ul><li><p>超安全的聊天：透過端到端加密，只有你和朋友可以看到聊天內容，比 Line 更具隱私保障。</p></li><li><p>清晰不卡畫的視訊：Keet 的視訊通話品質非常好，因為它不用伺服器，直接連接你和朋友的設備。當然你也可以只使用語音通話。</p></li><li><p>快速傳大檔案：無論是高畫質照片還是影片，都可以輕鬆傳送，完全不壓縮畫質！</p></li></ul><p>這些功能讓 Keet 很適合喜歡聊天、重視隱私或想用高品質視訊的你。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="為什麼-keet-比其他聊天-app-更安全">為什麼 Keet 比其他聊天 App 更安全？<a href="#為什麼-keet-比其他聊天-app-更安全" class="hash-link" aria-label="Direct link to 為什麼 Keet 比其他聊天 App 更安全？" title="Direct link to 為什麼 Keet 比其他聊天 App 更安全？">​</a></h3><p>一般聊天 App（例如 Line）大多使用伺服器來傳訊息（「伺服器 - 客戶端」（Server-Client）架構）。這意味著當你發送訊息時，訊息會先傳到伺服器（Server），然後再從伺服器傳送到你的朋友（Client）。這種方式看起來很方便，但也有一些風險：</p><ul><li>伺服器可能被駭客入侵：伺服器被攻擊後，訊息可能被偷走。</li><li>隱私不安全：你的聊天記錄全都存在伺服器上，服務商或其他人可能會偷看或審查你的內容。</li><li>帳號可能被封鎖：伺服器可以隨時停用你的帳號，讓你無法再使用 App。</li><li>伺服器出問題就不能用：如果伺服器壞掉，所有人都會無法使用 App。</li><li>運營成本高：伺服器需要很多錢來維護，可能會讓 App 的服務收費或廣告變多。</li></ul><p>Keet 採用的是點對點（Peer-to-Peer, P2P）架構。直接連接你和朋友的裝置，訊息完全不經過伺服器。這種設計有以下好處：</p><ul><li>超高安全性：沒有伺服器，駭客就沒地方可以入侵。</li><li>完全保護隱私：訊息經過加密，除了你和朋友，誰也看不到。</li><li>帳號不會被封：因為沒有中央伺服器，沒人可以禁用你的帳號。</li><li>少出問題：沒有伺服器就不用擔心伺服器掛掉，全都靠你的設備和網路運行。</li></ul><p>總結來說，Keet 的 P2P 架構讓它比使用伺服器 - 客戶端架構的聊天應用程式更安全，因為它減少了訊息被竊取、隱私被侵犯和帳號被禁用的風險。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="p2p-架構的挑戰">P2P 架構的挑戰<a href="#p2p-架構的挑戰" class="hash-link" aria-label="Direct link to P2P 架構的挑戰" title="Direct link to P2P 架構的挑戰">​</a></h3><p>雖然 P2P 聽起來很棒，但它使用在即時通訊（IM）中時，也有一些問題需要克服：</p><ul><li>雙方要同時在線上：你和朋友必須同時上線才能聊天，跟現在的 App 不太一樣。</li><li>使用者識別：當使用者透過多個設備發送訊息時，難以確保這些訊息都屬於同一個使用者。</li><li>訊息可能延遲：如果網路不好，訊息可能傳得很慢，甚至傳不出去。</li><li>傳檔案比較麻煩：如果朋友沒上線，你發送的檔案就無法即時傳過去。</li><li>設備比較耗電：因為 P2P 要靠你的裝置處理訊息和檔案，可能會比較耗電和流量。</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="keet-怎麼克服這些問題">Keet 怎麼克服這些問題？<a href="#keet-怎麼克服這些問題" class="hash-link" aria-label="Direct link to Keet 怎麼克服這些問題？" title="Direct link to Keet 怎麼克服這些問題？">​</a></h3><p>keet 的開發團隊 <a href="https://holepunch.to/" target="_blank" rel="noopener noreferrer">holepunch</a> 很瞭解 P2P 架構的限制，因此結合了加密技術與 P2P，創造了一些厲害的技術來解決這些挑戰：</p><ul><li>解決「不在線就不能用」的問題：Keet 使用了 Blind-paring 和 Blind-mirror 技術，訊息或檔案可以先加密存到其他節點，等朋友上線時再處理。</li><li>檔案可以一直存取：檔案會加密存放在某些節點，就算發送者離線，接收者還是可以下載。</li><li>多設備同步很簡單：Keet 讓用戶用一組助記詞創建身份（ID），可以讓多個裝置共享聊天紀錄，也能刪除或編輯自己發的訊息。</li></ul><h4 class="anchor anchorWithStickyNavbar_LWe7" id="解決不在線就不能用的問題">解決「不在線就不能用」的問題<a href="#解決不在線就不能用的問題" class="hash-link" aria-label="Direct link to 解決「不在線就不能用」的問題" title="Direct link to 解決「不在線就不能用」的問題">​</a></h4><p>讓我們來看看 Blind-paring 和 Blind Mirror 的概念。</p><p><code>Blind-Paring</code> 是一種透過加密技術來管理加入聊天室請求的方法。具體過程如下：</p><ul><li>請求保存：當使用者 A 想要加入某個聊天室時，這個請求會被加密並保存到某個 peer 上。</li><li>管理者批准：當聊天室的管理者 B 上線時，可以對這個請求進行簽名批准。</li><li>使用者加入：當使用者 A 上線時，經過批准的請求會允許 A 加入聊天室。</li></ul><p>這些請求雖然保存在某個 peer 上，但這個 peer 並沒有 A 或 B 的金鑰，因此無法解密查看具體的請求內容。</p><p><code>Blind-Mirror</code> 是 Blind-paring 的檔案版本。具體過程如下：</p><ul><li>檔案保存：當使用者 A 傳送了一個檔案後，這個檔案會被加密並保存到某些 peer 上。</li><li>持續存取：即使使用者 A 離線了，這個檔案仍然能被其他人存取。</li><li>隱私保護：保存檔案的 peer 沒有解密的金鑰，因此無法查看檔案內容。</li></ul><p>這兩種技術都利用了加密技術來保護使用者的隱私和數據安全，確保即使數據保存在其他 peer 上，也無法被未授權的使用者查看。</p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="解決多設備同步問題">解決多設備同步問題<a href="#解決多設備同步問題" class="hash-link" aria-label="Direct link to 解決多設備同步問題" title="Direct link to 解決多設備同步問題">​</a></h4><p>在 P2P 架構中，每個 peer（節點）都是平等的。當使用者透過多個設備發送訊息時，如何確保這些訊息都屬於同一個使用者，並讓使用者能夠編輯或刪除來自不同設備的訊息呢？</p><p>Keet 借鑑了加密貨幣的技術，加入了 ID（身份）的概念。具體來說，Keet 使用了 24 個助記詞來創建一個唯一的身份（ID）。這些助記詞就像是一組密碼，能夠幫助識別和驗證使用者。</p><ul><li>身份識別：當使用者在不同設備上發送訊息時，這些設備都會使用相同的 ID 來確認身份。這樣，即使使用不同的設備，系統也能知道這些訊息來自同一個使用者。</li><li>訊息管理：使用者可以編輯或刪除來自不同設備的訊息，因為所有訊息都與同一個身份（ID）相關聯。</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="總結">總結<a href="#總結" class="hash-link" aria-label="Direct link to 總結" title="Direct link to 總結">​</a></h2><p>雖然 P2P 聊天 App 一開始會讓人感覺有些不方便，但 Keet 的新技術已經讓它更穩定、更好用。如果你想試試看更私密又安全的聊天方式，不妨下載 Keet 試試看！</p><p>我還建立了一個叫 「Taiwan 🇹🇼 用 Keet 了」的群組，歡迎來一起討論：
👉 <a href="https://gasolin.idv.tw/keetlink/#key=yrysb95uakfuhrhn3t8dfh53du663f14uikq66sc9jppw4b8ph6xnbqbb8ofczuxjy1i3jodsuemnc3q55nzujcac9a65p8xk78zmzfr3w&amp;title=Taiwan%20%F0%9F%87%B9%F0%9F%87%BC%20%E7%94%A8%20Keet%20%E4%BA%86" target="_blank" rel="noopener noreferrer">點這裡加入</a>。</p><hr><p>資訊公開：我目前負責 Keet 的 Mobile 端開發，分享自己對整個架構設計的理解。Keet 使用的很多元件都是開源的，你可以在 <a href="https://github.com/holepunchto" target="_blank" rel="noopener noreferrer">https://github.com/holepunchto</a> 查看，或看看我整理的 <a href="https://github.com/gasolin/awesome-pears" target="_blank" rel="noopener noreferrer">Awesome-pears</a>，裡面有更多 P2P 應用程式喔！</p><p>對相關技術感興趣的朋友，也歡迎參考<a href="https://holepunch.recruitee.com/" target="_blank" rel="noopener noreferrer">徵才訊息</a>，歡迎對 P2P 技術有研究，或 React Native 的開發者加入。</p>]]></content>
        <category label="tool" term="tool"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[目前使用的電腦應用程式 (2024)]]></title>
        <id>https://blog.gasolin.idv.tw/tools/my-app-2024</id>
        <link href="https://blog.gasolin.idv.tw/tools/my-app-2024"/>
        <updated>2024-09-13T13:15:31.000Z</updated>
        <summary type="html"><![CDATA[使用 Macbook Air M2 已一年，除了使用系統內建功能外，還得安裝一些便捷程式以提高使用效率。在此順道紀錄目前使用的應用程式。]]></summary>
        <content type="html"><![CDATA[<p></p><p>使用 Macbook Air M2 已一年，除了使用系統內建功能外，還得安裝一些便捷程式以提高使用效率。在此順道紀錄目前使用的應用程式。
<a href="/tools/tools/my-app-2023">延續去年的設定</a>，做了一些改動。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="半自動安裝">半自動安裝<a href="#半自動安裝" class="hash-link" aria-label="Direct link to 半自動安裝" title="Direct link to 半自動安裝">​</a></h2><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># xcode 命令行工具</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ xcode-select --install</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ brew install android-studio balsamiq-wireframes brave-browser dropbox fava gnupg gnu-sed hiddenbar itsycal java logseq microsoft-edge nvm ollama raycast slack starship steam surfshark the-unarchiver visual-studio-code yarn zsh</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>額外安裝 git 工具、nvm (nodejs 版本管理)、設定 openjdk 連結</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ brew tap microsoft/git</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ brew install git-credential-manager-core</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ nvm install 18</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ sudo ln -sfn /opt/homebrew/opt/openjdk/libexec/openjdk.jdk \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     /Library/Java/JavaVirtualMachines/openjdk.jdk</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="設定腳本">設定腳本<a href="#設定腳本" class="hash-link" aria-label="Direct link to 設定腳本" title="Direct link to 設定腳本">​</a></h3><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">% # nvm 設定</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">% mkdir ~/.nvm</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">% code ~/.zshrc</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># 加入腳本</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># Set PATH, MANPATH, etc., for Homebrew.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">eval "$(/opt/homebrew/bin/brew shellenv)"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># Set PATH, MANPATH, etc., for Homebrew.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">export NVM_DIR="$HOME/.nvm"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  [ -s "/opt/homebrew/opt/nvm/nvm.sh" ] &amp;&amp; \. "/opt/homebrew/opt/nvm/nvm.sh"  # This loads nvm</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  [ -s "/opt/homebrew/opt/nvm/etc/bash_completion.d/nvm" ] &amp;&amp; \. "/opt/homebrew/opt/nvm/etc/bash_completion.d/nvm"  # This loads nvm bash_completion</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># starship</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">eval "$(starship init zsh)"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">PATH="/opt/homebrew/opt/openjdk/bin:/opt/homebrew/opt/gnu-sed/libexec/gnubin:$PATH"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">export CPPFLAGS="-I/opt/homebrew/opt/openjdk/include"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">export ANDROID_HOME=$HOME/Library/Android/sdk</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">export ANDROID_NDK_HOME=$ANDROID_HOME/ndk/25.1.8937393</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">export PATH=$PATH:$ANDROID_HOME/emulator</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">export PATH=$PATH:$ANDROID_HOME/platform-tools</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">export PATH=$PATH:/Applications/CMake.app/Contents/bin</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># find local ip</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">ip(){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  ifconfig -a|grep inet|grep -v 127.0.0.1|grep -v inet6|awk '{print $2}'|tr -d "addr:"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># kill process by port</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">kp() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  npx kill-port --port $1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># apply PR to codebase</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">pr() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  git fetch upstream pull/$1/head:pr-$1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  git checkout pr-$1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># format chinese article spaces</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">pangu() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  npx pangu "$1"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># list short changelog</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">changelog() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  echo "changelog:"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  LANG=en_US git log --no-merges --pretty=format:"* %h - %s (%ar) &lt;%an&gt;" -n $1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="app-store">App Store<a href="#app-store" class="hash-link" aria-label="Direct link to App Store" title="Direct link to App Store">​</a></h2><ul><li>Transporter：👨‍💻 App 上傳工具</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="其他應用">其他應用<a href="#其他應用" class="hash-link" aria-label="Direct link to 其他應用" title="Direct link to 其他應用">​</a></h3><ul><li><a href="https://www.pcloud.com/" target="_blank" rel="noopener noreferrer">pCloud</a>：備用的快速備份資料夾，一次付清後有 2TB 空間，目前拿來備份 Dropbox 資料夾。</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="我到底裝了什麼">我到底裝了什麼<a href="#我到底裝了什麼" class="hash-link" aria-label="Direct link to 我到底裝了什麼" title="Direct link to 我到底裝了什麼">​</a></h2><p>這麼多的程式，可以概略再分為系統增強、工作、生活相關幾類：</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="系統增強">系統增強<a href="#系統增強" class="hash-link" aria-label="Direct link to 系統增強" title="Direct link to 系統增強">​</a></h3><ul><li>homebrew：所有可以透過 <a href="https://brew.sh/" target="_blank" rel="noopener noreferrer">homebrew</a> 安裝的程式，都應透過 homebrew 安裝。</li><li>brave-browser：🌐 主要使用的瀏覽器<ul><li>重新整理目前的網頁：<code>command + r</code> (+ shift 完整重新整理)</li><li>關閉目前分頁：<code>command + w</code></li><li>開新分頁：<code>command + t</code></li><li>回到上一頁：<code>command + 左方向鍵</code></li></ul></li><li>microsoft-edge: 🌐 💬 用來開 chatgpt /new bing 搜尋</li><li>ollama: 本地 LLM 工具</li><li>dropbox：快速備份資料夾（空間 15.x GB）</li><li><a href="https://github.com/dwarvesf/hidden" target="_blank" rel="noopener noreferrer">hiddenbar</a>：隱藏多餘的狀態列圖示<ul><li><code>在狀態列圖示上按著 cmd 鍵可以拖曳改變順序</code></li></ul></li><li>itsycal：📅 狀態列日曆</li><li>the-unarchiver：解壓縮工具</li><li>raycast：透過鍵盤快速啟動工具
-（<a href="https://manual.raycast.com/hotkey" target="_blank" rel="noopener noreferrer">取代 spotlight</a>）用 <code>Command + 空白鍵</code> 啟動。<ul><li>取代系統內建的 <a href="https://www.raycast.com/changelog/1-29-0" target="_blank" rel="noopener noreferrer">emoji keyboard</a>，在 Extentions &gt; Search Emoji 綁定 <code>Control + Command</code> 快捷鍵。</li><li>取代 rectangle 安排視窗位置，在 <code>Extentions &gt; Window Management</code> 綁定 <code>Option + Command + 方向鍵</code> 快捷鍵。</li><li>snippets 綁定 <code>Option + /</code> 快捷鍵，儲存預先定義的 gpt prompts 外派幫手。</li></ul></li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="工作">工作<a href="#工作" class="hash-link" aria-label="Direct link to 工作" title="Direct link to 工作">​</a></h3><ul><li>android-studio：Android 開發環境</li><li>balsamiq-wireframes：👨‍💻 mockup 工具</li><li>git-credential-manager-core：👨‍💻 <a href="https://docs.github.com/en/get-started/getting-started-with-git/caching-your-github-credentials-in-git#git-credential-manager" target="_blank" rel="noopener noreferrer">搭配 github 使用</a></li><li>gnupg：👨‍💻 <a href="https://tourcoder.com/gpg-on-macos/" target="_blank" rel="noopener noreferrer">加密工具</a>(Pretty Good Privacy)，我用來簽署 git commit</li><li>gnu-sed：👨‍💻 命令行字串取代工具</li><li>java：👨‍💻 跑一些程式用</li><li>nvm：👨‍💻 Node 版本管理工具<ul><li>透過 <code>nvm install 16</code> 可以安裝最新版的 Nodejs 16.x，透過 <code>nvm ls-remote</code> 可以查看已安裝的版本</li></ul></li><li>slack：👨‍💻 溝通工具</li><li>starship：👨‍💻 命令行高亮提示</li><li>visual-studio-code：👨‍💻 程式編輯工具<ul><li>用 <code>CMD + J</code> 命令可以在編輯模式與內建的 Terminal 工具之間切換。</li><li>用 <code>CMD + B</code> 命令可以開關側邊欄。</li></ul></li><li>yarn：👨‍💻 node 套件管理工具</li><li>surfshark: VPN 工具</li><li>quicktime：螢幕錄製工具 (原來用的 recordit 已經 gg 了)</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="生活">生活<a href="#生活" class="hash-link" aria-label="Direct link to 生活" title="Direct link to 生活">​</a></h3><ul><li>fava: beancount 文字記帳視覺化</li><li>logseq：每日記事工具，記事是用 markdown 格式儲存，放在 Dropbox 資料夾中</li><li>steam: 遊戲管理工具</li></ul><hr><p>除了應用程式之外，電腦上還會裝瀏覽器插件、Raycast 插件、與編輯器插件。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="瀏覽器插件">瀏覽器插件<a href="#瀏覽器插件" class="hash-link" aria-label="Direct link to 瀏覽器插件" title="Direct link to 瀏覽器插件">​</a></h2><ul><li>Bitwarden：密碼管理工具</li><li><del>Browserflow：半自動網頁爬蟲</del></li><li>Pocket：📰 稍後閱讀</li><li>Youtube 雙字幕：可同時顯示兩種語言</li><li>電子錢包：👛 Metamask、Tally Ho</li></ul><p>分頁使用瀏覽器內建的分頁群組功能</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="raycast-插件">Raycast 插件<a href="#raycast-插件" class="hash-link" aria-label="Direct link to Raycast 插件" title="Direct link to Raycast 插件">​</a></h2><ul><li>Google Translate</li><li>Visual Studio Recent Projects</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="visual-studio-code-插件">Visual Studio Code 插件<a href="#visual-studio-code-插件" class="hash-link" aria-label="Direct link to Visual Studio Code 插件" title="Direct link to Visual Studio Code 插件">​</a></h2><ul><li>Background Terminal Notifier：命令執行後跳系統通知</li><li>Beancount：Beancount 格式補完</li><li>Blank Line at the End：檔尾自動加入空白行</li><li>Color Info：行內 CSS 顏色顯示 / 選擇器</li><li>EditorConfig for VSCode</li><li>ESLint：程式碼樣式檢查</li><li>Indent-rainbow: 快速辨識不同層的括號</li><li>Path Intellisense：改進檔案路徑搜尋</li><li>Trailing Spaces：去除行尾的空白。</li><li>Version Lens: 快速檢查 package.json 檔案中套件是否有更新的版本</li><li>WakaTime：紀錄使用編輯器的時間</li></ul><hr><h2 class="anchor anchorWithStickyNavbar_LWe7" id="web-應用">Web 應用<a href="#web-應用" class="hash-link" aria-label="Direct link to Web 應用" title="Direct link to Web 應用">​</a></h2><ul><li>✉️ 信箱：gmail</li><li>🗺️ 地圖：Google 地圖</li><li>👥 社群：<a href="https://twitter.com/gasolin" target="_blank" rel="noopener noreferrer">Twitter</a>、<a href="https://www.facebook.com/" target="_blank" rel="noopener noreferrer">Facebook</a>、Telegram、Discord、Keet</li><li>📝 記事：Keet、<a href="http://keep.google.com/" target="_blank" rel="noopener noreferrer">Google keep</a>, Google Doc</li><li>待辦事項：<a href="https://habitica.com/" target="_blank" rel="noopener noreferrer">habitica</a></li><li>🔐 密碼管理：Bitwarden，Yubi Authenticator（2 步驟認證）</li><li>相簿：Google Photo、Dropbox</li><li>📺 線上影片： Youtube、Netflix</li><li>🎥 觀影記錄：</li><li>線上學習：PressPlay</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="web-服務">Web 服務<a href="#web-服務" class="hash-link" aria-label="Direct link to Web 服務" title="Direct link to Web 服務">​</a></h2><ul><li>🗂️ 個人網站：<a href="http://www.gasolin.idv.tw/" target="_blank" rel="noopener noreferrer">個人網站</a>、<a href="https://github.com/gasolin/blog/" target="_blank" rel="noopener noreferrer">Github</a>、<a href="https://www.linkedin.com/in/fredglin/" target="_blank" rel="noopener noreferrer">Linkedin</a></li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="系統內建快速鍵和手勢">系統內建快速鍵和手勢<a href="#系統內建快速鍵和手勢" class="hash-link" aria-label="Direct link to 系統內建快速鍵和手勢" title="Direct link to 系統內建快速鍵和手勢">​</a></h3><ul><li>切換輸入法：<code>Control + 空白鍵</code></li><li>切換程式：<code>command + tab</code></li><li>切換虛擬桌面： 用三指在觸控板上同時向左或右撥動，或 <code>Control + 方向鍵</code></li></ul>]]></content>
        <category label="tool" term="tool"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[個人工具箱（2024三月）]]></title>
        <id>https://blog.gasolin.idv.tw/tools/tooling-in-2024-Mar</id>
        <link href="https://blog.gasolin.idv.tw/tools/tooling-in-2024-Mar"/>
        <updated>2024-03-03T16:30:00.000Z</updated>
        <summary type="html"><![CDATA[先記錄下來手邊使用的工具，才有機會從繁雜中歸納出簡單的使用規則。]]></summary>
        <content type="html"><![CDATA[<p><code>先記錄下來手邊使用的工具，才有機會從繁雜中歸納出簡單的使用規則。</code></p><p>更新一下手邊常用的設備。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="主要裝備">主要裝備<a href="#主要裝備" class="hash-link" aria-label="Direct link to 主要裝備" title="Direct link to 主要裝備">​</a></h2><ul><li><p>💻 Apple Macbook Pro 13 M2 16GB RAM, 512GB SSD，作業系統：14.3</p></li><li><p>📱 <a href="https://tw.sharp/products/aquos-zero6" target="_blank" rel="noopener noreferrer">Sharp AQUOS Zero 6</a>, Android 13, 6", Snapdragon 750G</p></li><li><p>🎧  SHOKZ OPENRUN S803 (備用：SoundCore Liberty 3 Pro, Sony WI-1000)</p></li><li><p>U2F (兩步驟驗證): Ubikey 5 NFC, Ledger Nano S+</p></li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="️-外出攜帶">🚶‍♂️ 外出攜帶<a href="#️-外出攜帶" class="hash-link" aria-label="Direct link to 🚶‍♂️ 外出攜帶" title="Direct link to 🚶‍♂️ 外出攜帶">​</a></h2><ul><li>💻 筆電，📱 手機，</li><li>🔌  倍思 2 合 1 45W GaN 雙模行動電源充電器 (10000mAh)</li><li>🎧  降噪耳機</li></ul><p>用<code>倍思10000mAh行動電源+45W充電器(二合一)</code>，在出門的行程中可以保持電腦的電量。停留的地點有插座的時候，也可以直接插上為筆電供電。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="-家">🏠 家<a href="#-家" class="hash-link" aria-label="Direct link to 🏠 家" title="Direct link to 🏠 家">​</a></h3><ul><li>🔌  Apple 雙 USB C 電源插座，倍思 2 合 1 45W GaN 雙模行動電源充電器 (10000mAh)</li><li>🖱 羅技 Lift 滑鼠</li><li>📦 Synology NAS: 電影，影集，照片，資料備份，Dropbox, Google Photos</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="️-網站工具">🕸️ 網站工具<a href="#️-網站工具" class="hash-link" aria-label="Direct link to 🕸️ 網站工具" title="Direct link to 🕸️ 網站工具">​</a></h3><ul><li>🕸️ 主要瀏覽器：<code>Brave</code></li><li>瀏覽器插件<ul><li>稍後閱讀：Pocket</li><li>密碼管理：Bitwarden</li><li>分頁管理：瀏覽器內建的群組分類</li></ul></li><li>瀏覽器常駐分頁<ul><li>✉️ <a href="http://mail.google.com/" target="_blank" rel="noopener noreferrer">GMail</a>,</li><li>✅待辦事項：<a href="https://habitica.com/" target="_blank" rel="noopener noreferrer">Habitica</a></li></ul></li></ul><p></p><ul><li>👥 主要社交網站：<a href="http://www.facebook.com/" target="_blank" rel="noopener noreferrer">Facebook</a>、<a href="https://twitter.com/gasolin" target="_blank" rel="noopener noreferrer">Twitter</a></li><li>📝 記事：Logseq, <a href="http://keep.google.com/" target="_blank" rel="noopener noreferrer">Google keep</a></li><li>💾 網路硬碟：<a href="http://www.dropbox.com/" target="_blank" rel="noopener noreferrer">Dropbox</a>, 主要用作同步照片</li><li>🔑密碼管理：<a href="https://www.bitwarden.com/" target="_blank" rel="noopener noreferrer">Bitwarden</a></li><li>🎥 看電影記錄：<a href="https://simkl.com/" target="_blank" rel="noopener noreferrer">Simkl</a></li><li>看書紀錄 Logseq, <a href="https://www.goodreads.com/" target="_blank" rel="noopener noreferrer">goodreads</a></li><li>🗂️ 個人網站：<a href="http://www.gasolin.idv.tw" target="_blank" rel="noopener noreferrer">個人網站</a>, <a href="https://github.com/gasolin/blog/" target="_blank" rel="noopener noreferrer">Github</a></li><li>🗂️ 個人履歷：<a href="https://www.linkedin.com/in/fredglin/" target="_blank" rel="noopener noreferrer">Linkedin</a></li><li>🔗 IFTTT <a href="/tools/life/personal-automation-in-2021">自動化生活紀錄 2021</a></li><li>📺 <a href="https://www.youtube.com/" target="_blank" rel="noopener noreferrer">Youtube</a></li><li>👛 電子錢包 Metamask, <a href="/crypto/setup_ledger_nano_on_linux">Ledger Nano S+</a></li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="設計工具">設計工具<a href="#設計工具" class="hash-link" aria-label="Direct link to 設計工具" title="Direct link to 設計工具">​</a></h3><ul><li>螢幕動畫錄製： <a href="http://www.recordit.co/" target="_blank" rel="noopener noreferrer">Recordit</a></li><li>流程圖、心智圖：Mermaid.js</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="開發工具">開發工具<a href="#開發工具" class="hash-link" aria-label="Direct link to 開發工具" title="Direct link to 開發工具">​</a></h3><ul><li>編輯器：VS Code<ul><li>Blank Line at the End</li><li>Diff Tool</li><li>EditorConfig for VSCode</li><li>Guides: more guide line</li><li>GitLens: more git info</li><li>Settings Sync</li><li>solidity</li><li>Trailing Spaces</li></ul></li><li>版本控制：git</li><li>套件管理：brew, <a href="https://github.com/creationix/nvm" target="_blank" rel="noopener noreferrer">nvm</a></li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="-android-手機應用">📱 Android 手機應用<a href="#-android-手機應用" class="hash-link" aria-label="Direct link to 📱 Android 手機應用" title="Direct link to 📱 Android 手機應用">​</a></h2><ul><li>🕸️ 瀏覽器：Brave</li><li>📰 閱讀：Pocket</li><li>✉️ 信箱：Gmail</li><li>🗺️ 地圖：Google 地圖</li><li>記事：Logseq, Keep</li><li>日曆：Logseq, Google 日曆</li><li>待辦事項：Habitica</li><li>內建相機，內建時鐘</li><li>相簿：內建相簿，Google 相簿，Dropbox</li><li>社交：LINE, Facebook, Twitter (網頁版), Keet</li><li>🔐 密碼管理：Bitwarden，Yubi Authenticator（2 步驟認證）</li><li>📺 線上影片：Youtube, Netflix</li><li>音樂：Youtube Music</li><li>🚶‍♂️ 健康：Amazfit T-Rex 2 運動手錶 + Zepp</li><li>遊戲：steam</li></ul><p>手機瀏覽器使用 <code>Brave</code> 瀏覽器。使用實體筆記本 + Logseq 紀錄。
<a href="/life/handbook">完整的實體筆記配置</a></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="其他工具">其他工具<a href="#其他工具" class="hash-link" aria-label="Direct link to 其他工具" title="Direct link to 其他工具">​</a></h3><ul><li>旅遊：Google 翻譯，TripAdvisor (旅遊時才裝)</li><li>記錄看書狀況：Logseq</li><li>線上學習：PressPlay, Youtube</li><li>IFTTT Pro</li><li>💳 Line Pay</li><li>記帳用 beancount + moneybook + LINE <a href="https://page.line.me/570aecfb" target="_blank" rel="noopener noreferrer">理財動物園</a></li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="reference">Reference<a href="#reference" class="hash-link" aria-label="Direct link to Reference" title="Direct link to Reference">​</a></h2><ul><li><sup id="fnref-1-878337"><a href="#fn-1-878337" class="footnote-ref">1</a></sup> <a href="/tools/tools/tooling-in-2011-May.md">個人工具箱 2011 五月</a></li><li><sup id="fnref-2-878337"><a href="#fn-2-878337" class="footnote-ref">2</a></sup> <a href="/tools/tooling-in-2011">個人工具箱 2011</a></li><li><sup id="fnref-3-878337"><a href="#fn-3-878337" class="footnote-ref">3</a></sup> <a href="/tools/tooling-in-2016">個人工具箱 2016</a></li><li><sup id="fnref-4-878337"><a href="#fn-4-878337" class="footnote-ref">4</a></sup> <a href="/tools/tooling-in-2017">個人工具箱 2017</a></li><li><sup id="fnref-5-878337"><a href="#fn-5-878337" class="footnote-ref">5</a></sup> <a href="/tools/tooling-in-2017-sep">個人工具箱 2017 九月</a></li><li><sup id="fnref-6-878337"><a href="#fn-6-878337" class="footnote-ref">6</a></sup> <a href="/tools/tooling-in-2018-feb">個人工具箱 2018 二月</a></li><li><sup id="fnref-7-878337"><a href="#fn-7-878337" class="footnote-ref">7</a></sup> <a href="/tools/tooling-in-2018-jun">個人工具箱 2018 六月</a></li><li><sup id="fnref-8-878337"><a href="#fn-8-878337" class="footnote-ref">8</a></sup> <a href="/tools/tooling-in-2019-Mar">個人工具箱 2019 三月</a></li><li><sup id="fnref-9-878337"><a href="#fn-9-878337" class="footnote-ref">9</a></sup> <a href="/tools/tooling-in-2019-Nov">個人工具箱 2019 十一月</a></li><li><sup id="fnref-10-878337"><a href="#fn-10-878337" class="footnote-ref">10</a></sup> <a href="/tools/tooling-in-2020-Nov">個人工具箱 2020 十一月</a></li></ul>]]></content>
        <category label="life" term="life"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[這一年的投資 (2023)]]></title>
        <id>https://blog.gasolin.idv.tw/life/my-investment-2023</id>
        <link href="https://blog.gasolin.idv.tw/life/my-investment-2023"/>
        <updated>2023-12-08T16:15:31.000Z</updated>
        <summary type="html"><![CDATA[遠端工作五年多，少了通勤，卻多了一些時間可以出門走走。且隨著世界的變化，未來的趨勢，我也開始嘗試許多不同的敗家投資。]]></summary>
        <content type="html"><![CDATA[<p>遠端工作五年多，少了通勤，卻多了一些時間可以出門走走。且隨著世界的變化，未來的趨勢，我也開始嘗試許多不同的<del>敗家</del>投資。</p><p>雖然以下內容看似都是在花錢，但內在的邏輯是：身邊圍繞著自己喜歡的人事物，讓你每次接觸時都感到愉悅。常保身心健康也是對自己，對家人最好的投資。</p><p>此外，我覺得並不是買下來的東西才是投資。
有些東西你沒有購買，但是你也投資了充足的時間去研究，查看，最後得出不購買的決定。
這些都是投資的過程。</p><p>上次的投資<del>敗家</del>回顧直接更新在<a href="/life/my-investment-2022">這一年的投資 (2022)</a>。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="投資我的工具箱">投資我的工具箱<a href="#投資我的工具箱" class="hash-link" aria-label="Direct link to 投資我的工具箱" title="Direct link to 投資我的工具箱">​</a></h2><blockquote><p>募資網站上買了 <a href="https://www.atlancube.com/zh/pages/passwordpocket" target="_blank" rel="noopener noreferrer">PasswordPocket</a> 密碼記憶工具 1⭐️</p></blockquote><p>手機上可以直接用藍芽連接，還算可用，但瀏覽器插件使用了 webBluetooh API，因此 Firefox、Safari、Brave 等瀏覽器都無法使用 🫣。</p><p>我希望這類工具能成功，因此一次贊助了幾台。目前夢想依然很美好，而實際限制還是太大了。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="投資工作生產力">投資工作生產力<a href="#投資工作生產力" class="hash-link" aria-label="Direct link to 投資工作生產力" title="Direct link to 投資工作生產力">​</a></h2><blockquote><p>網上買了 Shokz S803 骨傳導耳機 5⭐️</p></blockquote><p>發現自己目前多數的使用場景不再十分需要降噪，同時有想偶而在平靜水域上聽點節目的想法，因此入手骨傳導耳機。我主要拿來聽 Podcast，音質可接受，續航則相當驚艷。</p><blockquote><p>從網上買了 2022 版 Macbook Air M2 5⭐️</p></blockquote><p>購買整修品可以節省幾千塊，而且享有一樣保固。
M 系列電池持續力和 Intel 機種比起來實在強，使用過程中也沒感覺到明顯發熱。</p><blockquote><p>沒買：CrossOver</p></blockquote><p>CrossOver 可以拿來跑 Windows <del>遊戲</del>程式，和 Windows 相容性越來越好，但是一些我想跑的 <del>FIFA 23</del> 程式並沒支援，所以暫時再觀望。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="投資家人的共同記憶">投資家人的共同記憶<a href="#投資家人的共同記憶" class="hash-link" aria-label="Direct link to 投資家人的共同記憶" title="Direct link to 投資家人的共同記憶">​</a></h2><blockquote><p>在網上買了 Insta360 One RS 4⭐️</p></blockquote><p>趁新年特惠價購入的運動相機，可以換裝 4K 相機或是 360 相機。</p><p>使用上也可以先拍一段影片，再擷取其中的精彩畫面。
拍好後搭配 iPad，在較大螢幕上簡易剪輯的體驗相當好。</p><p>但使用 360 相機時，鏡頭外的保護鏡片極易起霧。偶而忘了拿掉鏡頭蓋再拍攝。目前大多數時間都只使用 4k 相機鏡頭。</p><blockquote><p>從網上買了 XBOX One 藍牙手把 4⭐</p></blockquote><p>價錢特惠，和去年買的手把搭配，可和小朋友一起玩。</p><blockquote><p>從網上買了 HP 16 吋 + 3090 顯卡筆電 4⭐</p></blockquote><p>由太太和小朋友使用。</p><blockquote><p>玻璃容器汽炸鍋 5⭐</p></blockquote><p>氣炸鍋實在是非常方便的家電，只要稍微熱一下，熱騰騰的薯條、雞塊、麵包、披薩香氣就充滿家中。
因為買的是使用玻璃容器的汽炸鍋，沒有塗層的疑慮。只要下方墊個鋼網，上面擺一張烘焙紙，連清潔都很省事。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="投資健康">投資健康<a href="#投資健康" class="hash-link" aria-label="Direct link to 投資健康" title="Direct link to 投資健康">​</a></h2><blockquote><p>網上買的摺疊帽 + 太陽眼鏡 4⭐</p></blockquote><p>去年買的折疊鴨舌帽和夾帽式太陽眼鏡，在一次漂溪時一起噴掉了 😵，改買整圈的圓形摺疊帽，一樣是有附頸繩的款式。但因為帽簷變成整圈，沒有合適的地方夾了，只能搭配一般的太陽眼鏡。</p><p>摺疊帽的使用頻率蠻高的，遮陽效果也確實比只遮前方的鴨舌帽好。</p><blockquote><p>網上買的 CAMELBAK 1 公升水瓶 5⭐</p></blockquote><p>CAMELBAK 水瓶蓋子有特別設計。瓶口有提把，蓋子可以旋緊，蓋子開啟後也能磁吸固定，不會在喝水的過程中受打擾。</p><p>我拿來取代之前使用的外帶杯（也學到外帶杯最好不要裝奶類，會有殘存的油脂味）。1 公升水瓶足以裝的下所有飲料店的飲料。</p><p>我陸續買了兩瓶，工作時裝半瓶水放旁邊，或是想運動時隨時可以帶出門。</p><p>有個很願意拿來多使用的水瓶，對健康還是蠻有幫助的。</p><blockquote><p>網上買的 CAMELBAK 水杯 4⭐</p></blockquote><p>裡面是不銹鋼，有提把。杯蓋可以拆下，似乎有些保冰保溫效果的杯子。
目前水瓶使用率更高。但水杯也有發揮它的作用。</p><blockquote><p>網上買的 <a href="https://thumb-runner.com/" target="_blank" rel="noopener noreferrer">Thumb Runner</a> 兩用槳 5⭐</p></blockquote><p>海划時有感自己體力不足以和前輩們看齊，只好動腦筋以裝備來補。站坐兩用槳節省了同時攜帶兩種槳的重量。槳桿使用碳纖維，而槳面使用玻璃纖維，在漂溪時拿來捅岩石也不用太擔心碳纖維槳面脆弱而破掉。使用上相當滿意。</p><blockquote><p>游泳池套票 4⭐</p></blockquote><p>陪太太一起去游泳，培養感情順便運動。</p><blockquote><p>全身健檢 4⭐</p></blockquote><p>讓陽光肥宅正視自己在老化的現實，並增加改變的動力。</p><blockquote><p>藥局買了血糖機 4⭐</p></blockquote><p>健檢後看到三高正在和我招手，弄了一台血糖機。搭配已有的體脂計、血壓計，來進一步數據化身體狀況。</p><blockquote><p>大創 300 圓買的平衡板 5⭐</p></blockquote><p>買來練平衡感，發現真的有效果。
平衡板就是一個塑膠製的圓盤可供站立，下方有半圓形凸起，讓人在上面站立時不穩定。我在適應的過程中體會到了當重心不穩時如何透過改變腳的力道補償，練習後對我站在 SUP 上的穩定性很有幫助。</p><blockquote><p>Airbank 電動打氣機 5⭐</p></blockquote><p>去年底買了 SUP 後，一年左右的時間內划了 40 次左右，多數時候都堅持手動打氣，想說可以多消耗一點熱量。但事實狠狠打了我的臉，在這期間體重卻漸漸變重了。</p><p>於是今年底終於妥協購入了電動打氣機。在出門不用帶打氣筒後，需攜帶物品的總容量反而減少了，而且趁著電動打氣機在充氣時，也可以騰出手來整理接下來要下水的裝備，縮短了預備的時間。</p>]]></content>
        <category label="life" term="life"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[水域有多危險？從水域救援公開資料來分析]]></title>
        <id>https://blog.gasolin.idv.tw/life/2021-water-rescue</id>
        <link href="https://blog.gasolin.idv.tw/life/2021-water-rescue"/>
        <updated>2023-08-19T16:20:00.000Z</updated>
        <summary type="html"><![CDATA[Imgur]]></summary>
        <content type="html"><![CDATA[<p></p><div class="mermaid" data-mermaid-src="pie showData
    title 2021 消防機關水域救援統計
    &quot;浮屍&quot;:	312
    &quot;自殺&quot;:	211
    &quot;翻船&quot;:	112
    &quot;失足&quot;:	109
    &quot;戲水&quot;:	49
    &quot;垂釣&quot;:	37
    &quot;工作&quot;:	34
    &quot;其他&quot;:	26
    &quot;潛水&quot;:	17
    &quot;交通事故&quot;:	8
    &quot;戲水(浮具)&quot;:	6
    &quot;救人&quot;:	5">pie showData
    title 2021 消防機關水域救援統計
    "浮屍":	312
    "自殺":	211
    "翻船":	112
    "失足":	109
    "戲水":	49
    "垂釣":	37
    "工作":	34
    "其他":	26
    "潛水":	17
    "交通事故":	8
    "戲水(浮具)":	6
    "救人":	5</div><p>最近天氣炎熱。到水邊消消暑是很熱門的選擇。但是隨之而來在水域活動發生意外，而需出動救援的新聞也層出不窮。我很好奇到底是怎麼樣的狀況需要出動水域救援？救援的結果如何？使用 SUP / 獨木舟這樣的浮具親水，是否一樣危險？</p><p>於是我找到了<a href="https://data.gov.tw/dataset/7065" target="_blank" rel="noopener noreferrer">政府開放資料平台</a>上的「消防機關水域救援統計」。這邊可以取得各年份的救援統計資料。目前最新的資料只更新到 2021 年份，因此使用此資料進行統計（注意這份統計資料呈現的是在政府 2020 後宣告開放山林海域的狀況）。
（因為使用的圖表問題，手機版網頁需要橫著看，才會顯示分類細目。）</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="水域救援統計">水域救援統計<a href="#水域救援統計" class="hash-link" aria-label="Direct link to 水域救援統計" title="Direct link to 水域救援統計">​</a></h2><p>2021 這一年總共有 926 人次的救援紀錄，共 357 人獲救，其他都是失蹤或死亡。水域救援相對山林救援（生存率有 90% 以上）來看，，生存率只有相當低的 38.5% 😱...... 嗎？</p><p>可以看到水域救援裡「浮屍」、「自殺」佔了超過一半的水域救援比例。
「浮屍」(34%) 312 位是死透了，也沒辦法分辨具體原因；「自殺」(23%) 者有 100 位死亡或失蹤，111 位獲救。</p><div class="mermaid" data-mermaid-src="pie showData
    title 2021 水域救援地點分類
    &quot;溪河&quot;:	464
    &quot;近海(海岸線1公里內)&quot;:	158
    &quot;碼頭&quot;:	84
    &quot;圳溝&quot;:	84
    &quot;湖潭&quot;:	41
    &quot;池塘&quot;:	33
    &quot;魚塭&quot;:	27
    &quot;外海(海岸線1公里以外)&quot;:	15
    &quot;水庫&quot;:	9
    &quot;其他&quot;:	7
    &quot;游泳池&quot;:	4">pie showData
    title 2021 水域救援地點分類
    "溪河":	464
    "近海(海岸線1公里內)":	158
    "碼頭":	84
    "圳溝":	84
    "湖潭":	41
    "池塘":	33
    "魚塭":	27
    "外海(海岸線1公里以外)":	15
    "水庫":	9
    "其他":	7
    "游泳池":	4</div><p>最常出事的水域地點為溪河 (50%)、近海 (17%)、碼頭 (9%)，與圳溝 (9%)。碼頭 (9%) 占的出事比率讓我感到意外。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="出事類型分析">出事類型分析<a href="#出事類型分析" class="hash-link" aria-label="Direct link to 出事類型分析" title="Direct link to 出事類型分析">​</a></h2><p>若我們把歸因不明的「浮屍」、和動機不純（不是來親水）的「自殺」者排除，得到的會是比較能進一步分析水域危險原因的圖表。</p><p>「翻船」(112 人)、「失足」(109 人) 佔了救援人數的多數。戲水 (49 人) + 戲水 (浮具)(6 人) 在後。</p><table><thead><tr><th>翻船</th><th>人數</th></tr></thead><tbody><tr><td>失蹤</td><td>2</td></tr><tr><td>死亡</td><td>4</td></tr><tr><td>獲救</td><td>106</td></tr></tbody></table><p>「翻船」的死亡率和平均值相較極低，可以想見出海的船家相較之下有充足的預期與安全準備。</p><table><thead><tr><th>失足</th><th>人數</th></tr></thead><tbody><tr><td>失蹤</td><td>4</td></tr><tr><td>死亡</td><td>59</td></tr><tr><td>獲救</td><td>46</td></tr></tbody></table><p>「失足」的死亡率 58%，比自殺還高。可能是因為自殺是有意識的行為，失足則是預期之外。</p><table><thead><tr><th>戲水</th><th>人數</th></tr></thead><tbody><tr><td>失蹤</td><td>1</td></tr><tr><td>死亡</td><td>24</td></tr><tr><td>獲救</td><td>24</td></tr></tbody></table><p>戲水出事的死亡率有近 50%。</p><p>值得一提的是使用浮具戲水的 6 位全數獲救，因此獨立出來分一類。</p><p>那麼死亡率最高的是什麼？是「交通事故」(死亡 7 / 獲救 1)，這些人也是預期之外的掉入水中，而且事情發生前應該就有些問題。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="我的解讀">我的解讀<a href="#我的解讀" class="hash-link" aria-label="Direct link to 我的解讀" title="Direct link to 我的解讀">​</a></h2><p>簡單的總結一下：水域有風險，特別是對那些不以為意的人而言。
即使有意親近水域，出意外時的生還率仍然只有近 50%，但是如果有攜帶浮具（救生衣、船隻或槳板）或船員指導，可以進一步大幅提高生存率。</p><p>穿著浮具、帶好裝備，跟著熟悉當地水域的教練親水，可以保障活動的安全。若沒有教練帶也要相伴而行，並需要具備判斷水域狀況的能力，才能保障自己的生命安全。</p><p>(另外本文只分析了 2021 年的資料，多少會有些當年度特殊狀況造成的誤差，更理想的是多追蹤幾年看整體趨勢)</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="參考資料">參考資料<a href="#參考資料" class="hash-link" aria-label="Direct link to 參考資料" title="Direct link to 參考資料">​</a></h2><ul><li>本篇文章使用的<a href="https://docs.google.com/spreadsheets/d/1FtZx5Pby9J0XeHCo1qMAekHoQQqeNXlsUCy4By7Iphk/edit?usp=sharing" target="_blank" rel="noopener noreferrer">資料與分析表格</a>(Google Spreadsheets)</li><li></li><li></li></ul>]]></content>
        <category label="life" term="life"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[人生苦短，我用 conda]]></title>
        <id>https://blog.gasolin.idv.tw/python/conda</id>
        <link href="https://blog.gasolin.idv.tw/python/conda"/>
        <updated>2023-06-28T11:40:31.000Z</updated>
        <summary type="html"><![CDATA[以前要嘗試 Python 的各種函式庫時，會用 virtualenv 或 docker 來產生專用的獨立環境。]]></summary>
        <content type="html"><![CDATA[<p>以前要嘗試 Python 的各種函式庫時，會用 virtualenv 或 docker 來產生專用的獨立環境。
但 Python 版本更新也算快，若想用特定 Python 版本執行，還需再搭配 <code>pyenv</code> 來確認運行環境，這些套疊讓環境設定變得更複雜。</p><p>現在已有 <a href="https://docs.conda.io/en/latest/miniconda.html" target="_blank" rel="noopener noreferrer">miniconda</a> 工具，只要用 brew 就可以安裝</p><p><code>brew install --cask miniconda</code></p><p>使用體驗相當好，節省了許多學習與設定的時間，也可以安心的去嘗試各種函式庫。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="建立環境">建立環境<a href="#建立環境" class="hash-link" aria-label="Direct link to 建立環境" title="Direct link to 建立環境">​</a></h2><p>可使用 <code>conda create</code> 命令建立獨立的虛擬環境</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ conda create python=3 -n TEST</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>這樣會自動下載最新 Python 3 版本，並將環境名稱設定為 <code>TEST</code>。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="切換環境">切換環境<a href="#切換環境" class="hash-link" aria-label="Direct link to 切換環境" title="Direct link to 切換環境">​</a></h2><p>可使用 <code>conda create</code> 命令切換到對應的環境</p><p><code>conda activate TEST</code></p><p><code>TEST</code> 為環境名稱。切換後還是可以用 <code>pip3 install</code> 等工具來安裝函式庫。</p><p>可使用 <code>conda deactivate</code> 命令離開環境。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="查看或管理環境">查看或管理環境<a href="#查看或管理環境" class="hash-link" aria-label="Direct link to 查看或管理環境" title="Direct link to 查看或管理環境">​</a></h2><p>可使用命令 <code>conda env list</code> 查看現有的虛擬環境。</p><p>不再需要此虛擬環境時，可使用命令 <code>conda env remove -n TEST</code> 移除名為 <code>TEST</code> 的環境。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="安裝套件">安裝套件<a href="#安裝套件" class="hash-link" aria-label="Direct link to 安裝套件" title="Direct link to 安裝套件">​</a></h2><p>有些 Python 程式建議用不同的套件管理工具如 poetry，也可以透過 <code>conda</code> 命令來安裝使用</p><p><code>conda install -c conda-forge poetry</code></p>]]></content>
        <category label="python" term="python"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Python 3 超入門]]></title>
        <id>https://blog.gasolin.idv.tw/python/try-python3</id>
        <link href="https://blog.gasolin.idv.tw/python/try-python3"/>
        <updated>2023-06-27T11:30:31.000Z</updated>
        <summary type="html"><![CDATA[上週在聚會中分享學習 deeplearning.ai 推出的 ChatGPT 相關短課程的心得。（簡報在此），課程中為了介紹 ChatGPT API 的應用，使用了一些 Python 程式碼。由於預期聚會參與者對 Python 不熟悉，所以嘗試用 Google Colab 簡單的介紹 Python 3，希望能在幾分鐘內對 Python 程式的基本語法有個概念。]]></summary>
        <content type="html"><![CDATA[<p>上週在聚會中分享學習 <a href="https://www.deeplearning.ai/short-courses/" target="_blank" rel="noopener noreferrer">deeplearning.ai</a> 推出的 ChatGPT 相關短課程的心得。（<a href="https://gasolin.idv.tw/docs/events/presentation/#2023" target="_blank" rel="noopener noreferrer">簡報在此</a>），課程中為了介紹 ChatGPT API 的應用，使用了一些 Python 程式碼。由於預期聚會參與者對 Python 不熟悉，所以嘗試用 Google Colab 簡單的介紹 Python 3，希望能在幾分鐘內對 Python 程式的基本語法有個概念。</p><p><a href="https://colab.research.google.com/drive/1WgODgZoY67w9Lmz6G2V-XBsqOKpY6YI_?usp=sharing" target="_blank" rel="noopener noreferrer">Python 3 超入門</a> 互動式筆記在此。</p><ul><li>現在大部分人用的是 Python 3.x 版本。Mac OS 有內建。</li><li>Google Colab 是免費的線上工具，可以拿來互動執行 Python 語言（可以裝在自己電腦上的版本叫 <a href="https://jupyter.org/" target="_blank" rel="noopener noreferrer">Jupyter</a>)</li><li>更詳細的可以看小姐姐介紹 Python 語言為什麼適合程式入門 <a href="https://www.youtube.com/watch?v=2StGPegYHFM" target="_blank" rel="noopener noreferrer">https://www.youtube.com/watch?v=2StGPegYHFM</a></li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="第一個程式">第一個程式<a href="#第一個程式" class="hash-link" aria-label="Direct link to 第一個程式" title="Direct link to 第一個程式">​</a></h2><div class="language-py codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-py codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">print</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"花蓮你好"</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>輸出結果：</p><p><code>花蓮你好</code></p><ul><li>print（列印）語句代表將括號中的內容印出到螢幕上。</li><li>有些關鍵字 (keyword) 在 Python 語言中有特殊的意義，如 print, if, else, for, function, class... 此外其他都可以用中文（因為所有字元都使用 Unicode 編碼）</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="變數">變數<a href="#變數" class="hash-link" aria-label="Direct link to 變數" title="Direct link to 變數">​</a></h2><div class="language-py codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-py codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">X </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"花蓮"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">print</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">X </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"你好"</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>輸出結果：</p><p><code>花蓮你好</code></p><ul><li>除了印出固定的字串，可以透過定義變數來改變印出的內容</li><li>和數學式一樣，左邊的是變數，= 符號右邊的是賦值</li><li>Python 裡宣告變數只要依照直覺直接寫就行（許多程式語言要另外加各種關鍵字）</li><li>也可以用中文命名變數</li></ul><div class="language-py codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-py codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">打招呼的對象 </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"花蓮"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">print</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">打招呼的對象 </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"你好"</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><ul><li>變數除了可以是文字之外、也可以是數字、True/False (是 / 否)、列表、和其他各種 Python 支援的格式。</li><li>等碰到再學</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="條件式執行">條件式執行<a href="#條件式執行" class="hash-link" aria-label="Direct link to 條件式執行" title="Direct link to 條件式執行">​</a></h2><div class="language-py codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-py codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> 條件成立</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  執行這邊的程式</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">else</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  執行條件不成立時的程式</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><ul><li>if..else (如果.. 否則) 是判斷執行條件的兩個關鍵字</li></ul><p>範例：</p><div class="language-py codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-py codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">活動人數 </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'10'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">有下雨嗎 </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">True</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">print</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"參加本次活動的人數為 "</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> 活動人數 </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">" 人"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">有下雨嗎</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  天氣 </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"有雨 🌧️"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">else</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  天氣 </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"晴 ☀️"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">print</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"今天天氣："</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> 天氣</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>輸出結果：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">參加本次活動的人數為 10 人</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">今天天氣有雨 🌧️</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="函式">函式<a href="#函式" class="hash-link" aria-label="Direct link to 函式" title="Direct link to 函式">​</a></h2><p>關鍵字 def</p><div class="language-py codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-py codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">def</span><span class="token plain"> 哈囉</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">名字</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">print</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"你好"</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> 名字</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">哈囉</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"花蓮溪 🚣‍♂️"</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>輸出結果：</p><p><code>你好花蓮溪 🚣‍♂️</code></p>]]></content>
        <category label="python" term="python"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[目前使用的 AI 應用 (2023)]]></title>
        <id>https://blog.gasolin.idv.tw/tools/my-ai-2023</id>
        <link href="https://blog.gasolin.idv.tw/tools/my-ai-2023"/>
        <updated>2023-05-03T12:15:31.000Z</updated>
        <summary type="html"><![CDATA[部分人可能還停留在使用ChatGPT 的網頁介面，但其實已經漸漸有些工具將 Open AI 整合進平常使用的工具中。]]></summary>
        <content type="html"><![CDATA[<p></p><p>部分人可能還停留在使用<a href="https://www.explainthis.io/zh-hant/chatgpt" target="_blank" rel="noopener noreferrer">ChatGPT</a> 的網頁介面，但其實已經漸漸有些工具將 Open AI 整合進平常使用的工具中。</p><p>例如 <a href="https://www.raycast.com/" target="_blank" rel="noopener noreferrer">Raycast</a> 新版本，在呼叫 Raycast 視窗後，按一下 Tab 鍵就可以直接輸入要問 AI 的事情，使用的便利度又提升一個台階。</p><p>以下是我目前使用的 AI 工具。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="遇事不決---取代-google-search">遇事不決 - 取代 Google Search<a href="#遇事不決---取代-google-search" class="hash-link" aria-label="Direct link to 遇事不決 - 取代 Google Search" title="Direct link to 遇事不決 - 取代 Google Search">​</a></h3><p>用 Bing 或 ChatGPT 詢問問題，在目前沒廣告干擾的狀況下，已超過 <a href="https://letmegooglethat.com/" target="_blank" rel="noopener noreferrer">Let me Google That for you</a> 的水準。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="字串段落翻譯---取代-google-translate">字串 / 段落翻譯 - 取代 Google Translate<a href="#字串段落翻譯---取代-google-translate" class="hash-link" aria-label="Direct link to 字串 / 段落翻譯 - 取代 Google Translate" title="Direct link to 字串 / 段落翻譯 - 取代 Google Translate">​</a></h3><p>單一詞語的翻譯 Google Translate 還是更方便，但是你可以將 json 格式文字貼到 ChatGPT，它可以直接回給你整篇同為 json 格式的翻譯，完全可以當作多語系翻譯檔的基礎。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="程式偵錯---取代-stackoverflow">程式偵錯 - 取代 Stackoverflow<a href="#程式偵錯---取代-stackoverflow" class="hash-link" aria-label="Direct link to 程式偵錯 - 取代 Stackoverflow" title="Direct link to 程式偵錯 - 取代 Stackoverflow">​</a></h3><p>在遇到疑難時，在問題前先給個簡單的提示語 <code>act as [placeholder] expert, </code>，得到的答案通常還不差。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="社群貼文---取代手動貼文">社群貼文 - 取代手動貼文<a href="#社群貼文---取代手動貼文" class="hash-link" aria-label="Direct link to 社群貼文 - 取代手動貼文" title="Direct link to 社群貼文 - 取代手動貼文">​</a></h3><p>IFTTT 推出 <a href="https://ifttt.com/ai_social_creator" target="_blank" rel="noopener noreferrer">AI social Creator</a>，將 Blog RSS 貼進去，選擇貼文的語氣，之後有新文章發表時，就會自動貼文到 Twitter。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="文字辨識---取代人力辨識">文字辨識 - 取代人力辨識<a href="#文字辨識---取代人力辨識" class="hash-link" aria-label="Direct link to 文字辨識 - 取代人力辨識" title="Direct link to 文字辨識 - 取代人力辨識">​</a></h3><p>使用 Mac 內建的預覽程式，打開有文字的圖片（或是 PDF 截圖），可以直接複製其中文字。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="影片字幕---取代-pytranscriber人力聽打">影片字幕 - 取代 pyTranscriber、人力聽打<a href="#影片字幕---取代-pytranscriber人力聽打" class="hash-link" aria-label="Direct link to 影片字幕 - 取代 pyTranscriber、人力聽打" title="Direct link to 影片字幕 - 取代 pyTranscriber、人力聽打">​</a></h3><p>透過 <a href="https://fdown.net/" target="_blank" rel="noopener noreferrer">FDOWN</a> 或 <a href="https://www.freemake.com/tw/free_video_downloader/" target="_blank" rel="noopener noreferrer">freemake</a> 下載線上影片，再用 <a href="https://goodsnooze.gumroad.com/l/macwhisper" target="_blank" rel="noopener noreferrer">Macwhisper</a> 語音辨識字幕。</p>]]></content>
        <category label="tool" term="tool"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[外派平台、外派幫手、出場詩 - 我如何看待 ChatGPT]]></title>
        <id>https://blog.gasolin.idv.tw/life/how-i-treat-chatgpt</id>
        <link href="https://blog.gasolin.idv.tw/life/how-i-treat-chatgpt"/>
        <updated>2023-03-07T22:25:46.000Z</updated>
        <summary type="html"><![CDATA[ChatGPT 在去年橫空出世後得到了廣泛關注，它讓一般人可以在聊天界面中，使用各種語言自然的與機器對話，並得到還不錯的回答。以前想要得到答案，需要先在搜尋網站下關鍵字找關聯網站或文章，查看內容中提取需要的關鍵資訊，再組合出需要的答案。現在則可以在 ChatGPT 中問問題，並期待直接得到解答。更少的中間步驟，更好的使用者體驗 😎。]]></summary>
        <content type="html"><![CDATA[<p></p><p>ChatGPT 在去年橫空出世後得到了廣泛關注，它讓一般人可以在聊天界面中，使用各種語言自然的與機器對話，並得到還不錯的回答。以前想要得到答案，需要先在搜尋網站下關鍵字找關聯網站或文章，查看內容中提取需要的關鍵資訊，再組合出需要的答案。現在則可以在 ChatGPT 中問問題，並期待直接得到解答。更少的中間步驟，更好的使用者體驗 😎。</p><p>作為資訊相關從業人員的我並沒有 AI 相關的工作背景，因此本文純粹就是我的瞎子摸象 🐘，以個人體驗的角度，來描述我如何理解和看待 ChatGPT。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="chatgpt一個用來呼叫各種外派幫手的外派平台">ChatGPT，一個用來呼叫各種「外派幫手」的外派平台<a href="#chatgpt一個用來呼叫各種外派幫手的外派平台" class="hash-link" aria-label="Direct link to ChatGPT，一個用來呼叫各種「外派幫手」的外派平台" title="Direct link to ChatGPT，一個用來呼叫各種「外派幫手」的外派平台">​</a></h2><p>在我的使用經驗裡，ChatGPT 的回覆可算及格，雖然不完美，但不少回覆已經可以拿來當作基礎修改（目前還沒習慣，所以這篇還是我自己寫），已經是值得使用的工具。</p><p>以前外送服務不發達，想要吃外食，多數時候得自己跑一趟。而現在會使用 Uber Eat/Food Panda App 的人，打開 App 📱 點餐，這些外送平台自然會呼叫外送員到餐廳取餐，並將你的餐點 🥡 送到指定的地點 🛵。</p><p>以前只有老闆才願意聘請秘書 ㊙️ 或助理幫忙處理雜事，而現在會使用 ChatGPT 的人，就像是打開外派平台 App，呼叫外派幫手為我們提供答案。</p><p>是的，在我看來，目前使用 ChatGPT 就像是使用一個外派平台。透過網頁或 App 介面，我們可以隨時透過 ChatGPT 外派平台呼叫不特定的 「外派幫手」，來幫我們處理各種找資料（研究助理）、初步的文書（編輯）、草擬文案（企劃）、翻譯（外文秘書）、提供範例程式（程式設計師）等各種事情。就像是叫外送、叫車那樣的服務。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="呼叫外派幫手的出場詩">呼叫外派幫手的出場詩<a href="#呼叫外派幫手的出場詩" class="hash-link" aria-label="Direct link to 呼叫外派幫手的出場詩" title="Direct link to 呼叫外派幫手的出場詩">​</a></h2><p>我們和 CHATGPT 的互動，就像是在外送平台點餐時，若能給予明確的餐廳、地點指示，就能請不特定的外送員為我們送達餐點。</p><p>我們不會期待在外送平台隨意點餐後，外送員可以幫我們完成所有事情，東西有幫我送來就好。同樣的 ChatGPT 派出的外派幫手也不是無所不能，可以幫我們解決所有事情。</p><p>目前已知 ChatGPT 的特性，是在問問題之前先指定他要扮演的角色，並提供一些限定條件，ChatGPT 回答的品質會明顯變好。<a href="https://github.com/f/awesome-chatgpt-prompts" target="_blank" rel="noopener noreferrer">Awesome ChatGPT Prompts</a> 上列出了許多行業角色的限定條件範例。這就像在外送平台點餐時提供越明確的需求，越有可能得到想要的結果。</p><p>Prompt 中文可以翻作 「提詞」，有些人稱此為（施展魔法前的）「詠唱」。它們的作用都是讓 ChatGPT 這個外派平台，能更了解老闆（我們）這次想要找哪種類型的外派幫手，並讓外派幫手更了解我們的需求。</p><p>因為 ChatGPT 這個外派平台提供了更多種類的服務範圍，即使 ChatGPT 外派平台在對話開始時，還搞不清楚我們想要什麼樣的外派幫手，只要我們向外派平台描述清楚想呼叫的外派幫手的樣子，就更能呼叫到擅長處理此類問題的外派幫手來提供答案。</p><p>就使用者的角度而言，透過向外派平台吟頌特定的出場詩（題詞），我們可以更準確呼叫到對應類型的外派幫手來幫我們找答案。我傾向將這些放在一般對話前的固定台詞（PROMPT），想像成是霹靂布袋戲（或傳統戲劇）角色出場時的「出場詩」。在布袋戲中透過吟頌「半仙半聖亦半仙、全儒全道是全賢...」這樣有辨識度的出場詩，就知道這次哪個角色要出場了。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="chatgpt或-ai作為外派平台的展望">ChatGPT（或 AI），作為外派平台的展望<a href="#chatgpt或-ai作為外派平台的展望" class="hash-link" aria-label="Direct link to ChatGPT（或 AI），作為外派平台的展望" title="Direct link to ChatGPT（或 AI），作為外派平台的展望">​</a></h2><p>這些年發展下來，生活中打電話 / App 叫外送、叫計程車都是很平常的事情。而叫外送、叫計程車，其實都可以視作特化的外派平台。目前 ChatGPT 提供了輸入需求就能用文字回應的各種職能外派幫手、Midjourney 提供了輸入需求就傳畫好的圖給你的各種風格外派繪師。在 AI 受到追捧的當下，肯定會出現更多的應用，很期待接下來的變化。</p><p>過去當一些線上平台服務維修時，許多工作不得不暫停，以後當這些 AI 外派平台維修時，商業世界的運作是不是也會慢一拍呢？</p>]]></content>
        <category label="tooling" term="tooling"/>
        <category label="life" term="life"/>
        <category label="llm" term="llm"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[目前使用的電腦應用程式 (2023)]]></title>
        <id>https://blog.gasolin.idv.tw/tools/my-app-2023</id>
        <link href="https://blog.gasolin.idv.tw/tools/my-app-2023"/>
        <updated>2023-02-03T09:15:31.000Z</updated>
        <summary type="html"><![CDATA[剛換新電腦 (Macbook Air M2)，除了使用系統內建功能外，還得安裝一些便捷程式以提高使用效率。在此順道紀錄目前使用的應用程式。]]></summary>
        <content type="html"><![CDATA[<p></p><p>剛換新電腦 (Macbook Air M2)，除了使用系統內建功能外，還得安裝一些便捷程式以提高使用效率。在此順道紀錄目前使用的應用程式。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="半自動安裝">半自動安裝<a href="#半自動安裝" class="hash-link" aria-label="Direct link to 半自動安裝" title="Direct link to 半自動安裝">​</a></h2><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ xcode-select --install</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ brew install android-studio airpip balsamiq-wireframes brave-browser dropbox fava gnupg gnu-sed hiddenbar itsycal java logseq microsoft-edge nvm raycast recordit slack starship steam visual-studio-code yarn</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ brew tap microsoft/git</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ brew install git-credential-manager-core</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="設定腳本">設定腳本<a href="#設定腳本" class="hash-link" aria-label="Direct link to 設定腳本" title="Direct link to 設定腳本">​</a></h3><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">% # nvm 設定</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">% mkdir ~/.nvm</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">% code ~/.zprofile</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># 加入腳本</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># Set PATH, MANPATH, etc., for Homebrew.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">eval "$(/opt/homebrew/bin/brew shellenv)"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># Set PATH, MANPATH, etc., for Homebrew.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">export NVM_DIR="$HOME/.nvm"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  [ -s "/opt/homebrew/opt/nvm/nvm.sh" ] &amp;&amp; \. "/opt/homebrew/opt/nvm/nvm.sh"  # This loads nvm</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  [ -s "/opt/homebrew/opt/nvm/etc/bash_completion.d/nvm" ] &amp;&amp; \. "/opt/homebrew/opt/nvm/etc/bash_completion.d/nvm"  # This loads nvm bash_completion</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># starship</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">eval "$(starship init zsh)"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">PATH="/opt/homebrew/opt/openjdk/bin:/opt/homebrew/opt/gnu-sed/libexec/gnubin:$PATH"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">export CPPFLAGS="-I/opt/homebrew/opt/openjdk/include"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">export ANDROID_HOME=$HOME/Library/Android/sdk</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">export PATH=$PATH:$ANDROID_HOME/emulator</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">export PATH=$PATH:$ANDROID_HOME/platform-tools</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># find local ip</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">ip(){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  ifconfig -a|grep inet|grep -v 127.0.0.1|grep -v inet6|awk '{print $2}'|tr -d "addr:"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># kill process by port</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">kp() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  npx kill-port --port $1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># apply PR to codebase</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">pr() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  git fetch upstream pull/$1/head:pr-$1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  git checkout pr-$1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># list short changelog</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">changelog() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  echo "changelog:"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  LANG=en_US git log --pretty=format:"* %h - %s (%ar) &lt;%an&gt;" -n $1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">% source ~/.zprofile</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">% nvm install 18</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">% #xcode 命令行工具</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">% xcode-select --install</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">% sudo ln -sfn /opt/homebrew/opt/openjdk/libexec/openjdk.jdk \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     /Library/Java/JavaVirtualMachines/openjdk.jdk</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="app-store">App Store<a href="#app-store" class="hash-link" aria-label="Direct link to App Store" title="Direct link to App Store">​</a></h2><ul><li>Transporter：👨‍💻 App 上傳工具</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="其他應用">其他應用<a href="#其他應用" class="hash-link" aria-label="Direct link to 其他應用" title="Direct link to 其他應用">​</a></h3><ul><li><a href="https://www.pcloud.com/" target="_blank" rel="noopener noreferrer">pCloud</a>：備用的快速備份資料夾，一次付清後有 2TB 空間，目前拿來備份 Dropbox 資料夾。</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="我到底裝了什麼">我到底裝了什麼<a href="#我到底裝了什麼" class="hash-link" aria-label="Direct link to 我到底裝了什麼" title="Direct link to 我到底裝了什麼">​</a></h2><p>這麼多的程式可以被分為系統增強、工作、生活相關幾類：</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="系統增強">系統增強<a href="#系統增強" class="hash-link" aria-label="Direct link to 系統增強" title="Direct link to 系統增強">​</a></h3><ul><li>homebrew：所有可以透過 <a href="https://brew.sh/" target="_blank" rel="noopener noreferrer">homebrew</a> 安裝的程式，都應透過 homebrew 安裝。</li><li>airpip：每日自動將桌布換成另一幅畫或照片</li><li>brave-browser：🌐 主要使用的瀏覽器<ul><li>重新整理目前的網頁：<code>command + r</code> (+ shift 完整重新整理)</li><li>關閉目前分頁：<code>command + w</code></li><li>開新分頁：<code>command + t</code></li><li>回到上一頁：<code>command + 左方向鍵</code></li></ul></li><li>microsoft-edge: 🌐 💬 用來開 chatgpt /new bing 搜尋</li><li>dropbox：快速備份資料夾（空間 15.x GB）</li><li><a href="https://github.com/dwarvesf/hidden" target="_blank" rel="noopener noreferrer">hiddenbar</a>：隱藏多餘的狀態列圖示<ul><li><code>在狀態列圖示上按著 cmd 鍵可以拖曳改變順序</code></li></ul></li><li>itsycal：📅 狀態列日曆</li><li>raycast：透過鍵盤快速啟動工具
-（<a href="https://manual.raycast.com/hotkey" target="_blank" rel="noopener noreferrer">取代 spotlight</a>）用 <code>Command + 空白鍵</code> 啟動。<ul><li>取代系統內建的 <a href="https://www.raycast.com/changelog/1-29-0" target="_blank" rel="noopener noreferrer">emoji keyboard</a>，在 Extentions &gt; Search Emoji 綁定 <code>Control + Command</code> 快捷鍵。</li><li>取代 rectangle 安排視窗位置，在 <code>Extentions &gt; Window Management</code> 綁定 <code>Option + Command + 方向鍵</code> 快捷鍵。</li><li>snippets 綁定 <code>Option + /</code> 快捷鍵，儲存預先定義的 gpt prompts 外派幫手。</li></ul></li><li>recordit：螢幕錄製工具</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="工作">工作<a href="#工作" class="hash-link" aria-label="Direct link to 工作" title="Direct link to 工作">​</a></h3><ul><li>android-studio：Android 開發環境</li><li>balsamiq-wireframes：👨‍💻 mockup 工具</li><li>git-credential-manager-core：👨‍💻 <a href="https://docs.github.com/en/get-started/getting-started-with-git/caching-your-github-credentials-in-git#git-credential-manager" target="_blank" rel="noopener noreferrer">搭配 github 使用</a></li><li>gnupg：👨‍💻 <a href="https://tourcoder.com/gpg-on-macos/" target="_blank" rel="noopener noreferrer">加密工具</a>(Pretty Good Privacy)，我用來簽署 git commit</li><li>gnu-sed：👨‍💻 命令行字串取代工具</li><li>java：👨‍💻 跑一些程式用</li><li>nvm：👨‍💻 Node 版本管理工具<ul><li>透過 <code>nvm install 16</code> 可以安裝最新版的 Nodejs 16.x，透過 <code>nvm ls-remote</code> 可以查看已安裝的版本</li></ul></li><li>slack：👨‍💻 溝通工具</li><li>starship：👨‍💻 命令行高亮提示</li><li>visual-studio-code：👨‍💻 程式編輯工具<ul><li>用 <code>CMD + J</code> 命令可以在編輯模式與內建的 Terminal 工具之間切換。</li><li>用 <code>CMD + B</code> 命令可以開關側邊欄。</li></ul></li><li>yarn：👨‍💻 node 套件管理工具</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="生活">生活<a href="#生活" class="hash-link" aria-label="Direct link to 生活" title="Direct link to 生活">​</a></h3><ul><li>fava: beancount 文字記帳視覺化</li><li>logseq：每日記事工具，記事是用 markdown 格式儲存，放在 Dropbox 資料夾中</li><li>steam: 遊戲管理工具</li></ul><hr><p>除了應用程式之外，電腦上還會裝瀏覽器插件、Raycast 插件、與編輯器插件。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="瀏覽器插件">瀏覽器插件<a href="#瀏覽器插件" class="hash-link" aria-label="Direct link to 瀏覽器插件" title="Direct link to 瀏覽器插件">​</a></h2><ul><li>Bitwarden：密碼管理工具</li><li>Browserflow：半自動網頁爬蟲</li><li>Pocket：📰 稍後閱讀</li><li>Youtube 雙字幕：可同時顯示</li><li>電子錢包：👛 Metamask、Tally Ho</li></ul><p>分頁使用瀏覽器內建的分頁群組功能</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="raycast-插件">Raycast 插件<a href="#raycast-插件" class="hash-link" aria-label="Direct link to Raycast 插件" title="Direct link to Raycast 插件">​</a></h2><ul><li>Google Translate</li><li>Visual Studio Recent Projects</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="visual-studio-code-插件">Visual Studio Code 插件<a href="#visual-studio-code-插件" class="hash-link" aria-label="Direct link to Visual Studio Code 插件" title="Direct link to Visual Studio Code 插件">​</a></h2><ul><li>Background Terminal Notifier：命令執行後跳系統通知</li><li>Beancount：Beancount 格式補完</li><li>Blank Line at the End：檔尾自動加入空白行</li><li>Color Info：行內 CSS 顏色顯示 / 選擇器</li><li>EditorConfig for VSCode</li><li>ESLint：程式碼樣式檢查</li><li>Indent-rainbow: 快速辨識不同層的括號</li><li>Path Intellisense：改進檔案路徑搜尋</li><li>Trailing Spaces：去除行尾的空白。</li><li>Version Lens: 快速檢查 package.json 檔案中套件是否有更新的版本</li><li>WakaTime：紀錄使用編輯器的時間</li></ul><hr><h2 class="anchor anchorWithStickyNavbar_LWe7" id="web-應用">Web 應用<a href="#web-應用" class="hash-link" aria-label="Direct link to Web 應用" title="Direct link to Web 應用">​</a></h2><ul><li>✉️ 信箱：gmail</li><li>🗺️ 地圖：Google 地圖</li><li>👥 社群：<a href="https://twitter.com/gasolin" target="_blank" rel="noopener noreferrer">Twitter</a>、<a href="https://www.facebook.com/" target="_blank" rel="noopener noreferrer">Facebook</a>、Telegram、Discord</li><li>📝 記事：<a href="http://keep.google.com/" target="_blank" rel="noopener noreferrer">Google keep</a>, Google Doc</li><li>待辦事項：<a href="https://habitica.com/" target="_blank" rel="noopener noreferrer">habitica</a></li><li>🔐 密碼管理：Bitwarden，Yubi Authenticator（2 步驟認證）</li><li>相簿：Google Photo、Dropbox</li><li>📺 線上影片： Youtube、Netflix</li><li>🎥 觀影記錄：</li><li>線上學習：PressPlay</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="web-服務">Web 服務<a href="#web-服務" class="hash-link" aria-label="Direct link to Web 服務" title="Direct link to Web 服務">​</a></h2><ul><li>🗂️ 個人網站：<a href="http://www.gasolin.idv.tw/" target="_blank" rel="noopener noreferrer">個人網站</a>、<a href="https://github.com/gasolin/blog/" target="_blank" rel="noopener noreferrer">Github</a>、<a href="https://www.linkedin.com/in/fredglin/" target="_blank" rel="noopener noreferrer">Linkedin</a></li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="系統內建快速鍵和手勢">系統內建快速鍵和手勢<a href="#系統內建快速鍵和手勢" class="hash-link" aria-label="Direct link to 系統內建快速鍵和手勢" title="Direct link to 系統內建快速鍵和手勢">​</a></h3><ul><li>切換輸入法：<code>Control + 空白鍵</code></li><li>切換程式：<code>command + tab</code></li><li>切換虛擬桌面： 用三指在觸控板上同時向左或右撥動，或 <code>Control + 方向鍵</code></li></ul>]]></content>
        <category label="tool" term="tool"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[我的工具箱]]></title>
        <id>https://blog.gasolin.idv.tw/life/mylifetools</id>
        <link href="https://blog.gasolin.idv.tw/life/mylifetools"/>
        <updated>2023-01-19T16:52:31.000Z</updated>
        <summary type="html"><![CDATA[我的工具箱裡包含各種日常攜帶品(EDC) 與 日常服務(EDS)，這邊整理了我目前和過去使用的工具紀錄。]]></summary>
        <content type="html"><![CDATA[<p>我的工具箱裡包含各種<a href="/life/edc-2021-11">日常攜帶品 (EDC)</a> 與 <a href="/life/edc-eds">日常服務 (EDS)</a>，這邊整理了我目前和過去使用的工具紀錄。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="日常服務-every-day-service">日常服務 (Every Day Service)<a href="#日常服務-every-day-service" class="hash-link" aria-label="Direct link to 日常服務 (Every Day Service)" title="Direct link to 日常服務 (Every Day Service)">​</a></h2><ul><li></li><li>目前使用的電腦應用程式 <a href="/tools/my-app-2024">2024</a> <a href="/tools/my-app-2023">2023</a></li><li>目前使用的 AI 應用 <a href="/tools/my-ai-2023">2023</a></li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="日常自動化">日常自動化<a href="#日常自動化" class="hash-link" aria-label="Direct link to 日常自動化" title="Direct link to 日常自動化">​</a></h2><ul><li>我如何做個人自動化紀錄 <a href="/life/personal-automation-in-2021">2021</a>、<a href="/life/personal-automation-in-2020">2020</a>、<a href="/life/personal-automation-in-2018">2018</a>、<a href="/life/personal-automation-in-2017">2017</a></li><li></li><li></li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="家用品">家用品<a href="#家用品" class="hash-link" aria-label="Direct link to 家用品" title="Direct link to 家用品">​</a></h2><ul><li>這一年的<del>敗家</del>投資 <a href="/life/my-investment-2024">2024</a>、<a href="/life/my-investment-2023">2023</a>、<a href="/life/my-investment-2022">2022</a>、<a href="/life/my-investment-2021">2021</a>、<a href="/life/my-investment-2020">2020</a></li><li>個人工具箱 <a href="/tools/tooling-in-2025-Apr">2025-4</a>、<a href="/tools/tooling-in-2024-Mar">2024-3</a>、<a href="/tools/tooling-in-2021-Dec">2021-12</a>、<a href="/tools/tooling-in-2021-May">2021-5</a>、<a href="/tools/tooling-in-2020-Nov">2020</a>、<a href="/tools/tooling-in-2019-Nov">2019-11</a>、<a href="/tools/tooling-in-2019-Mar">2019-3</a>、<a href="/tools/tooling-in-2018-jun">2018-6</a>、<a href="/tools/tooling-in-2018-feb">2018-2</a>、<a href="/tools/tooling-in-2017-sep">2017-9</a>、<a href="/tools/tooling-in-2017">2017</a>、<a href="/tools/tooling-in-2016">2016</a>、<a href="/tools/tooling-in-2011">2011</a></li><li></li><li></li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="外出攜帶">外出攜帶<a href="#外出攜帶" class="hash-link" aria-label="Direct link to 外出攜帶" title="Direct link to 外出攜帶">​</a></h2><ul><li></li></ul>]]></content>
        <category label="life" term="life"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[這一年的投資 (2022)]]></title>
        <id>https://blog.gasolin.idv.tw/life/my-investment-2022</id>
        <link href="https://blog.gasolin.idv.tw/life/my-investment-2022"/>
        <updated>2023-01-19T15:15:31.000Z</updated>
        <summary type="html"><![CDATA[遠端工作四年多，少了通勤，卻多了一些時間可以出門走走。且隨著世界的變化，未來的趨勢，我也開始嘗試許多不同的敗家投資。]]></summary>
        <content type="html"><![CDATA[<p>遠端工作四年多，少了通勤，卻多了一些時間可以出門走走。且隨著世界的變化，未來的趨勢，我也開始嘗試許多不同的<del>敗家</del>投資。</p><p>雖然以下內容看似都是在花錢，但內在的邏輯是：身邊圍繞著自己喜歡的人事物，讓你每次接觸時都感到愉悅。常保身心健康也是對自己，對家人最好的投資。</p><p>此外，我覺得並不是買下來的東西才是投資。
有些東西你沒有購買，但是你也投資了充足的時間去研究，查看，最後得出不購買的決定。
這些都是投資的過程。</p><p>上年度的回顧直接更新在<a href="/life/my-investment-2021">這一年的投資 (2021)</a>。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="投資我的工具箱">投資我的工具箱<a href="#投資我的工具箱" class="hash-link" aria-label="Direct link to 投資我的工具箱" title="Direct link to 投資我的工具箱">​</a></h2><blockquote><p>從網上買了 2021 版 iPad 10" 5⭐️</p></blockquote><p>原來的 iPad 被小朋友弄爆了，買來平替。iPad 改用 USB C 插頭後，手邊已經沒有使用 Lightning 線的設備。</p><blockquote><p>訂閱飽讀一年期 4⭐️</p></blockquote><p>趁打折時購入，有不少書籍，但雜誌更多。如果有喜歡的雜誌在裡面，每個月看就回本了。我還是更喜歡看書。</p><blockquote><p>從 PUBU 上買了 BOOX Nova Air C 4⭐️</p></blockquote><p>7"8 吋彩色電子紙，能用 Google Play 安裝 App，滿足了我的夢想。
用來讀 PDF、EPUB、或是儲存到 Pocket 中的文章都很稱職。</p><blockquote><p>從網上買了 8BitDo PRO2 藍牙手把</p></blockquote><p>復古超任配色，類似 PS 手把的形式，手感很好。雖然我玩遊戲的次數不多，但看到它能勾起玩心，讓生活更有意思。</p><blockquote><p>從 Komodo 上預購了 Steam Deck 512G 4⭐️</p></blockquote><p>意識到自己其實不太玩遊戲，但和其他宅宅一樣有一堆 Steam 收藏，
於是訂購成功 Steam Deck 後，也把生灰的 Switch 處理掉。
同樣是擺著，但「這台機器可以跑 Linux 桌面喔」，想到也開心。</p><p>2024 更新：已賣出。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="投資工作生產力">投資工作生產力<a href="#投資工作生產力" class="hash-link" aria-label="Direct link to 投資工作生產力" title="Direct link to 投資工作生產力">​</a></h2><blockquote><p>訂閱 Tabnine Pro 5⭐️</p></blockquote><p>趁黑色星期五特惠訂閱一年期，Tabnine 是和 Github copilot 類似的程式碼自動補完工具，但程式不需先送到雲端分析以產生建議。使用 Tabnine 等工具可以更快速的輸入預期的程式碼。</p><blockquote><p>從 蝦皮 上買了 羅技 Lift 滑鼠 5⭐️</p></blockquote><p>Lift 滑鼠讓手腕不需旋轉就可以操作滑鼠，在家使用還是蠻香的。</p><blockquote><p>從 蝦皮 上買了 REMAX 多用途線材 4⭐️</p></blockquote><p>薄圓餅型的盒子收納了一條雙頭 USB C 短線材、USB 母頭、Lightning 轉接器
、Micro USB 轉接器，SIM 卡針、SIM 卡 / SD 卡收納槽。</p><p>便宜的價格，備著總有用到的時候。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="投資家人的共同記憶">投資家人的共同記憶<a href="#投資家人的共同記憶" class="hash-link" aria-label="Direct link to 投資家人的共同記憶" title="Direct link to 投資家人的共同記憶">​</a></h2><blockquote><p>在居住地 買了預售屋？⭐️</p></blockquote><p>因為長居需求，在年初買房。過幾年再看是不是合理的投資。</p><blockquote><p>在網上買了 Molokai MiniMax 11'6 吋立槳板 4.5⭐️</p></blockquote><p>不像一般充氣式槳版收納，需要裝進像是聖鬥士聖衣的超大袋子。MiniMax 系列可以將若大的槳板收納進 40 升的「小」袋中，整體的重量也控制在 10 公斤左右，可以背著騎機車前往。帶著槳版划遍溪河、潭、海。在平靜水域多載兩個小朋友也能勝任，目前使用相當滿意。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="投資健康">投資健康<a href="#投資健康" class="hash-link" aria-label="Direct link to 投資健康" title="Direct link to 投資健康">​</a></h2><p>今年除了繼續爬一些小山，後半年也開始接觸水上活動，也陸續添購了一些水上裝備。</p><blockquote><p>在戶外商店 買了折疊登山杖 4⭐️</p></blockquote><p>今年小朋友跟著爬了幾次山，需要額外的登山杖。
原本先在網上買到 Nature Hike 的折疊登山杖，初次使用時有一邊的快扣故障，而且登山杖的握把相比起來頗糙，廠商很爽快的接受退貨並退款。</p><p>後到附近的戶外商店買了犀牛的折疊登山杖 x2。品質尚可，爬完可以完全收納在背包中的感覺，比較開心。</p><p>2023 更新：多數時候我確實更願意選擇帶折疊登山杖。</p><blockquote><p>在蝦皮買了 折疊鴨舌帽 5⭐️</p></blockquote><p>折疊鴨舌帽相當輕便，可以 3 折後收在隨身小包或口袋中。還可以遮擋細雨，實屬必帶的裝備。
我選擇帶有頸繩的款式，即使掉下水時，帽子也不會弄丟。</p><p>鴨舌帽上還有扣子，可以扣上附帶的布片，保護後頸不被曬傷（穿戴的所需的恥力較高，較少用）。</p><blockquote><p>在蝦皮買了 夾帽式太陽眼鏡 5⭐️</p></blockquote><p>對於眼鏡一族來說，需要改配隱形眼鏡，才能戴一般有眼鏡架的太陽眼鏡。不然就是配有度數的鏡片。</p><p>「既然在有太陽曝曬的時候都會戴著帽子，那直接將太陽眼鏡片夾在上面不就好了？」
看到這產品時就覺得很符合我的想法。它的鏡片是夾在帽簷兩側根部，即使戴著眼鏡也不影響使用。</p><p>因為少了鏡架，攜帶重量上也很讓人滿意。</p><p>2023 更新：漂溪時折疊鴨舌帽和夾帽式太陽眼鏡一起噴掉了 😵</p><blockquote><p>在蝦皮買了 多用途雨衣 5⭐️</p></blockquote><p>這簡易雨披主要是一片布，可以當作<code>地墊</code>使用。
其上加了雨衣頭部的部分，穿上後在腋下有魔鬼氈，可以黏起來當<code>雨衣</code>使用。
反面有銀色反光，可在山上緊急保暖用。</p><blockquote><p>在運動用品店買了 Aropec 3mm 防寒衣 4 -&gt; 3⭐️</p></blockquote><p>為了 SUP 漂溪買了台灣品牌的防寒衣，使用上相當安心，只是有點擔心 3mm 在台灣能派上用場的時段，另外穿脫也比較麻煩，若不潛水的話，以後會考慮二截式的。</p><p>2023 更新：一年來大概使用 5 次，可能買 1.5 mm 的已足供多數水上運動使用。</p><blockquote><p>在運動用品店買了 Aropec 溯溪用救生衣 4⭐️</p></blockquote><p>前開式拉鍊的救生衣，使用時的感覺不錯。對於立槳運動來說掉到水裡的機率不是很高，攜帶時仍偏大件。如果要換裝備時會考慮更加簡單輕便的款式。</p><p>2023 更新：有看到背後能放水袋的救生衣（跑步背心的概念），可能更適合 SUP 運動使用。</p>]]></content>
        <category label="life" term="life"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Steam Deck 設定]]></title>
        <id>https://blog.gasolin.idv.tw/tools/steamdeck</id>
        <link href="https://blog.gasolin.idv.tw/tools/steamdeck"/>
        <updated>2023-01-11T16:30:00.000Z</updated>
        <summary type="html"><![CDATA[作為一台效能足以跑大多數 2022 年的 PC 遊戲，有觸控螢幕、震動手把、陀螺儀感測，還可外接螢幕、SD卡。2萬內台幣可入手的 Steam Deck 應該是目前最兼具效能與價格的掌上電腦設備。]]></summary>
        <content type="html"><![CDATA[<p>作為一台效能足以跑大多數 2022 年的 PC 遊戲，有觸控螢幕、震動手把、陀螺儀感測，還可外接螢幕、SD 卡。2 萬內台幣可入手的 Steam Deck 應該是目前最兼具效能與價格的掌上電腦設備。</p><p>Steam Deck 使用訂製的 Arch Linux，同時也能容易的從預設的遊戲模式切換到桌面模式。然而這台機器畢竟主要為遊戲服務，如果要使用他的桌面模式、或將第三方程式整合到遊戲模式，還是需要一些額外處理。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="在遊戲模式中打開應用程式">在遊戲模式中打開應用程式<a href="#在遊戲模式中打開應用程式" class="hash-link" aria-label="Direct link to 在遊戲模式中打開應用程式" title="Direct link to 在遊戲模式中打開應用程式">​</a></h2><p>透過 Discover /flatpak 程式，可以無痛的安裝各種應用程式（如瀏覽器）。在桌面模式下打開 <code>Steam 選單 &gt; 遊戲 &gt; 新增一個非 Steam 遊戲到我的收藏庫</code>，就可以將各種應用程式加入 Steam 收藏庫，以後不需要切換到桌面模式，在遊戲模式中就可以直接打開。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="調整瀏覽器顯示">調整瀏覽器顯示<a href="#調整瀏覽器顯示" class="hash-link" aria-label="Direct link to 調整瀏覽器顯示" title="Direct link to 調整瀏覽器顯示">​</a></h2><p>所有 Chrome 相容瀏覽器（Edge、Brave）都可以用這招安裝</p><p></p><p>在每個遊戲 / 應用程式啟動畫面上點選設定按鈕，在啟動選項 (在 @@u @@ 變數之後) 中加入</p><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">--window-size=1024,640 --force-device-scale-factor=1.25 --device-scale-factor=1.25</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>若要預設開啟特定頁面可以繼續加入 <code>--kiosk "https://www.xbox.com/play"</code> 參數。</p><p>瀏覽器預設用 R2 (RT) 按鈕代表滑鼠左鍵、L2 代表右鍵、右觸控代表板滑鼠移動、左觸控板代表捲動。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="用陀螺儀gyro取代滑鼠操作">用陀螺儀（gyro）取代滑鼠操作<a href="#用陀螺儀gyro取代滑鼠操作" class="hash-link" aria-label="Direct link to 用陀螺儀（gyro）取代滑鼠操作" title="Direct link to 用陀螺儀（gyro）取代滑鼠操作">​</a></h2><p>在每個遊戲 / 應用程式啟動畫面上點選 🎮 遊戲手把按鈕，開啟控制器設定，將<code>陀螺儀行為</code>選成<code>等同滑鼠</code>。這樣在程式中碰著右蘑菇頭時轉動機器，滑鼠游標 / 視角也會隨之轉動。</p>]]></content>
        <category label="game" term="game"/>
        <category label="linux" term="linux"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Nostr 介紹]]></title>
        <id>https://blog.gasolin.idv.tw/service/nostr-c4</id>
        <link href="https://blog.gasolin.idv.tw/service/nostr-c4"/>
        <updated>2022-10-22T18:10:18.000Z</updated>
        <summary type="html"><![CDATA[Nostr 是一種正在發展中的分散式發佈/訂閱內容協定，基本的規則容易理解，但卻有很高的應用彈性。我才剛開始接觸，先將我理解的部分分享出來。]]></summary>
        <content type="html"><![CDATA[<p><a href="https://github.com/nostr-protocol/nostr" target="_blank" rel="noopener noreferrer">Nostr</a> 是一種正在發展中的分散式發佈 / 訂閱內容協定，基本的規則容易理解，但卻有很高的應用彈性。我才剛開始接觸，先將我理解的部分分享出來。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="nostr-之前">Nostr 之前<a href="#nostr-之前" class="hash-link" aria-label="Direct link to Nostr 之前" title="Direct link to Nostr 之前">​</a></h2><p>在網路發展前，內容發佈被控制在媒體手中，大眾需透過電視、報紙等媒介來取得資訊。</p><p>早期的網路，只要有頻寬架站加上懂一點 HTML，也可以自行將內容發佈到網路上，閱聽者透過 YAHOO 等入口網站、Google 等搜尋引擎，或是 RSS 訂閱找到內容發佈者的文章。後來 Blogger、痞客邦等平台的出現，讓整個內容發佈流程再簡化。</p><div class="mermaid" data-mermaid-src="graph LR
publisher[發布者] -- 發佈 --> Content((網站內容))
Content -- 閱讀 --> Reader[閱聽者]">graph LR
publisher[發布者] -- 發佈 --&gt; Content((網站內容))
Content -- 閱讀 --&gt; Reader[閱聽者]</div><p>現在 Facebook、Twitter、微信等社群平台，更進一步將內容發佈門檻降低，並整合進了內容發現機制，讓發佈的內容更容易接觸到閱聽者。</p><div class="mermaid" data-mermaid-src="graph LR
User[使用者] -.- Publisher
User -.- Reader
subgraph 平台
Publisher[發布者] -- 發佈 --> Content((內容))
Reader[閱聽者] -- 發現 --> Content
Content -- 閱讀 --> Reader
end">graph LR
User[使用者] -.- Publisher
User -.- Reader
subgraph 平台
Publisher[發布者] -- 發佈 --&gt; Content((內容))
Reader[閱聽者] -- 發現 --&gt; Content
Content -- 閱讀 --&gt; Reader
end</div><p>目前的內容發佈機制很成熟了，但其中的缺憾是發佈者並不真正能確保自己發佈的內容。目前多數的閱聽者都處在 Facebook、Twitter、微信平台提供的訊息繭中，躋身於發佈者與閱聽者之間的平台掌握了發佈者的帳號與內容，隨時可以因為某些檢舉，將發佈者所提供的內容下架，甚或關閉發佈者的帳號。</p><div class="mermaid" data-mermaid-src="graph LR
User[使用者] -.- Publisher
User -.- Reader
subgraph 平台
Publisher[發布者吊銷] -. X .- Content((內容禁止))
Reader[閱聽者] -.- Content
Content -.- Reader
end">graph LR
User[使用者] -.- Publisher
User -.- Reader
subgraph 平台
Publisher[發布者吊銷] -. X .- Content((內容禁止))
Reader[閱聽者] -.- Content
Content -.- Reader
end</div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="nostr-的機制">Nostr 的機制<a href="#nostr-的機制" class="hash-link" aria-label="Direct link to Nostr 的機制" title="Direct link to Nostr 的機制">​</a></h2><p>Nostr 並沒有使用到區塊鏈（Blockchain），但應用了目前大量使用於區塊鏈的加密技術 (Crypto)。</p><p>Nostr 對於發佈者來說：</p><ol><li>公鑰過本地或網頁的客戶端（Client），使用 Nostr 建立帳號（一對公鑰私鑰）與發佈內容。</li><li>將每一份公鑰 (Public Key) 都視作一個使用者 (User)。像是手機門號一樣，每個人可以有多份公鑰、可選擇保持或公開自己的隱私。</li><li>使用者將要發佈的內容用自己的私鑰簽章後，發送到任意的中繼器 (Relay) 中。</li><li>門號可攜，只要保留好自己的私鑰，同樣的內容可以發送到多個中繼器，如果其中某些中繼器上的內容失效了、還可以透過其他中繼器存取。</li></ol><p>Nostr 對於閱聽者來說：</p><ol><li>可透過本地或網頁的客戶端，使用 Nostr 協定閱聽內容。</li><li>內容發現靠加入一些中繼器 (Relay)。</li><li>訂閱一個公鑰，就可以從加入的中繼器中取得對應公鑰提供的內容。如果這個公鑰的資料沒有在這個中繼器中，就看不到內容。</li><li>中繼器的內容儲存在資料庫中，因此能提供和目前主流平台近似的存取速度。</li></ol><div class="mermaid" data-mermaid-src="graph TD
User[使用者] -.- PublisherA
User -.- Reader
PublisherA[發布者] -- 發佈 --> ContentA
PublisherA[發布者] -- 發佈 --> ContentB

subgraph Relay 1
ContentA((我的內容))
Publisher[其他發布者] -.- Content((內容))
end

subgraph Relay 2
ContentB((我的內容))
end

subgraph Client
PublisherA
Reader[閱聽者] -- 訂閱 --> Publisher
Content -- 閱讀 --> Reader
end">graph TD
User[使用者] -.- PublisherA
User -.- Reader
PublisherA[發布者] -- 發佈 --&gt; ContentA
PublisherA[發布者] -- 發佈 --&gt; ContentB

subgraph Relay 1
ContentA((我的內容))
Publisher[其他發布者] -.- Content((內容))
end

subgraph Relay 2
ContentB((我的內容))
end

subgraph Client
PublisherA
Reader[閱聽者] -- 訂閱 --&gt; Publisher
Content -- 閱讀 --&gt; Reader
end</div><p>Nostr 除了定義以上基礎的機制，在他的規格書 <a href="https://github.com/nostr-protocol/nips" target="_blank" rel="noopener noreferrer">NIPS</a> 中還定義了相容中繼器與客戶端需要支援的協定。中繼器或客戶端的開發者也可以自行擴充功能後，提交新的參考建議。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="如何嘗試">如何嘗試<a href="#如何嘗試" class="hash-link" aria-label="Direct link to 如何嘗試" title="Direct link to 如何嘗試">​</a></h2><p><a href="https://github.com/supertestnet/vanilla-js-nostr" target="_blank" rel="noopener noreferrer">github</a> 上提供了一個簡單的網站客戶端範例。</p><p>在瀏覽器中打開網址 <a href="https://supertestnet.github.io/vanilla-js-nostr/" target="_blank" rel="noopener noreferrer">https://supertestnet.github.io/vanilla-js-nostr/</a>，這網站已預先建立好了一個帳號（公鑰），並連接到 <code>wss://nostr-relay.wlvs.space</code> 這個中繼器。</p><p></p><p>在畫面上選擇 <code>Subscribe yourself</code> (訂閱自己) 可以看到過去其他人使用這個 Demo 帳號的貼文。</p><p>填入一些文字後，選擇 <code>Make public note</code> (發布公開訊息)，在最下方可以看到剛發佈的貼文。</p><p>如果有知道的公開帳號（公鑰），可以填入後選擇 <code>Subscribe to someone else</code> (訂閱某人)</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="nostr-可能的應用">Nostr 可能的應用<a href="#nostr-可能的應用" class="hash-link" aria-label="Direct link to Nostr 可能的應用" title="Direct link to Nostr 可能的應用">​</a></h2><p>上面的的範例中，如果你想要傳訊息給某個發佈者，也可以透過填入對方公鑰，輸入訊息後選擇 <code>Make private note</code>（產生私人訊息），則會透過加密機制，產生只有對方才能解開的私人訊息。</p><p>透過 Nostr 提供的這些機制，發佈者也有機會將內容發送到支援付費內容的中繼器，讓閱聽者透過某些機制付費才能取得內容。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="參考資料">參考資料<a href="#參考資料" class="hash-link" aria-label="Direct link to 參考資料" title="Direct link to 參考資料">​</a></h2><ul><li>已註冊的中繼器列表 <a href="https://nostr-registry.netlify.app/" target="_blank" rel="noopener noreferrer">https://nostr-registry.netlify.app/</a></li><li>或是 <a href="https://nostr.info/relays/" target="_blank" rel="noopener noreferrer">https://nostr.info/relays/</a></li><li>nostr 原作者維護的工具箱 nostr-tools <a href="https://github.com/fiatjaf/nostr-tools" target="_blank" rel="noopener noreferrer">https://github.com/fiatjaf/nostr-tools</a></li><li>Awesome-nostr 列表 <a href="https://github.com/aljazceru/awesome-nostr" target="_blank" rel="noopener noreferrer">https://github.com/aljazceru/awesome-nostr</a></li><li>Client 端比較 <a href="https://github.com/vishalxl/Nostr-Clients-Features-List" target="_blank" rel="noopener noreferrer">https://github.com/vishalxl/Nostr-Clients-Features-List</a></li></ul>]]></content>
        <category label="nostr" term="nostr"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[拿筆電到戶外工作]]></title>
        <id>https://blog.gasolin.idv.tw/life/work-outdoor-with-nb</id>
        <link href="https://blog.gasolin.idv.tw/life/work-outdoor-with-nb"/>
        <updated>2022-10-01T11:00:15.000Z</updated>
        <summary type="html"><![CDATA[無意間看到在Facebook社團中討論到在戶外拿筆電工作。我今年開始剛好有做一些嘗試，分享一下心得。]]></summary>
        <content type="html"><![CDATA[<p>無意間看到在<a href="https://www.facebook.com/groups/1190343134374259/posts/7945827792159059/" target="_blank" rel="noopener noreferrer">Facebook 社團中</a>討論到在戶外拿筆電工作。我今年開始剛好有做一些嘗試，分享一下心得。</p><p>在戶外無法像平常的辦公環境，對於生產力多少有減損，因此要選擇手上沒有急事，或是不需全用電腦（如要閱讀書籍 / 文件）的時候嘗試，這樣才不會在嘗試不順利時急得跳腳。</p><p>為了要在戶外也能順利工作，也需要思考所需的工具。</p><p>在用具準備上可以分為三個方面：工作用品、安坐與三防 (防曬、防蚊、防雨）。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="工作用品">工作用品<a href="#工作用品" class="hash-link" aria-label="Direct link to 工作用品" title="Direct link to 工作用品">​</a></h2><p>工作用的電腦相關用品，可以收納在一個手提電腦包中。為了緩解用電焦慮，帶一個備用可充筆電的行動電源也是不錯的選擇。我是拿我的 10000 毫安時倍思二合一充電器，沒插電時依然可以提供 18W 來充我的 Macbook Pro (一般充電是 45W）。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="安坐">安坐<a href="#安坐" class="hash-link" aria-label="Direct link to 安坐" title="Direct link to 安坐">​</a></h2><p>為了安坐，首先你會需要一把能攜帶的，有靠背的椅子，這樣就不受限於場地是否有提供坐的地方，對於地點有更多的選擇。(我用韓製 &lt;500g 的月亮椅，感覺是去年最值得的戶外投資)</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="防雨防曬防蚊">防雨、防曬、防蚊<a href="#防雨防曬防蚊" class="hash-link" aria-label="Direct link to 防雨、防曬、防蚊" title="Direct link to 防雨、防曬、防蚊">​</a></h2><p>三防則是首要避免在雨天嘗試（最好不要搞自己），若預期可能有雨仍執意要去戶外工作，記得準備背包防雨的外罩，並選擇附近能避雨之處。
想在海岸邊工作的話因為沒有遮蔽，就很挑天氣，當然也必須注意安全。</p><p>在戶外是否要擦防曬乳或防蚊液就看個人偏好，我提供一些補充的建議。</p><p>防曬防蚊先從節源開始，優先選擇有樹蔭、通風處。
就算你不在意陽光，電腦也會逼你選擇更舒適能看清螢幕的地方。</p><p>衣著建議穿薄長褲、包鞋，畢竟你盯著螢幕，也看不到蚊子叮著你的腳。</p><p>頭部的保護方面，現在有一些登山帽可以像日本兵的帽子那樣遮住後頸，平時能收起來當一般帽子用。可以兼顧防曬與防蚊。</p><p>除了透過選擇地點和衣物來物理性隔絕外，若不喜歡防蚊液或蚊香的味道，使用小型的防蚊掛片也是一種選擇。</p>]]></content>
        <category label="life" term="life"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[日常攜帶品(EDC)與日常服務(EDS)]]></title>
        <id>https://blog.gasolin.idv.tw/life/edc-eds</id>
        <link href="https://blog.gasolin.idv.tw/life/edc-eds"/>
        <updated>2022-09-10T18:30:46.000Z</updated>
        <summary type="html"><![CDATA[<Mindmap markdown={`]]></summary>
        <content type="html"><![CDATA[<svg width="80%" height="30vh"></svg><p>自去年開始注意到可以模組化地整理<a href="/life/life/edc-2021-11">日常攜帶品</a>後 (Everyday Carry)，也據此陸續調整手邊的工具，取得了不錯的效果。但也留意到實體工具也需要搭配規劃順手的攜帶 (Carry) 方式與收納 (Storage) 空間。</p><p>在考慮將 2022 的工具箱分享依照日常情境，分別整理「外出攜帶品」、「家用品」，並繼續思考「日常服務 (Every Day Service)」、「日常自動化」等部分。</p>]]></content>
        <category label="life" term="life"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[用 Docusaurus 建立網站]]></title>
        <id>https://blog.gasolin.idv.tw/devtools/kickstart-docusaurus</id>
        <link href="https://blog.gasolin.idv.tw/devtools/kickstart-docusaurus"/>
        <updated>2022-02-17T17:20:04.000Z</updated>
        <summary type="html"><![CDATA[參加活動時分享了近期使用 Docusaurus 架站的簡報]]></summary>
        <content type="html"><![CDATA[<p>參加活動時分享了近期使用 Docusaurus 架站的<a href="https://docs.google.com/presentation/d/1qExnZFmrrLJ2Q4puypfSMuS6wB3b5jnyXVZVqE-FsSw/edit?usp=sharing" target="_blank" rel="noopener noreferrer">簡報</a></p><iframe src="https://docs.google.com/presentation/d/e/2PACX-1vSOdhpk9yJhLXASPbOaxA_mEIo0LKEhDUQaU7UHVXNlJT0whI9SO13kbhnCZ7Yae2PfiqXFomVA3IqY/embed?start=false&amp;loop=false&amp;delayms=3000" frameborder="0" width="480" height="299" allowfullscreen="true" mozallowfullscreen="true" webkitallowfullscreen="true"></iframe><p>對於有經驗的開發者，Docusaurus 可以解決架站 / 技術文件分享的問題。
但是對於沒有經驗的一般人，Docusaurus 需要從使用命令行開始就能勸退不少人。
也許可以維護一個產生好的 github repo，讓一般人透過 fork 網站 + 線上編輯來建立第一個網站？🤔</p><p>3/17 更新</p><p>為了更容易上手，簡化了在本地設定的部分。透過 Github 可以直接 Fork 一個網站，線上編輯後，Github Actions 會開始編譯並部署到 <code>gh-pages</code> 目錄。</p><iframe src="https://docs.google.com/presentation/d/e/2PACX-1vRV1xKcD329d_6z4fcefhebd4H46wgrp-INvIyNte11TpIAqCIHgkC8RYuCAM1mSCI7MRKVrCW30vGS/embed?start=false&amp;loop=false&amp;delayms=3000" frameborder="0" width="480" height="299" allowfullscreen="true" mozallowfullscreen="true" webkitallowfullscreen="true"></iframe>]]></content>
        <category label="docusaurus" term="docusaurus"/>
        <category label="web" term="web"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[台灣城市 Emoji]]></title>
        <id>https://blog.gasolin.idv.tw/life/citemoji</id>
        <link href="https://blog.gasolin.idv.tw/life/citemoji"/>
        <updated>2022-01-07T05:11:46.000Z</updated>
        <summary type="html"><![CDATA[在程式設計這塊早已有人就將提交程式的說明 Emoji 化，並做成網站提倡 https://gitmoji.dev/]]></summary>
        <content type="html"><![CDATA[<p>在程式設計這塊早已有人就將提交程式的說明 Emoji 化，並做成網站提倡 <a href="https://gitmoji.dev/" target="_blank" rel="noopener noreferrer">https://gitmoji.dev/</a></p><p>去年參加 <a href="https://g0v.hackmd.io/88H0L2kgRUq_PvnvMcA2_w?view#%E5%8F%B0%E7%81%A3%E5%90%84%E7%B8%A3%E5%B8%82%E5%9C%B0%E5%8D%80" target="_blank" rel="noopener noreferrer">g0v</a> 活動時，構想是否在三個關鍵字自介之外，搭配隨處易得的 Emoji，
讓線上社群得以透過查看對方提供的一些語意化 Emoji 來大致理解彼此，以期在更容易溝通的同時，也為合作注入一點樂趣。</p><p>以下是構想的一些代表台灣城市的 Emoji：</p><ul><li>新 🚄 (<code>新</code>幹線)</li><li>北 🥂 (<code>杯</code>諧音)</li><li>基 🐔 (基隆古稱<code>雞</code>籠)</li><li>桃 🍑 (<code>桃</code>子)</li><li>竹 🎋 (<code>竹</code>子)</li><li>苗 🌱 (樹<code>苗</code>)</li><li>中 🀄 (麻將 <code>中</code>)</li><li>彰 🧘 (八卦山大佛 形象)</li><li>投 🤾 (手球<code>投</code>擲)</li><li>高 🐻 (<code>熊</code> 諧音)</li><li>屏 🦚 (孔雀開<code>屏</code>)</li><li>宜 1️⃣ (<code>1</code>諧音)</li><li>花 🌸 (<code>花</code>瓣)</li><li>東 ↘️ (位置)</li><li>金 ⛩ (<code>門</code>)</li><li>馬 🏇 (<code>馬</code>)</li></ul>]]></content>
        <category label="life" term="life"/>
        <category label="emoji" term="emoji"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[我如何做個人自動化紀錄-2021版]]></title>
        <id>https://blog.gasolin.idv.tw/life/personal-automation-in-2021</id>
        <link href="https://blog.gasolin.idv.tw/life/personal-automation-in-2021"/>
        <updated>2021-12-03T17:15:29.000Z</updated>
        <summary type="html"><![CDATA[<Mindmap markdown={`]]></summary>
        <content type="html"><![CDATA[<svg width="80%" height="30vh"></svg><p>2017 年開始紀錄自己使用的自動化紀錄工具。今年的自動化程度其實退步了不少，主要是一些以前依賴的第三方服務如 Anobii (不維護) 或豆瓣 (要實名認證) 都紛紛出現了問題。用一年下來，Joplin 確實解決了我隨時筆記與累積的問題。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="為什麼要做個人自動化紀錄">為什麼要做個人自動化紀錄？<a href="#為什麼要做個人自動化紀錄" class="hash-link" aria-label="Direct link to 為什麼要做個人自動化紀錄？" title="Direct link to 為什麼要做個人自動化紀錄？">​</a></h2><p>有人會問，Facebook/Twitter 不就可以記錄大小事了嗎？如果會這麼回答，那就實在太天真了😏 。FB 上也許包含了自己覺得值得分享的事，但生活中還有諸多事情值得記錄，而不適合與大眾分享。</p><p>或是想整理過去公開紀錄，造訪過去使用過的社交平台（Plurk, Google+, Blogger）已非常難以找出過去的隨筆或評論。</p><p>擁有自己的一份完整數位化生活記錄，是我持續的個人目標之一。要達成這個目標，需要藉助一些自動化紀錄工具，好讓整個過程變得自然而不困難。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="混用多種工具">混用多種工具<a href="#混用多種工具" class="hash-link" aria-label="Direct link to 混用多種工具" title="Direct link to 混用多種工具">​</a></h2><p>沒有一個工具可以滿足方方面面的需求。因此比較實際的方式，是混用多種工具以達成目標。
幸好，自動化的目標就是讓事情更少需要經過人工處理，因此各種工具設定好之後，期待他們能自動運作，只要定期維護檢視就好。</p><p>手機上透過 Google Home 和 Dropbox，網路服務透過 IFTTT、Github Actions 和 NAS，將各種服務整合起來使用。</p><svg width="80%" height="30vh"></svg><h2 class="anchor anchorWithStickyNavbar_LWe7" id="即時資訊自動化">即時資訊自動化<a href="#即時資訊自動化" class="hash-link" aria-label="Direct link to 即時資訊自動化" title="Direct link to 即時資訊自動化">​</a></h2><p>透過 Google Assistant 取得自己關注的資訊。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="照片自動化備份--">照片自動化備份 📷 <a href="#照片自動化備份--" class="hash-link" aria-label="Direct link to 照片自動化備份 📷 " title="Direct link to 照片自動化備份 📷 ">​</a></h2><ul><li><a href="http://www.dropbox.com/" target="_blank" rel="noopener noreferrer">Dropbox</a>, 自動從手機上傳照片</li><li>Google 相簿，充電時自動從手機備份照片到 Google 雲端</li><li>NAS (Synnalogy), 透過<code>Cloud Sync</code>從 Dropbox 同步照片。</li></ul><div class="mermaid" data-mermaid-src="graph LR
User -- take photo --> Phone
cam --> Phone
Phone -.-> Dropbox
Phone -.-> gphoto[Google Photo]
Dropbox -.-> NAS">graph LR
User -- take photo --&gt; Phone
cam --&gt; Phone
Phone -.-&gt; Dropbox
Phone -.-&gt; gphoto[Google Photo]
Dropbox -.-&gt; NAS</div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="運動自動化紀錄-️-">運動自動化紀錄 🚶‍♂️ <a href="#運動自動化紀錄-️-" class="hash-link" aria-label="Direct link to 運動自動化紀錄 🚶‍♂️ " title="Direct link to 運動自動化紀錄 🚶‍♂️ ">​</a></h2><ul><li>記步，睡眠紀錄：小米手環 6</li><li>體重：小米體重計</li></ul><p>再透過小米運動 App 同步到 Google Fit</p><div class="mermaid" data-mermaid-src="graph LR
User -- 記步 --> 小米運動App
User -- 量體重 --> 小米體脂計
小米體脂計 -.-> 小米運動App
小米運動App -.-> fit[Google Fit]">graph LR
User -- 記步 --&gt; 小米運動App
User -- 量體重 --&gt; 小米體脂計
小米體脂計 -.-&gt; 小米運動App
小米運動App -.-&gt; fit[Google Fit]</div><p>行走目標為每天 4000 步。</p><p>但比較常看的是 Pikmin Bloom</p><hr><h2 class="anchor anchorWithStickyNavbar_LWe7" id="自動記帳">自動記帳<a href="#自動記帳" class="hash-link" aria-label="Direct link to 自動記帳" title="Direct link to 自動記帳">​</a></h2><p>透過 Moneybook 和 <a href="https://coinstats.app/" target="_blank" rel="noopener noreferrer">CoinStats</a>，搜集絕大部分的帳戶資料。</p><hr><h2 class="anchor anchorWithStickyNavbar_LWe7" id="生活事件自動化紀錄">生活事件自動化紀錄<a href="#生活事件自動化紀錄" class="hash-link" aria-label="Direct link to 生活事件自動化紀錄" title="Direct link to 生活事件自動化紀錄">​</a></h2><p>延續<a href="/life/LifeLog-via-IFTTT">用 IFTTT 做自動生活紀錄</a>這篇的思路，我把看過的書籍、電影，喜歡的 Youtube 影片，貼過的文章，每日完成的事項都記錄到 Google 日曆中，以方便之後回顧。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="自動閱讀觀看紀錄--">自動閱讀 / 觀看紀錄 📚 <a href="#自動閱讀觀看紀錄--" class="hash-link" aria-label="Direct link to 自動閱讀 / 觀看紀錄 📚 " title="Direct link to 自動閱讀 / 觀看紀錄 📚 ">​</a></h3><p><del>對於電影，我使用 RSS + IFTTT + Google Calendar 來自動紀錄。當我在豆瓣上修改狀態，豆瓣的 RSS 也跟著改變，這時 IFTTT 會將 RSS 中的新事項紀錄到 Google 日曆上</del> (無法登入，因為豆瓣實名認證需要大陸手機號碼...)</p><p>對於 Youtube 上 like 的影片，Facebook 或 Twitter 上新貼的文章，也會透過 IFTTT 紀錄到 Google 日曆上。</p><div class="mermaid" data-mermaid-src="graph LR
User -- add movie --> Douban
User -- post --> Blog
Blog -.-> RSS
RSS -.-> IFTTT
IFTTT -.-> gcal[Google Calendar]">graph LR
User -- add movie --&gt; Douban
User -- post --&gt; Blog
Blog -.-&gt; RSS
RSS -.-&gt; IFTTT
IFTTT -.-&gt; gcal[Google Calendar]</div><p>透過 RSS 轉 IFTTT 紀錄</p><div class="mermaid" data-mermaid-src="graph LR
User -- like --> Youtube
User -- post --> Facebook
User -- post --> Twitter
Youtube -.-> IFTTT
Facebook -.-> IFTTT
Twitter -.-> IFTTT
IFTTT -.-> gcal[Google Calendar]">graph LR
User -- like --&gt; Youtube
User -- post --&gt; Facebook
User -- post --&gt; Twitter
Youtube -.-&gt; IFTTT
Facebook -.-&gt; IFTTT
Twitter -.-&gt; IFTTT
IFTTT -.-&gt; gcal[Google Calendar]</div><p>直接透過 IFTTT 紀錄</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="自動紀錄每日完成的事項--">自動紀錄每日完成的事項 📓 <a href="#自動紀錄每日完成的事項--" class="hash-link" aria-label="Direct link to 自動紀錄每日完成的事項 📓 " title="Direct link to 自動紀錄每日完成的事項 📓 ">​</a></h3><p>使用 <a href="/life/make/habitica-ifttt">Habitica + IFTTT + Google Calendar</a> 也可達成自動紀錄。
我在 Google Calendar 上使用一個單獨的日曆 (<code>成功日記</code>) 來紀錄每日完成的事項。
<del>讀完一本書的時候，也是透過完成 Habitica 上對應的待辦事項，顯示在日曆上。</del>
讀書看影片改記錄在 Joplin 的每週紀錄中。</p><div class="mermaid" data-mermaid-src="graph LR
User -- checked --> Habitica
Habitica -.-> IFTTT
IFTTT -.-> gcal[Google Calendar]">graph LR
User -- checked --&gt; Habitica
Habitica -.-&gt; IFTTT
IFTTT -.-&gt; gcal[Google Calendar]</div><p>| 我其實非常少開 Google 日曆，所以目前這樣的設定其實重複回去察看的機會也不高（目前我會手動紀錄在實體筆記本或 joplin 的每週紀錄上）。看看之後有什麼契機可以改進。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="紀錄看過或待看的網頁--">紀錄看過或待看的網頁 🌐 <a href="#紀錄看過或待看的網頁--" class="hash-link" aria-label="Direct link to 紀錄看過或待看的網頁 🌐 " title="Direct link to 紀錄看過或待看的網頁 🌐 ">​</a></h3><p>我會將待看的文章搜集到<a href="https://getpocket.com/" target="_blank" rel="noopener noreferrer">Pocket</a>。</p><p><del>除了瀏覽 Facebook 或 Twitter 上的文章，我也使用 Feedly 訂閱一些自己挑選過的網站。並將 Feedly 設定成當我做標記時，就將本篇文章轉存到 Pocket 稍候閱讀列表，我可以掃過 Feedly 列表，標記感興趣的新聞，稍後再到 Pocket 閱讀。</del></p><p>在手機或電腦上看到想讀的文章，會先送到 Pocket 待讀列表中。這樣讓我在看到文章連結當下不需急著看完整篇文章，而是在有空閒的時候才閱讀這些文章。</p><p>我唯一的待辦事項收件夾是<a href="https://habitica.com/" target="_blank" rel="noopener noreferrer">Habitica</a>，若看到值得閱讀 (紀錄) 的網頁，桌面上我使用瀏覽器的<code>Pocket</code>外掛插件 (Firefox 瀏覽器內建)，將待看網頁記錄到 Pocket 中。</p><p>在手機上直接使用 Habitica 和 Pocket 等 App，達到一樣的效果。</p><p>若在 Pocket 中覺得這個文章不錯，打星星收藏起來，將會自動記錄到 Google 日曆中。</p><div class="mermaid" data-mermaid-src="graph LR
Feedly --> Pocket
Browser --> addon[Pocket addon + tag]
addon --> Pocket
pocket --star--> IFTTT
IFTTT -.-> gcal[Google Calendar]">graph LR
Feedly --&gt; Pocket
Browser --&gt; addon[Pocket addon + tag]
addon --&gt; Pocket
pocket --star--&gt; IFTTT
IFTTT -.-&gt; gcal[Google Calendar]</div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="文章更新時自動提醒--">文章更新時自動提醒 ⏰ <a href="#文章更新時自動提醒--" class="hash-link" aria-label="Direct link to 文章更新時自動提醒 ⏰ " title="Direct link to 文章更新時自動提醒 ⏰ ">​</a></h3><p><del>有些網站並未提供 RSS 訂閱，手機上我會使用<a href="https://play.google.com/store/apps/details?id=me.webalert" target="_blank" rel="noopener noreferrer">Web Alert</a>來取得網頁更新提醒 (主要是追小說新章節)</del></p><p>因現在只追看某本小說，把網頁開著一天刷一兩次即可。</p><div class="mermaid" data-mermaid-src="graph LR
webalert[Web Alert] --> User
User --> Browser">graph LR
webalert[Web Alert] --&gt; User
User --&gt; Browser</div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="開發工具">開發工具<a href="#開發工具" class="hash-link" aria-label="Direct link to 開發工具" title="Direct link to 開發工具">​</a></h3><h4 class="anchor anchorWithStickyNavbar_LWe7" id="設定自動備份">設定自動備份<a href="#設定自動備份" class="hash-link" aria-label="Direct link to 設定自動備份" title="Direct link to 設定自動備份">​</a></h4><p>使用 VS Code <a href="https://marketplace.visualstudio.com/items?itemName=Shan.code-settings-sync" target="_blank" rel="noopener noreferrer">Settings Sync</a> ，只需剛開始時設定一次，之後可同步各種 VS Code 中的設定與插件。</p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="自動更新">自動更新<a href="#自動更新" class="hash-link" aria-label="Direct link to 自動更新" title="Direct link to 自動更新">​</a></h4><p>盡量使用 brew (Mac) 命令安裝新軟體，透過<code>brew upgrade</code>命令一起更新。</p><hr><h2 class="anchor anchorWithStickyNavbar_LWe7" id="自動化網站部署--">自動化網站部署 🌐 <a href="#自動化網站部署--" class="hash-link" aria-label="Direct link to 自動化網站部署 🌐 " title="Direct link to 自動化網站部署 🌐 ">​</a></h2><p>目前已使用 Github 來放我的個人網站與部落格，已使用 Github Action 取代 Travis CI 服務。透過與 Google Actions 整合，我所修改的任何內容，在幾分鐘之內都會自動部署到網站上。</p><div class="mermaid" data-mermaid-src="graph LR
master[Github:master]
actions[Google Actions]
ghpages[Github:gh-pages]
User -- commit --> master
master -. trigger .-> actions
actions -.  auto build &amp; deploy .-> ghpages">graph LR
master[Github:master]
actions[Google Actions]
ghpages[Github:gh-pages]
User -- commit --&gt; master
master -. trigger .-&gt; actions
actions -.  auto build &amp; deploy .-&gt; ghpages</div><p>| Auto website deploy flow</p><p>一些可以直接運作在瀏覽器的專案 (如 BlocklyDuino 和 Saihubot)，我會直接將 gh-pages 設為預設分支，所有改動直接 push 到這分支中。這樣一有改動即可在網頁上看到更新成果。</p><hr><h2 class="anchor anchorWithStickyNavbar_LWe7" id="半自動紀錄">半自動紀錄<a href="#半自動紀錄" class="hash-link" aria-label="Direct link to 半自動紀錄" title="Direct link to 半自動紀錄">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="半自動工作紀錄--">半自動工作紀錄 💼 <a href="#半自動工作紀錄--" class="hash-link" aria-label="Direct link to 半自動工作紀錄 💼 " title="Direct link to 半自動工作紀錄 💼 ">​</a></h3><p>透過翻看 Github Pull request + Asana，我可以輕易地將過去一週達成的事項整理出來，再送 PR 到 Github 上。
也可以說這塊目前只能算半自動化地列出過去事項列表，可以再繼續改進。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="定期回顧與整理">定期回顧與整理<a href="#定期回顧與整理" class="hash-link" aria-label="Direct link to 定期回顧與整理" title="Direct link to 定期回顧與整理">​</a></h3><p>我在 Joplin 中增加一個<code>Template</code>項目，裡面放了周檢視 / 月檢視 / 季檢視 / 年檢視樣板。</p><p>在 Habitica 中透過重複時間設定，每段時間自動提醒該做檢視了。</p><p>每月固定行程示意：</p><ul><li>打開某報表，將每月收益記下來</li><li>將某軟體資料匯出成 csv 檔，到 CoinStats 紀錄</li><li>將上個月的紀錄搬到年度紀錄中</li></ul><p>這時會稍微做一點整理</p><p>回顧：簡化再簡化後，還是常會跳過定期回顧與整理的部分。目前只能達到半年左右較完整回顧一次。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="照片備份規則">照片備份規則<a href="#照片備份規則" class="hash-link" aria-label="Direct link to 照片備份規則" title="Direct link to 照片備份規則">​</a></h3><p>由於 Dropbox 空間有限，會不定期將 Dropbox 上的照片移動到到 NAS 上按年月份分類的<code>photo/</code>資料夾.</p><p>我的照片並不算多，但若有出遊的月份通常照片會暴增。所以我的基本備份規則是依年份，並以雙月份命名資料夾，若是當月有重大活動則直接在檔名中標注。
例如 2016 年的照片資料夾裡會有<code>2016_10_11</code>，或是<code>2016_06_london</code>這樣的命名。</p><p>在整理照片的時候，每當遇到特別喜歡的，我會另存到 Dropbox 中的一個依年份歸檔的資料夾，例如 2017 年的精彩照片我會另存到 <code>dropbox/spot/2017</code>資料夾中，這樣隨時可以找出來欣賞。</p><p>另外每年累積的一些螢幕截圖，也放在當年度的<code>screenshots</code>資料夾裡。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="清理rss-feed">清理 RSS Feed<a href="#清理rss-feed" class="hash-link" aria-label="Direct link to 清理 RSS Feed" title="Direct link to 清理 RSS Feed">​</a></h3><p>~~ 透過 Feedly 訂閱 RSS Feed 太容易，但是不小心每天收到的新聞量就遠高於自己能吸收的量，這時可以到
<a href="https://feedly.com/i/organize/my" target="_blank" rel="noopener noreferrer">https://feedly.com/i/organize/my</a> 把那些失效的連結清掉，並快速檢視一下現在仍在訂閱的網站，是否還對這些主題感興趣。 ~~</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="手動紀錄">手動紀錄<a href="#手動紀錄" class="hash-link" aria-label="Direct link to 手動紀錄" title="Direct link to 手動紀錄">​</a></h2><p>為了平衡日常太依靠電子產品的趨向，前年開始就嘗試使用<code>實體筆記本</code>作一些紀錄，2018 一月中開始嘗試養成更頻繁地使用<code>實體筆記本</code>的習慣。在幾經調整後，目前我使用 B5 方格筆記本做基礎，搭配不同的魔擦筆來作筆記。實體筆記本的好處是除了一般的紀錄，還可以隨意畫心智圖，黏照片，貼紙，蓋印章等。參考各種筆記術書籍，我在每本筆記本前幾頁會空出<code>索引</code>區，將筆記本內容索引起來，以便之後查找。</p><p>我會在 Joplin 中增加一個<code>2021年計畫</code>的文件，保存當年度的周 / 月 / 季度紀錄和定期回顧。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="參考資料">參考資料<a href="#參考資料" class="hash-link" aria-label="Direct link to 參考資料" title="Direct link to 參考資料">​</a></h2><ul><li></li><li></li><li></li></ul>]]></content>
        <category label="web" term="web"/>
        <category label="mobile" term="mobile"/>
        <category label="automation" term="automation"/>
        <category label="life" term="life"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[個人工具箱（2021十二月）]]></title>
        <id>https://blog.gasolin.idv.tw/tools/tooling-in-2021-Dec</id>
        <link href="https://blog.gasolin.idv.tw/tools/tooling-in-2021-Dec"/>
        <updated>2021-12-03T11:30:00.000Z</updated>
        <summary type="html"><![CDATA[先記錄下來手邊使用的工具，才有機會從繁雜中歸納出簡單的使用規則。]]></summary>
        <content type="html"><![CDATA[<p><code>先記錄下來手邊使用的工具，才有機會從繁雜中歸納出簡單的使用規則。</code></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="主要裝備">主要裝備<a href="#主要裝備" class="hash-link" aria-label="Direct link to 主要裝備" title="Direct link to 主要裝備">​</a></h2><ul><li>💻 Apple Macbook Pro 13 (2020), i5 32GB RAM, 512GB SSD，作業系統：~11.3.1~ -&gt; 12.0.1</li></ul><blockquote><p>明年再來考慮升 M2 Mackbook Air。</p></blockquote><ul><li>📱 <a href="https://www.sogi.com.tw/products/sony_xperia_10/14610" target="_blank" rel="noopener noreferrer">Sony Xperia 10</a>, Android 10(Q), 6", Snapdragon 630</li><li>🎧  <code>SoundCore Liberty 3 Pro</code> (備用：Sony WI-1000，皆為降噪耳機)</li><li>U2F (兩步驟驗證): Ubikey 5 NFC、Ledger Nano S、Google Authenticator</li></ul><blockquote><p>將多數用到的重要網路服務使用隨機生成的密碼 + 硬體 U2F 保護。這個習慣讓我使用網路時，更少需要對安全性擔憂。</p></blockquote><h2 class="anchor anchorWithStickyNavbar_LWe7" id="️-外出攜帶">🚶‍♂️ 外出攜帶<a href="#️-外出攜帶" class="hash-link" aria-label="Direct link to 🚶‍♂️ 外出攜帶" title="Direct link to 🚶‍♂️ 外出攜帶">​</a></h2><ul><li>💻 筆電，📱 手機，</li><li>🖱 TrackPoint 滑鼠</li><li>🔌  倍思 2 合 1 45W GaN 雙模行動電源充電器 (10000mAh)</li></ul><blockquote><p>雙模行動電源充電器，有附一般 USD 和 USB C 接口，除了可以拿來充大部分設備外，插上插座時也有 45W 可以為筆電供電。</p></blockquote><blockquote><p>在出門的行程中可以保持電腦的電量。停留的地點有插座時，可以直接插上為筆電供電。和分別攜帶行動電源 + 充電器的總重量相比，也輕了些。</p></blockquote><blockquote><p>拔開時雖然沒辦法完全為筆電充滿電，但「續命」一陣子是足夠的。是今年最滿意的週邊設備。</p></blockquote><ul><li>🎧  降噪耳機</li><li>USB C/Micro USB 雙頭轉接線</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="-家">🏠 家<a href="#-家" class="hash-link" aria-label="Direct link to 🏠 家" title="Direct link to 🏠 家">​</a></h3><ul><li>🔌 Ｍacbook PRO 電源</li><li>🖱 TrackPoint 滑鼠</li><li>📦 Synology NAS: 電影、影集、照片、資料備份，同步 Dropbox, Google Photos。<code>也嘗試用 Docker 安裝一些服務</code>。</li><li>第二螢幕 🖥️  iPad Air v3 (透過並行功能)，<code>Gechic 13吋 On-Lap 1306S-R 外接螢幕</code>。</li></ul><blockquote><p>購入 13 吋外接螢幕試試。疫情期間因為小朋友有時候會借用 iPad，這時外接個螢幕反而比較容易。</p></blockquote><ul><li><code>Chromcast for Google TV</code></li><li><code>Nest Audio</code></li></ul><p>使用💻 Apple Macbook Pro 13 (2020) 搭配🖱TrackPoint 滑鼠。</p><p>購入 Chromcast for Google TV 和 Nest Audio。
因為 Nest Audio 而訂閱了大半年的 Youtube Premium。
因為我並不常聽音樂，年底決定退訂了。依然可以使用 Aduio Chromcast 的方式將手機上的聲音播放到 Nest Audio。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="️-網站工具">🕸️ 網站工具<a href="#️-網站工具" class="hash-link" aria-label="Direct link to 🕸️ 網站工具" title="Direct link to 🕸️ 網站工具">​</a></h3><ul><li>🕸️ 主要瀏覽器：<code>Brave</code></li><li>瀏覽器插件<ul><li>拼字訂正：Grammarly</li><li>密碼管理：Bitwarden</li><li>分頁管理：Workona (少用)</li></ul></li><li>瀏覽器常駐分頁 (不使用)</li><li>👥 主要社交網站：<a href="http://www.facebook.com/" target="_blank" rel="noopener noreferrer">Facebook</a>、<a href="https://twitter.com/gasolin" target="_blank" rel="noopener noreferrer">Twitter</a></li><li>📝 記事：<a href="http://keep.google.com/" target="_blank" rel="noopener noreferrer">Google keep</a>, Google Doc</li><li>💾 網路硬碟：<a href="http://www.dropbox.com/" target="_blank" rel="noopener noreferrer">Dropbox</a>, 主要用作同步照片</li><li>🔑密碼管理：<a href="https://www.bitwarden.com/" target="_blank" rel="noopener noreferrer">Bitwarden</a></li><li>📰 新聞聚合：<a href="https://feedly.com/" target="_blank" rel="noopener noreferrer">Feedly</a></li><li>🎥 看電影記錄：<a href="http://www.douban.com/" target="_blank" rel="noopener noreferrer">豆瓣</a></li><li>🗂️ 個人網站：<a href="http://www.gasolin.idv.tw" target="_blank" rel="noopener noreferrer">個人網站</a>, <a href="https://github.com/gasolin/blog/" target="_blank" rel="noopener noreferrer">Github</a></li><li>🗂️ 個人履歷：<a href="https://www.linkedin.com/in/fredglin/" target="_blank" rel="noopener noreferrer">Linkedin</a></li><li>🔗 IFTTT <a href="/life/personal-automation-in-2020">自動化生活紀錄 2020</a></li><li>📺 <a href="https://www.youtube.com/" target="_blank" rel="noopener noreferrer">Youtube</a></li><li>👛 電子錢包 Metamask, <a href="/crypto/setup_ledger_nano_on_linux">Ledger Nano S</a></li></ul><p>使用 Grammarly 多年，還是很盡責的幫我改進錯字。目前工作模式較穩定了，且我其實用不上 Grammarly 所提供的太多功能，目前打算暫停訂閱，之後將考慮從 <a href="https://www.guru99.com/free-grammarly-alternative.html" target="_blank" rel="noopener noreferrer">https://www.guru99.com/free-grammarly-alternative.html</a> 找個使用。</p><p>已經有一陣子沒用到 Workona 頁面分組的功能。要記得切換分組還是有門檻。
會嘗試看看使用現在瀏覽器內建的分頁群組功能</p><p></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="設計工具">設計工具<a href="#設計工具" class="hash-link" aria-label="Direct link to 設計工具" title="Direct link to 設計工具">​</a></h3><ul><li>螢幕動畫錄製： <a href="http://www.recordit.co/" target="_blank" rel="noopener noreferrer">Recordit</a></li><li>心智圖：XMind</li><li><code>Balsamiq Wireframes</code></li></ul><p>重購升級了 Balsamiq Wireframes，在溝通想做的功能或修改時使用。
我很喜歡它提供的類似塗鴉的樣式，使用上依然很平易近人。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="開發工具">開發工具<a href="#開發工具" class="hash-link" aria-label="Direct link to 開發工具" title="Direct link to 開發工具">​</a></h3><ul><li><p>編輯器：VS Code</p><ul><li><code>Background Terminal Notifier</code> (命令執行後跳系統通知)</li><li>Blank Line at the End</li><li>Color Info (CSS colors)</li><li>Diff Tool</li><li>EditorConfig for VSCode</li><li>ESLint</li><li><code>Git Emoji Commit 中文版</code></li><li><code>Github Copilot</code></li><li>Guides: more guide line</li><li><code>Indent-rainbow</code>: 快速辨識不同層的括號</li><li><code>Path Intellisense</code></li><li>Prettier</li><li>Settings Sync</li><li>solidity</li><li>Trailing Spaces</li><li><code>Version Lens</code>: check latest npm versions</li></ul></li><li><p>版本控制：git</p></li><li><p>套件管理：brew, <a href="https://github.com/creationix/nvm" target="_blank" rel="noopener noreferrer">nvm</a></p></li><li><p>🛎️  專注工具：🍅  <a href="https://chrome.google.com/webstore/detail/marinara-pomodoro%C2%AE-assist/lojgmehidjdhhbmpjfamhpkpodfcodef" target="_blank" rel="noopener noreferrer">Marinara</a> <del>廚房計時器</del></p></li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="娛樂工具">娛樂工具<a href="#娛樂工具" class="hash-link" aria-label="Direct link to 娛樂工具" title="Direct link to 娛樂工具">​</a></h3><ul><li><code>Chromcast for Google TV</code></li><li>🎮Nintendo Switch (少用)</li><li>🎮Steam (少用)</li><li>Netflix (停用)</li><li><code>Disney+</code></li></ul><p>主要透過 Chromcast for Google TV 或 iPad 看影劇或 Youtube。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="-android-手機應用">📱 Android 手機應用<a href="#-android-手機應用" class="hash-link" aria-label="Direct link to 📱 Android 手機應用" title="Direct link to 📱 Android 手機應用">​</a></h2><ul><li>🕸️ 瀏覽器：Brave</li><li>🔔 網頁更新通知：Web Alert (少用)</li><li>📰 閱讀：Pocket、Feedly (少用)</li><li>✉️ 信箱：Gmail</li><li>🗺️ 地圖：Google 地圖</li><li>記事：Joplin、Keep (少用)</li><li>內建相機，內建時鐘</li><li>相簿：內建相簿、Google 相簿、Dropbox</li><li>社交：Facebook、LINE、Twitter (網頁版)</li><li>待辦事項：<a href="https://habitica.com/" target="_blank" rel="noopener noreferrer">Habitica</a></li><li>自動記帳：Moneybook、<a href="https://coinstats.app/" target="_blank" rel="noopener noreferrer">CoinStats</a></li><li>🔐 密碼管理：Bitwarden，Yubi Authenticator（2 步驟認證）</li><li>📺 線上影片：Youtube、Disney+、Netflix</li><li>音樂：Youtube Music、TuneIn (電台)</li><li>有聲書：Podcast Addict</li><li>🚶‍♂️ 健康：小米運動</li></ul><p>手機瀏覽器使用 <code>Brave</code> 瀏覽器。記帳使用實體筆記本 + Joplin 紀錄。
<a href="/life/handbook">完整的實體筆記配置</a></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="其他工具">其他工具<a href="#其他工具" class="hash-link" aria-label="Direct link to 其他工具" title="Direct link to 其他工具">​</a></h3><ul><li>旅遊：Google 翻譯，TripAdvisor (旅遊時才裝)</li><li>記錄看書狀況：Joplin</li><li>線上學習：Youtube, PressPlay, Udemy (少用)</li><li>IFTTT Pro</li><li>💳 Line Pay</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="reference">Reference<a href="#reference" class="hash-link" aria-label="Direct link to Reference" title="Direct link to Reference">​</a></h2><ul><li><sup id="fnref-1-f8df63"><a href="#fn-1-f8df63" class="footnote-ref">1</a></sup> <a href="/tools/tooling-in-2020-Nov">個人工具箱 2020 十一月</a></li><li><sup id="fnref-2-f8df63"><a href="#fn-2-f8df63" class="footnote-ref">2</a></sup> <a href="/tools/tooling-in-2021-May">個人工具箱 2021 五月</a></li></ul>]]></content>
        <category label="life" term="life"/>
        <category label="tool" term="tool"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[從 Hexo 遷移到 docusaurus]]></title>
        <id>https://blog.gasolin.idv.tw/tools/blog-to-docusaurus</id>
        <link href="https://blog.gasolin.idv.tw/tools/blog-to-docusaurus"/>
        <updated>2021-11-07T17:30:30.000Z</updated>
        <summary type="html"><![CDATA[<Mindmap markdown={`]]></summary>
        <content type="html"><![CDATA[<svg width="80%" height="30vh"></svg><p>更新 blog post 時發現自動 deploy 不運作，原來 Travis CI org 已經不服務了 Orz。</p><p>原來用的 hexo 版本也舊了，要更新也得費一番工夫，不如來試試之前考慮過的 Docusaurus 吧。</p><p>花了一天做基本的 Docusaurus 設定與文章修正 ✍️，另一天加上<a href="https://github.com/gasolin/blog/blob/master/.github/workflows/deploy-docusaurus.yml" target="_blank" rel="noopener noreferrer">自動部署</a>和<a href="https://docusaurus.io/zh-CN/docs/styling-layout" target="_blank" rel="noopener noreferrer">網站樣式</a>🎨，並加上 <a href="https://github.com/sjwall/mdx-mermaid" target="_blank" rel="noopener noreferrer">Mermaid</a>, <a href="https://github.com/gasolin/blog/blob/master/src/theme/Mindmap.js" target="_blank" rel="noopener noreferrer">Markmap</a> 圖支援後，就倉促上線了⚡️。</p><p>改版後一樣是透過 Github hosting + 使用 <a href="https://docusaurus.io/docs/markdown-features" target="_blank" rel="noopener noreferrer">Markdown</a> 保存文章。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="改版的主要差異">改版的主要差異<a href="#改版的主要差異" class="hash-link" aria-label="Direct link to 改版的主要差異" title="Direct link to 改版的主要差異">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="文章網址改變">文章網址改變<a href="#文章網址改變" class="hash-link" aria-label="Direct link to 文章網址改變" title="Direct link to 文章網址改變">​</a></h3><p>雖然這次改版不再相容舊版 Blogger 的設定，網址改變了，但舊文依然保留。
可以透過<a href="http://localhost:3000/tags" target="_blank" rel="noopener noreferrer">Tags</a> 查看各標籤分類下的文章。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="rss-連結改變">RSS 連結改變<a href="#rss-連結改變" class="hash-link" aria-label="Direct link to RSS 連結改變" title="Direct link to RSS 連結改變">​</a></h3><p>從 <a href="http://blog.gasolin.idv.tw/feeds/posts/default" target="_blank" rel="noopener noreferrer">http://blog.gasolin.idv.tw/feeds/posts/default</a>
改到 <a href="https://blog.gasolin.idv.tw/rss.xml" target="_blank" rel="noopener noreferrer">https://blog.gasolin.idv.tw/rss.xml</a></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="待修正">待修正<a href="#待修正" class="hash-link" aria-label="Direct link to 待修正" title="Direct link to 待修正">​</a></h3><ol><li>修正文章內連結</li></ol><p>根據<a href="https://docusaurus.io/docs/docs-markdown-features" target="_blank" rel="noopener noreferrer">建議</a>，最好使用關聯檔案路徑（<code>[文章]( 檔案.md )</code>）而非相關連結 （<code>[文章](https://post-url)</code>）。</p><p>使用關聯檔案路徑有以下好處：</p><ul><li>在 Github 上連結也可以用</li><li>可以隨時訂製 document slugs 而不需要更新所有連結</li><li>多版本文件時，文件可以正確連到對應的版本</li></ul><ol start="2"><li>加回 Disqus 留言評論功能</li></ol><p>看來需要進一步修改客製，就先不弄了。有什麼想向我講的就請留言到 <a href="https://twitter.com/gasolin" target="_blank" rel="noopener noreferrer">https://twitter.com/gasolin</a> 囉。</p>]]></content>
        <category label="docusaurus" term="docusaurus"/>
        <category label="hexo" term="hexo"/>
        <category label="selfhost" term="selfhost"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[使用UML規劃日常攜帶品]]></title>
        <id>https://blog.gasolin.idv.tw/life/edc-2021-11</id>
        <link href="https://blog.gasolin.idv.tw/life/edc-2021-11"/>
        <updated>2021-11-03T11:30:46.000Z</updated>
        <summary type="html"><![CDATA[年中的時候嘗試爬了鯉魚山（小百岳）。在開始登山的過程中，發現前往較嚴苛的環境時，除了要考慮帶什麼，也需要考慮怎麼攜帶。]]></summary>
        <content type="html"><![CDATA[<div class="mermaid" data-mermaid-src="classDiagram
OutWork *-- EDC
Shopping *-- EDC
Hike *-- EDC

OutdoorWork *-- OutWork
Travel *-- OutWork
Travel *-- Shopping
OutWork .. Motor
Shopping .. Motor
Hike .. Motor

class EDC{
	+智能手環
	-金鑰
	-信用卡
	-身分證
	-健保卡
	+手機()
	+錢包()
}

class OutWork{
  +筆電
  -移動電源/充電線
  -降噪耳機
  -筆記本
  -三色筆
  -魔擦筆
  +筆電袋()
}

class OutdoorWork{
  #椅子
  #防蚊液
	+背包()
}

class Shopping{
	+提袋()
}

class Motor{
  +安全帽
  +薄雨衣
  #袖套
  -綁帶
}

class Hike{
  +背包()
  +攜行包()
  -垃圾袋()
  -帽子
  -水壺
  #登山杖
  #髕骨帶
  #椅子
}

class Travel{
  +背包()
  -衣袋()
  -筆袋()
  -手電筒/營燈
  -金鑰 
}">classDiagram
OutWork *-- EDC
Shopping *-- EDC
Hike *-- EDC

OutdoorWork *-- OutWork
Travel *-- OutWork
Travel *-- Shopping
OutWork .. Motor
Shopping .. Motor
Hike .. Motor

class EDC{
	+智能手環
	-金鑰
	-信用卡
	-身分證
	-健保卡
	+手機()
	+錢包()
}

class OutWork{
  +筆電
  -移動電源/充電線
  -降噪耳機
  -筆記本
  -三色筆
  -魔擦筆
  +筆電袋()
}

class OutdoorWork{
  #椅子
  #防蚊液
	+背包()
}

class Shopping{
	+提袋()
}

class Motor{
  +安全帽
  +薄雨衣
  #袖套
  -綁帶
}

class Hike{
  +背包()
  +攜行包()
  -垃圾袋()
  -帽子
  -水壺
  #登山杖
  #髕骨帶
  #椅子
}

class Travel{
  +背包()
  -衣袋()
  -筆袋()
  -手電筒/營燈
  -金鑰 
}</div><p>年中的時候嘗試爬了鯉魚山（小百岳）。在開始登山的過程中，發現前往較嚴苛的環境時，除了要考慮帶什麼，也需要考慮怎麼攜帶。</p><p>亦即出門時不僅只需要有個列表，確認有帶到東西而已，而是需要在減輕負荷與安全舒適之間的權衡，並考慮攜帶的方式（使用什麼容器）。這似乎和 EDC (Every Day Carry，<del>日常工具</del>日常攜帶品) 的概念相符，也和我持續紀錄多年的「個人工具箱」系列合拍。</p><p>打造適合自己的「日常攜帶品」組合是持續的過程，可以透過思考，設計，達到當時的最適效果。讓每次生活 / 出行時，因為身邊被喜愛的事物環繞而充滿愉悅。</p><p>除了列表形式，我嘗試使用 UML 圖將身邊的工具關聯起來，分成日常攜帶 (EDC)、外出工作（OutdoorWork）、戶外工作（OutdoorWork）、購物、騎車、登山等類別。</p><p>以上是我目前的日常工具 UML 圖</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="說明">說明<a href="#說明" class="hash-link" aria-label="Direct link to 說明" title="Direct link to 說明">​</a></h2><p>透過 <a href="https://mermaid-js.github.io/mermaid-live-editor/" target="_blank" rel="noopener noreferrer">Mermaid.js</a>線上編輯器可以很容易地透過定義 class 的方式來製作 UML class 圖。格式可參考 <a href="https://mermaid-js.github.io/mermaid/#/classDiagram" target="_blank" rel="noopener noreferrer">https://mermaid-js.github.io/mermaid/#/classDiagram</a></p><p>透過 *-- 定義不同群組間的關聯</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">classDiagram</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">OutWork *-- EDC</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Shopping *-- EDC</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Hike *-- EDC</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>並賦予 visibility 標示符號新的定義</p><ul><li><code>包包()</code>表示使用的攜行容器</li><li><code>+筆電</code>表示將長時間拿出來使用的物品</li><li><code>-筆記本</code>表示放在袋內的物品</li><li><code>#椅子</code>表示可選項（看狀況攜帶）</li></ul>]]></content>
        <category label="life" term="life"/>
        <category label="EDC" term="EDC"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[為你的活動頒發數位徽章]]></title>
        <id>https://blog.gasolin.idv.tw/crypto/create-poap-badge-for-event</id>
        <link href="https://blog.gasolin.idv.tw/crypto/create-poap-badge-for-event"/>
        <updated>2021-06-26T15:10:31.000Z</updated>
        <summary type="html"><![CDATA[在 g0v hackth44n 活動上領取徽章的實況]]></summary>
        <content type="html"><![CDATA[<p>在 g0v hackth44n 活動上領取徽章的實況</p><p></p><p>最近台灣疫情維持在三級，所有人都儘量待在家中，減少人與人之間接觸。
與此同時一些社群聚會活動也改採線上進行。</p><p>不需實際前往活動地點，降低了參與者參加各種活動的門檻，但同時也降低了參與者與活動之間的連結。</p><p>前陣子看到 g0v 要辦線上活動 <a href="https://g0v-jothon.kktix.cc/events/g0v-hackath44n" target="_blank" rel="noopener noreferrer">https://g0v-jothon.kktix.cc/events/g0v-hackath44n</a>
透過民間貢獻一些力量，協助解決目前台灣肺炎與疫苗施打上的問題。
我也報名看看有什麼可以貢獻的地方。</p><p>在看了一輪提案和活動規劃後，我發現之前的活動中會使用技能徽章來提高參與度。
我也聯想到是否能為參加本次 (2021/6/23) 黑客松的人發數位徽章，以證明確實有參加過。
若試驗反響不錯，也可沿用到後續活動。</p><p>「我有參加🙋」徽章計劃 <a href="https://g0v.hackmd.io/QF6UJegMQdChiD2lzRptGA" target="_blank" rel="noopener noreferrer">https://g0v.hackmd.io/QF6UJegMQdChiD2lzRptGA</a> 就這麼誕生了。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="徽章分發流程">徽章分發流程<a href="#徽章分發流程" class="hash-link" aria-label="Direct link to 徽章分發流程" title="Direct link to 徽章分發流程">​</a></h2><p>g0v 選在 <a href="https://gather.town/" target="_blank" rel="noopener noreferrer">https://gather.town/</a> 上舉行，復刻了之前舉辦的場地。</p><p>會議開始後，可前往 G0V LOGO 旁邊的販賣機，按 x 領取數位徽章。
<img loading="lazy" src="https://i.imgur.com/ka3k87o.png" alt="Imgur" class="img_ev3q"></p><p>此時會開啟引導網頁，上面有如何領取數位徽章的連結</p><p></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="徽章兌換流程">徽章兌換流程<a href="#徽章兌換流程" class="hash-link" aria-label="Direct link to 徽章兌換流程" title="Direct link to 徽章兌換流程">​</a></h2><p>這次使用的是 POAP (Prove of Attendance Protocol) 提供的徽章服務
<img loading="lazy" src="https://i.imgur.com/AVEPnB1.png" alt="Imgur" class="img_ev3q"></p><p>輸入 Email 或是加密錢包地址，即可領取你的徽章。領到的徽章之後也可以轉移到其他地址。
整個領取徽章的過程中，不需要使用加密錢包做簽章，領取者也不需付出任何費用。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="徽章建立流程">徽章建立流程<a href="#徽章建立流程" class="hash-link" aria-label="Direct link to 徽章建立流程" title="Direct link to 徽章建立流程">​</a></h2><p>那麼我是怎麼建立這個徽章的？</p><p>首先需準備</p><ol><li>徽章名稱，描述，時間，地點</li><li>徽章圖面 (500x500 小於 200kb 的圓形 png)</li></ol><p>本次活動徽章圖面由 Tofu (Terry) 提供 ♥️。</p><p>接著即可透過 POAP 的管理介面自行建立徽章。</p><p></p><p>建立好徽章之後，稍等一會將收到一封確認信。這時只要直接回覆所需的徽章數目，再過一陣子就會收到一份徽章兌換碼清單。只要將這些兌換碼交給參加者，即可兌換成徽章。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="會後統計">會後統計<a href="#會後統計" class="hash-link" aria-label="Direct link to 會後統計" title="Direct link to 會後統計">​</a></h2><p>根據紀錄，參加者有 17 個人領了 QRCode，最後有 11 個地址實際領取了徽章 <a href="https://poap.gallery/event/3272" target="_blank" rel="noopener noreferrer">https://poap.gallery/event/3272</a></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="心得">心得<a href="#心得" class="hash-link" aria-label="Direct link to 心得" title="Direct link to 心得">​</a></h2><p>這次比較像是個 MVP prototype 試驗，只是放個兌換機在會場中，作為類似彩蛋的存在。
因為是線上活動，而且會期中也沒有用簡報說明 / 宣傳。我覺得轉換率還是可以的，只是需要有人願意去運作下去 (有些前期準備功夫)。</p><p>POAP 徽章已經存在了幾年的時間，經過多年的發展，創建與兌換徽章的流程已經到達合理的難易度，推薦在各種聚會中使用，作為聚會額外的小驚喜。</p>]]></content>
        <category label="life" term="life"/>
        <category label="crypto" term="crypto"/>
        <category label="g0v" term="g0v"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[這一年的投資 (2021)]]></title>
        <id>https://blog.gasolin.idv.tw/life/my-investment-2021</id>
        <link href="https://blog.gasolin.idv.tw/life/my-investment-2021"/>
        <updated>2021-06-26T14:15:31.000Z</updated>
        <summary type="html"><![CDATA[遠端工作三年多，少了通勤，多了一些時間可以思考。且隨著世界的變化，未來的趨勢，我也開始嘗試許多不同的投資。]]></summary>
        <content type="html"><![CDATA[<p>遠端工作三年多，少了通勤，多了一些時間可以思考。且隨著世界的變化，未來的趨勢，我也開始嘗試許多不同的投資。</p><p>雖然以下內容看似都是在花錢，但內在的邏輯是：身邊圍繞著自己喜歡的人事物，讓你每次接觸時都感到愉悅。常保身心健康也是對自己，對家人最好的投資。</p><p>此外，我覺得並不是買下來的東西才是投資。
有些東西你沒有購買，但是你也投資了充足的時間去研究，查看，最後得出不購買的決定。
這些都是投資的過程。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="投資我的工具箱">投資我的工具箱<a href="#投資我的工具箱" class="hash-link" aria-label="Direct link to 投資我的工具箱" title="Direct link to 投資我的工具箱">​</a></h2><blockquote><p>從 PCHome 上買了 iPad 觸控筆 4⭐️</p></blockquote><p>書寫效果不錯，搭配 iOS 記事本可以隨手拿來就寫。</p><p>偶而拿來塗塗畫畫很療癒。</p><p>(Penoval Pencil A3t)</p><p> &lt;-- 一年後回來看，沒怎麼使用</p><blockquote><p>RODE NT-USB mini 麥克風 -⭐️</p></blockquote><p>為了 coscup 錄影先購入。尚未經過實戰，過一陣再依使用經驗來評分。</p><p> &lt;-- 一年後回來看，幾乎沒使用</p><blockquote><p>Sharp AQUOS Zero6 手機 4⭐</p></blockquote><p>舊手機充電的部分故障，因為重量而買來使用。</p><p> &lt;-- 一年後回來看，該手機的螢幕下指紋故障兩次，而送修一次要一週多的時間... 下次不會再考慮用螢幕下指紋的機型。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="投資工作生產力">投資工作生產力<a href="#投資工作生產力" class="hash-link" aria-label="Direct link to 投資工作生產力" title="Direct link to 投資工作生產力">​</a></h2><blockquote><p>募資網站買 Keychron K3 RGB 鍵盤 4⭐️</p></blockquote><p>有時候買工作相關設備的考量，並不全是為了生產力或健康，而是為了在工作中加入一些調味料。</p><p>例如帶 RGB 的 75% 84 鍵鍵盤，像極了敗家。</p><p> &lt;-- 一年後回來看，使用率還可以，考慮到重量還是帶不出門。後來 Keychron 又出了拿掉最上排功能鍵的 68 鍵 K7，會想換這個。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="投資家人的共同記憶">投資家人的共同記憶<a href="#投資家人的共同記憶" class="hash-link" aria-label="Direct link to 投資家人的共同記憶" title="Direct link to 投資家人的共同記憶">​</a></h2><p>App/Play Store 上借入電影 5⭐️</p><p>線上出借電影的觀影體驗已經非常成熟，只要很短的準備時間，就可以輕鬆地和家人一起觀賞影片。</p><p> &lt;-- 一年後回來看，後來大部分在看 Youtube + Netflix</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="投資健康">投資健康<a href="#投資健康" class="hash-link" aria-label="Direct link to 投資健康" title="Direct link to 投資健康">​</a></h2><p>今年爬了 4 座小百岳，也陸續添購了一些戶外裝備。</p><blockquote><p>在 ISUN 宜山買了登山杖 4⭐️</p></blockquote><p>在初登第一座小百岳後，感覺需要些裝備來輔助登山，<a href="https://isun.shoplineapp.com/pages/column01" target="_blank" rel="noopener noreferrer">爬文</a> 後買了台灣品牌的快扣三節登山杖 x2，</p><p>登山杖的握把很舒服，品質相當好，用起來很可靠。但是當我騎機車去登山口時，登山杖的長度還是比背包多一截。之後有需要會考慮買折疊式登山杖。</p><blockquote><p>在摩曼頓 買了 Salomon Ｏutline Goretex 低筒登山鞋 5⭐️</p></blockquote><p>第一次買防水鞋，在下雨時可以感覺到腳仍然保持乾爽，是很好的體驗。
在溪邊也可以把鞋子踩到水中，感覺很有趣。</p>]]></content>
        <category label="life" term="life"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[個人工具箱（2021五月）]]></title>
        <id>https://blog.gasolin.idv.tw/tools/tooling-in-2021-May</id>
        <link href="https://blog.gasolin.idv.tw/tools/tooling-in-2021-May"/>
        <updated>2021-05-14T12:30:00.000Z</updated>
        <summary type="html"><![CDATA[先記錄下來手邊使用的工具，才有機會從繁雜中歸納出簡單的使用規則。]]></summary>
        <content type="html"><![CDATA[<p><code>先記錄下來手邊使用的工具，才有機會從繁雜中歸納出簡單的使用規則。</code></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="主要裝備">主要裝備<a href="#主要裝備" class="hash-link" aria-label="Direct link to 主要裝備" title="Direct link to 主要裝備">​</a></h2><ul><li><p>💻 Apple Macbook Pro 13 (2020), i5 32GB RAM, 512GB SSD，作業系統：11.3.1</p></li><li><p>📱 <a href="https://www.sogi.com.tw/products/sony_xperia_10/14610" target="_blank" rel="noopener noreferrer">Sony Xperia 10</a>, Android 10(Q), 6", Snapdragon 630</p></li><li><p>🎧  Sony WI-1000 降噪耳機 (備用：Jabra Elite 65t)</p></li><li><p>U2F (兩步驟驗證): Ubikey 5 NFC, Ledger Nano S</p></li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="️-外出攜帶">🚶‍♂️ 外出攜帶<a href="#️-外出攜帶" class="hash-link" aria-label="Direct link to 🚶‍♂️ 外出攜帶" title="Direct link to 🚶‍♂️ 外出攜帶">​</a></h2><ul><li>💻 筆電，📱 手機，</li><li>🖱 TrackPoint 滑鼠</li><li>🔌  倍思 2 合 1 45W GaN 雙模行動電源充電器 (10000mAh)</li><li>🎧  降噪耳機</li><li>USB C/Micro USB 雙頭轉接線</li></ul><p>用<code>倍思10000mAh行動電源+45W充電器(二合一)</code> 取代 Innergie 60C 電源和小米移動電源 3 高配版 (壞了)，在出門的行程中可以保持電腦的電量。停留的地點有插座的時候，也可以直接插上為筆電供電，總體的重量也輕了些。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="-家">🏠 家<a href="#-家" class="hash-link" aria-label="Direct link to 🏠 家" title="Direct link to 🏠 家">​</a></h3><ul><li>🔌 Ｍacbook PRO 電源</li><li>🖱 TrackPoint 滑鼠</li><li>📦 Synology NAS: 電影，影集，照片，資料備份，Dropbox, Google Photos</li><li>第二螢幕 🖥️  iPad Air v3 (透過並行功能)</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="和去年相比的改變">和去年相比的改變：<a href="#和去年相比的改變" class="hash-link" aria-label="Direct link to 和去年相比的改變：" title="Direct link to 和去年相比的改變：">​</a></h3><p>延續將多數用到的重要網路服務使用隨機生成的密碼 + 硬體 U2F 保護。這個習慣讓我使用網路時，更少需要對安全性擔憂。</p><p>使用💻 Apple Macbook Pro 13 (2020) 搭配🖱TrackPoint 滑鼠。</p><p>用<code>10000mAh行動電源+45W充電器(二合一)</code> 是今年最大的改變。同為 USB C 接口，除了可以拿來充大部分設備外，插上插座時有 45W 可以為筆電供電，拔開時雖然沒辦法完全為筆電充滿電，但「續命」一陣子是足夠的。算是今年最滿意的週邊設備。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="️-網站工具">🕸️ 網站工具<a href="#️-網站工具" class="hash-link" aria-label="Direct link to 🕸️ 網站工具" title="Direct link to 🕸️ 網站工具">​</a></h3><ul><li>🕸️ 主要瀏覽器：<code>Brave</code></li><li>瀏覽器插件<ul><li>拼字訂正：Grammarly</li><li>密碼管理：Bitwarden</li><li>分頁管理：Workona</li></ul></li><li>瀏覽器常駐分頁<ul><li>✉️ <a href="http://mail.google.com/" target="_blank" rel="noopener noreferrer">GMail</a>,</li><li>✅待辦事項：<a href="https://habitica.com/" target="_blank" rel="noopener noreferrer">Habitica</a></li><li>Workona</li></ul></li></ul><p></p><ul><li>👥 主要社交網站：<a href="http://www.facebook.com/" target="_blank" rel="noopener noreferrer">Facebook</a>、<a href="https://twitter.com/gasolin" target="_blank" rel="noopener noreferrer">Twitter</a></li><li>📝 記事：<a href="http://keep.google.com/" target="_blank" rel="noopener noreferrer">Google keep</a>, Google Doc</li><li>💾 網路硬碟：<a href="http://www.dropbox.com/" target="_blank" rel="noopener noreferrer">Dropbox</a>, 主要用作同步照片</li><li>🔑密碼管理：<a href="https://www.bitwarden.com/" target="_blank" rel="noopener noreferrer">Bitwarden</a></li><li>📰 新聞聚合：<a href="https://feedly.com/" target="_blank" rel="noopener noreferrer">Feedly</a></li><li>🎥 看電影記錄：<a href="http://www.douban.com/" target="_blank" rel="noopener noreferrer">豆瓣</a></li><li>🗂️ 個人網站：<a href="http://www.gasolin.idv.tw" target="_blank" rel="noopener noreferrer">個人網站</a>, <a href="https://github.com/gasolin/blog/" target="_blank" rel="noopener noreferrer">Github</a></li><li>🗂️ 個人履歷：<a href="https://www.linkedin.com/in/fredglin/" target="_blank" rel="noopener noreferrer">Linkedin</a></li><li>🔗 IFTTT <a href="/life/personal-automation-in-2020">自動化生活紀錄 2020</a></li><li>📺 <a href="https://www.youtube.com/" target="_blank" rel="noopener noreferrer">Youtube</a></li><li>👛 電子錢包 Metamask, <a href="/crypto/setup_ledger_nano_on_linux">Ledger Nano S</a></li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="設計工具">設計工具<a href="#設計工具" class="hash-link" aria-label="Direct link to 設計工具" title="Direct link to 設計工具">​</a></h3><ul><li>螢幕動畫錄製： <a href="http://www.recordit.co/" target="_blank" rel="noopener noreferrer">Recordit</a></li><li>心智圖：XMind</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="開發工具">開發工具<a href="#開發工具" class="hash-link" aria-label="Direct link to 開發工具" title="Direct link to 開發工具">​</a></h3><ul><li>編輯器：VS Code<ul><li>Blank Line at the End</li><li>Diff Tool</li><li>EditorConfig for VSCode</li><li>Guides: more guide line</li><li>GitLens: more git info</li><li>Settings Sync</li><li>solidity</li><li>Trailing Spaces</li></ul></li><li>版本控制：git</li><li>套件管理：brew, <a href="https://github.com/creationix/nvm" target="_blank" rel="noopener noreferrer">nvm</a></li><li>🛎️  專注工具：🍅  <a href="https://chrome.google.com/webstore/detail/marinara-pomodoro%C2%AE-assist/lojgmehidjdhhbmpjfamhpkpodfcodef" target="_blank" rel="noopener noreferrer">Marinara</a> <del>廚房計時器</del></li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="娛樂工具">娛樂工具<a href="#娛樂工具" class="hash-link" aria-label="Direct link to 娛樂工具" title="Direct link to 娛樂工具">​</a></h3><ul><li>🎮Nintendo Switch</li><li>🎮Steam (少用)</li><li>Netflix (停用)</li></ul><p>因為攜帶便利，現在主要只玩 NS 上的遊戲。Steam 上看到喜歡的遊戲，也盡量等 NS 上出了再買。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="-android-手機應用">📱 Android 手機應用<a href="#-android-手機應用" class="hash-link" aria-label="Direct link to 📱 Android 手機應用" title="Direct link to 📱 Android 手機應用">​</a></h2><ul><li>🕸️ 瀏覽器：Brave</li><li>🔔 網頁更新通知：Web Alert</li><li>📰 閱讀：Pocket, Feedly</li><li>✉️ 信箱：Gmail</li><li>🗺️ 地圖：Google 地圖</li><li>記事：Keep</li><li>內建相機，內建時鐘</li><li>相簿：內建相簿，Google 相簿，Dropbox</li><li>社交：Facebook, LINE, Twitter (網頁版)</li><li>待辦事項：Habitica</li><li>🔐 密碼管理：Bitwarden，Yubi Authenticator（2 步驟認證）</li><li>📺 線上影片：Youtube, Netflix</li><li>音樂：Spotify</li><li>有聲書：Podcast Addict</li><li>🚶‍♂️ 健康：小米運動</li></ul><p>手機瀏覽器使用 <code>Brave</code> 瀏覽器。記帳使用實體筆記本 + Joplin 紀錄。
<a href="/life/handbook">完整的實體筆記配置</a></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="其他工具">其他工具<a href="#其他工具" class="hash-link" aria-label="Direct link to 其他工具" title="Direct link to 其他工具">​</a></h3><ul><li>旅遊：Google 翻譯，TripAdvisor (旅遊時才裝)</li><li>記錄看書狀況：Joplin</li><li>線上學習：PressPlay, Youtube, Udemy</li><li>IFTTT Pro</li><li>💳 Line Pay</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="reference">Reference<a href="#reference" class="hash-link" aria-label="Direct link to Reference" title="Direct link to Reference">​</a></h2><ul><li><sup id="fnref-1-e5691d"><a href="#fn-1-e5691d" class="footnote-ref">1</a></sup> <a href="/tools/tooling-in-2011">個人工具箱 2011</a></li><li><sup id="fnref-2-e5691d"><a href="#fn-2-e5691d" class="footnote-ref">2</a></sup> <a href="/tools/tooling-in-2016">個人工具箱 2016</a></li><li><sup id="fnref-3-e5691d"><a href="#fn-3-e5691d" class="footnote-ref">3</a></sup> <a href="/tools/tooling-in-2017">個人工具箱 2017</a></li><li><sup id="fnref-4-e5691d"><a href="#fn-4-e5691d" class="footnote-ref">4</a></sup> <a href="/tools/tooling-in-2017-sep">個人工具箱 2017 九月</a></li><li><sup id="fnref-5-e5691d"><a href="#fn-5-e5691d" class="footnote-ref">5</a></sup> <a href="/tools/tooling-in-2018-feb">個人工具箱 2018 二月</a></li><li><sup id="fnref-6-e5691d"><a href="#fn-6-e5691d" class="footnote-ref">6</a></sup> <a href="/tools/tooling-in-2018-jun">個人工具箱 2018 六月</a></li><li><sup id="fnref-7-e5691d"><a href="#fn-7-e5691d" class="footnote-ref">7</a></sup> <a href="/tools/tooling-in-2019-Mar">個人工具箱 2019 三月</a></li><li><sup id="fnref-8-e5691d"><a href="#fn-8-e5691d" class="footnote-ref">8</a></sup> <a href="/tools/tooling-in-2019-Nov">個人工具箱 2019 十一月</a></li><li><sup id="fnref-9-e5691d"><a href="#fn-9-e5691d" class="footnote-ref">9</a></sup> <a href="/tools/tooling-in-2020-Nov">個人工具箱 2020 十一月</a></li></ul>]]></content>
        <category label="life" term="life"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[這一年的投資 (2020)]]></title>
        <id>https://blog.gasolin.idv.tw/life/my-investment-2020</id>
        <link href="https://blog.gasolin.idv.tw/life/my-investment-2020"/>
        <updated>2021-04-30T16:50:31.000Z</updated>
        <summary type="html"><![CDATA[拖稿許久。趁勞動節有空，仿照朋友這一年的投資，寫一篇我的版本。]]></summary>
        <content type="html"><![CDATA[<p>拖稿許久。趁勞動節有空，仿照朋友<a href="https://realoptimizer.com/my-investment-2020/" target="_blank" rel="noopener noreferrer">這一年的投資</a>，寫一篇我的版本。</p><p>在家工作二年多，少了通勤，多了一些時間可以思考。且隨著世界的變化，未來的趨勢，我也開始嘗試許多不同的投資。</p><p>雖然以下內容看似都是在花錢，但內在的邏輯是：身邊圍繞著自己喜歡的人事物，讓你每次接觸時都感到愉悅。常保身心健康也是對自己，對家人最好的投資。</p><p>我覺得並不是買下來的東西才是投資。
有些東西你沒買，但是你也投資了寶貴時間去研究，查看，最後得出不購買的決定。
這些都是投資的過程。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="投資我的工具箱">投資我的工具箱<a href="#投資我的工具箱" class="hash-link" aria-label="Direct link to 投資我的工具箱" title="Direct link to 投資我的工具箱">​</a></h2><blockquote><p>從 PCHome 上買了 Raspberry Pi 4 與 512MB SSD 硬碟 5⭐️</p></blockquote><p>裝了 Eth 2.0 客戶端參與測試網，拿了 POAP badge，跟著寫了幾篇文章。</p><p>也因此認清事實，beacon 網上線後只用參股的方式透過友人運行節點，Raspberry Pi 就收起來等待下次想到研究題目時再拿出來。</p><p>陸續拿來裝了 Raspberry Pi OS, <a href="https://github.com/FydeOS/chromium_os-raspberry_pi" target="_blank" rel="noopener noreferrer">FYDE OS</a> (Chrome OS), <a href="https://dappnode.io/" target="_blank" rel="noopener noreferrer">dappnode</a> 等，提供了不下於玩遊戲的有趣體驗。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="投資工作生產力">投資工作生產力<a href="#投資工作生產力" class="hash-link" aria-label="Direct link to 投資工作生產力" title="Direct link to 投資工作生產力">​</a></h2><blockquote><p>蘋果官網購買 Macbook Pro 2020 翻新版 5⭐️</p></blockquote><p>雖然 M1 晶片的 Macbook 已經出了，且測試的效能非常好，但工作機除了速度之外更要求的是穩定。蘋果官網上常會提供翻新版供購買，並仍有一年保固。省下的一萬多元我拿來買一台 iPad 當第二螢幕。</p><p>換了 32G RAM 版本的筆電後，編譯軟體時再也不當機了 🎉</p><blockquote><p>買 iPad 2019 (二手) 5⭐️</p></blockquote><p>在查看多種第二螢幕的可能選擇後，決定購入新款 iPad 2019，優點是可以直接用 Ｍac OS 內建的 sidecar 功能延伸筆電螢幕。</p><p>買來後 iPad 還是很好用，但通常是擺在旁邊直接開瀏覽器或 Youtube, 需要開 sidecar 使用的機會其實不多。</p><blockquote><p>網拍買 iPad 夾 2⭐️</p></blockquote><p>把筆電架起來後為了將 iPad 放在一致的高度，原來想買將 iPad 夾在筆電旁的夾子，但後來選擇購入可以接上小腳架的 iPad 支架夾。
接上的效果不錯，但也沒常常使用。</p><blockquote><p>網拍買腕墊 2⭐️</p></blockquote><p>長時間使用筆電，手開始不太舒服，買了一個小巧的移動腕墊。
使用下來，發現手要一直放在腕墊上並不是容易的事。</p><blockquote><p>網拍買腳墊 5⭐️</p></blockquote><p>有陣子感覺腳到晚上會相當酸痛，在參照一些文章 / 影片後，發現也許是椅子太高，腳無法直接踏到地板的關係。弄了個腳墊後，腳酸的情況得到大幅度的改善。</p><p>(aka 兩用紓壓腳踏墊)</p><blockquote><p>募資網站買 TracPoint 滑鼠 4⭐️</p></blockquote><p>小巧的滑鼠減少手腕移動的需求，相當容易攜帶。在我頻繁的使用頻率下，可以超過一週不用充電也很不錯。</p><p>缺點是開啟後筆電的觸控板區域就不工作了，要將滑鼠關掉才能工作。另外用這個滑鼠點擊 Emoji Keyboard 無法正常輸入。除此之外很值得使用。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="投資家人的共同記憶">投資家人的共同記憶<a href="#投資家人的共同記憶" class="hash-link" aria-label="Direct link to 投資家人的共同記憶" title="Direct link to 投資家人的共同記憶">​</a></h2><blockquote><p>從 Google Store 買了 Chromecast 5⭐️</p></blockquote><p>我家並沒有放電視，但客廳擺了個電腦螢幕。透過 Chromecast，看到想和家人分享的影片時，
我們可以全家一同欣賞討論。沒有在播放影片時將預設的背景照片改成由 Google Photo 輪播，也能透過照片喚醒共同的記憶，製造話題。</p><blockquote><p>從網上買了 LEGEE 688 吸擦噴拖四合一機器人 4⭐️</p></blockquote><p>掃地機器人 + 濕拖地功能，運作時吵了點，但拖過真的蠻乾淨的。
附遙控器，有時還可以充當小朋友的玩具，讓他們願意分擔一些家務。</p><p>因為小朋友無法保持地上少異物，
且每次使用前後要換拖布，加水，還是有些前後置工作要處理，
所以運作頻率沒有買前想像的高。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="投資健康">投資健康<a href="#投資健康" class="hash-link" aria-label="Direct link to 投資健康" title="Direct link to 投資健康">​</a></h2><blockquote><p>健身環 4⭐️</p></blockquote><p>年初買了健身環，小朋友比較喜歡使用。</p><blockquote><p>迪卡儂買健身懸吊帶 4⭐️</p></blockquote><p>購入健身懸吊帶的目的，是在家不出門時，只要將懸吊帶掛在門上也可以開始運動。
但殘酷的事實告訴我，沒有運動習慣的人不管買了什麼設備，還是不習慣運動。</p><blockquote><p>Purus Air V 空氣清淨機 2⭐️</p></blockquote><p>小朋友有點氣喘問題，買了個小的空氣清淨機試試。
目前還沒發現明顯效果。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="其他小物">其他小物<a href="#其他小物" class="hash-link" aria-label="Direct link to 其他小物" title="Direct link to 其他小物">​</a></h2><p>因為是第一次紀錄，就把前幾年買的，但現在仍持續使用的物品也記錄一下</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="廚房">廚房<a href="#廚房" class="hash-link" aria-label="Direct link to 廚房" title="Direct link to 廚房">​</a></h2><blockquote><p>帶觸手的手套 4⭐️</p></blockquote><p>較厚的塑膠手套上有類似海葵的小觸手，戴上後可以直接當菜瓜布使用。</p><blockquote><p>洗水槽濾網 5⭐️
附開關插座 5⭐️</p></blockquote><p>請參考<a href="/life/kitchen-hack">廚房省時小工具</a></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="浴室">浴室<a href="#浴室" class="hash-link" aria-label="Direct link to 浴室" title="Direct link to 浴室">​</a></h2><blockquote><p>Ikea 買的刮水刀 5⭐️</p></blockquote><p>便宜耐用。原本在賣場買的時候覺得握把偏短，帶回家使用發現剛剛好。
握把處有打孔可懸掛，相當方便。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="曬衣">曬衣<a href="#曬衣" class="hash-link" aria-label="Direct link to 曬衣" title="Direct link to 曬衣">​</a></h2><blockquote><p>Ikea 八爪魚晾衣架 5⭐️</p></blockquote><p>可以收納或展開成八爪魚形狀，看起來有趣。
晾曬內衣褲時，可以讓衣褲之間有充分通風的空間。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="工作椅">工作椅<a href="#工作椅" class="hash-link" aria-label="Direct link to 工作椅" title="Direct link to 工作椅">​</a></h2><p>Herman Miller Aeron 2.0  4.5⭐️</p><p>當工作進展不順利時，沒辦法怪椅子不舒服。</p><p>&lt;-- 2 年後回顧，已把頭枕拿掉了；有時會想要椅子的前傾模式。如果當初買到頂規，現在就不需花心力想這種事。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="吸塵器">吸塵器<a href="#吸塵器" class="hash-link" aria-label="Direct link to 吸塵器" title="Direct link to 吸塵器">​</a></h2><p>Dyson 手持吸塵器 5⭐️</p><p>還是一個不會後悔的選擇</p>]]></content>
        <category label="life" term="life"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[個人工具箱（2020十一月）]]></title>
        <id>https://blog.gasolin.idv.tw/tools/tooling-in-2020-Nov</id>
        <link href="https://blog.gasolin.idv.tw/tools/tooling-in-2020-Nov"/>
        <updated>2020-11-15T22:30:00.000Z</updated>
        <summary type="html"><![CDATA[先記錄下來手邊使用的工具，才有機會從繁雜中歸納出簡單的使用規則。]]></summary>
        <content type="html"><![CDATA[<p><code>先記錄下來手邊使用的工具，才有機會從繁雜中歸納出簡單的使用規則。</code></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="主要裝備">主要裝備<a href="#主要裝備" class="hash-link" aria-label="Direct link to 主要裝備" title="Direct link to 主要裝備">​</a></h2><ul><li><p>💻 Apple Macbook Pro 13 (2020), i5 32GB RAM, 512GB SSD，作業系統：11.0.1</p></li><li><p>📱 <a href="https://www.sogi.com.tw/products/sony_xperia_10/14610" target="_blank" rel="noopener noreferrer">Sony Xperia 10</a>, Android 10(Q), 6", Snapdragon 630</p></li><li><p>🎧  Sony WI-1000 降噪耳機 (備用：Jabra Elite 65t)</p></li><li><p>U2F (兩步驟驗證): Ubikey 5 NFC, Ledger Nano S</p></li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="️-外出攜帶">🚶‍♂️ 外出攜帶<a href="#️-外出攜帶" class="hash-link" aria-label="Direct link to 🚶‍♂️ 外出攜帶" title="Direct link to 🚶‍♂️ 外出攜帶">​</a></h2><ul><li>💻 筆電，📱 手機，</li><li>🔌 Innergie 60C 電源，小米移動電源 3 高配版</li><li>🎧  降噪耳機</li><li>USB C/Micro USB 雙頭轉接線</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="-家">🏠 家<a href="#-家" class="hash-link" aria-label="Direct link to 🏠 家" title="Direct link to 🏠 家">​</a></h3><ul><li>🔌 Ｍacbook PRO 電源</li><li>🖱羅技 M720 滑鼠</li><li>📦 Synology NAS: 電影，影集，照片，資料備份，Dropbox, Google Photos</li><li>第二螢幕 🖥️  iPad Air v3 透過並行功能</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="和去年相比的改變">和去年相比的改變：<a href="#和去年相比的改變" class="hash-link" aria-label="Direct link to 和去年相比的改變：" title="Direct link to 和去年相比的改變：">​</a></h3><p>今年將多數用到的重要網路服務，除了使用隨機生成的密碼外，還再加入硬體 U2F 保護。</p><p>使用💻 Apple Macbook Pro 13 (2020) 搭配🖱羅技 M720 滑鼠。</p><p>現在的工作型態比較常在家或外出到定點工作。
今年改用使用 IPad 當作<a href="/make/second-screen">第二螢幕</a>，並購入 Chromecast 將螢幕放在客廳播放 Youtube 或 Netflix 影片。</p><p>由於Ｍacbook Pro 吃 65W 電，外出以🔌 Innergie 60C 和小米行動電源 3 高配版供電。兩者皆可充 60W，可為💻 筆電與 🎮Nintendo Switch 供電。並攜帶 USB C/Micro USB 雙頭轉接線，解決大部分手機 / 耳機的充電問題。</p><p>我也準備了一些 USB C 轉標準 USB 接頭，方便接 Ｍacbook 使用那些仍使用標準 USB 接頭的設備（如接 Arduino 開發板，或轉接雙頭轉接線暫時幫其他裝置充電等）。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="️-網站工具">🕸️ 網站工具<a href="#️-網站工具" class="hash-link" aria-label="Direct link to 🕸️ 網站工具" title="Direct link to 🕸️ 網站工具">​</a></h3><ul><li>🕸️ 主要瀏覽器：<code>Brave</code></li><li>瀏覽器插件<ul><li>拼字訂正：Grammarly</li><li>密碼管理：Bitwarden</li><li>分頁管理：Workona</li></ul></li><li>瀏覽器常駐分頁<ul><li>✉️ <a href="http://mail.google.com/" target="_blank" rel="noopener noreferrer">GMail</a>,</li><li>✅待辦事項：<a href="https://habitica.com/" target="_blank" rel="noopener noreferrer">Habitica</a></li><li>Workona</li></ul></li></ul><p></p><ul><li>👥 主要社交網站：<a href="http://www.facebook.com/" target="_blank" rel="noopener noreferrer">Facebook</a>、<a href="https://twitter.com/gasolin" target="_blank" rel="noopener noreferrer">Twitter</a></li><li>📝 記事：<a href="http://keep.google.com/" target="_blank" rel="noopener noreferrer">Google keep</a>, Google Doc</li><li>💾 網路硬碟：<a href="http://www.dropbox.com/" target="_blank" rel="noopener noreferrer">Dropbox</a>, 主要用作同步照片</li><li>🔑密碼管理：<a href="https://www.bitwarden.com/" target="_blank" rel="noopener noreferrer">Bitwarden</a></li><li>📰 新聞聚合：<a href="https://feedly.com/" target="_blank" rel="noopener noreferrer">Feedly</a></li><li>🎥 看電影記錄：<a href="http://www.douban.com/" target="_blank" rel="noopener noreferrer">豆瓣</a></li><li>🗂️ 個人網站：<a href="http://www.gasolin.idv.tw" target="_blank" rel="noopener noreferrer">個人網站</a>, <a href="https://github.com/gasolin/blog/" target="_blank" rel="noopener noreferrer">Github</a></li><li>🗂️ 個人履歷：<a href="https://www.linkedin.com/in/fredglin/" target="_blank" rel="noopener noreferrer">Linkedin</a></li><li>🔗 IFTTT <a href="/life/personal-automation-in-2020">自動化生活紀錄 2020</a></li><li>📺 <a href="https://www.youtube.com/" target="_blank" rel="noopener noreferrer">Youtube</a></li><li>👛 電子錢包 Metamask, <a href="/crypto/setup_ledger_nano_on_linux">Ledger Nano S</a></li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="設計工具">設計工具<a href="#設計工具" class="hash-link" aria-label="Direct link to 設計工具" title="Direct link to 設計工具">​</a></h3><ul><li>螢幕動畫錄製： <a href="http://www.recordit.co/" target="_blank" rel="noopener noreferrer">Recordit</a></li><li>心智圖：XMind</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="開發工具">開發工具<a href="#開發工具" class="hash-link" aria-label="Direct link to 開發工具" title="Direct link to 開發工具">​</a></h3><ul><li>編輯器：VS Code<ul><li>Blank Line at the End</li><li>Diff Tool</li><li>EditorConfig for VSCode</li><li>Guides: more guide line</li><li>GitLens: more git info</li><li>Settings Sync</li><li>solidity</li><li>Trailing Spaces</li></ul></li><li>版本控制：git</li><li>套件管理：brew, <a href="https://github.com/creationix/nvm" target="_blank" rel="noopener noreferrer">nvm</a></li><li>🛎️  專注工具：🍅  <a href="https://chrome.google.com/webstore/detail/marinara-pomodoro%C2%AE-assist/lojgmehidjdhhbmpjfamhpkpodfcodef" target="_blank" rel="noopener noreferrer">Marinara</a> <del>廚房計時器</del></li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="娛樂工具">娛樂工具<a href="#娛樂工具" class="hash-link" aria-label="Direct link to 娛樂工具" title="Direct link to 娛樂工具">​</a></h3><ul><li>🎮Nintendo Switch</li><li>🎮Steam (少用)</li><li>Netflix</li></ul><p>因為攜帶便利，現在主要只玩 NS 上的遊戲。Steam 上看到喜歡的遊戲，也盡量等 NS 上出了再買。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="-android-手機應用">📱 Android 手機應用<a href="#-android-手機應用" class="hash-link" aria-label="Direct link to 📱 Android 手機應用" title="Direct link to 📱 Android 手機應用">​</a></h2><ul><li>🕸️ 瀏覽器：Brave</li><li>🔔 網頁更新通知：Web Alert</li><li>📰 閱讀：Pocket, Feedly</li><li>✉️ 信箱：Gmail</li><li>🗺️ 地圖：Google 地圖</li><li>記事：Keep</li><li>內建相機，內建時鐘</li><li>相簿：內建相簿，Google 相簿，Dropbox</li><li>社交：Facebook, LINE, Twitter (網頁版)</li><li>待辦事項：Habitica</li><li>🔐 密碼管理：Bitwarden，Yubi Authenticator（2 步驟認證）</li><li>📺 線上影片：Youtube, Netflix</li><li>音樂：Spotify</li><li>有聲書：Podcast Addict</li><li>🚶‍♂️ 健康：小米運動</li></ul><p>手機瀏覽器使用 <code>Brave</code> 瀏覽器。記帳使用實體筆記本 + Joplin 紀錄。
<a href="/life/handbook">完整的實體筆記配置</a></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="其他工具">其他工具<a href="#其他工具" class="hash-link" aria-label="Direct link to 其他工具" title="Direct link to 其他工具">​</a></h3><ul><li>旅遊：Google 翻譯，TripAdvisor (旅遊時才裝)</li><li>記錄看書狀況：Joplin</li><li>線上學習：PressPlay, Youtube, Udemy</li><li>IFTTT Pro</li><li>💳 Line Pay</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="reference">Reference<a href="#reference" class="hash-link" aria-label="Direct link to Reference" title="Direct link to Reference">​</a></h2><ul><li><sup id="fnref-1-e75d57"><a href="#fn-1-e75d57" class="footnote-ref">1</a></sup> <a href="/tools/tooling-in-2011">個人工具箱 2011</a></li><li><sup id="fnref-2-e75d57"><a href="#fn-2-e75d57" class="footnote-ref">2</a></sup> <a href="/tools/tooling-in-2016">個人工具箱 2016</a></li><li><sup id="fnref-3-e75d57"><a href="#fn-3-e75d57" class="footnote-ref">3</a></sup> <a href="/tools/tooling-in-2017">個人工具箱 2017</a></li><li><sup id="fnref-4-e75d57"><a href="#fn-4-e75d57" class="footnote-ref">4</a></sup> <a href="/tools/tooling-in-2017-sep">個人工具箱 2017 九月</a></li><li><sup id="fnref-5-e75d57"><a href="#fn-5-e75d57" class="footnote-ref">5</a></sup> <a href="/tools/tooling-in-2018-feb">個人工具箱 2018 二月</a></li><li><sup id="fnref-6-e75d57"><a href="#fn-6-e75d57" class="footnote-ref">6</a></sup> <a href="/tools/tooling-in-2018-jun">個人工具箱 2018 六月</a></li><li><sup id="fnref-7-e75d57"><a href="#fn-7-e75d57" class="footnote-ref">7</a></sup> <a href="/tools/tooling-in-2019-Mar">個人工具箱 2019 三月</a></li><li><sup id="fnref-8-e75d57"><a href="#fn-8-e75d57" class="footnote-ref">8</a></sup> <a href="/tools/tooling-in-2019-Nov">個人工具箱 2019 十一月</a></li></ul>]]></content>
        <category label="life" term="life"/>
        <category label="tool" term="tool"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[完成 Habitica 待辦事項 -> 記錄到 Google 日曆]]></title>
        <id>https://blog.gasolin.idv.tw/make/habitica-ifttt</id>
        <link href="https://blog.gasolin.idv.tw/make/habitica-ifttt"/>
        <updated>2020-10-23T11:15:46.000Z</updated>
        <summary type="html"><![CDATA[我目前使用的待辦事項分類]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="我目前使用的待辦事項分類">我目前使用的待辦事項分類<a href="#我目前使用的待辦事項分類" class="hash-link" aria-label="Direct link to 我目前使用的待辦事項分類" title="Direct link to 我目前使用的待辦事項分類">​</a></h2><p>因為 <a href="https://todoist.com/" target="_blank" rel="noopener noreferrer">Todoist</a> 高級版 ($29 / 年) 即將到期，
考量到過去一年的使用狀況，和現在需要多訂閱 <a href="https://ifttt.com/" target="_blank" rel="noopener noreferrer">IFTTT Pro</a> (至少 $24 / 年)，所以決定找尋替代品。</p><p>我現在用如下的分類來組織待辦事項：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">本週任務</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">下週任務</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">本月任務</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">下月任務</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">長期任務</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">- 2020</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">- 2021</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">- 2025</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">- 待看片單</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">- 待借（買）書單</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">- 有一天清單</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>這樣的分類實在簡單到不再需要 Todoist 的高級功能，所以我只需要找個簡單的 Task Ｍanager 來搭配 Joplin 記錄即可。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="遷移後的代辦事項設定">遷移後的代辦事項設定<a href="#遷移後的代辦事項設定" class="hash-link" aria-label="Direct link to 遷移後的代辦事項設定" title="Direct link to 遷移後的代辦事項設定">​</a></h2><p>遷移後我目前的代辦事項設定是</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">每日/習慣：Habitica</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">週-月：Trello</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">月-年：Joplin</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><a href="https://habitica.com/" target="_blank" rel="noopener noreferrer">Habitica</a> 提供了待辦事項，想養成的習慣，每日任務等三大功能，並提供額外的將現實生活遊戲化的樂趣 🗡。</p><p>Habitica 只提供了一個待辦事項列表，所以我只在裡面放當週預計的待辦事項，其他的目前放在 Trello 中。跑了幾週後，接下來我預期會將 Trello 拿掉，將週 - 月的事項也併入 <a href="https://joplinapp.org/" target="_blank" rel="noopener noreferrer">Joplin</a> 中紀錄。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="繼續量化自我">繼續量化自我<a href="#繼續量化自我" class="hash-link" aria-label="Direct link to 繼續量化自我" title="Direct link to 繼續量化自我">​</a></h2><p>比起繼續使用 Todoist，遷移到 Habitica 還有個缺點，就是原來每完成一個 Todoist 上的待辦事項後，IFTTT 會自動幫我記錄到 Google 日曆中。Habitica 則沒有這樣的整合工具。</p><p>幸好 Habitica 雖然沒有整合 IFTTT，但是它提供了 webhook，只要填入任何網址，Habitica 在完成一些動作後，將會呼叫這個網址並傳出相關資訊。
搭配 IFTTT webhook channel，就可以做到「完成待辦事項 -&gt; 記錄到 Google 日曆」的的功能。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="透過-app-script-達成-habitica-task-轉-ifttt">透過 App Script 達成 Habitica Task 轉 IFTTT<a href="#透過-app-script-達成-habitica-task-轉-ifttt" class="hash-link" aria-label="Direct link to 透過 App Script 達成 Habitica Task 轉 IFTTT" title="Direct link to 透過 App Script 達成 Habitica Task 轉 IFTTT">​</a></h2><p>聽起來不賴，不過事情當然沒有那麼完美，中間還有個錯位的環節。
當你想這麼做時會遇到的問題，就是 IFTTT 的 webhook 只接收特定的格式，和 Habitica 透過 webhook 傳出的格式並不相容。</p><p>要解決這問題也不困難，只要架個網站，跑個簡單的腳本，將 Habitica 傳出的資料處理一下，再送出 IFTTT 相容格式即可，這樣的東西通常叫做 API 代理（Proxy）🤪。</p><p>是是是，我也知道架網站沒那麼容易。額外租用主機的錢，可能就超過 Todoist 訂閱費了，那就完全失去原本節約的目的了。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="habitica---ifttt-api-代理">Habitica - IFTTT API 代理<a href="#habitica---ifttt-api-代理" class="hash-link" aria-label="Direct link to Habitica - IFTTT API 代理" title="Direct link to Habitica - IFTTT API 代理">​</a></h2><p>因此，我透過寫一個簡單的 <a href="https://script.google.com/" target="_blank" rel="noopener noreferrer">Google App Script</a> 腳本，並<a href="https://developers.google.com/apps-script/guides/web#deploying_a_script_as_a_web_app" target="_blank" rel="noopener noreferrer">將 Google App Script 發布成網頁 App</a> 的方式，來簡單自架一個個人用的 Habitica - IFTTT API 代理。</p><p>Google Spreadsheet + Google App Script 實在是相當強大，卻少有人討論的免費 Serverless 工具。
對非工程師來說感覺太複雜，對初級工程師來說，覺得它就是 Google Spreadsheet 上的 VBScript 替代品。
但其實只要稍微學習一下，可以拿來完成許多生活自動化的事情。</p><p>你可以在 <a href="https://github.com/gasolin/habitica-task-to-ifttt" target="_blank" rel="noopener noreferrer">https://github.com/gasolin/habitica-task-to-ifttt</a> 取用這個 Habitica - IFTTT API 代理程式。</p>]]></content>
        <category label="ifttt" term="ifttt"/>
        <category label="appscript" term="appscript"/>
        <category label="life" term="life"/>
        <category label="automation" term="automation"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[從 gitbook 遷移到 docusaurus]]></title>
        <id>https://blog.gasolin.idv.tw/tools/docusaurus</id>
        <link href="https://blog.gasolin.idv.tw/tools/docusaurus"/>
        <updated>2020-09-20T14:30:30.000Z</updated>
        <summary type="html"><![CDATA[為何要從 gitbook 遷移]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="為何要從-gitbook-遷移">為何要從 gitbook 遷移<a href="#為何要從-gitbook-遷移" class="hash-link" aria-label="Direct link to 為何要從 gitbook 遷移" title="Direct link to 為何要從 gitbook 遷移">​</a></h2><p>以前曾在 gitbooks <a href="https://gasolin.gitbooks.io/learn-ethereum-dapp/" target="_blank" rel="noopener noreferrer">發表一些電子書</a>。 在 gitbook 發表電子書除了可以用 Markdown 語法外，也支援一些外掛如 Mermaid 圖表等。隨著 gitbook 業務調整，已經不再維護原來的平台，因此興起了遷移的想法。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="選擇-docusaurus">選擇 Docusaurus<a href="#選擇-docusaurus" class="hash-link" aria-label="Direct link to 選擇 Docusaurus" title="Direct link to 選擇 Docusaurus">​</a></h2><p>在一番比較後決定使用 Facebook 的 <a href="https://v2.docusaurus.io/" target="_blank" rel="noopener noreferrer">Docusaurus</a>。Docusaurus 裝好後同時提供<code>首頁，部落格，文件</code>。支援 Markdown 並支援在文件中嵌入 React 元件。</p><p>Docusaurus 還有一個非常適合技術文件的<a href="https://v2.docusaurus.io/docs/versioning" target="_blank" rel="noopener noreferrer">Versioning</a>功能，如 React 函式庫需要同時提供舊版本文件供參考時，相當有用。</p><p>經過設定後，Docusaurus 可以<a href="https://v2.docusaurus.io/docs/blog#blog-only-mode" target="_blank" rel="noopener noreferrer">只使用文件或部落格</a>的部分，在加入支援 <a href="https://github.com/gasolin/learndapp/blob/master/src/theme/Mermaid.js" target="_blank" rel="noopener noreferrer">Mermaid</a>圖表後，可以滿足我的需求。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="遷移的成果">遷移的成果<a href="#遷移的成果" class="hash-link" aria-label="Direct link to 遷移的成果" title="Direct link to 遷移的成果">​</a></h2><p>遷移的成果可參考 <a href="http://gasolin.idv.tw/learndapp/" target="_blank" rel="noopener noreferrer">http://gasolin.idv.tw/learndapp/</a></p><p></p><p>原始碼在 <a href="https://github.com/gasolin/learndapp" target="_blank" rel="noopener noreferrer">https://github.com/gasolin/learndapp</a></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="後續行動">後續行動<a href="#後續行動" class="hash-link" aria-label="Direct link to 後續行動" title="Direct link to 後續行動">​</a></h2><p>現在我的部落格用的 Hexo 要升級模板有點複雜。以後考慮把部落格也改成 Docusaurus。</p>]]></content>
        <category label="docusaurus" term="docusaurus"/>
        <category label="gitbook" term="gitbook"/>
        <category label="ethereum" term="ethereum"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[沒時間了，快上車！遷移到 Ethereum 2.0 測試網 (Modalla)]]></title>
        <id>https://blog.gasolin.idv.tw/crypto/setup-eth2-medalla</id>
        <link href="https://blog.gasolin.idv.tw/crypto/setup-eth2-medalla"/>
        <updated>2020-08-07T20:35:46.000Z</updated>
        <summary type="html"><![CDATA[在前篇發布後至今一個月，以太坊官方的 Modalla 測試網已經啟動，ETH 2 的驗證者啟動頁面(launchpad)也首次就緒。雖然尚未有新版的 EthereumOnARM ROM，但做完以下設定後，我也順利遷移到了新測試網。]]></summary>
        <content type="html"><![CDATA[<p>在前篇發布後至今一個月，以太坊官方的 Modalla 測試網已經啟動，ETH 2 的<a href="https://medalla.launchpad.ethereum.org" target="_blank" rel="noopener noreferrer">驗證者啟動頁面 (launchpad)</a>也首次就緒。雖然尚未有新版的 EthereumOnARM ROM，但做完以下設定後，我也順利遷移到了新測試網。</p><p></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="0-準備">0. 準備<a href="#0-準備" class="hash-link" aria-label="Direct link to 0. 準備" title="Direct link to 0. 準備">​</a></h2><p>照著<a href="/crypto/prepare-for-eth2">前一篇</a> 的教學安裝好樹莓派，按照<a href="/crypto/prepare-for-eth2#%E8%A8%AD%E5%AE%9A%E9%A9%97%E8%AD%89%E8%80%85-Validator-%E8%B3%87%E8%A8%8A">設定驗證者 (Validator) 資訊</a> 一節做完後，跟著本篇做 Modalla 測試網的設定。</p><p>接著打開 <a href="https://medalla.launchpad.ethereum.org" target="_blank" rel="noopener noreferrer">https://medalla.launchpad.ethereum.org</a> 網頁，我們將跟著一步步完成驗證者的設定 (使用 prysm 客戶端)。</p><p></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="1-存入-32-test-eth">1. 存入 32 (test) ETH<a href="#1-存入-32-test-eth" class="hash-link" aria-label="Direct link to 1. 存入 32 (test) ETH" title="Direct link to 1. 存入 32 (test) ETH">​</a></h2><p></p><p>從 <a href="https://faucet.goerli.mudit.blog/" target="_blank" rel="noopener noreferrer">https://faucet.goerli.mudit.blog/</a> 取得 &gt; 32 goerli (測試網) ETH</p><p></p><p>請及早準備好 32 ETH，從存入到完成遷移 ETH 2 網路，預計需要花 8 小時以上。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="2-設定樹莓派">2. 設定樹莓派<a href="#2-設定樹莓派" class="hash-link" aria-label="Direct link to 2. 設定樹莓派" title="Direct link to 2. 設定樹莓派">​</a></h2><p>ssh 登入樹莓派，確認相關的軟體都升級到最新版本</p><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ sudo apt update &amp;&amp; sudo apt upgrade</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="3-產生驗證者所需檔案">3. 產生驗證者所需檔案<a href="#3-產生驗證者所需檔案" class="hash-link" aria-label="Direct link to 3. 產生驗證者所需檔案" title="Direct link to 3. 產生驗證者所需檔案">​</a></h2><p>下載並執行 eth2.0-deposit-cli 命令，以產生驗證者所需檔案<sup id="fnref-3-3aaca8"><a href="#fn-3-3aaca8" class="footnote-ref">3</a></sup></p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">cd ~</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sudo apt-get install python3-pip</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">git clone https://github.com/ethereum/eth2.0-deposit-cli.git</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">cd eth2.0-deposit-cli</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sudo ./deposit.sh install</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">./deposit.sh --num_validators 1 --chain medalla</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>將產生的檔案 (<code>/eth2.0-deposit-cli/validator_keys</code>) 從樹莓派複製到本機<sup id="fnref-4-3aaca8"><a href="#fn-4-3aaca8" class="footnote-ref">4</a></sup></p><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">scp ethereum@192.168.1.234://home/ethereum/eth2.0-deposit-cli/validator_keys/deposit_data-1596511852.json deposit_data-1596511852.json</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>將檔案上傳到 Launchpad <a href="https://medalla.launchpad.ethereum.org/upload-validator" target="_blank" rel="noopener noreferrer">https://medalla.launchpad.ethereum.org/upload-validator</a></p><p></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="4-設定-validator">4. 設定 validator<a href="#4-設定-validator" class="hash-link" aria-label="Direct link to 4. 設定 validator" title="Direct link to 4. 設定 validator">​</a></h2><p>在樹莓派上，將產生的驗證者檔案匯入 prysm</p><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ /usr/bin/validator accounts-v2 import --keys-dir=$HOME//eth2.0-deposit-cli/validator_keys</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Enter a wallet directory (default: /home/ethereum/.eth2validators/prysm-wallet-v2):</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Directory where passwords will be stored (default: /home/ethereum/.eth2validators/prysm-wallet-v2-passwords):</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[2020-08-04 12:14:33]  INFO accounts-v2: Successfully created new wallet wallet-path=/home/ethereum/.eth2validators/prysm-wallet-v2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">New wallet password:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Confirm password:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Enter the password for your imported accounts:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Importing accounts, this may take a while...</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Importing accounts... 100% [===========================================================================================================================================]  [36s:0s]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Successfully imported 1 accounts, view all of them by running accounts-v2 list</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>可以使用 <code>$ /usr/bin/validator accounts-v2 list</code> 命令查看是否成功匯入。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="5-啟動-beacon-服務">5. 啟動 beacon 服務<a href="#5-啟動-beacon-服務" class="hash-link" aria-label="Direct link to 5. 啟動 beacon 服務" title="Direct link to 5. 啟動 beacon 服務">​</a></h2><p>如果你和我一樣有跑之前的測試網，需要先清空之前測試網的資料庫紀錄，才能順利啟動 beacon 服務。</p><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">/usr/bin/beacon-chain --force-clear-db</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>接著啟動 beacon 服務 (用的是 EthereumOnARM ROM 提供的 service)</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">sudo systemctl start prysm-beacon</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>運行順暢後，再啟動 validator 服務。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="啟動-validator-服務">啟動 validator 服務<a href="#啟動-validator-服務" class="hash-link" aria-label="Direct link to 啟動 validator 服務" title="Direct link to 啟動 validator 服務">​</a></h2><p>先建立 password.txt 檔案，並將密碼寫入其中</p><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">touch ~/.eth2validators/prysm-wallet-v2/password.txt</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">vi ~/.eth2validators/prysm-wallet-v2/password.txt</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>編輯 <code>/etc/ethereum/prysm-validator.conf</code> 檔案，將內容改為</p><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">ARGS="--wallet-dir /home/ethereum/.eth2validators/prysm-wallet-v2 --wallet-password-file /home/ethereum/.eth2validators/prysm-wallet-v2/password.txt"</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">sudo systemctl start prysm-validator</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>要查看各服務的狀態，可以用以下命令</p><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">sudo systemctl status prysm-beacon</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sudo systemctl status prysm-validator</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sudo systemctl status geth.service</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="參考資料">參考資料<a href="#參考資料" class="hash-link" aria-label="Direct link to 參考資料" title="Direct link to 參考資料">​</a></h2><ul><li>[1]<!-- --> Eth2 launchpad onboarding <a href="https://docs.prylabs.network/docs/testnet/medalla/" target="_blank" rel="noopener noreferrer">https://docs.prylabs.network/docs/testnet/medalla/</a></li><li>[2]<!-- --> eth2 validator launchpad <a href="https://blog.ethereum.org/2020/07/27/eth2-validator-launchpad/" target="_blank" rel="noopener noreferrer">https://blog.ethereum.org/2020/07/27/eth2-validator-launchpad/</a></li><li>[3]<!-- --> <a href="https://github.com/metanull-operator/eth2-ubuntu#make-validator-deposits-and-install-keys" target="_blank" rel="noopener noreferrer">https://github.com/metanull-operator/eth2-ubuntu#make-validator-deposits-and-install-keys</a></li><li>[4]<!-- --> scp 指令用法 <a href="https://blog.gtwang.org/linux/linux-scp-command-tutorial-examples/" target="_blank" rel="noopener noreferrer">https://blog.gtwang.org/linux/linux-scp-command-tutorial-examples/</a></li><li>[5]<!-- --> Guide to Staking on Ethereum 2.0 (Ubuntu/Medalla/Prysm) <a href="https://medium.com/@SomerEsat/guide-to-staking-on-ethereum-2-0-ubuntu-medalla-prysm-4d2a86cc637b" target="_blank" rel="noopener noreferrer">https://medium.com/@SomerEsat/guide-to-staking-on-ethereum-2-0-ubuntu-medalla-prysm-4d2a86cc637b</a></li></ul>]]></content>
        <category label="ethereum" term="ethereum"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[沒時間了，快上車！在家跑 Ethereum 2.0 驗證節點]]></title>
        <id>https://blog.gasolin.idv.tw/crypto/prepare-for-eth2</id>
        <link href="https://blog.gasolin.idv.tw/crypto/prepare-for-eth2"/>
        <updated>2020-07-04T17:06:46.000Z</updated>
        <summary type="html"><![CDATA[以太坊 (Ethereum)作為 2014 年才開始區塊鏈的專案，近年發展迅速，眾多在以太坊上的活動讓目前的每秒交易速度(~13 TPS)已不符所需。經過多年的實驗與討論，以太坊 (Ethereum) 的下一代 Ethereum 2.0 路線圖也已經越來越清晰。]]></summary>
        <content type="html"><![CDATA[<p><a href="https://zh.wikipedia.org/zh-tw/%E4%BB%A5%E5%A4%AA%E5%9D%8A" target="_blank" rel="noopener noreferrer">以太坊 (Ethereum)</a>作為 2014 年才開始區塊鏈的專案，近年發展迅速，眾多在以太坊上的活動讓目前的每秒交易速度 (~13 TPS) 已不符所需。經過多年的實驗與討論，以太坊 (Ethereum) 的下一代 <a href="https://www.blocktempo.com/the-state-of-eth2-june-2020/" target="_blank" rel="noopener noreferrer">Ethereum 2.0 路線圖</a>也已經越來越清晰。</p><p>目前以太坊 (Ethereum) 2.0 即將進展至 Phase 0 階段。在此階段以太坊 1.0 和 2.0 的網路將並存。直到發展到 Phase 1.5 階段，1.0 網路將會融合進 2.0 網路。隨著時間接近，2.0 測試網路與多種驗證節點的測試版也陸續釋出，網路上已有許多經驗可參考，正是嘗試的好時機。</p><p>這邊略過各種基礎介紹，直接從如何運行以太坊 (Ethereum) 2.0 的驗證節點開始。</p><p>如果覺得這篇文章有用，歡迎傳送小費到 0xfDa995Eb398750319a2D5E8A4766c02e54db24b8</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="快速入門-硬體需求">快速入門 (硬體需求)<a href="#快速入門-硬體需求" class="hash-link" aria-label="Direct link to 快速入門 (硬體需求)" title="Direct link to 快速入門 (硬體需求)">​</a></h2><ul><li>驗證節點需要 24 小時運作（可短時間離線）</li><li>Passmark CPU Mark (x86, ARM) 分數至少 4000 分</li><li>至少 512G 的 SSD</li><li>運作期間會長期佔用 300k bps 左右的網路頻寬</li></ul><p>在<a href="https://www.facebook.com/groups/taipei.ethereum.meetup/permalink/1435541646639005/" target="_blank" rel="noopener noreferrer">參考相關文章，並考慮整體成本</a>後，我選擇樹莓派 4 代 (Raspberry Pi 4) 4GB 版當作主機，搭配 512G 的 USB 介面外接 SSD 來跑驗證節點 (總能耗 = 機器本身最高耗能 5V * 3A = 15W，再加上家用路由器要一直開著著的能耗。樹莓派 4 一般能耗應該在 5~9W 之間)。</p><p>神奇的是，需要的硬體竟然在 PCHome 就可以一次買齊 😎
<img loading="lazy" src="https://i.imgur.com/XvSUG8i.png" alt="Imgur" class="img_ev3q"></p><p>(我已有 16G+ SD 卡，SD 卡讀卡機，HDMI 外接螢幕，USB 外接鍵盤)，林林總總必要成本大概在 7000 元內。</p><p>參考 ETH 2 stacking 的即時回報率 <a href="https://beaconcha.in/calculator" target="_blank" rel="noopener noreferrer">https://beaconcha.in/calculator</a> ，這個配置大概只要跑 3 個月，硬體跟電費的部分就可以回本了。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="快速入門-軟體需求">快速入門 (軟體需求)<a href="#快速入門-軟體需求" class="hash-link" aria-label="Direct link to 快速入門 (軟體需求)" title="Direct link to 快速入門 (軟體需求)">​</a></h2><p>驗證節點需要</p><ol><li>參考 Ethereum 1.0 的區塊鏈節點</li><li>同步 Ethereum 2.0 Beacon 鏈</li><li>運行 Ethereum 2.0 的 Validator（驗證者節點）</li></ol><p>因此軟體中需要包含</p><div class="mermaid" data-mermaid-src="graph LR
  U[Ubuntu 20.04] --> C(Ethereum 1 Chain, 不挖礦, Geth)
  U --> B(Ethereum 2 Beacon Chain, Prysm)
  U --> V(Ethereum 2 Validator, Prysm)">graph LR
  U[Ubuntu 20.04] --&gt; C(Ethereum 1 Chain, 不挖礦, Geth)
  U --&gt; B(Ethereum 2 Beacon Chain, Prysm)
  U --&gt; V(Ethereum 2 Validator, Prysm)</div><p>硬體準備好後，若想要快速開始體驗，可以參考 <a href="https://github.com/diglos/pi-gen/tree/ethraspbian2.0/" target="_blank" rel="noopener noreferrer">EthereumOnARM</a> 專案提供的 <a href="https://www.reddit.com/r/ethereum/comments/hhvi2r/ethereum_on_arm_new_eth20_raspberry_pi_4_image/" target="_blank" rel="noopener noreferrer">ROM 版本</a>
或是參考他的<a href="https://github.com/diglos/pi-gen/tree/ethraspbian2.0/stage2" target="_blank" rel="noopener noreferrer">腳本</a>來設定（請留意使用他人包好的 ROM 的風險）。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="快速入門-軟體設定">快速入門 (軟體設定)<a href="#快速入門-軟體設定" class="hash-link" aria-label="Direct link to 快速入門 (軟體設定)" title="Direct link to 快速入門 (軟體設定)">​</a></h2><blockquote><p>把 SD 卡燒好，路由器上開 13000/30303 port forwarding，接上網路，就自動裝好自動跑。</p></blockquote><h3 class="anchor anchorWithStickyNavbar_LWe7" id="1-燒-rom">1. 燒 ROM<a href="#1-燒-rom" class="hash-link" aria-label="Direct link to 1. 燒 ROM" title="Direct link to 1. 燒 ROM">​</a></h3><p>下載好 EthereumOnARM ROM 之後，在電腦上使用 balena Etcher 等燒錄軟體，將 ROM 燒錄到 SD 卡中。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="2-設定機器">2. 設定機器<a href="#2-設定機器" class="hash-link" aria-label="Direct link to 2. 設定機器" title="Direct link to 2. 設定機器">​</a></h3><p>將網路線接到樹莓派 4 上，插入燒好 ROM 的 SD 卡，並將外接 SSD 插到藍色的 USB 接口上。
通上電源後，即會自動開機並執行所有的設定（系統調整，格式化 SSD，安裝所需程式）。</p><p>出現登入提示後以 ethereum/ethereum 登入。
登入後可以使用命令 <code>hostname -I</code> 查看機器目前分配到的 IP。</p><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ hostname -I</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">192.168.1.123</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="3-查看運作狀態">3. 查看運作狀態<a href="#3-查看運作狀態" class="hash-link" aria-label="Direct link to 3. 查看運作狀態" title="Direct link to 3. 查看運作狀態">​</a></h3><p>這時就可以透過其他設備查看樹莓派 4 的狀態。</p><p>開啟瀏覽器，輸入 http://<!-- -->[ip]<!-- -->:3000 ，使用 admin/ethereum 登入，可以看到以下的監視圖表：</p><p>設備狀態
<img loading="lazy" src="https://i.imgur.com/r7lRWTW.png" alt="Imgur" class="img_ev3q"></p><p>Ethereum 1.0
<img loading="lazy" src="https://i.imgur.com/cllCJXK.png" alt="Imgur" class="img_ev3q"></p><p>Ethereum 2.0 的監視圖表在 Ethereum 1.0 區塊鏈同步完成前，都還不會正常顯示。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="4-設定網路">4. 設定網路<a href="#4-設定網路" class="hash-link" aria-label="Direct link to 4. 設定網路" title="Direct link to 4. 設定網路">​</a></h3><p>打開家用路由器的設定頁面，將樹莓派 4 分配到以上查到的固定內網 IP (如上例就是 <code>192.168.1.123</code>)。</p><p>在 WAN（外部網路）端設定頁面的<code>Port Forwarding</code>，或<code>虛擬伺服器</code>設定中，將以下 port 綁定到樹莓派 4 的內網 IP：</p><ul><li>13000 (TCP)</li><li>12000 (UDP)</li><li>30303 (TCP, UDP)</li></ul><p>這樣從外面傳入這些 port 的封包，就會自動轉傳到樹莓派 4。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="設定驗證者-validator資訊">設定驗證者 (Validator) 資訊<a href="#設定驗證者-validator資訊" class="hash-link" aria-label="Direct link to 設定驗證者 (Validator) 資訊" title="Direct link to 設定驗證者 (Validator) 資訊">​</a></h3><p>在 Ethereum 1.0 區塊鏈同步完後，可以透過遠端連線的方式來連線到樹莓派 4</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">ssh ethereum@192.168.1.123</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>並在瀏覽器上開啟 <a href="https://prylabs.net/participate" target="_blank" rel="noopener noreferrer">https://prylabs.net/participate</a> 參照說明申請（需用以太坊錢包）。</p><p></p><p>申請後如果 validator process 也順利啟動，可以在 Ethereum 2.0 監視圖表中看到 <code>Validator process started</code> 訊息。</p><p><code>Validator Main Info</code>的<code>Status</code>(狀態) 欄位也會變成<code>DEPOSITED</code>(已存入) 狀態。</p><p></p><p>也可以根據你登記的 Validator pubkey，前往 <a href="https://beaconcha.in" target="_blank" rel="noopener noreferrer">https://beaconcha.in</a> 查看 Validator 狀態</p><p>例如 <a href="https://beaconcha.in/validator/30078" target="_blank" rel="noopener noreferrer">https://beaconcha.in/validator/30078</a> 或 <a href="https://beacon.etherscan.io/validator/30078" target="_blank" rel="noopener noreferrer">https://beacon.etherscan.io/validator/30078</a></p><p>經過實際安裝的過程，我們可以看到，以太坊 2.0 的相關工具生態已經初步搭建起來了。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="運作之後">運作之後<a href="#運作之後" class="hash-link" aria-label="Direct link to 運作之後" title="Direct link to 運作之後">​</a></h2><p>恭喜你已經上車了！🤑</p><p>同時，你也應該要知道，你放了 32ETH （現價 7000 + 美金）在以太坊 2.0 的網路上，一兩年的時間內無法取回到以太坊 1.0 網路上使用。</p><p>......😲😱😡🤬!!!</p><p>還好，現在跑的還只是測試網路，放的不是真的 ETH 😜。</p><p>這時候，是不是更應該仔細查看一下當前 <a href="https://github.com/ethereum/eth2.0-specs/tree/dev/specs/phase0" target="_blank" rel="noopener noreferrer">Ethereum 2.0 的說明書</a> (Spec) 是不是合理？</p><p>在驗證截短運作的過程中，一旦遇到網路、機器當機等各種斷線情況時，<a href="https://github.com/ethereum/eth2.0-specs/blob/dev/specs/phase0/validator.md#how-to-avoid-slashing" target="_blank" rel="noopener noreferrer">Ethereum 2.0 網路會怎麼處理</a>？</p><p>文末加註警語：</p><p><strong>可以用文中建議的配置，用較低成本在測試網路體驗看看。但若為了投資而做，請詳閱說明書！</strong></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="其他軟體設定選擇">其他軟體設定選擇<a href="#其他軟體設定選擇" class="hash-link" aria-label="Direct link to 其他軟體設定選擇" title="Direct link to 其他軟體設定選擇">​</a></h3><p>可以參考已有一些手動安裝教學如</p><ul><li></li><li></li></ul><p>教你從 Ubuntu 20.04 開始從頭裝。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="其他的硬體選擇">其他的硬體選擇<a href="#其他的硬體選擇" class="hash-link" aria-label="Direct link to 其他的硬體選擇" title="Direct link to 其他的硬體選擇">​</a></h2><p>可以參考 <a href="https://www.reddit.com/r/ethstaker/comments/ggmbvd/a_comprehensive_look_at_hardware_for_staking/" target="_blank" rel="noopener noreferrer">https://www.reddit.com/r/ethstaker/comments/ggmbvd/a_comprehensive_look_at_hardware_for_staking/</a></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="參考資料">參考資料<a href="#參考資料" class="hash-link" aria-label="Direct link to 參考資料" title="Direct link to 參考資料">​</a></h2><ul><li>可以前往 <a href="https://www.reddit.com/r/ethstaker/" target="_blank" rel="noopener noreferrer">https://www.reddit.com/r/ethstaker/</a> 查看 Eth 2.0 Stacking 相關討論</li><li>EthereumOnARM 的 Github Repo <a href="https://github.com/diglos/pi-gen/tree/ethraspbian2.0/" target="_blank" rel="noopener noreferrer">https://github.com/diglos/pi-gen/tree/ethraspbian2.0/</a></li><li>我第一次安裝的 ROM 版本
<a href="https://www.reddit.com/r/ethereum/comments/gf3nhg/ethereum_on_arm_raspberry_pi_4_images_release/" target="_blank" rel="noopener noreferrer">https://www.reddit.com/r/ethereum/comments/gf3nhg/ethereum_on_arm_raspberry_pi_4_images_release/</a></li><li>用 Windows 10 或 Mac OS 架 <a href="https://kb.beaconcha.in/tutorial-eth2-multiclient" target="_blank" rel="noopener noreferrer">https://kb.beaconcha.in/tutorial-eth2-multiclient</a></li><li>Prysm 的 Issue Tracker <a href="https://github.com/prysmaticlabs/prysm/issues" target="_blank" rel="noopener noreferrer">https://github.com/prysmaticlabs/prysm/issues</a></li></ul>]]></content>
        <category label="ethereum" term="ethereum"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[我用 JoyCon 手把，提升工作生產力]]></title>
        <id>https://blog.gasolin.idv.tw/life/joycon</id>
        <link href="https://blog.gasolin.idv.tw/life/joycon"/>
        <updated>2020-04-22T16:25:46.000Z</updated>
        <summary type="html"><![CDATA[這篇也可以叫「如何使用 JoyCon 作為鍵盤/滑鼠快捷鍵來輔助工作」。]]></summary>
        <content type="html"><![CDATA[<p>這篇也可以叫「如何使用 JoyCon 作為鍵盤 / 滑鼠快捷鍵來輔助工作」。</p><p></p><p>在看「<a href="https://www.youtube.com/watch?v=f6B_jJRWung" target="_blank" rel="noopener noreferrer">日本 YouTuber 的包裡面有什麼？</a>」影片時，發現這個 Youtuber 隨身背包裡竟然會放一個 JoyCon (L)，在剪片時當作快速鍵使用。</p><p>這真是有趣的想法。將大家手上都有 Switch（？）手把，延伸做更多用途。
仔細數一數，單邊 JoyCon 就有共 15 個鍵 (搖桿上下左右，壓下（L），方向鍵上下左右，截圖鍵，L1, L2 兩個肩鍵，減號鍵，側邊 2 個小肩鍵) 可供使用！</p><p>要將 JoyCon 連線到 Macbook 相當容易，打開藍牙偏好設定，然後按 JoyCon (Ｌ) 側邊的配對鍵 (單邊手把兩個黑鍵之間，凹下去的那個) 即可配對。</p><p>我下載了<a href="https://yukkurigames.com/enjoyable/" target="_blank" rel="noopener noreferrer">enjoyable</a>程式（可以用 brew 安裝），打開就可以抓到手把。按下對應的按鍵時，按下的按鍵就會出現在視窗左側。這時可以在右側的畫面中設定按鍵對應的行為（可設定包含鍵盤按鍵，滑鼠，滑鼠按鍵，滑鼠捲動等事件）。</p><p></p><p>我的初步手把配對設定：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">搖桿上下左右：滑鼠方向</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">方向鍵上下左右：鍵盤方向鍵上下左右</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">壓下（L)：滑鼠左鍵</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">減號鍵：滑鼠左鍵</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">截圖鍵：滑鼠右鍵</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">L1：鍵盤Ctrl鍵</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">L2：鍵盤Ctrl鍵</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">側邊2個小肩鍵：滑鼠上/下捲動(向下捲動速度慢，向上捲動速度快)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>我目前嘗試的用法：</p><ol><li>模擬滑鼠捲動螢幕：用左右肩鍵捲動螢幕</li><li>模擬滑鼠使用：用搖桿移動，用減號鍵，截圖鍵模擬滑鼠左右鍵。</li><li>在虛擬桌面間切換：按著 L1 (Ctrl) 的同時，按左，右方向鍵切換螢幕</li><li>用方向鍵快速跳轉 Youtube 影片</li></ol><p>在使用時，還可以裝上黑色的肩鍵吊帶，掛在左手上以便隨時拿來使用。</p><p>JoyCon 還可以怎麼用在日常 / 工作中哩？歡迎分享你的配置或用法。</p>]]></content>
        <category label="devhack" term="devhack"/>
        <category label="life" term="life"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[如何抓別人的 Pull Request]]></title>
        <id>https://blog.gasolin.idv.tw/devtools/github-pull-request</id>
        <link href="https://blog.gasolin.idv.tw/devtools/github-pull-request"/>
        <updated>2020-04-14T22:10:46.000Z</updated>
        <summary type="html"><![CDATA[Github 提供了「Pull Request」這種方便所有人先行審閱程式碼，在整併(merge)回各分支的方式。]]></summary>
        <content type="html"><![CDATA[<p>Github 提供了「Pull Request」這種方便所有人先行審閱程式碼，在整併 (merge) 回各分支的方式。
有時候也會想先將程式碼下載回來執行看看效果。
目前我會使用的有兩種方式：</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="使用-diff">使用 diff<a href="#使用-diff" class="hash-link" aria-label="Direct link to 使用 diff" title="Direct link to 使用 diff">​</a></h2><p>想要下載別人提交的程式，可以在 Pull Request 頁面網址後直接加上<code>.diff</code>，就會出現文字版的 diff 檔。</p><p>執行 <code>git apply 1234.diff</code> 即可使用；
測試完可執行<code>git apply -R 1234.diff</code>回復原狀。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="使用-bash">使用 bash<a href="#使用-bash" class="hash-link" aria-label="Direct link to 使用 bash" title="Direct link to 使用 bash">​</a></h2><p>在 <code>~/.bash_profile</code> 建立以下命令</p><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">pr() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  git fetch upstream pull/$1/head:pr-$1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  git checkout pr-$1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>初次使用時需執行 <code>source ~/.bash_profile</code> 或重開命令行。</p><p>之後只要執行 <code>pr 1234</code> (1234 是 Pull Request 的編號)，就會自動抓取對應的 Pull Request 並切換到相應的<code>pr-1234</code>分支。</p><p>這邊有<a href="https://gist.github.com/gasolin/4f2555f5a241630365896bb26a8f1f5b" target="_blank" rel="noopener noreferrer">範例程式</a> 供參考。</p>]]></content>
        <category label="git" term="git"/>
        <category label="devhack" term="devhack"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[我如何做個人自動化紀錄-2020版]]></title>
        <id>https://blog.gasolin.idv.tw/life/personal-automation-in-2020</id>
        <link href="https://blog.gasolin.idv.tw/life/personal-automation-in-2020"/>
        <updated>2020-04-04T15:00:29.000Z</updated>
        <summary type="html"><![CDATA[2017年開始紀錄自己使用的自動化紀錄工具。]]></summary>
        <content type="html"><![CDATA[<p>2017 年開始紀錄自己使用的自動化紀錄工具。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="為什麼要做個人自動化紀錄">為什麼要做個人自動化紀錄？<a href="#為什麼要做個人自動化紀錄" class="hash-link" aria-label="Direct link to 為什麼要做個人自動化紀錄？" title="Direct link to 為什麼要做個人自動化紀錄？">​</a></h2><p>有人會問，Facebook/Twitter 不就可以記錄大小事了嗎？如果會這麼回答，那就實在太天真了😏 。FB 上也許包含了自己覺得值得分享的事，但生活中還有諸多事情值得記錄，而不適合與大眾分享。</p><p>或是想整理過去公開紀錄，造訪過去使用過的社交平台（Plurk, Google+, Blogger）已非常難以找出過去的隨筆或評論。</p><p>擁有自己的一份完整數位化生活記錄，是我持續的個人目標之一。要達成這個目標，需要藉助一些自動化紀錄工具，好讓整個過程變得自然而不困難。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="混用多種工具">混用多種工具<a href="#混用多種工具" class="hash-link" aria-label="Direct link to 混用多種工具" title="Direct link to 混用多種工具">​</a></h2><p>沒有一個工具可以滿足方方面面的需求。因此比較實際的方式，是混用多種工具以達成目標。
幸好，自動化的目標就是讓事情更少需要經過人工處理，因此各種工具設定好之後，期待他們能自動運作，只要定期維護檢視就好。</p><p>手機上透過 Automate，
網路服務透過 IFTTT 和 Integromat，將各種服務整合起來使用。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="即時資訊自動化">即時資訊自動化<a href="#即時資訊自動化" class="hash-link" aria-label="Direct link to 即時資訊自動化" title="Direct link to 即時資訊自動化">​</a></h2><p>透過 Google SpreadSheet 和 Integromat，取得自己關注的資訊。</p><p>10 月：重新部署了基於<a href="https://github.com/gasolin/saihubot/" target="_blank" rel="noopener noreferrer">saihubot</a>的<a href="http://gasolin.idv.tw/g" target="_blank" rel="noopener noreferrer">小 g 網頁聊天機器人</a>，將一些即時查詢類的動作寫成網頁可即時取得版。可以輸入<code>help</code>參考看看當下可以處理的命令。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="integromat">Integromat<a href="#integromat" class="hash-link" aria-label="Direct link to Integromat" title="Direct link to Integromat">​</a></h3><p>透過使用 LASS API ， 當附近 PM2.5 超過 35.4 (不良) 時手機推送訊息給我。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="手機自動化">手機自動化<a href="#手機自動化" class="hash-link" aria-label="Direct link to 手機自動化" title="Direct link to 手機自動化">​</a></h2><ul><li>透過<a href="https://play.google.com/store/apps/details?id=com.llamalab.automate" target="_blank" rel="noopener noreferrer">Automate</a> App
  * <a href="/tools/automate-skip-ad">Youtube 自動點選略過廣告按鈕 (Android)</a><ul><li>手機連線到藍芽耳機時，自動開啟指定的 App 播放。</li></ul></li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="照片自動化備份--">照片自動化備份 📷 <a href="#照片自動化備份--" class="hash-link" aria-label="Direct link to 照片自動化備份 📷 " title="Direct link to 照片自動化備份 📷 ">​</a></h2><ul><li><a href="http://www.dropbox.com/" target="_blank" rel="noopener noreferrer">Dropbox</a>, 自動從手機上傳照片</li><li>Google 相簿，充電時自動從手機備份照片到 Google 雲端</li><li>NAS (Synnalogy), 透過<code>Cloud Sync</code>從 Dropbox 同步照片。</li></ul><div class="mermaid" data-mermaid-src="graph LR
User -- take photo --> Phone
cam --> Phone
Phone -.-> Dropbox
Phone -.-> gphoto[Google Photo]
Dropbox -.-> NAS">graph LR
User -- take photo --&gt; Phone
cam --&gt; Phone
Phone -.-&gt; Dropbox
Phone -.-&gt; gphoto[Google Photo]
Dropbox -.-&gt; NAS</div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="運動自動化紀錄-️-">運動自動化紀錄 🚶‍♂️ <a href="#運動自動化紀錄-️-" class="hash-link" aria-label="Direct link to 運動自動化紀錄 🚶‍♂️ " title="Direct link to 運動自動化紀錄 🚶‍♂️ ">​</a></h2><ul><li>記步，睡眠紀錄：小米手環 5</li><li>體重：小米體重計</li></ul><p>再透過小米運動 App 同步到 Google Fit</p><div class="mermaid" data-mermaid-src="graph LR
User -- 記步 --> 小米運動App
User -- 量體重 --> 小米體脂計
小米體脂計 -.-> 小米運動App
小米運動App -.-> fit[Google Fit]">graph LR
User -- 記步 --&gt; 小米運動App
User -- 量體重 --&gt; 小米體脂計
小米體脂計 -.-&gt; 小米運動App
小米運動App -.-&gt; fit[Google Fit]</div><p>行走目標為每天 4000 步。</p><hr><h2 class="anchor anchorWithStickyNavbar_LWe7" id="生活事件自動化紀錄">生活事件自動化紀錄<a href="#生活事件自動化紀錄" class="hash-link" aria-label="Direct link to 生活事件自動化紀錄" title="Direct link to 生活事件自動化紀錄">​</a></h2><p>延續<a href="/life/LifeLog-via-IFTTT">用 IFTTT 做自動生活紀錄</a>這篇的思路，我把看過的書籍、電影，喜歡的 Youtube 影片，貼過的文章，每日完成的事項都記錄到 Google 日曆中，以方便之後回顧。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="自動閱讀觀看紀錄--">自動閱讀 / 觀看紀錄 📚 <a href="#自動閱讀觀看紀錄--" class="hash-link" aria-label="Direct link to 自動閱讀 / 觀看紀錄 📚 " title="Direct link to 自動閱讀 / 觀看紀錄 📚 ">​</a></h3><p>對於電影，我使用 RSS + IFTTT + Google Calendar 來自動紀錄。當我在豆瓣上修改狀態，豆瓣的 RSS 也跟著改變，這時 IFTTT 會將 RSS 中的新事項紀錄到 Google 日曆上。
對於 Youtube 上 like 的影片，Facebook 或 Twitter 上新貼的文章，也會透過 IFTTT 紀錄到 Google 日曆上。</p><div class="mermaid" data-mermaid-src="graph LR
User -- add movie --> Douban
User -- post --> Blog
Blog -.-> RSS
Douban -.-> RSS
RSS -.-> IFTTT
IFTTT -.-> gcal[Google Calendar]">graph LR
User -- add movie --&gt; Douban
User -- post --&gt; Blog
Blog -.-&gt; RSS
Douban -.-&gt; RSS
RSS -.-&gt; IFTTT
IFTTT -.-&gt; gcal[Google Calendar]</div><p>透過 RSS 轉 IFTTT 紀錄</p><div class="mermaid" data-mermaid-src="graph LR
User -- like --> Youtube
User -- post --> Facebook
User -- post --> Twitter
Youtube -.-> IFTTT
Facebook -.-> IFTTT
Twitter -.-> IFTTT
IFTTT -.-> gcal[Google Calendar]">graph LR
User -- like --&gt; Youtube
User -- post --&gt; Facebook
User -- post --&gt; Twitter
Youtube -.-&gt; IFTTT
Facebook -.-&gt; IFTTT
Twitter -.-&gt; IFTTT
IFTTT -.-&gt; gcal[Google Calendar]</div><p>直接透過 IFTTT 紀錄</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="自動紀錄每日完成的事項--">自動紀錄每日完成的事項 📓 <a href="#自動紀錄每日完成的事項--" class="hash-link" aria-label="Direct link to 自動紀錄每日完成的事項 📓 " title="Direct link to 自動紀錄每日完成的事項 📓 ">​</a></h3><p>使用 Todoist + IFTTT + Google Calendar 即可達成自動紀錄。
我在 Google Calendar 上使用一個單獨的日曆 (<code>成功日記</code>) 來紀錄每日完成的事項。
讀完一本書的時候，也是透過完成 todoist 上對應的待辦事項，顯示在日曆上。</p><div class="mermaid" data-mermaid-src="graph LR
User -- checked --> Todoist
Todoist -.-> IFTTT
IFTTT -.-> gcal[Google Calendar]">graph LR
User -- checked --&gt; Todoist
Todoist -.-&gt; IFTTT
IFTTT -.-&gt; gcal[Google Calendar]</div><p>| 我其實非常少開 Google 日曆，所以目前這樣的設定其實重複回去察看的機會也不高（目前我會手動紀錄在實體筆記本或 joplin 的每週紀錄上）。看看之後有什麼契機可以改進。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="紀錄看過或待看的網頁--">紀錄看過或待看的網頁 🌐 <a href="#紀錄看過或待看的網頁--" class="hash-link" aria-label="Direct link to 紀錄看過或待看的網頁 🌐 " title="Direct link to 紀錄看過或待看的網頁 🌐 ">​</a></h3><p>我會將待看的文章搜集到 Pocket。</p><p>除了瀏覽 Facebook 或 Twitter 上的文章，我也使用 Feedly 訂閱一些自己挑選過的網站。並將 Feedly 設定成當我做標記時，就將本篇文章轉存到 Pocket 稍候閱讀列表，我可以掃過 Feedly 列表，標記感興趣的新聞，稍後再到 Pocket 閱讀。</p><p>這樣讓我在看到文章連結當下不需急著看完整篇文章，而是在有空閒的時候才閱讀這些文章。</p><p>我唯一的待辦事項收件夾是 Todoist，若看到值得閱讀 (紀錄) 的網頁，桌面上我使用瀏覽器的<code>Pocket</code>外掛插件 (Firefox 瀏覽器內建)，將待看網頁記錄到 Pocket 中。</p><p>在手機上直接使用 Todoist 和 Pocket 等 App，達到一樣的效果。</p><p>若在 Pocket 中覺得這個文章打星星收藏，則記錄到 Google 日曆中。</p><div class="mermaid" data-mermaid-src="graph LR
Feedly --> Pocket
Browser --> addon[Pocket addon + tag]
addon --> Pocket
pocket --star--> IFTTT
IFTTT -.-> gcal[Google Calendar]">graph LR
Feedly --&gt; Pocket
Browser --&gt; addon[Pocket addon + tag]
addon --&gt; Pocket
pocket --star--&gt; IFTTT
IFTTT -.-&gt; gcal[Google Calendar]</div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="文章更新時自動提醒--">文章更新時自動提醒 ⏰ <a href="#文章更新時自動提醒--" class="hash-link" aria-label="Direct link to 文章更新時自動提醒 ⏰ " title="Direct link to 文章更新時自動提醒 ⏰ ">​</a></h3><p>有些網站並未提供 RSS 訂閱，手機上我會使用<a href="https://play.google.com/store/apps/details?id=me.webalert" target="_blank" rel="noopener noreferrer">Web Alert</a>來取得網頁更新提醒 (主要是追小說新章節)。</p><div class="mermaid" data-mermaid-src="graph LR
webalert[Web Alert] --> User
User --> Browser">graph LR
webalert[Web Alert] --&gt; User
User --&gt; Browser</div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="開發工具">開發工具<a href="#開發工具" class="hash-link" aria-label="Direct link to 開發工具" title="Direct link to 開發工具">​</a></h3><h4 class="anchor anchorWithStickyNavbar_LWe7" id="設定自動備份">設定自動備份<a href="#設定自動備份" class="hash-link" aria-label="Direct link to 設定自動備份" title="Direct link to 設定自動備份">​</a></h4><p>使用 VS Code <a href="https://marketplace.visualstudio.com/items?itemName=Shan.code-settings-sync" target="_blank" rel="noopener noreferrer">Settings Sync</a> ，只需剛開始時設定一次，之後可同步各種 VS Code 中的設定與插件。</p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="自動更新">自動更新<a href="#自動更新" class="hash-link" aria-label="Direct link to 自動更新" title="Direct link to 自動更新">​</a></h4><p>盡量使用 brew cask (mac) 命令安裝新軟體，透過<code>brew cask upgrade</code>命令更新。</p><hr><h2 class="anchor anchorWithStickyNavbar_LWe7" id="自動化網站部署--">自動化網站部署 🌐 <a href="#自動化網站部署--" class="hash-link" aria-label="Direct link to 自動化網站部署 🌐 " title="Direct link to 自動化網站部署 🌐 ">​</a></h2><p>目前已使用 Github 來放我的個人網站與部落格，透過與 Travis CI 整合，我所修改的任何內容，在幾分鐘之內都會自動部署到網站上。</p><p>如何做可參考 <a href="/life/make/hello-world">Hello Hexo</a> (個人網站自動化部署) 和 <a href="/devtools/ghpage-auto-deploy">Automatically deploy new commit to github pages via Travis CI</a></p><div class="mermaid" data-mermaid-src="graph LR
master[Github:master]
travis[Travis CI]
ghpages[Github:gh-pages]
User -- commit --> master
master -. auto build .-> travis
travis -.  auto deploy .-> ghpages">graph LR
master[Github:master]
travis[Travis CI]
ghpages[Github:gh-pages]
User -- commit --&gt; master
master -. auto build .-&gt; travis
travis -.  auto deploy .-&gt; ghpages</div><p>| Auto website deploy flow</p><p>一些可以直接運作在瀏覽器的專案 (如 BlocklyDuino 和 Saihubot)，我會直接將 gh-pages 設為預設分支，所有改動直接 push 到這分支中。這樣一有改動即可在網頁上看到更新成果。</p><p>之後考慮使用 Github Action 取代 Travis。</p><hr><h2 class="anchor anchorWithStickyNavbar_LWe7" id="半自動紀錄">半自動紀錄<a href="#半自動紀錄" class="hash-link" aria-label="Direct link to 半自動紀錄" title="Direct link to 半自動紀錄">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="半自動工作紀錄--">半自動工作紀錄 💼 <a href="#半自動工作紀錄--" class="hash-link" aria-label="Direct link to 半自動工作紀錄 💼 " title="Direct link to 半自動工作紀錄 💼 ">​</a></h3><p>透過翻看 Github Pull request + Asana，我可以輕易地將過去一週達成的事項整理出來，再送 PR 到 Github 上。
也可以說這塊目前只能算半自動化地列出過去事項列表，可以再繼續改進。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="定期回顧與整理">定期回顧與整理<a href="#定期回顧與整理" class="hash-link" aria-label="Direct link to 定期回顧與整理" title="Direct link to 定期回顧與整理">​</a></h3><p>我在 Joplin 中增加一個<code>Template</code>項目，裡面放了周檢視 / 月檢視 / 季檢視 / 年檢視樣板。</p><p>在 Todoist 中透過重複時間設定，每段時間自動提醒該做檢視了。</p><p>撰寫本文的目的之一，也是讓我有回顧我的自動化運作的機會。</p><p>回顧：之前的設定達成率很低。現在採用新的組織代辦事項方法與樣板，簡化了檢視的困難度。目前有效的提升了定期回顧的頻率。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="照片備份規則">照片備份規則<a href="#照片備份規則" class="hash-link" aria-label="Direct link to 照片備份規則" title="Direct link to 照片備份規則">​</a></h3><p>由於 Dropbox 空間有限，會不定期將 Dropbox 上的照片移動到到 NAS 上按年月份分類的<code>photo/</code>資料夾.</p><p>我的照片並不算多，但若有出遊的月份通常照片會暴增。所以我的基本備份規則是依年份，並以雙月份命名資料夾，若是當月有重大活動則直接在檔名中標注。
例如 2016 年的照片資料夾裡會有<code>2016_10_11</code>，或是<code>2016_06_london</code>這樣的命名。</p><p>在整理照片的時候，每當遇到特別喜歡的，我會另存到 Dropbox 中的一個依年份歸檔的資料夾，例如 2017 年的精彩照片我會另存到 <code>dropbox/spot/2017</code>資料夾中，這樣隨時可以找出來欣賞。</p><p>另外每年累積的一些螢幕截圖，也放在當年度的<code>screenshots</code>資料夾裡。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="清理rss-feed">清理 RSS Feed<a href="#清理rss-feed" class="hash-link" aria-label="Direct link to 清理 RSS Feed" title="Direct link to 清理 RSS Feed">​</a></h3><p>透過 Feedly 訂閱 RSS Feed 太容易，但是不小心每天收到的新聞量就遠高於自己能吸收的量，這時可以到
<a href="https://feedly.com/i/organize/my" target="_blank" rel="noopener noreferrer">https://feedly.com/i/organize/my</a> 把那些失效的連結清掉，並快速檢視一下現在仍在訂閱的網站，是否還對這些主題感興趣。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="手動紀錄">手動紀錄<a href="#手動紀錄" class="hash-link" aria-label="Direct link to 手動紀錄" title="Direct link to 手動紀錄">​</a></h2><p>為了平衡日常太依靠電子產品的趨向，前年開始就嘗試使用<code>實體筆記本</code>作一些紀錄，2018 一月中開始嘗試養成更頻繁地使用<code>實體筆記本</code>的習慣。在幾經調整後，目前我使用 B5 方格筆記本做基礎，搭配不同的魔擦筆來作筆記。實體筆記本的好處是除了一般的紀錄，還可以隨意畫心智圖，黏照片，貼紙，蓋印章等。參考各種筆記術書籍，我在每本筆記本前幾頁會空出<code>索引</code>區，將筆記本內容索引起來，以便之後查找。</p><p>我在 Joplin 中增加一個<code>2020年計畫</code>的文件，保存當年度的周 / 月 / 季度紀錄和定期回顧。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="參考資料">參考資料<a href="#參考資料" class="hash-link" aria-label="Direct link to 參考資料" title="Direct link to 參考資料">​</a></h2><ul><li></li><li></li></ul>]]></content>
        <category label="web" term="web"/>
        <category label="mobile" term="mobile"/>
        <category label="automation" term="automation"/>
        <category label="life" term="life"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[廚房省時小工具]]></title>
        <id>https://blog.gasolin.idv.tw/life/kitchen-hack</id>
        <link href="https://blog.gasolin.idv.tw/life/kitchen-hack"/>
        <updated>2020-04-04T14:33:51.000Z</updated>
        <summary type="html"><![CDATA[在家工作近兩年，偶爾也會自己煮飯。而現在疫情正熾，更是有意識的提高每週在家煮飯的次數。]]></summary>
        <content type="html"><![CDATA[<p>在家工作近兩年，偶爾也會自己煮飯。而現在疫情正熾，更是有意識的提高每週在家煮飯的次數。
在廚房自己煮午餐，要考慮的除了要能較快地處理食物，也要考慮後續的收拾碗盤的功夫。若是能透過一些工具節省在烹飪過程中的時間或精力，也有助於在午休時間後，能更游刃有餘的處理下午的工作。</p><p>在此推薦幾個可以節省時間的小物：</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="洗水槽濾網">洗水槽濾網<a href="#洗水槽濾網" class="hash-link" aria-label="Direct link to 洗水槽濾網" title="Direct link to 洗水槽濾網">​</a></h2><p>覺得最不可或缺的小確幸商品，就是洗水槽濾網。
洗完碗要清水槽的時候，有了濾網只需要輕輕的收起來丟到垃圾桶裡就解決了，真的讓幸福感提昇了一個臺階。</p><p></p><p>朋友也建議可以在裝濾網前，在洗水槽裡放個一塊錢銅板，然後再裝上濾網。這樣能利用銅離子讓不鏽鋼的部分也保持清潔。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="附開關插座">附開關插座<a href="#附開關插座" class="hash-link" aria-label="Direct link to 附開關插座" title="Direct link to 附開關插座">​</a></h2><p>將電鍋插頭插到附開關的插座上，每次蒸完東西不用拔電線（不拔電線的話，電鍋會一直保持保溫的狀態），只要關掉插座開關就好。</p><p>花 99 塊錢就可以將電鍋升級，非常划算。</p><p></p><p>也可以將附開關的插座換成定時插座。晚上睡前將米和水放到電鍋裡，將電鍋調到<code>煮飯</code>，設定好定時開關，早上就有熱騰騰的粥可以吃了。</p>]]></content>
        <category label="life" term="life"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[保護你的帳號安全 - 使用密碼管理軟體]]></title>
        <id>https://blog.gasolin.idv.tw/life/password_manager</id>
        <link href="https://blog.gasolin.idv.tw/life/password_manager"/>
        <updated>2020-02-29T12:35:46.000Z</updated>
        <summary type="html"><![CDATA[現代社會已經漸漸將現實與網上的生活融合在一起，透過網路上的各種服務，讓我們在現實生活中也過上了更方便的日子。]]></summary>
        <content type="html"><![CDATA[<p>現代社會已經漸漸將現實與網上的生活融合在一起，透過網路上的各種服務，讓我們在現實生活中也過上了更方便的日子。</p><p>我們在網路上使用了許多的服務。為了使用各式各樣的服務，需要創立各自的帳號與密碼。這些帳號與密碼，代表了我們在網路上的身份。帳號背後保護的，是你所有的交友情況，來往郵件，銀行的存款，甚或手頭股票，加密貨幣資產的狀況。</p><p>這些帳號當然也需要更重視起來。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="網路服務不安全">網路服務不安全<a href="#網路服務不安全" class="hash-link" aria-label="Direct link to 網路服務不安全" title="Direct link to 網路服務不安全">​</a></h2><p>即使再歡迎的網路服務也是有可能洩漏你的帳號與密碼，只要在 <a href="https://haveibeenpwned.com/" target="_blank" rel="noopener noreferrer">Have I been pwned</a> 網站輸入你的 Email，就可以知道你的密碼已經在多少網站上被洩露。
研究也顯示最多人使用的，竟然是 12345 等簡單的一串數字密碼。</p><p>歷年來也已經有許多的報告與研究，說明人們是多麼的不擅長記憶密碼。</p><p>因此理想上每個服務都使用不同的密碼，這樣其中一個服務上的帳號密碼就算被洩露了，損害也在可控範圍內。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="改善記憶密碼的方式">改善記憶密碼的方式<a href="#改善記憶密碼的方式" class="hash-link" aria-label="Direct link to 改善記憶密碼的方式" title="Direct link to 改善記憶密碼的方式">​</a></h2><p>最簡單的記憶密碼方式之一，是取對一段對自己有意義的詞語，例如取一段詩句作為密碼，或是使用熟悉的輸入法編碼，但直接用英文鍵盤輸入（如用英文鍵盤輸入<code>發大財</code>的注音編碼 -&gt; <code>z8284h96</code>）。</p><p>在註冊或登錄新服務時，使用 Google 與 Facebook 帳號來或是快速的註冊，可以讓整個過程變得更簡單，也更安全。</p><p>但是無可避免的，還是有許多的服務，例如銀行 (錢) 或是 Google（資料），Github（公司 / 私人程式碼）帳號，需要有獨自的帳號與密碼。而保護這些帳號與密碼，就成了在數位生活中，保護我們重要資產的方式。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="密碼管理軟體">密碼管理軟體<a href="#密碼管理軟體" class="hash-link" aria-label="Direct link to 密碼管理軟體" title="Direct link to 密碼管理軟體">​</a></h2><p>我更推薦的方式，是使用<code>密碼管理軟體</code>來管理諸多的帳號與密碼。</p><p>現在密碼管理軟體的選擇眾多，大部分兼顧了安全性與易用性。除了提供 App 和瀏覽器外掛程式之外，只需記憶登錄密碼管理軟體的這一組密碼，密碼管理軟體就能夠協助你管理所有的密碼。</p><p>因為你除了主要的這組密碼之外，不需要再記憶個別網絡服務的密碼，因此你可以為每個網站使用不同的密碼，也可以透過密碼管理工具裡面附的密碼產生器，來產生包含英文大小寫字母 + 數字的複雜密碼。</p><p>常見的幾種密碼管理軟體如 <a href="https://1password.com/zh-tw/" target="_blank" rel="noopener noreferrer">1Password</a>, <a href="https://www.lastpass.com/" target="_blank" rel="noopener noreferrer">LastPass</a>, <a href="https://bitwarden.com/" target="_blank" rel="noopener noreferrer">Bitwarden</a>（開源），<a href="https://keepass.info/" target="_blank" rel="noopener noreferrer">KeePass</a>（開源）
都將你託管的密碼，透過公開的加密方式，保存在雲端或自訂的儲存地點，隨時可以透過各種設備來使用。在手機端會提供諸如指紋辨識等認證方式來兼顧安全與方便性。</p>]]></content>
        <category label="life" term="life"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Youtube 自動點選略過廣告按鈕 (Android)]]></title>
        <id>https://blog.gasolin.idv.tw/tools/automate-skip-ad</id>
        <link href="https://blog.gasolin.idv.tw/tools/automate-skip-ad"/>
        <updated>2020-02-06T23:04:50.000Z</updated>
        <summary type="html"><![CDATA[透過一些生活自動化工具，可以讓你的日常生活更便利。]]></summary>
        <content type="html"><![CDATA[<p>透過一些生活自動化工具，可以讓你的日常生活更便利。
例如在 Youtube 畫面中看到<code>略過廣告</code>按鈕時，可以透過 Automate App 協助自動點選按鈕。</p><p>以下是安裝與使用方式</p><ol><li>安裝 <a href="https://play.google.com/store/apps/details?id=com.llamalab.automate" target="_blank" rel="noopener noreferrer">Automate</a> 與 <a href="https://play.google.com/store/apps/details?id=com.llamalab.automate.ext.network" target="_blank" rel="noopener noreferrer">Automate Network Permissions</a></li></ol><p></p><ol start="2"><li>點選左側選單，進入<code>Community</code>(社群)，下載社群創作的樣板</li></ol><p></p><ol start="3"><li>搜尋<code>中文 youtube</code>，可以找到中文版的 Youtube 略過廣告樣板 (這是我根據<code>Ng Wei Ming</code>的<a href="https://llamalab.com/automate/community/flows/16388" target="_blank" rel="noopener noreferrer">這個版本</a>修改，支援正體中文版的 Youtube)</li></ol><p></p><ol start="4"><li>點選 <code>DOWNLOAD</code> 按鈕，下載此樣板</li></ol><p></p><ol start="5"><li>回到 Automate App 主頁，選擇<code>Youtube Skip Ad (中文)</code>項目，按下畫面中的 <code>START</code> 按鈕，啟動自動點選略過廣告。</li></ol><p></p>]]></content>
        <category label="android" term="android"/>
        <category label="automation" term="automation"/>
        <category label="life" term="life"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[每個人都是一個企業]]></title>
        <id>https://blog.gasolin.idv.tw/life/personal-canvas</id>
        <link href="https://blog.gasolin.idv.tw/life/personal-canvas"/>
        <updated>2020-01-29T00:55:00.000Z</updated>
        <summary type="html"><![CDATA[前一篇中提到的人生金字塔固然有意義，但是從太高處往下看人生，夢想距離實行，還有一大段距離，看不清晰。]]></summary>
        <content type="html"><![CDATA[<p><a href="/life/life-paramid">前一篇</a>中提到的<code>人生金字塔</code>固然有意義，但是從太高處往下看人生，夢想距離實行，還有一大段距離，看不清晰。</p><p>農曆新年快過去了，不如就從年度規劃開始著手，提升今年人生的清晰度吧。</p><p>去年看了 <a href="http://www.books.com.tw/exep/assp.php/gasolin/exep/prod/booksfile.php?item=0010752714" target="_blank" rel="noopener noreferrer">刻意練習：原創者全面解析，比天賦更關鍵的學習法</a> 後，又補看了 <a href="http://www.books.com.tw/exep/assp.php/gasolin/exep/prod/booksfile.php?item=0010758670" target="_blank" rel="noopener noreferrer">精準學習：「羅輯思維」最受歡迎的個人知識管理精進指南</a> 和 <a href="http://www.books.com.tw/exep/assp.php/gasolin/exep/prod/booksfile.php?item=0010773308" target="_blank" rel="noopener noreferrer">請停止無效努力！：沒有刻意練習的職場力，只是做白工而已</a> 兩本書。</p><p>前者作者<code>安德斯‧艾瑞克森</code>是西方人，更多地解釋「練習」背後的生理機制，以此解釋為何 / 如何練習更有效，本書相對地較學術化；後兩本書的作者<code>成甲</code>、<code>孫圈圈</code>是中國人，相對而言比較多依據經驗與方法論（術）。讀的過程中會有參加補習班後，想馬上實踐的感覺。三本書都相當精彩，值得一讀。</p><p><code>請停止無效努力</code>作者是人資 (HR) 出身，書中有提到了「個人商業畫布」。這個工具來自於<a href="http://www.books.com.tw/exep/assp.php/gasolin/exep/prod/booksfile.php?item=0010756794" target="_blank" rel="noopener noreferrer">一個人的獲利模式：用這張圖，探索你未來要走的路</a>一書，主題即為介紹「個人商業畫布」（這本書的概念延伸自<a href="http://www.books.com.tw/exep/assp.php/gasolin/exep/prod/booksfile.php?item=0010745245" target="_blank" rel="noopener noreferrer">價值主張年代：設計思考 X 顧客不可或缺的需求 = 成功商業模式的獲利核心</a>），工具很好，但這兩本書的目標是企業 / 商管客群，非相關背景的人要先習慣商管書的行文方式，讀起來不太容易理解。</p><p>這邊有<code>請停止無效努力</code>一書與個人畫布<a href="https://kknews.cc/zh-tw/news/q4vqyzg.html" target="_blank" rel="noopener noreferrer">相關的書摘</a>與<a href="https://kknews.cc/zh-tw/news/92zpnz5.html" target="_blank" rel="noopener noreferrer">心得</a>。本書作者將「個人商業畫布」更簡單地用短篇幅解釋，並提供中文翻譯過，讓一般人較容易理解。</p><p>我進一步將個人商業畫布弄成大白話版如下：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">&lt;table&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  &lt;tr&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    &lt;td rowspan="2"&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      &lt;b&gt;誰能幫我&lt;/b&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      &lt;p&gt;誰可以幫我？&lt;/p&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    &lt;/td&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    &lt;td&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      &lt;b&gt;我做什麼&lt;/b&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      &lt;p&gt;我要做什麼？&lt;/p&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    &lt;/td&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    &lt;td rowspan="2" colspan="2"&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      &lt;b&gt;提供什麼&lt;/b&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      &lt;p&gt;我怎樣幫助他人？&lt;/p&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      &lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    &lt;/td&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    &lt;td&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      &lt;b&gt;怎麼提供&lt;/b&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      &lt;p&gt;怎樣和對方打交道？&lt;/p&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    &lt;/td&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    &lt;td rowspan="2"&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      &lt;b&gt;使用者&lt;/b&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      &lt;p&gt;我能幫助誰？&lt;/p&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    &lt;/td&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  &lt;/tr&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  &lt;tr&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    &lt;td&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      &lt;b&gt;我有什麼&lt;/b&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      &lt;p&gt;我是誰？&lt;br/&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      我擁有什麼？&lt;/p&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    &lt;/td&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    &lt;td&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      &lt;b&gt;宣傳途徑&lt;/b&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      &lt;p&gt;怎樣宣傳自己/提供的服務？&lt;/p&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    &lt;/td&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  &lt;/tr&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  &lt;tr&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    &lt;td colspan="3"&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      &lt;b&gt;付出&lt;/b&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      &lt;p&gt;我要付出什麼？&lt;/p&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    &lt;/td&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    &lt;td colspan="3"&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      &lt;b&gt;得到&lt;/b&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      &lt;p&gt;我能得到什麼？&lt;/p&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    &lt;/td&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  &lt;/tr&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&lt;/table&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>(節錄心得以解釋以上畫布)</p><ul><li>中心區域是「我是誰，擁有什麼，我要做什麼」</li><li>左邊是「誰來幫我」</li><li>右邊是「我可以幫誰，在我幫誰的過程中我要怎麼幫，通過什麼途徑，怎麼方式。」</li><li>下面一邊是我在合作以及成為自己的過程中，「我要付出什麼」，另一邊是我在幫助別人的過程中「獲得了什麼」</li><li>總的來說，我的左邊是輸入的過程，右邊是輸出的過程，輸入需要成本，而輸出產生收入。</li></ul><div class="mermaid" data-mermaid-src="graph LR
    me(我)
    have[我有什麼]
    help[誰能幫我]
    do[我做什麼]
    provide(提供什麼)
    how[怎麼提供]
    channel[宣傳途徑]
    user[使用者]

    subgraph 付出什麼
	  have --> me
    help --> me
    me --> do
    end
    do --> provide
    subgraph 得到什麼
    provide --> how
    provide --> channel
    how --> user
    channel --> user
    end">graph LR
    me(我)
    have[我有什麼]
    help[誰能幫我]
    do[我做什麼]
    provide(提供什麼)
    how[怎麼提供]
    channel[宣傳途徑]
    user[使用者]

    subgraph 付出什麼
	  have --&gt; me
    help --&gt; me
    me --&gt; do
    end
    do --&gt; provide
    subgraph 得到什麼
    provide --&gt; how
    provide --&gt; channel
    how --&gt; user
    channel --&gt; user
    end</div><p>透過個人商業畫布，我們得到了可以在一張 A4 上展示的範本，只要照著填寫，就可以大致無遺漏地思考當前個人的重要課題。</p><p>個人商業畫布的最終目的，是幫助你建立一個「得到 &gt; 付出」的個人發展模式。
（而商業畫布的最終目的，是幫助公司建立一個「收入來源 &gt; 成本結構」的商業模式。）</p><p>年度規劃的目標，也可以簡化成<code>如何讓今年或後幾年的「得到 &gt; 付出」</code>。</p><p>如果我以前想做年度規劃時，能從修改這樣的固定範本開始，每年做年度規劃也許就不會那麼困難了。</p><p>若想要快速用以上的格式紀錄個人商業畫布，可以 fork 以下的<a href="https://gist.github.com/gasolin/22b6af98f99f5cab8b7deabcad7f76b0" target="_blank" rel="noopener noreferrer">範本</a></p><p>如果我能進一步用這樣一致的格式繪出當年的畫布，甚或 3、5 年後期望的畫布，也許可做為更清晰的學業發展或個人職涯參考。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="參考資料">參考資料<a href="#參考資料" class="hash-link" aria-label="Direct link to 參考資料" title="Direct link to 參考資料">​</a></h2><ul><li></li><li></li><li></li><li></li></ul>]]></content>
        <category label="life" term="life"/>
        <category label="gtd" term="gtd"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[質化人生的課題]]></title>
        <id>https://blog.gasolin.idv.tw/life/life-paramid</id>
        <link href="https://blog.gasolin.idv.tw/life/life-paramid"/>
        <updated>2019-12-31T10:30:51.000Z</updated>
        <summary type="html"><![CDATA[從多年前看到「夢想金字塔」一書時，就很喜歡裡面提到的概念。]]></summary>
        <content type="html"><![CDATA[<p>從多年前看到「夢想金字塔」一書時，就很喜歡裡面提到的概念。
書中將人生的課題分為「財務」，「家庭」，「事業」，「自我修養」，「身體健康」，「心靈健康」。「夢想金字塔」為這些課題提供了一個可參考的框架：</p><p>「財務」講的是生活中所需的金錢，擺在金字塔的頂端。當這塊出問題時，會大大影響金字塔下方的各方面。
「家庭」，「事業」是金字塔的中層，是自己與外部的觸角，影響自己，也影響其他人的生活。
「自我修養」，「身體健康」，「心靈健康」則是金字塔的基石。自我的身，心，靈狀態，是自己與所有人交流的基礎。</p><p>大部分的人不斷地在拋接這些人生課題，試圖在其中取得平衡。每個人都可以在人生的各個階段，提出自己對這些人生課題的想法（認知），或是更進一步地設定想要達到的目標。</p><p>在 2019 年的最後一日，我也試著寫下目前我認知的人生課題目標。此外，也想想是否能量化這些人生課題？</p><div class="mermaid" data-mermaid-src="graph TD
graph TD
free((不用為錢煩惱)) -.-> finance(財務)
happy((維持舒適且安心)) -.-> family
finance --> family[家庭]
finance --> career[事業]
family --> health(身體健康)
family --> mental(心靈健康)
family --> cultivate[自我修養]
career --> health
career --> mental
career --> cultivate
influence((持續擴展影響力)) -.-> career
cultivate -.-> assessibility((自由往來無礙))
health -.-> doctor_away((到老不用靠醫生))
mental -.-> confident((安定不用向外求))">graph TD
graph TD
free((不用為錢煩惱)) -.-&gt; finance(財務)
happy((維持舒適且安心)) -.-&gt; family
finance --&gt; family[家庭]
finance --&gt; career[事業]
family --&gt; health(身體健康)
family --&gt; mental(心靈健康)
family --&gt; cultivate[自我修養]
career --&gt; health
career --&gt; mental
career --&gt; cultivate
influence((持續擴展影響力)) -.-&gt; career
cultivate -.-&gt; assessibility((自由往來無礙))
health -.-&gt; doctor_away((到老不用靠醫生))
mental -.-&gt; confident((安定不用向外求))</div><p>2022 更新版</p><div class="mermaid" data-mermaid-src="graph TD
me(我的課題) --> finance(財務)
me --> family[家庭]
me --> career[事業]
me --> cultivate[自我修養]
me --> health(身體健康)
me --> mental(心靈健康)
finance -.-> free((不用為錢煩惱))
family -.-> happy((舒適且歡笑))
career -.-> influence((擴展影響力))
cultivate -.-> assessibility((自由往來無礙))
health -.-> doctor_away((到老不用靠醫生))
mental -.-> confident((安定不用向外求))">graph TD
me(我的課題) --&gt; finance(財務)
me --&gt; family[家庭]
me --&gt; career[事業]
me --&gt; cultivate[自我修養]
me --&gt; health(身體健康)
me --&gt; mental(心靈健康)
finance -.-&gt; free((不用為錢煩惱))
family -.-&gt; happy((舒適且歡笑))
career -.-&gt; influence((擴展影響力))
cultivate -.-&gt; assessibility((自由往來無礙))
health -.-&gt; doctor_away((到老不用靠醫生))
mental -.-&gt; confident((安定不用向外求))</div><p>2019 原版</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="參考資料">參考資料<a href="#參考資料" class="hash-link" aria-label="Direct link to 參考資料" title="Direct link to 參考資料">​</a></h2><p>[1]<!-- --> <a href="https://www.managertoday.com.tw/articles/view/53559" target="_blank" rel="noopener noreferrer">https://www.managertoday.com.tw/articles/view/53559</a></p>]]></content>
        <category label="life" term="life"/>
        <category label="gtd" term="gtd"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[個人工具箱（2019十一月）]]></title>
        <id>https://blog.gasolin.idv.tw/tools/tooling-in-2019-Nov</id>
        <link href="https://blog.gasolin.idv.tw/tools/tooling-in-2019-Nov"/>
        <updated>2019-11-30T16:30:00.000Z</updated>
        <summary type="html"><![CDATA[先記錄下來手邊使用的工具，才有機會從繁雜中歸納出簡單的使用規則。]]></summary>
        <content type="html"><![CDATA[<p><code>先記錄下來手邊使用的工具，才有機會從繁雜中歸納出簡單的使用規則。</code></p><p>2011<sup id="fnref-1-ebd60d"><a href="#fn-1-ebd60d" class="footnote-ref">1</a></sup>年時紀錄了一次當時的個人工具箱，2016 年開始再次紀錄自己手邊工具箱的改變，後來漸漸變成了常規文章 <sup id="fnref-2-ebd60d"><a href="#fn-2-ebd60d" class="footnote-ref">2</a></sup> <sup id="fnref-3-ebd60d"><a href="#fn-3-ebd60d" class="footnote-ref">3</a></sup> <sup id="fnref-4-ebd60d"><a href="#fn-4-ebd60d" class="footnote-ref">4</a></sup> <sup id="fnref-5-ebd60d"><a href="#fn-5-ebd60d" class="footnote-ref">5</a></sup> <sup id="fnref-6-ebd60d"><a href="#fn-6-ebd60d" class="footnote-ref">6</a></sup> <sup id="fnref-7-ebd60d"><a href="#fn-7-ebd60d" class="footnote-ref">7</a></sup> 🤹。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="主要裝備">主要裝備<a href="#主要裝備" class="hash-link" aria-label="Direct link to 主要裝備" title="Direct link to 主要裝備">​</a></h2><ul><li><p>💻 Apple Macbook Pro 13 (2018), i5 16GB RAM，作業系統：10.14.6</p></li><li><p>📱 <a href="https://www.asus.com/tw/Phone/ZenFone-5-ZE620KL/Tech-Specs/" target="_blank" rel="noopener noreferrer">Zenfone 5</a>, Android 9(Pie), Snapdragon 636, 6.2" Super IPS</p></li><li><p>🎧  Jabra Elite 65t (備用：Sony WI-1000 降噪耳機)</p></li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="️-外出攜帶">🚶‍♂️ 外出攜帶<a href="#️-外出攜帶" class="hash-link" aria-label="Direct link to 🚶‍♂️ 外出攜帶" title="Direct link to 🚶‍♂️ 外出攜帶">​</a></h2><ul><li>💻 Macbook Pro 13 (2018)</li><li>📱 Zenfone 5</li><li>🔌 Innergie 60C 電源</li><li>🎧  Jabra Elite 65t</li><li>USB C/Micro USB 雙頭轉接線</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="-家">🏠 家<a href="#-家" class="hash-link" aria-label="Direct link to 🏠 家" title="Direct link to 🏠 家">​</a></h3><ul><li>🔌 Ｍacbook PRO 電源</li><li>🖱羅技 M720 滑鼠</li><li>📦 Synology NAS: 電影，影集，照片，資料備份</li><li>第二螢幕 🖥️ 24" LCD + ⌨️ 羅技 K375s 鍵盤 + Raspberry Pi</li><li>備用 📙 Kindle Voyage</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="和上一季相比的改變">和上一季相比的改變：<a href="#和上一季相比的改變" class="hash-link" aria-label="Direct link to 和上一季相比的改變：" title="Direct link to 和上一季相比的改變：">​</a></h3><p>因為開發 React Native 程式時有需要用 iOS 模擬器測試，改使用💻 Apple Macbook Pro 15 (2018) 搭配🖱羅技 M720 滑鼠。</p><p>現在的工作型態比較常在家或外出到定點工作。
和前幾季最大的改變，是在家會使用樹莓派展示<a href="/make/second-screen">第二螢幕</a>，除平時動態輪播照片，也顯示一些資訊外，可以像 Chromecast 那樣播放 Youtube 影片。</p><p>另外由於Ｍacbook Pro 吃 65W 電，因此外出改以🔌 Innergie 60C 來取代 Ｍacbook Pro 的電源線和🔌 小米 45W 電源。🔌 Innergie 60C 電源可為💻 筆電與 🎮Nintendo Switch 供電，省下帶兩大塊電源線的麻煩。再加帶 5000mAh 行動電源（可選）和 USB C/Micro USB 雙頭轉接線，可解決大部分手機 / 耳機的充電問題。</p><p>另外我也採購了一些 USB C 轉標準 USB 接頭，方便接 Ｍacbook 使用那些仍使用標準 USB 接頭的設備（如接 Arduino 開發板，或轉接雙頭轉接線暫時幫其他裝置充電等）。</p><div class="mermaid" data-mermaid-src="graph LR
LCD -- HDMI --- hub{HDMI Hub}
hub --- ns[Nintendo Switch]
hub --- pi[Raspberry Pi]">graph LR
LCD -- HDMI --- hub{HDMI Hub}
hub --- ns[Nintendo Switch]
hub --- pi[Raspberry Pi]</div><p>⌨️ 羅技 K375s 鍵盤與🖱羅技 M720 滑鼠，兩者特點都是同時支援使用 USB 或藍牙控制設備，讓我可以用一套鍵鼠控制多種設備。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="️-網站工具">🕸️ 網站工具<a href="#️-網站工具" class="hash-link" aria-label="Direct link to 🕸️ 網站工具" title="Direct link to 🕸️ 網站工具">​</a></h3><ul><li>🕸️ 主要瀏覽器：<code>Brave</code></li><li>瀏覽器插件<ul><li>拼字訂正：Grammarly</li><li>密碼管理：Bitwarden</li></ul></li><li>瀏覽器常駐分頁<ul><li>✉️ <a href="http://mail.google.com/" target="_blank" rel="noopener noreferrer">GMail</a>, Inbox</li><li>✅待辦事項：<a href="https://todoist.com/" target="_blank" rel="noopener noreferrer">Todoist</a> (付費)</li></ul></li><li>👥 主要社交網站：<a href="http://www.facebook.com/" target="_blank" rel="noopener noreferrer">Facebook</a>、<a href="https://twitter.com/gasolin" target="_blank" rel="noopener noreferrer">Twitter</a></li><li>📝 記事：<a href="http://keep.google.com/" target="_blank" rel="noopener noreferrer">Google keep</a>, Google Doc</li><li>💾 網路硬碟：<a href="http://www.dropbox.com/" target="_blank" rel="noopener noreferrer">Dropbox</a>, 主要用作同步照片</li><li>🔑密碼管理：<a href="https://www.bitwarden.com/" target="_blank" rel="noopener noreferrer">Bitwarden</a></li><li>📰 新聞聚合：<a href="https://feedly.com/" target="_blank" rel="noopener noreferrer">Feedly</a></li><li>📘 閱讀紀錄：<a href="https://share.readmoo.com/mooer/lifaicqb9/bookshelf/gasolin/read" target="_blank" rel="noopener noreferrer">Readmoo 分享書</a></li><li>🎥 看電影記錄：<a href="http://www.douban.com/" target="_blank" rel="noopener noreferrer">豆瓣</a></li><li>🗂️ 個人網站：<a href="http://www.gasolin.idv.tw" target="_blank" rel="noopener noreferrer">個人網站</a>, <a href="https://github.com/gasolin/blog/" target="_blank" rel="noopener noreferrer">Github</a></li><li>🗂️ 個人履歷：<a href="https://www.linkedin.com/in/fredglin/" target="_blank" rel="noopener noreferrer">Linkedin</a></li><li>🔗 IFTTT <a href="/life/personal-automation-in-2018">自動化生活紀錄 2018</a></li><li>📺 <a href="https://www.youtube.com/" target="_blank" rel="noopener noreferrer">Youtube</a></li><li>👛 電子錢包<a href="https://www.myetherwallet.com/" target="_blank" rel="noopener noreferrer">MyEtherWallet</a>, <a href="/crypto/setup_ledger_nano_on_linux">Ledger Nano S</a></li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="設計工具">設計工具<a href="#設計工具" class="hash-link" aria-label="Direct link to 設計工具" title="Direct link to 設計工具">​</a></h3><ul><li>螢幕動畫錄製： <a href="http://www.recordit.co/" target="_blank" rel="noopener noreferrer">Recordit</a></li><li>心智圖：Coggle</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="開發工具">開發工具<a href="#開發工具" class="hash-link" aria-label="Direct link to 開發工具" title="Direct link to 開發工具">​</a></h3><ul><li>編輯器：VS Code<ul><li>Blank Line at the End</li><li>Diff Tool</li><li>EditorConfig for VSCode</li><li>Guides: more guide line</li><li>GitLens: more git info</li><li>Settings Sync</li><li>solidity</li><li>Trailing Spaces</li></ul></li><li>版本控制：git</li><li>套件管理：apt (Linux), <a href="https://github.com/creationix/nvm" target="_blank" rel="noopener noreferrer">nvm</a></li><li>🛎️  專注工具：🍅  <a href="https://chrome.google.com/webstore/detail/marinara-pomodoro%C2%AE-assist/lojgmehidjdhhbmpjfamhpkpodfcodef" target="_blank" rel="noopener noreferrer">Marinara</a> <del>廚房計時器</del></li><li>Firefox Developer Edition / Chromium</li></ul><p>不再在 Windows 上開發。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="娛樂工具">娛樂工具<a href="#娛樂工具" class="hash-link" aria-label="Direct link to 娛樂工具" title="Direct link to 娛樂工具">​</a></h3><ul><li>🎮Nintendo Switch</li><li>🎮Steam (少用)</li></ul><p>因為攜帶便利，現在主要只玩 NS 上的遊戲。Steam 上看到喜歡的遊戲，也盡量等 NS 上出了再買。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="-android-手機應用">📱 Android 手機應用<a href="#-android-手機應用" class="hash-link" aria-label="Direct link to 📱 Android 手機應用" title="Direct link to 📱 Android 手機應用">​</a></h2><ul><li>🕸️ 瀏覽器：Brave</li><li>🔔 網頁更新通知：Web Alert</li><li>📰 閱讀：Feedly, Readmoo, Pocket</li><li>✉️ 信箱：Inbox, Gmail</li><li>🗺️ 地圖：Google 地圖</li><li>記事：Keep</li><li>內建相機，內建時鐘</li><li>相簿：內建相簿，Google 相簿，Dropbox</li><li>社交：Facebook, LINE, Twitter (網頁版)</li><li>待辦事項：<a href="https://play.google.com/store/apps/details?id=com.todoist" target="_blank" rel="noopener noreferrer">Todoist</a></li><li>🔐 密碼管理：Bitwarden，Duo Mobile（2 步驟認證）</li><li>📺 線上影片：Youtube</li><li>音樂：Spotify</li><li>有聲書：Audible, Podcast Addict</li><li>🚶‍♂️ 健康：小米運動</li></ul><p>手機瀏覽器改使用 <code>Brave</code> 瀏覽器。記帳改使用實體筆記本紀錄。<a href="/life/handbook">完整的實體筆記配置</a></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="其他工具">其他工具<a href="#其他工具" class="hash-link" aria-label="Direct link to 其他工具" title="Direct link to 其他工具">​</a></h3><ul><li>旅遊：Google 翻譯，TripAdvisor (旅遊時才裝)</li><li>影片播放：MX Player, DS video</li><li>記錄看書狀況：Readmoo 分享書</li><li>線上學習：PressPlay, Youtube, Udemy</li><li>IFTTT</li><li>💳街口支付，Line Pay</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="reference">Reference<a href="#reference" class="hash-link" aria-label="Direct link to Reference" title="Direct link to Reference">​</a></h2><ul><li><sup id="fnref-1-ebd60d"><a href="#fn-1-ebd60d" class="footnote-ref">1</a></sup> <a href="/tools/tooling-in-2011">個人工具箱 2011</a></li><li><sup id="fnref-2-ebd60d"><a href="#fn-2-ebd60d" class="footnote-ref">2</a></sup> <a href="/tools/tooling-in-2016">個人工具箱 2016</a></li><li><sup id="fnref-3-ebd60d"><a href="#fn-3-ebd60d" class="footnote-ref">3</a></sup> <a href="/tools/tooling-in-2017">個人工具箱 2017</a></li><li><sup id="fnref-4-ebd60d"><a href="#fn-4-ebd60d" class="footnote-ref">4</a></sup> <a href="/tools/tooling-in-2017-sep">個人工具箱 2017 九月</a></li><li><sup id="fnref-5-ebd60d"><a href="#fn-5-ebd60d" class="footnote-ref">5</a></sup> <a href="/tools/tooling-in-2018-feb">個人工具箱 2018 二月</a></li><li><sup id="fnref-6-ebd60d"><a href="#fn-6-ebd60d" class="footnote-ref">6</a></sup> <a href="/tools/tooling-in-2018-jun">個人工具箱 2018 六月</a></li><li><sup id="fnref-7-ebd60d"><a href="#fn-7-ebd60d" class="footnote-ref">7</a></sup> <a href="/tools/tooling-in-2019-Mar">個人工具箱 2019 三月</a></li></ul>]]></content>
        <category label="life" term="life"/>
        <category label="tool" term="tool"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[我的第二螢幕(II)]]></title>
        <id>https://blog.gasolin.idv.tw/make/second-screen-2</id>
        <link href="https://blog.gasolin.idv.tw/make/second-screen-2"/>
        <updated>2019-11-20T09:50:30.000Z</updated>
        <summary type="html"><![CDATA[我的第二螢幕(II)]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="我的第二螢幕ii">我的第二螢幕 (II)<a href="#我的第二螢幕ii" class="hash-link" aria-label="Direct link to 我的第二螢幕 (II)" title="Direct link to 我的第二螢幕 (II)">​</a></h2><ul><li>[I][我的第二螢幕 - Chromecast]<!-- -->(/make/second-screen)</li><li>[II]<!-- --> 我的第二螢幕 - Ｇoogle 相簿 + 資訊面版</li></ul><p><a href="/make/second-screen">上一篇</a> 中我安裝了 <code>omxiv</code> 讓我可以從手機控制第二螢幕，在上面播放 Youtube 影片，做到類似 Chromecast 的功能。</p><p>既然有一台開著的螢幕，在不當 Chromecast 播放影片的時候，還可以拿來做什麼哩？
不如就像 Chromecast 那樣，在不播影片時就輪播照片。最好也可以顯示時間，或是其他有用的資訊。</p><p>找了一下，發現 Magic Mirror<sup id="fnref-1-101c72"><a href="#fn-1-101c72" class="footnote-ref">1</a></sup> 也許可以滿足我的需求。Magic Mirror 的原本用途是拿來做智慧鏡子，可以在鏡子的各個角落顯示一些有用的資訊。Magic Mirror 是採用 Electron 封裝的桌面應用，可使用 Web 技術編寫擴充套件，也可以透過 CSS 修改顯示樣式。</p><p>在嘗試安裝並加入 Google Photos 擴充套件<sup id="fnref-3-101c72"><a href="#fn-3-101c72" class="footnote-ref">3</a></sup>在背景輪播，使用了一段時間後，覺得還不錯可以推薦。</p><p>以下是實機畫面：</p><p></p><p>想要自己建立類似的第二螢幕的人，可以照著這系列 Youtube 影片<sup id="fnref-2-101c72"><a href="#fn-2-101c72" class="footnote-ref">2</a></sup> 做設定，說明的相當清楚。</p><p>以下是我的 Google Photos 設定</p><div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token literal-property property" style="color:#36acaa">module</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"MMM-GooglePhotos"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token literal-property property" style="color:#36acaa">position</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"fullscreen_below"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token literal-property property" style="color:#36acaa">config</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token literal-property property" style="color:#36acaa">albumId</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// your album id(s) from result of `auth_and_test.js`</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token literal-property property" style="color:#36acaa">refreshInterval</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1000</span><span class="token operator" style="color:#393A34">*</span><span class="token number" style="color:#36acaa">60</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token literal-property property" style="color:#36acaa">scanInterval</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1000</span><span class="token operator" style="color:#393A34">*</span><span class="token number" style="color:#36acaa">60</span><span class="token operator" style="color:#393A34">*</span><span class="token number" style="color:#36acaa">10</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// too many scans might cause API quota limit also.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token literal-property property" style="color:#36acaa">sort</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"random"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">//'time', 'reverse', 'random'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token literal-property property" style="color:#36acaa">showWidth</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"100%"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// how large the photo will be shown as. (e.g;'100%' for fullscreen)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token literal-property property" style="color:#36acaa">showHeight</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"100%"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token literal-property property" style="color:#36acaa">originalWidthPx</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1920</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// original size of loaded image. (related with image quality)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token literal-property property" style="color:#36acaa">originalHeightPx</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1024</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// Bigger size gives you better quality, but can give you network burden.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token literal-property property" style="color:#36acaa">opacity</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// target "opacity" property (https://www.w3schools.com/cssref/css3_pr_opacity.asp)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token literal-property property" style="color:#36acaa">mode</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"hybrid"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// "cover" or "contain" (https://www.w3schools.com/cssref/css3_pr_background-size.asp)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="參考資料">參考資料<a href="#參考資料" class="hash-link" aria-label="Direct link to 參考資料" title="Direct link to 參考資料">​</a></h2><ul><li>[1]<!-- --> Magic Mirror builder <a href="https://magicmirror.builders/" target="_blank" rel="noopener noreferrer">https://magicmirror.builders/</a></li><li>[2]<!-- --> MagicMirror without the Mirror <a href="https://www.youtube.com/watch?v=OXpJylI3rGI&amp;list=PL2vlFWOHEKMjkMZOSzIiIzN6qGb2pz2WJ" target="_blank" rel="noopener noreferrer">https://www.youtube.com/watch?v=OXpJylI3rGI&amp;list=PL2vlFWOHEKMjkMZOSzIiIzN6qGb2pz2WJ</a></li><li>[3]<!-- --> MMM-GooglePhotos <a href="https://github.com/eouia/MMM-GooglePhotos" target="_blank" rel="noopener noreferrer">https://github.com/eouia/MMM-GooglePhotos</a></li></ul>]]></content>
        <category label="raspberrypi" term="raspberrypi"/>
        <category label="magicmirror" term="magicmirror"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Scratch3 擴充套件開發]]></title>
        <id>https://blog.gasolin.idv.tw/iot/scratch3-internet</id>
        <link href="https://blog.gasolin.idv.tw/iot/scratch3-internet"/>
        <updated>2019-11-19T10:55:30.000Z</updated>
        <summary type="html"><![CDATA[Scratch3 擴充套件開發]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="scratch3-擴充套件開發">Scratch3 擴充套件開發<a href="#scratch3-擴充套件開發" class="hash-link" aria-label="Direct link to Scratch3 擴充套件開發" title="Direct link to Scratch3 擴充套件開發">​</a></h2><p>最近應 s4a 社群許老師的邀請，在業餘時間研究了一下 Scratch 3，看看能做點什麼貢獻。</p><p>Scratch 3 是一套由麻省理工學院（MIT）發起，以兒童學習程式為目的所設計的視覺化編程軟體。Scratch 3 可使用堆疊積木塊的方式，來完成一般程式語言能完成的事情。</p><p>Scratch 3 除了程式語言的部分採用堆疊積木塊的方式，還提供了對應的整合的舞台，主角，並提供相對應的積木塊。你可以透過拖拉積木塊，直接控制這些主角在場景中的活動。</p><p>Scratch 3 的積木編程部分和我多年前玩過<sup id="fnref-1-ee3817"><a href="#fn-1-ee3817" class="footnote-ref">1</a></sup>的 <a href="https://developers.google.com/blockly/" target="_blank" rel="noopener noreferrer">Blockly</a> 很相似。實際上 <a href="https://developers.google.com/blockly/" target="_blank" rel="noopener noreferrer">Blockly</a> / <a href="https://appinventor.mit.edu/" target="_blank" rel="noopener noreferrer">AppInventor</a> 的靈感來源就是來自於 Scratch。</p><p>在 Scratch 3 版本中，也已經將 Blockly 整合進去，作為它提供程式積木的方式。</p><p>我做了 JSON 抓取資料並解析，和空污 LASS 的擴充套件。透過這些積木，學生可以從網路上抓取最新的空氣污染狀況，然後用 Scratch 3 上場景可愛的人物口中說出來，或是視覺化的顯示結果。</p><p>例如透過 JSON 積木，連線到<code>http://ifconfig.me/all.json</code>取得對外的 IP</p><p></p><p>或是透過填入設備代號，連到任一 LASS 設備，取得當地 PM2.5，溫度等資訊</p><p></p><p>由於 Scratch 3 尚未完成第三方擴充套件的分享架構，因此這兩個擴充套件都放在 <code>scratch3-internet</code><sup id="fnref-2-ee3817"><a href="#fn-2-ee3817" class="footnote-ref">2</a></sup> 專案中，想嘗試的人也可以直接連到<sup id="fnref-3-ee3817"><a href="#fn-3-ee3817" class="footnote-ref">3</a></sup>使用。</p><p><code>scratch3-internet</code><sup id="fnref-2-ee3817"><a href="#fn-2-ee3817" class="footnote-ref">2</a></sup> 專案的特色，是簡化了擴充套件開發前的設定工作，並很容易部署到 Github 網頁上。</p><p>技術上，<code>scratch3-internet</code><sup id="fnref-2-ee3817"><a href="#fn-2-ee3817" class="footnote-ref">2</a></sup> 專案用了 git submodule 來抓取 Scratch 3 的相關專案，並透過 patch 的方式將自行開發的擴充套件加入其中，最後包裝成自己的版本<sup id="fnref-3-ee3817"><a href="#fn-3-ee3817" class="footnote-ref">3</a></sup>。透過這種方式最小化維護成本。</p><p>擴充套件需修改的部分如下（可在<sup id="fnref-2-ee3817"><a href="#fn-2-ee3817" class="footnote-ref">2</a></sup>中找到更詳細的文件）：</p><div class="mermaid" data-mermaid-src="graph TD
Scratch3 --- |UI| GUI
Scratch3 -.- |Blockly| blocks
Scratch3 --- |core parser| VM
VM --> src/extensions
subgraph Extensions
src/extensions -.- json[JSON blocks]
src/extensions -.- lass[LASS blocks]
end
GUI --- |Define extension cards| x[src/lib/libraries/extensions/index.jsx]
subgraph Extension Cards
x -.- j[JSON card]
x -.- l[LASS card]
end">graph TD
Scratch3 --- |UI| GUI
Scratch3 -.- |Blockly| blocks
Scratch3 --- |core parser| VM
VM --&gt; src/extensions
subgraph Extensions
src/extensions -.- json[JSON blocks]
src/extensions -.- lass[LASS blocks]
end
GUI --- |Define extension cards| x[src/lib/libraries/extensions/index.jsx]
subgraph Extension Cards
x -.- j[JSON card]
x -.- l[LASS card]
end</div><p>要啟動一個適合擴充套件開發的 scratch3 專案，只要照以下步驟即可：</p><ol><li>fork scratch3-internet 專案</li><li>clonse repo <code>git clone https://github.com/[your name]/scratch3-internet.git</code></li><li>get and setup related projects <code>npm run setup</code></li><li>start the development server <code>npm run start</code></li></ol><p>要部署到自己的 Github 專案網頁，只需</p><ol><li>編譯網站，<code>npm run build</code>，編譯好的檔案在 <code>scratch-gui/build</code></li><li>部署到 Github 專案網站的 <code>gh-pages</code> 分支中 <code>npm run deploy</code>，即可透過 <code>https://[yourname].github.io</code> 存取。</li></ol><h2 class="anchor anchorWithStickyNavbar_LWe7" id="參考資料">參考資料<a href="#參考資料" class="hash-link" aria-label="Direct link to 參考資料" title="Direct link to 參考資料">​</a></h2><ul><li>[1]<!-- --> 以前做的 Blockly + Arduino 專案 <a href="https://github.com/BlocklyDuino/BlocklyDuino" target="_blank" rel="noopener noreferrer">BlocklyDuino</a></li><li>[2]<!-- --> <a href="https://github.com/gasolin/scratch3-internet" target="_blank" rel="noopener noreferrer">https://github.com/gasolin/scratch3-internet</a></li><li>[3]<!-- --> Scratch 3 editor <a href="http://gasolin.idv.tw/scratch3-internet/" target="_blank" rel="noopener noreferrer">http://gasolin.idv.tw/scratch3-internet/</a></li><li>[4]<!-- --> Scratch 3 內建積木說明 <a href="https://en.scratch-wiki.info/wiki/Blocks" target="_blank" rel="noopener noreferrer">https://en.scratch-wiki.info/wiki/Blocks</a></li><li>[5]<!-- --> 如何定義 Blockly 積木 <a href="https://developers.google.com/blockly/guides/create-custom-blocks/define-blocks" target="_blank" rel="noopener noreferrer">https://developers.google.com/blockly/guides/create-custom-blocks/define-blocks</a></li><li>[6]<!-- --> Scratch 3.0 学习笔记 <a href="https://github.com/Micircle/scratch3.0-note" target="_blank" rel="noopener noreferrer">https://github.com/Micircle/scratch3.0-note</a></li><li>[7]<!-- --> How to Develop Your Own Block for Scratch 3.0 <a href="https://medium.com/@hiroyuki.osaki/how-to-develop-your-own-block-for-scratch-3-0-1b5892026421" target="_blank" rel="noopener noreferrer">https://medium.com/@hiroyuki.osaki/how-to-develop-your-own-block-for-scratch-3-0-1b5892026421</a></li><li>[8]<!-- --> 开发一个 Scratch3 Extension <a href="https://wiki.huangyang.me/post/2019-03-13-scratch3-extension" target="_blank" rel="noopener noreferrer">https://wiki.huangyang.me/post/2019-03-13-scratch3-extension</a></li><li>[9]<!-- --> Scratch 3.0 Extensions <a href="https://github.com/LLK/scratch-vm/blob/develop/docs/extensions.md" target="_blank" rel="noopener noreferrer">https://github.com/LLK/scratch-vm/blob/develop/docs/extensions.md</a></li></ul>]]></content>
        <category label="scratch3" term="scratch3"/>
        <category label="extension" term="extension"/>
        <category label="Blockly" term="Blockly"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[我的第二螢幕(I)]]></title>
        <id>https://blog.gasolin.idv.tw/make/second-screen</id>
        <link href="https://blog.gasolin.idv.tw/make/second-screen"/>
        <updated>2019-11-13T23:18:30.000Z</updated>
        <summary type="html"><![CDATA[我的第二螢幕(I)]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="我的第二螢幕i">我的第二螢幕 (I)<a href="#我的第二螢幕i" class="hash-link" aria-label="Direct link to 我的第二螢幕 (I)" title="Direct link to 我的第二螢幕 (I)">​</a></h2><ul><li>[I]<!-- --> 我的第二螢幕 - Chromecast</li><li>[II][我的第二螢幕 - Ｇoogle相簿 + 資訊面版]<!-- -->(/make/second-screen-2)</li></ul><p>去年我買了一台 24 吋的桌上螢幕。原本構想的用途很美好，但就實際效果而言，其實並不常運用到。</p><p>想到最近比較常用到平板的功能，是拿來看 Youtube 或在 Youtube 中播音樂。有時候在手機上播，有時候是選了「稍後觀看」後再到平板上播。「從手機傳到另外一個螢幕播放」，這不就是 Chromecast 的用途嘛？</p><p>可惜前陣子已測試過，原來手上的 Chromecast 一代已經無法連上家中的網路。
那麼，是不是可以用放在一旁生灰塵的 Raspberry Pi 3 來代替哩？（<del>不行就正好買 Chromecast 2019 或 Raspberry Pi 4</del>）</p><p>簡單查一下，只要在手機上安裝 <code>Raspicast</code> 並在樹莓派上安裝<a href="https://github.com/HaarigerHarald/omxiv" target="_blank" rel="noopener noreferrer">omxiv</a>，就可以投影 Youtube，照片等內容到螢幕上。就現在的需求來說很夠用了。</p><p>先簡單這樣，試試看接下來這第二螢幕的開機率是否有提升吧。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="第二螢幕有沒有搞頭">第二螢幕有沒有搞頭？<a href="#第二螢幕有沒有搞頭" class="hash-link" aria-label="Direct link to 第二螢幕有沒有搞頭？" title="Direct link to 第二螢幕有沒有搞頭？">​</a></h2><p>Raspberry Pi 這樣的硬體，要拿來做主要電腦還是有些勉強。
但如果手上有一台，作為 Chromecast 代替品還是堪用的。</p><p>而除了替代 Chromecast 功能，作為工作環境中的第二塊螢幕的 OS，它還能透過安裝不同的軟體，為我帶來什麼幫助呢？</p><p>如果要設計一套適合第二螢幕使用的 OS，應該具備什麼樣的功能哩？</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="參考資料">參考資料<a href="#參考資料" class="hash-link" aria-label="Direct link to 參考資料" title="Direct link to 參考資料">​</a></h2><ul><li>[1]<!-- --> <a href="https://www.instructables.com/id/Raspberry-Pi-As-Chromecast-Alternative-Raspicast/" target="_blank" rel="noopener noreferrer">https://www.instructables.com/id/Raspberry-Pi-As-Chromecast-Alternative-Raspicast/</a></li><li>[2]<!-- --> <a href="http://pcmac.biz/RaspberryPi_Chromecast.html" target="_blank" rel="noopener noreferrer">http://pcmac.biz/RaspberryPi_Chromecast.html</a></li></ul>]]></content>
        <category label="raspberrypi" term="raspberrypi"/>
        <category label="chromecast" term="chromecast"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[我想問歷史上的今天- Google 助理服務上架心得]]></title>
        <id>https://blog.gasolin.idv.tw/service/google_actions_today_in_history</id>
        <link href="https://blog.gasolin.idv.tw/service/google_actions_today_in_history"/>
        <updated>2019-04-04T22:45:00.000Z</updated>
        <summary type="html"><![CDATA[Imgur]]></summary>
        <content type="html"><![CDATA[<p></p><p>我的第一個 Google 助理服務「<a href="https://assistant.google.com/services/a/uid/0000005a1a233d97" target="_blank" rel="noopener noreferrer">歷史上的今天</a>」上架了，已列在 <a href="https://assistant.google.com/explore?hl=zh-TW" target="_blank" rel="noopener noreferrer">Google 助理服務 (中文) 列表</a>中。</p><p></p><p>相對於 <a href="https://assistant.google.com/explore?hl=en" target="_blank" rel="noopener noreferrer">Google 助理服務 (英文) 列表</a>，中文的 Google 助理服務還不多，簡單分享一下開發心得。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="如何使用">如何使用<a href="#如何使用" class="hash-link" aria-label="Direct link to 如何使用" title="Direct link to 如何使用">​</a></h2><p>這個 Google 助理服務的功能很單純，即從維基百科中隨機選出一條歷史上的今天所發生過的事。</p><p>要使用這個 Google 助理服務，可開啟 Google 助理，詢問「我想問歷史上的今天」，Google 助理就會啟動「歷史上的今天」服務。</p><p></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="怎麼做-google-助理服務">怎麼做 Google 助理服務<a href="#怎麼做-google-助理服務" class="hash-link" aria-label="Direct link to 怎麼做 Google 助理服務" title="Direct link to 怎麼做 Google 助理服務">​</a></h2><p>「歷史上的今天」資料取自維基百科，也希望任何感興趣的人都能來參與維護，因此選擇開源。專案頁面在 <a href="https://github.com/gasolin/todayinhistory" target="_blank" rel="noopener noreferrer">https://github.com/gasolin/todayinhistory</a> </p><p>我所說的 Google 助理服務其實英文叫「Google Action」，可以用在各種 Google 助理 (Assistant) 支援的場景中，如手機，手錶，Chrome Book，Google Home 等。</p><p><a href="https://assistant.google.com/services/a/uid/0000005a1a233d97" target="_blank" rel="noopener noreferrer">歷史上的今天</a> 這個 Google 助理服務由 <a href="https://dialogflow.com/" target="_blank" rel="noopener noreferrer">https://dialogflow.com/</a> 託管，使用<code>Cloud Function</code>來回應使用者。<code>Dialogflow</code>與<code>Cloud Function</code>都是 Google 旗下的服務。</p><p><code>Dialogflow</code>提供了各種語音 / 文字聊天機器人 (Chat bot) 的一站式訓練 / 開發 / 部署環境。除了 Google 助理服務，也可以在上面使用<code>Dialogflow</code> API 同時支援 LINE，Facebook Messenger 等聊天機器人。<code>Cloud Function</code>也被整合在 Dialogflow 中，讓開發者可以簡單地呼叫一段腳本執行命令，而不需要維護完整的網頁伺服器端程式。</p><p>開發<a href="https://assistant.google.com/services/a/uid/0000005a1a233d97" target="_blank" rel="noopener noreferrer">歷史上的今天</a>的過程中，只要在<code>Dialogflow</code>網站上開發，在 <a href="https://developers.google.com/actions/" target="_blank" rel="noopener noreferrer">Actions on Google</a> 中測試與發佈即可，整個流程甚至不需要下載資料到電腦中。</p><p>如果對程式本身，或對每天可能會收到的回應感興趣，專案頁面在 <a href="https://github.com/gasolin/todayinhistory" target="_blank" rel="noopener noreferrer">https://github.com/gasolin/todayinhistory</a> ，歡迎造訪按 Star，也歡迎前往 <a href="https://assistant.google.com/services/a/uid/0000005a1a233d97" target="_blank" rel="noopener noreferrer">https://assistant.google.com/services/a/uid/0000005a1a233d97</a> 留下好評。</p>]]></content>
        <category label="google" term="google"/>
        <category label="chatbot" term="chatbot"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[中文輸進去，程式出得來，開發者發大財]]></title>
        <id>https://blog.gasolin.idv.tw/code/introducing_lingascript</id>
        <link href="https://blog.gasolin.idv.tw/code/introducing_lingascript"/>
        <updated>2019-03-08T15:10:44.000Z</updated>
        <summary type="html"><![CDATA[前陣子過年，終於得以抽出的一些時間，可以來嘗試一些不同的東西。]]></summary>
        <content type="html"><![CDATA[<p>前陣子過年，終於得以抽出的一些時間，可以來嘗試一些不同的東西。</p><p>花了幾天查看 Typescript 程式碼，改寫了個可用繁 / 簡中文語法寫 JS 的轉譯器 <a href="https://github.com/gasolin/lingascript/tree/master/src/tw" target="_blank" rel="noopener noreferrer">LingaScript</a></p><p>使用它做了個「中文輸進去，程式出得來，開發者發大財」的中文程式影片範例，歡迎大家開心試用。</p><p></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="如何做到的">如何做到的<a href="#如何做到的" class="hash-link" aria-label="Direct link to 如何做到的" title="Direct link to 如何做到的">​</a></h2><p>這個專案脫胎自過去開發<a href="https://github.com/gasolin/zhpy" target="_blank" rel="noopener noreferrer">周蟒</a>(Python + 中文語法) 的經驗，並參考了 <a href="https://github.com/program-in-chinese/CTS/" target="_blank" rel="noopener noreferrer">CTS</a> (Typescript + 中文語法) 原始碼。</p><p>微軟主導開發的 Typescript 提供了分析 Typescript 語法，並可輸出成 Javascript 的轉譯器 (src/compiler)。更棒的是因為 Visual Studio 的開發工具中整合了 Typescript，而微軟為了讓 Visual Studio 中的所有編譯結果都有本地化語言輸出，也在 Typescript 中支援了本地化語言的命令行工具和錯誤輸出。</p><p>因此， ‵LingaScript‵ 目前所做的，是讓支援的中文語法可分析為對應的 symbol，並預設將命令行工具設成對應的本地化語言。如此一來就可以得到較完整的使用本地化語言的開發體驗。</p><div class="mermaid" data-mermaid-src="graph LR
   TypeScript -- 多語言關鍵字 --> LingaScript
   TypeScript -- 本地化命令行 --> LingaScript
   TypeScript -- 本地化錯誤回報 --> LingaScript">graph LR
   TypeScript -- 多語言關鍵字 --&gt; LingaScript
   TypeScript -- 本地化命令行 --&gt; LingaScript
   TypeScript -- 本地化錯誤回報 --&gt; LingaScript</div><p>因為看到 CTS 改版不易的問題，我使用自己開發，基於 Google 提供的 diff-match-patch 包裝的 <a href="https://www.npmjs.com/package/file-patch" target="_blank" rel="noopener noreferrer">file-patch</a> 工具，來對修改後的程式碼和 Typescript 原始碼做 diff/patch。‵LingaScript‵ 專案中保存了修改後的 compiler 相關檔案和 diff 檔。透過 patch 的方式更容易相容版本升級時的改動。</p><p>具體可以查看相關用到的命令 <a href="https://github.com/gasolin/lingascript/blob/master/package.json#L14" target="_blank" rel="noopener noreferrer">https://github.com/gasolin/lingascript/blob/master/package.json#L14</a></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="其他想法">其他想法<a href="#其他想法" class="hash-link" aria-label="Direct link to 其他想法" title="Direct link to 其他想法">​</a></h2><p>‵LingaScript‵ 目前的架構不僅止於能支援繁簡中文語法，只要加上對應的關鍵字檔案，也可以很快地支援其他語種，讓開發者或講師得以用熟悉的語言來介紹並執行 Javascript 相容的程式。</p><p>如果有興趣的話，歡迎前往 <a href="https://github.com/gasolin/lingascript" target="_blank" rel="noopener noreferrer">https://github.com/gasolin/lingascript</a> 討論或提出想法。</p>]]></content>
        <category label="lingascript" term="lingascript"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[個人工具箱（2019三月）]]></title>
        <id>https://blog.gasolin.idv.tw/tools/tooling-in-2019-Mar</id>
        <link href="https://blog.gasolin.idv.tw/tools/tooling-in-2019-Mar"/>
        <updated>2019-03-07T16:30:00.000Z</updated>
        <summary type="html"><![CDATA[先記錄下來手邊使用的工具，才有機會從繁雜中歸納出簡單的使用規則。]]></summary>
        <content type="html"><![CDATA[<p><code>先記錄下來手邊使用的工具，才有機會從繁雜中歸納出簡單的使用規則。</code></p><p>2011<sup id="fnref-1-6bbf72"><a href="#fn-1-6bbf72" class="footnote-ref">1</a></sup>年時紀錄了一次當時的個人工具箱，2016 年開始再次紀錄自己手邊工具箱的改變，後來漸漸變成了常規文章 <sup id="fnref-2-6bbf72"><a href="#fn-2-6bbf72" class="footnote-ref">2</a></sup> <sup id="fnref-3-6bbf72"><a href="#fn-3-6bbf72" class="footnote-ref">3</a></sup> [^4 ][^5 ]<sup id="fnref-6-6bbf72"><a href="#fn-6-6bbf72" class="footnote-ref">6</a></sup>🤹。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="主要裝備">主要裝備<a href="#主要裝備" class="hash-link" aria-label="Direct link to 主要裝備" title="Direct link to 主要裝備">​</a></h2><ul><li><p>💻 Dell XPS 13 (8550), i7 4GHz x4, 8GB RAM, 13.3" LCD，作業系統：<a href="/tools/elementary_juno">Elementary OS + Windows</a></p></li><li><p>📱 <a href="https://www.asus.com/tw/Phone/ZenFone-5-ZE620KL/Tech-Specs/" target="_blank" rel="noopener noreferrer">Zenfone 5</a>, Android 9(Pie), Snapdragon 636, 6.2" Super IPS</p></li><li><p>🎧  Jabra Elite 65t (備用：Sony WI-1000 降噪耳機):</p></li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="️-外出攜帶">🚶‍♂️ 外出攜帶<a href="#️-外出攜帶" class="hash-link" aria-label="Direct link to 🚶‍♂️ 外出攜帶" title="Direct link to 🚶‍♂️ 外出攜帶">​</a></h2><ul><li>💻 Dell XPS 13 (8550)</li><li>📱 Zenfone 5</li><li>🔌 小米 45W 電源</li><li>🖱 羅技 M720 滑鼠</li><li>🎧  Jabra Elite 65t</li><li>USB C/Micro USB 雙頭轉接線</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="-家">🏠 家<a href="#-家" class="hash-link" aria-label="Direct link to 🏠 家" title="Direct link to 🏠 家">​</a></h3><ul><li>🔌 小米 45W 電源</li><li>🖱羅技 M720 滑鼠</li><li>📦 Synology NAS: 電影，影集，照片，資料備份</li><li>備用：🖥️ 24" LCD</li><li>備用：⌨️ 羅技 K375s 鍵盤</li><li>備用：💡 Yeelight LED 燈泡</li><li>備用：🕶️ Oculus Go: 看影片</li><li>備用 💻 Macbook Air 13", 2012 年版</li><li>備用 📙 Kindle Voyage</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="和上一季相比的改變">和上一季相比的改變：<a href="#和上一季相比的改變" class="hash-link" aria-label="Direct link to 和上一季相比的改變：" title="Direct link to 和上一季相比的改變：">​</a></h3><p>主力用💻 Dell XPS 13" 搭配🖱羅技 M720 滑鼠。現在幾乎不坐在 LCD 前。同時，因為筆電儲存 256GB 分作兩半其實不是很夠用的緣故，作業系統也只留下了 Elementary OS。</p><p>現在的工作型態比較常在家或外出到定點工作，和上一季最大的改變就是使用🔌 小米 45W 電源來取代 XPS 的電源線和 Switch 的電源線。小米 45W 電源可為💻 筆電與 🎮Nintendo Switch 供電，省下帶兩大塊電源線的麻煩。再加帶很久以前買的 5000mAh 小米電源和 USB C/Micro USB 雙頭轉接線，可解決大部分手機 / 耳機的充電問題。</p><p>考慮買一顆紫米 10 15000mAh，這樣一顆就可為筆電 / 遊戲機 / 手機 / 耳機，這樣平時出門都不用帶電源線了。(但其實平常也不會帶遊戲機，換 15000mAh 似乎要帶的更重 XD)</p><div class="mermaid" data-mermaid-src="graph LR
LCD -- DVI --- Notebook
LCD -- HDMI --- hub{HDMI Hub}
hub --- ns[Nintendo Switch]">graph LR
LCD -- DVI --- Notebook
LCD -- HDMI --- hub{HDMI Hub}
hub --- ns[Nintendo Switch]</div><p>⌨️ 羅技 K375s 鍵盤與🖱羅技 M720 滑鼠，兩者特點都是同時支援使用 USB 或藍牙控制設備，讓我可以用一套鍵鼠控制多種設備。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="️-網站工具">🕸️ 網站工具<a href="#️-網站工具" class="hash-link" aria-label="Direct link to 🕸️ 網站工具" title="Direct link to 🕸️ 網站工具">​</a></h3><ul><li>🕸️ 主要瀏覽器：<a href="https://www.mozilla.org/en-US/firefox/products/" target="_blank" rel="noopener noreferrer">Firefox</a></li><li>瀏覽器插件<ul><li>顏文字查詢：Emoji cheatsheet</li><li>翻譯：ImTranslator</li><li>拼字訂正：Grammarly</li><li>密碼管理：Bitwarden</li><li>擋廣告：uBlock Origin</li></ul></li><li>瀏覽器常駐分頁<ul><li>✉️ <a href="http://mail.google.com/" target="_blank" rel="noopener noreferrer">GMail</a>, Inbox</li><li>✅待辦事項：<a href="https://todoist.com/" target="_blank" rel="noopener noreferrer">Todoist</a> (付費)</li><li>Slack</li></ul></li><li>👥 主要社交網站：<a href="http://www.facebook.com/" target="_blank" rel="noopener noreferrer">Facebook</a>、<a href="https://twitter.com/gasolin" target="_blank" rel="noopener noreferrer">Twitter</a></li><li>📝 記事：<a href="http://keep.google.com/" target="_blank" rel="noopener noreferrer">Google keep</a>, Google Doc</li><li>💾 網路硬碟：<a href="http://www.dropbox.com/" target="_blank" rel="noopener noreferrer">Dropbox</a>, 主要用作同步照片</li><li>🔑密碼管理：<a href="https://www.bitwarden.com/" target="_blank" rel="noopener noreferrer">Bitwarden</a></li><li>📰 新聞聚合：<a href="https://feedly.com/" target="_blank" rel="noopener noreferrer">Feedly</a></li><li>📘 閱讀紀錄：<a href="https://share.readmoo.com/mooer/lifaicqb9/bookshelf/gasolin/read" target="_blank" rel="noopener noreferrer">Readmoo 分享書</a></li><li>🎥 看電影記錄：<a href="http://www.douban.com/" target="_blank" rel="noopener noreferrer">豆瓣</a></li><li>🗂️ 個人網站：<a href="http://www.gasolin.idv.tw" target="_blank" rel="noopener noreferrer">個人網站</a>, <a href="https://github.com/gasolin/blog/" target="_blank" rel="noopener noreferrer">Github</a></li><li>🗂️ 個人履歷：<a href="https://www.linkedin.com/in/fredglin/" target="_blank" rel="noopener noreferrer">Linkedin</a></li><li>🔗 IFTTT <a href="/life/personal-automation-in-2018">自動化生活紀錄 2018</a></li><li>📺 <a href="https://www.youtube.com/" target="_blank" rel="noopener noreferrer">Youtube</a></li><li>👛 電子錢包<a href="https://www.myetherwallet.com/" target="_blank" rel="noopener noreferrer">MyEtherWallet</a>, <a href="/crypto/setup_ledger_nano_on_linux">Ledger Nano S</a></li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="設計工具">設計工具<a href="#設計工具" class="hash-link" aria-label="Direct link to 設計工具" title="Direct link to 設計工具">​</a></h3><ul><li>螢幕動畫錄製： <a href="https://github.com/phw/peek" target="_blank" rel="noopener noreferrer">Peek</a>(Linux), 備用 <a href="http://www.recordit.co/" target="_blank" rel="noopener noreferrer">Recordit</a>(Mac)</li><li>心智圖：Coggle, 備用 XMind</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="開發工具">開發工具<a href="#開發工具" class="hash-link" aria-label="Direct link to 開發工具" title="Direct link to 開發工具">​</a></h3><ul><li>編輯器：VS Code<ul><li>Blank Line at the End</li><li>Diff Tool</li><li>EditorConfig for VSCode</li><li>Guides: more guide line</li><li>GitLens: more git info</li><li>Settings Sync</li><li>solidity</li><li>Trailing Spaces</li></ul></li><li>版本控制：git</li><li>套件管理：apt (Linux), <a href="https://github.com/creationix/nvm" target="_blank" rel="noopener noreferrer">nvm</a>, yarn, Chocolatey(windows)</li><li>🛎️  專注工具：🍅 Rush (蕃茄鐘)</li></ul><p>若需要在 Windows 上開發，能用 Chocolatey 處理的就用 Chocolatey 處理。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="娛樂工具">娛樂工具<a href="#娛樂工具" class="hash-link" aria-label="Direct link to 娛樂工具" title="Direct link to 娛樂工具">​</a></h3><ul><li>🎮Nintendo Switch</li><li>🕶️ Oculus Go (少用)</li><li>🎮Steam /vlc (少用)</li></ul><p>因為攜帶便利，現在主要只玩 NS 上的遊戲。Steam 上看到喜歡的遊戲，也盡量等 NS 上出了再買。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="-android-手機應用">📱 Android 手機應用<a href="#-android-手機應用" class="hash-link" aria-label="Direct link to 📱 Android 手機應用" title="Direct link to 📱 Android 手機應用">​</a></h2><ul><li>🕸️ 瀏覽器：Brave</li><li>🔔 網頁更新通知：Web Alert</li><li>📰 閱讀：Feedly, Readmoo, Pocket</li><li>✉️ 信箱：Inbox, Gmail</li><li>🗺️ 地圖：Google 地圖</li><li>記事：Keep</li><li>內建相機，內建時鐘</li><li>相簿：內建相簿，Google 相簿，Dropbox</li><li>社交：Facebook, LINE, Twitter (網頁版)</li><li>待辦事項：<a href="https://play.google.com/store/apps/details?id=com.todoist" target="_blank" rel="noopener noreferrer">Todoist</a></li><li>🔐 密碼管理：Bitwarden，Duo Mobile（2 步驟認證）</li><li>📺 線上影片：Youtube</li><li>音樂：Spotify</li><li>有聲書：Audible, Podcast Addict</li><li>🚶‍♂️ 健康：小米運動，Pokemon Go, 7Min workout</li><li>🕰️ 時間紀錄： SaveMyTime</li></ul><p>手機瀏覽器改使用 Brave。記帳改使用實體筆記本紀錄。<a href="/life/handbook">完整的實體筆記配置</a></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="其他工具">其他工具<a href="#其他工具" class="hash-link" aria-label="Direct link to 其他工具" title="Direct link to 其他工具">​</a></h3><ul><li>旅遊：Google 翻譯，TripAdvisor</li><li>影片播放：MX Player, DS video</li><li>記錄看書狀況：Readmoo 分享書</li><li>線上學習：Udemy, EggHead.io (網頁版)</li><li>IFTTT</li><li>💳街口支付</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="reference">Reference<a href="#reference" class="hash-link" aria-label="Direct link to Reference" title="Direct link to Reference">​</a></h2><ul><li><sup id="fnref-1-6bbf72"><a href="#fn-1-6bbf72" class="footnote-ref">1</a></sup> <a href="/tools/tooling-in-2011">個人工具箱 2011</a></li><li><sup id="fnref-2-6bbf72"><a href="#fn-2-6bbf72" class="footnote-ref">2</a></sup> <a href="/tools/tooling-in-2016">個人工具箱 2016</a></li><li><sup id="fnref-3-6bbf72"><a href="#fn-3-6bbf72" class="footnote-ref">3</a></sup> <a href="/tools/tooling-in-2017">個人工具箱 2017</a></li><li><sup id="fnref-4-6bbf72"><a href="#fn-4-6bbf72" class="footnote-ref">4</a></sup> <a href="/tools/tooling-in-2017-sep">個人工具箱 2017 九月</a></li><li><sup id="fnref-5-6bbf72"><a href="#fn-5-6bbf72" class="footnote-ref">5</a></sup> <a href="/tools/tooling-in-2018-feb">個人工具箱 2018 二月</a></li><li><sup id="fnref-6-6bbf72"><a href="#fn-6-6bbf72" class="footnote-ref">6</a></sup> <a href="/tools/tooling-in-2018-jun">個人工具箱 2018 六月</a></li></ul>]]></content>
        <category label="life" term="life"/>
        <category label="tool" term="tool"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[我的實體筆記本配置 (2019-Q1版)]]></title>
        <id>https://blog.gasolin.idv.tw/life/handbook</id>
        <link href="https://blog.gasolin.idv.tw/life/handbook"/>
        <updated>2019-02-23T16:10:46.000Z</updated>
        <summary type="html"><![CDATA[為了平衡日常太依靠電子產品的趨向，前年開始就嘗試使用實體筆記本作一些紀錄，2018一月中開始嘗試養成更頻繁地使用實體筆記本的習慣。在幾經調整後，目前我使用B5方格筆記本做基礎，搭配不同的魔擦筆來作筆記。實體筆記本的好處是除了一般的紀錄，還可以隨意畫心智圖，黏照片，貼紙，蓋印章等。在紀錄的過程中，取得某種程度的內心平靜。]]></summary>
        <content type="html"><![CDATA[<p>為了平衡日常太依靠電子產品的趨向，前年開始就嘗試使用<code>實體筆記本</code>作一些紀錄，2018 一月中開始嘗試養成更頻繁地使用<code>實體筆記本</code>的習慣。在幾經調整後，目前我使用 B5 方格筆記本做基礎，搭配不同的魔擦筆來作筆記。實體筆記本的好處是除了一般的紀錄，還可以隨意畫心智圖，黏照片，貼紙，蓋印章等。在紀錄的過程中，取得某種程度的內心平靜。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="基本配置">基本配置<a href="#基本配置" class="hash-link" aria-label="Direct link to 基本配置" title="Direct link to 基本配置">​</a></h2><ul><li>一本 30~40 元左右的 B5 方格筆記本 📓 </li><li>Storage.it 筆記本封套</li><li>搭配 5 隻筆 :pen:<ul><li>Pilot FRIXION BALL Slim 0.38 藍色筆桿 + 0.5 魔擦筆筆芯</li><li>Pilot HI-TEC-C coleto 雙色筆桿 + 0.38 紅 / 綠筆芯</li><li>Pilot FRIXION light 水藍色魔擦螢光筆</li><li>Pilot FRIXION COLORS 褐，黑色魔擦筆</li></ul></li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="頁面配置">頁面配置<a href="#頁面配置" class="hash-link" aria-label="Direct link to 頁面配置" title="Direct link to 頁面配置">​</a></h2><p>在開始一本新筆記本時會做以下事</p><ul><li>右下角寫下隔頁的頁碼 📄 </li></ul><p>順便了解這本筆記本有多少頁可寫</p><ul><li>索引頁 📇 </li></ul><p>參考各種筆記術書籍，我在每本筆記本前幾頁會空出<code>索引</code>區，將筆記本內容索引起來，以便之後查找。</p><ul><li>寶地圖頁 🏆 🗺️ </li></ul><p>貼上一些感覺幸福的圖片，和較中長期的目標</p><ul><li>子彈筆記符號頁 🅱️ </li></ul><p>簡單的子彈筆記符號 (<code>. 任務</code>, <code>x 完成</code>, <code>&gt; 延期</code>, <code>^ 開始</code>, <code>-&gt; 跳頁</code>, <code>&lt;- 續上頁</code>)
個人的簡寫 (<code>B 看的書</code>, <code>Y Youtube</code>, <code>R 閱讀文章</code>, <code>M 看的電影</code>, <code>S 看的劇</code>, <code>A 透過 Audible 聽的書</code>, <code>P 透過 Podcast 聽的節目</code>)</p><ul><li>Future Log 🔮 </li></ul><p>接下來幾個月已預定的重要事項，比較細的還是用 Google 日曆。</p><ul><li><p>回顧頁 :thinking:</p><p>每本筆記本的最後一頁是回顧頁。分成<code>Keep, Problem, Try</code>三個欄位。邊寫邊補</p><ul><li>Keep: 什麼習慣值得保持</li><li>Problem: 記筆記 / 生活的過程中遇到什麼問題</li><li>Try: 根據看到的問題，在下一本（或這一本）想嘗試的改善方法</li></ul></li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="內容頁">內容頁<a href="#內容頁" class="hash-link" aria-label="Direct link to 內容頁" title="Direct link to 內容頁">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="日記格式">日記格式<a href="#日記格式" class="hash-link" aria-label="Direct link to 日記格式" title="Direct link to 日記格式">​</a></h3><ul><li>標題為 月 / 日，(可選加 天氣，簡單總結)</li><li>日計帳 (分作三欄：投資，消費，花費)</li><li>簡易工作日誌、當日聽到看到值得紀錄的文章，影片等</li><li>看書的筆記、Quote、心得、照片、車票、門票等。</li><li>日與日之間，加上分隔線。</li></ul><p>偶而會到附近的超商或家樂福，將照片從手機傳到<code>立可得</code>快印機台，將四張照片印成一張 4x6 的照片 (一張 6 元) 印出，剪開貼到筆記本中。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="檢討">檢討<a href="#檢討" class="hash-link" aria-label="Direct link to 檢討" title="Direct link to 檢討">​</a></h2><p>大前研一力推 A4 大小的筆記本，可以較不被筆記本寬度限制地思考。</p><p>原來我也使用 A4 筆記本，但幾個月前以攜帶便利（Storage.it 筆記本封套最大只出 B5）為考量，改採 B5 大小。在使用幾個月後，現在確實感覺偏小，下一本我會考慮換回 A4。</p><p>我也有做數位版的每月回顧筆記，若持續使用順利的話再來分享。</p><p>PS: 暫時還沒想好（也還沒需求）實體筆記該如何數位化。</p>]]></content>
        <category label="tooling" term="tooling"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Tuning for my daily Elementary OS Juno]]></title>
        <id>https://blog.gasolin.idv.tw/tools/elementary_juno</id>
        <link href="https://blog.gasolin.idv.tw/tools/elementary_juno"/>
        <updated>2019-02-22T14:30:46.000Z</updated>
        <summary type="html"><![CDATA[I've been use Elementary OS as my primary laptop OS over a year and have been written some posts for it.]]></summary>
        <content type="html"><![CDATA[<p>I've been use Elementary OS as my primary laptop OS over a year and have been <a href="/tools/advanced_elementary_os_usage">written some posts</a> for it.
I Upgraded to Elementary OS Juno at December last year. Juno is based on Ubuntu 18.04, the experience is very positive. Most things works fine and not much things need to tune for daily usage.</p><p>Here's my setup for my Dell XPS 13-9360 laptop.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="1-package-installer">1. Package installer<a href="#1-package-installer" class="hash-link" aria-label="Direct link to 1. Package installer" title="Direct link to 1. Package installer">​</a></h2><ol><li><p>Insatll <code>Eddy</code> on AppCenter instead of <code>sudo apt install gdebi</code></p></li><li><p>install essentials</p><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">sudo apt install software-properties-common git</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></li></ol><p>##　2. Setup Fonts</p><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ apt instsall firacode</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="3-bluetooth-touchpad-and-mouse">3. Bluetooth, Touchpad and Mouse<a href="#3-bluetooth-touchpad-and-mouse" class="hash-link" aria-label="Direct link to 3. Bluetooth, Touchpad and Mouse" title="Direct link to 3. Bluetooth, Touchpad and Mouse">​</a></h2><p>The Bluetooth connectoin is basically stable. No need for extra setup.</p><p>To <a href="https://elementaryos.stackexchange.com/questions/16548/touchpad-right-button-not-working-for-right-click-on-juno" target="_blank" rel="noopener noreferrer">make right click works for Touchpad</a>, go <code>Settings &gt;　Mouse &amp; TouchPad</code>, select from <code>MultiTouch</code> to <code>TouchPad</code> in <code>Physical Click</code> section.</p><p>To use logitech mouse with unifying USB dongle, you can do <code>sudo apt install solaar solaar-gnome3</code> and there will be <code>solaar-cli</code> command line tool and the GUI tool available.</p><p>To <a href="https://www.ralf-oechsner.de/opensource/page/logitech_performance_mx" target="_blank" rel="noopener noreferrer">customize the extra buttons in mouse</a>, install <code>xbindkeys</code></p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">sudo apt-get install xbindkeys xautomation x11-utils</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Then create the config file using <code>xbindkeys --defaults &gt; $HOME/.xbindkeysrc</code>.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="4-saving-power">4. Saving Power<a href="#4-saving-power" class="hash-link" aria-label="Direct link to 4. Saving Power" title="Direct link to 4. Saving Power">​</a></h2><p>tlp is a good tool for auto power management and now it can be installed through the default repo.</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">sudo apt-get install tlp</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sudo tlp start</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="5-auto-adjust-color-temperature">5. Auto adjust color temperature<a href="#5-auto-adjust-color-temperature" class="hash-link" aria-label="Direct link to 5. Auto adjust color temperature" title="Direct link to 5. Auto adjust color temperature">​</a></h2><p>It's build-in now.</p><p>Go <code>Settigns &gt; Monitor &gt; Night Light</code> to toggle it on.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="6-chinese-input-method">6. Chinese Input Method<a href="#6-chinese-input-method" class="hash-link" aria-label="Direct link to 6. Chinese Input Method" title="Direct link to 6. Chinese Input Method">​</a></h2><p>Instead of <a href="/tools/chinese-in-elementary-os">configure by yourself</a>. It's build-in now.</p><ol><li>Select <code>Traditional Chinese</code> during install Elementary OS.</li><li>Enter <code>System &gt;　Language &amp; Area &gt; Keyboard Setting &gt; Input Method Settings</code>.</li><li>Remove all other IME except <code>新酷音</code> and it just works.</li></ol><h2 class="anchor anchorWithStickyNavbar_LWe7" id="7-tweaks">7. Tweaks<a href="#7-tweaks" class="hash-link" aria-label="Direct link to 7. Tweaks" title="Direct link to 7. Tweaks">​</a></h2><p>Can use elementary-tweaks to easily change system font to <code>Noto Sans CJK TC regular</code> instead of <code>Open Sans</code></p><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">sudo add-apt-repository ppa:philip.scott/elementary-tweaks</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sudo apt update</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sudo apt install elementary-tweaks</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Then open <code>Tweaks</code> in System Settigns panel.</p>]]></content>
        <category label="linux" term="linux"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Interact Bitfinex API with Node-RED]]></title>
        <id>https://blog.gasolin.idv.tw/tools/node-red-contrib-bitfinex</id>
        <link href="https://blog.gasolin.idv.tw/tools/node-red-contrib-bitfinex"/>
        <updated>2019-01-07T14:33:42.000Z</updated>
        <summary type="html"><![CDATA[Imgur]]></summary>
        <content type="html"><![CDATA[<p></p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">Anticipate how API choices and abstractions impact the way other people would solve the problem</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><ul><li></li></ul><p>There are many ways to access Bitfinex API to get most of Bitfinex exchange functionalities. For example, you can access REST API, websocket API, or call the language specific API library to eaze the interaction efforts. But in my opinion interact via Node-RED Bitfinex function block is the most easiest one.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="getting-start-with-node-red-and-bitfinex-api">Getting start with Node-RED and Bitfinex API<a href="#getting-start-with-node-red-and-bitfinex-api" class="hash-link" aria-label="Direct link to Getting start with Node-RED and Bitfinex API" title="Direct link to Getting start with Node-RED and Bitfinex API">​</a></h2><p>To get start, you can </p><ol><li>install Node-RED <code>npm install -g node-red</code>.</li><li>Start Node-RED via <code>node-red</code> command, then go <code>settings &gt; Palette &gt; Install</code> tab in node-red</li><li>search <code>bitfinex</code> to install this module.</li></ol><h2 class="anchor anchorWithStickyNavbar_LWe7" id="interact-with-node-red">Interact with Node-RED<a href="#interact-with-node-red" class="hash-link" aria-label="Direct link to Interact with Node-RED" title="Direct link to Interact with Node-RED">​</a></h2><p>Node-RED is a great way to interact with everything online, with a more intuitive interface.</p><p>To simplify the interaction with Bitfinex,
I wrapped the <a href="https://www.npmjs.com/package/node-red-contrib-bitfinex" target="_blank" rel="noopener noreferrer">Bitfinex function block for Node-RED</a>, which makes bitfinex API very easy to access in Node-RED. You can visually show exchange data in node-red's dashboard, mashup with other services, or trade from weird objects around your house.</p><p>For example, you can follow the screenshot to make below REST API work.</p><p></p><p>Access websocket API is very simple as well</p><p></p><p>You can use configuration block to put your apiKey and apiSecret.</p><p></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="visualize-data-with-node-red-dashboard">Visualize data with Node-RED dashboard<a href="#visualize-data-with-node-red-dashboard" class="hash-link" aria-label="Direct link to Visualize data with Node-RED dashboard" title="Direct link to Visualize data with Node-RED dashboard">​</a></h2><p>Once you got the data via bitfinex function block, it's pretty easy to visualize value and diagram with <a href="https://flows.nodered.org/node/node-red-dashboard" target="_blank" rel="noopener noreferrer">Node-RED dashboard</a></p><p></p><p></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="one-more-thing">One more thing<a href="#one-more-thing" class="hash-link" aria-label="Direct link to One more thing" title="Direct link to One more thing">​</a></h2><p><code>You may not know</code> the <a href="https://docs.bitfinex.com/v2/reference#rest-public-tickers" target="_blank" rel="noopener noreferrer">tickers api</a> allow query multiple symbols at once, like <code>rest.tickers(['tETHUSD', 'tBTCUSD'])</code> and this functoin block supports multiple outputs as well!</p><p></p><p>If you make something interesting with Bitfinex API and node-RED, please let me know! (You can share to <a href="https://github.com/gasolin/node-red-contrib-bitfinex/issues" target="_blank" rel="noopener noreferrer">https://github.com/gasolin/node-red-contrib-bitfinex/issues</a>)</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="other-way-to-interact-with-bitfinex-api">Other way to interact with Bitfinex API<a href="#other-way-to-interact-with-bitfinex-api" class="hash-link" aria-label="Direct link to Other way to interact with Bitfinex API" title="Direct link to Other way to interact with Bitfinex API">​</a></h2><p>For reference, You can learn more ways to access the Bitfinex API below.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="inreact-with-the-rest-api">Inreact with the REST API<a href="#inreact-with-the-rest-api" class="hash-link" aria-label="Direct link to Inreact with the REST API" title="Direct link to Inreact with the REST API">​</a></h3><p>We could read the <a href="https://docs.bitfinex.com/v2/reference#rest-public-tickers%60" target="_blank" rel="noopener noreferrer">API doc</a> and find we can get the recent ETH/USD pair states via open the browser and visit <a href="https://api.bitfinex.com/v2/tickers?symbols=tETHUSD" target="_blank" rel="noopener noreferrer">https://api.bitfinex.com/v2/tickers?symbols=tETHUSD</a></p><p>We'll get an minimal array as the returned data. Refer to the doc we know each column means:</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">[</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">// on trading pairs (ex. tBTCUSD)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  [</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    SYMBOL,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    BID, </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    BID_SIZE, </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    ASK, </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    ASK_SIZE, </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    DAILY_CHANGE, </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    DAILY_CHANGE_PERC, </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    LAST_PRICE, </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    VOLUME, </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    HIGH, </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    LOW</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  ],</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">]</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Then we can process the array to get what we want. For example, to access the last price of ETH/USD, we could find the result from <code>array[0][7]</code> (The first item in returned array denotes ETH/USD result array, the 8th item(the array count from 0 so its 7) in ETH/USD result array is the LAST_PRICE)</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="interact-with-api-library">Interact with API library<a href="#interact-with-api-library" class="hash-link" aria-label="Direct link to Interact with API library" title="Direct link to Interact with API library">​</a></h3><p>But for more complicated interaction like place an order with authenticated API, we generally prefer to call language specific library to simplify the process.</p><p>The <a href="https://docs.bitfinex.com/v2/docs/open-source-libraries" target="_blank" rel="noopener noreferrer">Bitfinex official doc</a> listed several open source language specific libraries for developers.</p><p>For example, we can use nodejs/javascript to access Bitfinex API via <a href="https://github.com/bitfinexcom/bitfinex-api-node" target="_blank" rel="noopener noreferrer">Bitfinex's nodejs API library</a></p><p>To install the library, call</p><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ npm install bitfinex-api-node</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Then you can edit a <code>demo.js</code> file with content:</p><div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> </span><span class="token constant" style="color:#36acaa">BFX</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">require</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'bitfinex-api-node'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> bfx </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">BFX</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> rest </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> bfx</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">rest</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">rest</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">tickers</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">'tETHUSD'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">then</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">tickers</span><span class="token plain"> </span><span class="token arrow operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token console class-name">console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">log</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">tickers</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>to get same result as directly call the REST API on the browser.</p><p>Though You may not know the node API build-in the data model mapping, which saves you from manually parsing the returned result.</p><p>All you need to do is pass <code>{ transform: true}</code> parameter when access the <code>bfx.rest</code> method:</p><div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> rest </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> bfx</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">rest</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token literal-property property" style="color:#36acaa">transform</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Then you can get value via <code>ticker.lastPrice</code>, <code>ticker.high</code>...</p><p>If you want to access authenticated APIs, just pass the <code>apiKey</code> and <code>apiSecret</code> when construct the <code>bfx</code> api instance.</p><div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> bfx </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">BFX</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token literal-property property" style="color:#36acaa">apiKey</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'...'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token literal-property property" style="color:#36acaa">apiSecret</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'...'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>The API call seems not hard but it did require some effort to make all works.</p><p><strong>Disclosure:</strong> I am currently working on Bitfinex. <a href="https://github.com/gasolin/node-red-contrib-bitfinex" target="_blank" rel="noopener noreferrer">Node-red-contrib-bitfinex</a> is the personal project though.</p>]]></content>
        <category label="bitfinex" term="bitfinex"/>
        <category label="nodered" term="nodered"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[用Raspberry Pi組裝一套小朋友使用的電腦]]></title>
        <id>https://blog.gasolin.idv.tw/tools/raspberrypi-kano-os</id>
        <link href="https://blog.gasolin.idv.tw/tools/raspberrypi-kano-os"/>
        <updated>2018-12-02T00:43:33.000Z</updated>
        <summary type="html"><![CDATA[之前嘗試過組裝一些智能玩具，但能讓小朋友持續保持興趣遊玩的並不多。我發現這些玩具一旦需要編程時，多少還是需準備一台電腦。與大人共用電腦多有不便，因此不如就再利用每個人家中多出的Raspberry Pi(?)與生灰的電子設備，幫小朋友準備好所需的相關材料，協助他組一台精簡卻堪用的電腦吧。]]></summary>
        <content type="html"><![CDATA[<p>之前嘗試過組裝一些智能玩具，但能讓小朋友持續保持興趣遊玩的並不多。我發現這些玩具一旦需要編程時，多少還是需準備一台電腦。與大人共用電腦多有不便，因此不如就再利用每個人家中多出的 Raspberry Pi (?) 與生灰的電子設備，幫小朋友準備好所需的相關材料，協助他組一台精簡卻堪用的電腦吧。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="使用的設備列表">使用的設備列表<a href="#使用的設備列表" class="hash-link" aria-label="Direct link to 使用的設備列表" title="Direct link to 使用的設備列表">​</a></h2><p>我參考的 BUILD（最近 Switch 上的暗黑破壞神 3 玩多了...）是<a href="https://kano.me/store/us/products/computer-kit-touch" target="_blank" rel="noopener noreferrer">KANO Computer Kit Touch</a>套件，這是一套由專門售賣以 Raspberry Pi 為核心的教育用電腦提供商 KANO 製作的。現在整套特價在～$230 左右，相較其他的 STEM 教具，整套的價格相當合理。如果你人在美國，家中沒有冗餘的電腦設備或想追求更好的使用體驗，相當建議直接購買一套。</p><p>這邊是其他人的<a href="https://www.youtube.com/watch?v=If-I1b-c-ZI" target="_blank" rel="noopener noreferrer">開箱影片</a>與<a href="https://www.laptopmag.com/reviews/laptops/kano-computer-kit" target="_blank" rel="noopener noreferrer">評測</a>，介紹了使用到的硬體與作業系統</p><iframe width="560" height="315" src="https://www.youtube.com/embed/If-I1b-c-ZI" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture"></iframe><p>以下列出我有用到的設備列表，價格是當初印象裡購入各種設備時的價錢。</p><ul><li>Raspberry Pi 主版<ul><li>建議使用 3B 或 3B+，速度上才接近可用的電腦</li><li>(Raspberry Pi 3B ~NT 1450)</li></ul></li><li>支援 HDMI 的螢幕<ul><li>(手邊現有的 23 吋桌面螢幕～NT 4300)</li><li>(打算再購買 10 吋觸控螢幕～NT 3000)</li></ul></li><li>播音設備<ul><li>沒有喇叭的話，用手機附的耳機聽也行 (但為了小朋友聽力，要用耳機也建議用耳罩式或頭戴式)</li><li>(手機附的耳機，~NT 0)</li><li>(考慮弄個手機喇叭來接～NT 100)</li></ul></li><li>電源<ul><li>可用舊手機的 Micro USB 充電線與充電頭，或任何手邊的行動電源</li><li>(小米行動電源 5000 ~NT 300)</li></ul></li><li>USB 鍵盤 / 滑鼠<ul><li>重用任何現有的鍵鼠，如果有觸控螢幕就不用準備滑鼠</li><li>(可以找到帶觸控版的鍵盤～NT600, 我是拿手邊羅技 Unifying 鍵盤 / 滑鼠。)</li></ul></li><li>Micro SD 卡 &gt;16GB<ul><li>(32GB SD 卡～NT400)</li></ul></li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="準備記憶卡作業系統">準備記憶卡（作業系統）<a href="#準備記憶卡作業系統" class="hash-link" aria-label="Direct link to 準備記憶卡（作業系統）" title="Direct link to 準備記憶卡（作業系統）">​</a></h2><p>作業系統我的選擇並非常見的<code>Raspbian</code>，而是刷上「KANO」公司為他們販賣的套件提供的 KANO OS。KANO OS 作業系統與相關設備的說明書都有提供<a href="http://developers.kano.me/downloads/" target="_blank" rel="noopener noreferrer">自由下載</a>使用。</p><p>將 zip 檔下載下來後，將 Micro SD 卡放入轉接器並插入電腦，用任意映像檔燒錄軟體將系統燒錄進 SD 卡中備用。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="組裝">組裝<a href="#組裝" class="hash-link" aria-label="Direct link to 組裝" title="Direct link to 組裝">​</a></h2><p>由於 Raspberry Pi 把組裝電腦時複雜的部份都簡化了，組裝起來非常簡單，即使是國小小朋友也能順利完成。</p><ul><li>將 Micro SD 記憶卡插入 Raspberry Pi (對低年級小朋友來說插卡的動作太精細了，可以先幫忙做)</li><li>插上鍵盤 / 滑鼠用的 USB 接收器</li><li>接上 Micro USB 與電源</li><li>將 HDMI 線接到螢幕上</li></ul><p>最後連接好的架構大概是這樣：</p><div class="mermaid" data-mermaid-src="graph TD
pi[Raspberry Pi] --HDMI-->S[螢幕]
K[鍵盤] -- USB --> pi
M[滑鼠] -- USB --> pi
p((電源)) -- MicroUSB --- pi
pi --> v[喇叭]
m[記憶卡] -.- pi">graph TD
pi[Raspberry Pi] --HDMI--&gt;S[螢幕]
K[鍵盤] -- USB --&gt; pi
M[滑鼠] -- USB --&gt; pi
p((電源)) -- MicroUSB --- pi
pi --&gt; v[喇叭]
m[記憶卡] -.- pi</div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="上手體驗">上手體驗<a href="#上手體驗" class="hash-link" aria-label="Direct link to 上手體驗" title="Direct link to 上手體驗">​</a></h2><p>雖然手邊還沒有合用的觸控螢幕可試，但即使用滑鼠鍵盤操作，感覺 KANO OS 介面也很親和。從插上記憶卡，接上 Micro USB 初次開機開始，KANO OS 將整個電腦的啟動流程，變成了一段難忘的遊戲過程。</p><p>KANO OS 除了提供 Raspbian 中也有附的 Minecraft 等遊戲和各種教育應用，還提供了一套將電腦教學與各種小遊戲 / 程式整合成的像素 RPG。</p><p>使用者在電腦設備化成的地圖中行走，初次進入地點是在 SD 沙灘 (SD Beach)，可前往向量村（Vector Village），網路港 (Port Ether)，蟒蛇叢林 (Python Jungle) 等地，探索電腦世界的奧秘。</p><p>在 SD 沙灘上，馬上可以玩到<code>PONG</code>這個在電子遊戲歷史中，也具有非凡意義的經典遊戲。</p><p>走到向量村則是玩<code>Make Art</code>遊戲，可以用鍵盤輸入程式命令來繪圖。KANO 近期特別活動是畫骷髏頭 (Skull) 等萬聖節相關圖案，整個過程都可照著一個步驟一個步驟輸入的提示進行，相當友善。</p><p>到了蟒蛇叢林，則是從<code>使用命令行</code>開始玩起。透過輸入<code>python snake</code>命令來啟動文字版貪食蛇遊戲：過程中會提示使用者可以在輸入命令時加入一些參數，加入參數後遊戲的設定也會跟著調整，使用者可以在遊玩過程中學到命令行的用法，非常地高竿。</p><p>我在整個陪伴孩子使用的過程中，感覺就算大人玩起來，KANO OS 內容也相當豐富而有趣。KANO OS 做到了讓使用電腦充滿樂趣。非常推薦刷來試試，比起 Raspberry Pi 常搭配的 Raspbian 作業系統，KANO OS 包含更多的教學與引導，更適合入門人群與日常使用（缺點是沒中文介面，但也讓小朋友更有動力學英文）</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="其他心得">其他心得<a href="#其他心得" class="hash-link" aria-label="Direct link to 其他心得" title="Direct link to 其他心得">​</a></h2><p>如果和我一樣是羅技鍵盤 / 滑鼠，但是是分別購買的，其實有方法不需要在機器上插兩個 Unifying 接收器。只要到羅技網站下載<a href="https://support.logitech.com/zh_tw/software/unifying" target="_blank" rel="noopener noreferrer">Unifying 軟體</a>到你常用的作業系統上，安裝後即可設定鍵盤 / 滑鼠共用同個 Unifying 接收器，設定完成後，將這個 Unifying 接收器插到 Raspberry Pi 上後開機，Raspberry Pi 也可以認得你的鍵盤 / 滑鼠。</p><p>Raspberry Pi 3B 所要求的 2.5A USB 電源其實並不容易找到，一般我用 1.5A 的充電頭也能運作。</p><p>Raspberry Pi 也支援 HDMI 聲音輸出，但需要<a href="https://www.raspberrypi.org/documentation/configuration/audio-config.md" target="_blank" rel="noopener noreferrer">另行設定</a>。切換過去後，可能是因為同時要傳輸畫面與聲音，得消耗更多電源，開機容易出現<code>Low Voltage Detected</code>訊息，並導致無法正常開機。可以在開機畫面中按<code>Shift</code>鍵進入<code>Recovery</code>模式，將<code>hdmi_drive=2</code>(強制使用 HDMI 輸出聲音) 註解掉。</p>]]></content>
        <category label="kanoos" term="kanoos"/>
        <category label="raspberrypi" term="raspberrypi"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Redux Saga 真好用]]></title>
        <id>https://blog.gasolin.idv.tw/react-native/redux-saga</id>
        <link href="https://blog.gasolin.idv.tw/react-native/redux-saga"/>
        <updated>2018-10-02T15:49:00.000Z</updated>
        <summary type="html"><![CDATA[最近相當常使用Redux Saga，簡單紀錄一下。]]></summary>
        <content type="html"><![CDATA[<p>最近相當常使用<a href="https://redux-saga.js.org/" target="_blank" rel="noopener noreferrer">Redux Saga</a>，簡單紀錄一下。</p><p>比較常見用來處理 Redux 非同步操作的 Middleware 有<code>redux-thunk</code>, <code>redux-saga</code>, <code>redux-observable</code>等。之前參與開發的<a href="https://github.com/devtools-html" target="_blank" rel="noopener noreferrer">Firefox Devtools</a>使用的是修改版的<code>redux-thunk</code>。我在其中一個<a href="https://github.com/gasolin/transmonitor" target="_blank" rel="noopener noreferrer">個人專案</a>中也有試過<code>redux-observable</code>。使用 Rxjs 的感覺，是整個過去的開發觀念又被扭成另一個形狀😅 。因為整套開發的觀念不同，當後續想要修改時常常遇到一些問題。目前則多使用<code>redux-saga</code>來處理非同步相關問題。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="基本redux-state運作">基本 Redux State 運作<a href="#基本redux-state運作" class="hash-link" aria-label="Direct link to 基本 Redux State 運作" title="Direct link to 基本 Redux State 運作">​</a></h2><p>先簡單回顧一下基本的 Redux State 運作。Redux 統一儲存所有網頁前端的狀態 (<code>State</code>)。只能透過發送<code>Action</code>來通知狀態的改變，並透過<code>Reducer</code>修改當前的狀態。</p><div class="mermaid" data-mermaid-src="graph LR
Reducer{Reducer} -.-> State(State)
Disptch>Dispatch] -.-> |Action| Reducer">graph LR
Reducer{Reducer} -.-&gt; State(State)
Disptch&gt;Dispatch] -.-&gt; |Action| Reducer</div><p>基本的 Redux 僅支援同步的操作。若想支援非同步操作（promise, async, API 等）需要透過加裝<code>Middleware</code>來處理。Middleware 的功用，是改變收到<code>Action</code>後的處理流程。<code>Redux Saga</code>即是其中一種功能強大的 Middleware。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="redux-saga運作">Redux Saga 運作<a href="#redux-saga運作" class="hash-link" aria-label="Direct link to Redux Saga 運作" title="Direct link to Redux Saga 運作">​</a></h2><p>Redux Saga 的運作模型，起始自收到 Action。Saga 透過<code>takeLatest</code>或<code>take</code>監聽想處理的 Action，並呼叫對應的 generator function。在 generator function 中，可以用<code>yield</code>語句來完成各種非同步操作。</p><p>例如使用<code>select</code>語句來從目前的<code>State</code>中取得資料，使用<code>call</code>語句來呼叫 API，用<code>put</code>語句來將新的 Action 傳回 Redux 處理。</p><div class="mermaid" data-mermaid-src="graph LR
TakeLatest>TakeLatest] -.-> |Action| Saga
Saga -->|call| API
API --> |await|Saga
State -.-> select>select]
select --> Saga
Put>Put] -.-> |Action| Reducer
Saga --> Put">graph LR
TakeLatest&gt;TakeLatest] -.-&gt; |Action| Saga
Saga --&gt;|call| API
API --&gt; |await|Saga
State -.-&gt; select&gt;select]
select --&gt; Saga
Put&gt;Put] -.-&gt; |Action| Reducer
Saga --&gt; Put</div><p>一段簡單的範例：</p><div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">function</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">handleAction</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">action</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// get state from state.auth</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> auth </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#00009f">yield</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">select</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">state</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:#393A34">=&gt;</span><span class="token plain"> state</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">auth</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// async get data. fetchData is the async function.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> result </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#00009f">yield</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">call</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">auth</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">fetchData</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">auth</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// dispatch action. saveData is the action creator.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword control-flow" style="color:#00009f">yield</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">put</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">actions</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">saveData</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">result</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword module" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword module" style="color:#00009f">default</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">rootSaga</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword control-flow" style="color:#00009f">yield</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">takeLatest</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'ACTION'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> handleAction</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>把兩張圖畫在一起的話，可以看到 Redux state 與 Redux Saga 之間整體的呼叫關係。使用 Redux/Redux Saga 能將「從 UI 呼叫 -&gt; 參看現有狀態來與 API 溝通 -&gt; 根據取回值更新狀態 -&gt; 更新 UI」這樣的複雜流程，整個簡化為單向的操作。</p><div class="mermaid" data-mermaid-src="graph LR
Reducer{Reducer} -.-> State(State)
Disptch>Dispatch] -.- |Action| TakeLatest>TakeLatest]
TakeLatest -.-> |Action| Saga
Saga -->|call| API
API --> |await|Saga
State -.-> select>select]
select --> Saga
Put>Put] -.-> |Action| Reducer
Saga --> Put">graph LR
Reducer{Reducer} -.-&gt; State(State)
Disptch&gt;Dispatch] -.- |Action| TakeLatest&gt;TakeLatest]
TakeLatest -.-&gt; |Action| Saga
Saga --&gt;|call| API
API --&gt; |await|Saga
State -.-&gt; select&gt;select]
select --&gt; Saga
Put&gt;Put] -.-&gt; |Action| Reducer
Saga --&gt; Put</div><p>當然<code>Redux-saga</code>還有提供一些其他的功能，但其實<code>Redux-saga</code>就是這麼簡單。使用<code>Redux-saga</code>可以很好地運用原有的非同步處理觀念，要將 React Component 中相應的非同步函式搬出來，也不像<code>Redux-observable</code>那樣需要全部改寫。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="參考資料">參考資料<a href="#參考資料" class="hash-link" aria-label="Direct link to 參考資料" title="Direct link to 參考資料">​</a></h2><ul><li><a href="https://redux-saga.js.org/" target="_blank" rel="noopener noreferrer">https://redux-saga.js.org/</a> 或 <a href="https://redux-saga-in-chinese.js.org" target="_blank" rel="noopener noreferrer">https://redux-saga-in-chinese.js.org</a> (中文)</li><li><a href="https://bigbitecreative.com/polling-with-redux/" target="_blank" rel="noopener noreferrer">Polling with redux</a> 比較使用 Redux-saga 和 Redux-observable 寫 polling 的差異</li></ul>]]></content>
        <category label="react" term="react"/>
        <category label="redux" term="redux"/>
        <category label="saga" term="saga"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[個人工具箱2018六月]]></title>
        <id>https://blog.gasolin.idv.tw/tools/tooling-in-2018-jun</id>
        <link href="https://blog.gasolin.idv.tw/tools/tooling-in-2018-jun"/>
        <updated>2018-05-24T12:23:00.000Z</updated>
        <summary type="html"><![CDATA[先記錄下來手邊使用的工具，才有機會從繁雜中歸納出簡單的使用規則。]]></summary>
        <content type="html"><![CDATA[<p><code>先記錄下來手邊使用的工具，才有機會從繁雜中歸納出簡單的使用規則。</code></p><p>2011<sup id="fnref-1-425473"><a href="#fn-1-425473" class="footnote-ref">1</a></sup>年時紀錄了一次當時的個人工具箱，2016 年開始再次紀錄自己手邊工具箱的改變<sup id="fnref-2-425473"><a href="#fn-2-425473" class="footnote-ref">2</a></sup> <sup id="fnref-3-425473"><a href="#fn-3-425473" class="footnote-ref">3</a></sup> <sup id="fnref-4-425473"><a href="#fn-4-425473" class="footnote-ref">4</a></sup>🤹。
今年初工作上有了變化，也將家中的環境與筆記工具包含進配置列表中。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="主要裝備">主要裝備<a href="#主要裝備" class="hash-link" aria-label="Direct link to 主要裝備" title="Direct link to 主要裝備">​</a></h2><ul><li>💻 Dell XPS 13 (8550), Windows 10, i7 4GHz x4, 8GB RAM, 13.3" LCD，作業系統：<a href="/tools/xps13-elementary-os">Elementary OS + Windows</a></li><li>📱 <a href="https://oneplus.net/global/3" target="_blank" rel="noopener noreferrer">One Plus 3</a>, Android, 6GB RAM, 5.5" AMOLED</li><li>🎧 Sony WI-1000 降噪耳機</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="-家">🏠 家<a href="#-家" class="hash-link" aria-label="Direct link to 🏠 家" title="Direct link to 🏠 家">​</a></h3><ul><li>🖥️ 24" LCD</li><li>⌨️ 羅技 K375s 鍵盤</li><li>🖱 羅技 M720 滑鼠</li><li>📦 Synology NAS: 電影，影集，照片，資料備份</li><li>💡 Yeelight LED 燈泡</li><li>🕶️ Oculus Go: 看影片</li><li>備用 💻 Macbook Air 13", 2012 年版</li><li>備用 📺 Chromecast 一代</li><li>備用 🔈 Echodot</li><li>備用 Respberry Pi 3</li><li>備用 📙 Kindle Voyage</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="和上一季相比的改變">和上一季相比的改變：<a href="#和上一季相比的改變" class="hash-link" aria-label="Direct link to 和上一季相比的改變：" title="Direct link to 和上一季相比的改變：">​</a></h3><p>主力用💻 Dell XPS 13"，家中添購了一台🖥️ 24" LCD 接筆電，搭配 3 轉 1 HDMI Hub，接🎮Nintendo Switch，可滿足影音相關需求。HDMI 設備通電時會自動切換到對應的設備。</p><p>還是比較少坐在 LCD 前，因此 Chromecast 用很少，另購入 Oculus Go 看影片 / Youtube。</p><div class="mermaid" data-mermaid-src="graph LR
LCD -- DVI --- Notebook
LCD -- HDMI --- hub{HDMI Hub}
hub --- ns[Nintendo Switch]
hub --- Chromecast
hub --- rpi[Respberry Pi]">graph LR
LCD -- DVI --- Notebook
LCD -- HDMI --- hub{HDMI Hub}
hub --- ns[Nintendo Switch]
hub --- Chromecast
hub --- rpi[Respberry Pi]</div><p>⌨️ 羅技 K375s 鍵盤與🖱羅技 M720 滑鼠，兩者特點都是同時支援使用 USB 或藍牙控制設備，讓我可以用一套鍵鼠控制多種設備。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="️-網站工具">🕸️ 網站工具<a href="#️-網站工具" class="hash-link" aria-label="Direct link to 🕸️ 網站工具" title="Direct link to 🕸️ 網站工具">​</a></h3><ul><li>🕸️ 主要瀏覽器：<a href="https://www.mozilla.org/en-US/firefox/products/" target="_blank" rel="noopener noreferrer">Firefox</a></li><li>瀏覽器插件<ul><li>顏文字查詢：Emoji cheatsheet</li><li>翻譯：ImTranslator</li><li>拼字訂正：Grammarly</li><li>密碼管理：Bitwarden</li><li>擋廣告：uBlock Origin</li></ul></li><li>瀏覽器常駐分頁<ul><li>✉️ <a href="http://mail.google.com/" target="_blank" rel="noopener noreferrer">GMail</a>, Inbox</li><li>📆 <a href="http://www.google.com/calendar" target="_blank" rel="noopener noreferrer">Google 日曆</a></li><li>📒記帳: <a href="https://toshl.com" target="_blank" rel="noopener noreferrer">Toshl</a> (付費)</li><li>✅待辦事項：<a href="https://todoist.com/" target="_blank" rel="noopener noreferrer">Todoist</a> (付費)</li></ul></li><li>👥 主要社交網站：<a href="http://www.facebook.com/" target="_blank" rel="noopener noreferrer">Facebook</a>、<a href="https://twitter.com/gasolin" target="_blank" rel="noopener noreferrer">Twitter</a></li><li>📝 記事：<a href="http://keep.google.com/" target="_blank" rel="noopener noreferrer">Google keep</a>, Google Doc</li><li>💾 網路硬碟：<a href="http://www.dropbox.com/" target="_blank" rel="noopener noreferrer">Dropbox</a>, 主要用作同步照片</li><li>🔑密碼管理：<a href="https://www.bitwarden.com/" target="_blank" rel="noopener noreferrer">Bitwarden</a></li><li>📰 新聞聚合：<a href="https://feedly.com/" target="_blank" rel="noopener noreferrer">Feedly</a></li><li>📘 閱讀紀錄：<a href="https://share.readmoo.com/mooer/lifaicqb9/bookshelf/gasolin/read" target="_blank" rel="noopener noreferrer">Readmoo 分享書</a></li><li>🎥 看電影記錄：<a href="http://www.douban.com/" target="_blank" rel="noopener noreferrer">豆瓣</a></li><li>🗂️ 個人網站：<a href="http://www.gasolin.idv.tw" target="_blank" rel="noopener noreferrer">個人網站</a>, <a href="https://github.com/gasolin/blog/" target="_blank" rel="noopener noreferrer">Github</a></li><li>🗂️ 個人履歷：<a href="https://www.linkedin.com/in/fredglin/" target="_blank" rel="noopener noreferrer">Linkedin</a></li><li>🔗 IFTTT <a href="/life/personal-automation-in-2018">自動化生活紀錄 2018</a></li><li>📺 <a href="https://www.youtube.com/" target="_blank" rel="noopener noreferrer">Youtube</a></li><li>👛 電子錢包<a href="https://www.myetherwallet.com/" target="_blank" rel="noopener noreferrer">MyEtherWallet</a>, <a href="/crypto/setup_ledger_nano_on_linux">Ledger Nano S</a></li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="設計工具">設計工具<a href="#設計工具" class="hash-link" aria-label="Direct link to 設計工具" title="Direct link to 設計工具">​</a></h3><ul><li>Mockup：<a href="http://www.balsamiq.com/products/mockups" target="_blank" rel="noopener noreferrer">Balsmiq Mockups</a></li><li>螢幕動畫錄製： <a href="https://github.com/phw/peek" target="_blank" rel="noopener noreferrer">Peek</a>(Linux), <a href="http://www.recordit.co/" target="_blank" rel="noopener noreferrer">Recordit</a>(Mac)</li><li>心智圖：XMind, Coggle</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="開發工具">開發工具<a href="#開發工具" class="hash-link" aria-label="Direct link to 開發工具" title="Direct link to 開發工具">​</a></h3><ul><li>編輯器：VS Code<ul><li>Blank Line at the End</li><li>Diff Tool</li><li>EditorConfig for VSCode</li><li>Go</li><li>Guides: more guide line</li><li>GitLens: more git info</li><li>Python</li><li>Settings Sync</li><li>solidity</li><li>Trailing Spaces</li></ul></li><li>版本控制：git</li><li>套件管理：apt (Linux), <a href="https://github.com/creationix/nvm" target="_blank" rel="noopener noreferrer">nvm</a>, yarn, Chocolatey(windows)</li></ul><p>若需要在 Windows 上開發，能用 Chocolatey 處理的就用 Chocolatey 處理。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="娛樂工具">娛樂工具<a href="#娛樂工具" class="hash-link" aria-label="Direct link to 娛樂工具" title="Direct link to 娛樂工具">​</a></h3><ul><li>🎮Nintendo Switch</li><li>🕶️ Oculus Go</li><li>📺 Chromecast (少用)</li><li>🎮Steam /vlc (少用)</li></ul><p>因為攜帶便利，現在主要只玩 NS 上的遊戲。Steam 上看到喜歡的遊戲，也盡量等 NS 上出了再買。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="-android-手機應用">📱 Android 手機應用<a href="#-android-手機應用" class="hash-link" aria-label="Direct link to 📱 Android 手機應用" title="Direct link to 📱 Android 手機應用">​</a></h2><ul><li>瀏覽器：Firefox for Android</li><li>網頁更新通知：Web Alert</li><li>閱讀：Feedly, Readmoo, Pocket</li><li>信箱：Inbox, Gmail</li><li>地圖：Google 地圖</li><li>記事：Keep</li><li>內建相機，內建時鐘</li><li>相簿：內建相簿，Google 相簿，Dropbox</li><li>社交：Facebook, LINE, Twitter</li><li>待辦事項：<a href="https://play.google.com/store/apps/details?id=com.todoist" target="_blank" rel="noopener noreferrer">Todoist</a></li><li>密碼管理：Bitwarden</li><li>記帳: <a href="https://play.google.com/store/apps/details?id=com.thirdframestudios.android.expensoor" target="_blank" rel="noopener noreferrer">Toshl</a></li><li>線上影片：Youtube</li><li>音樂：豆瓣 FM, Spotify</li><li>有聲書：Audible, Podcast Addict</li><li>健康：小米運動，Pokemon Go, 7Min workout</li></ul><p>工具</p><ul><li>2 步驟認證：Duo Mobile</li><li>旅遊：Google 翻譯，TripAdvisor</li><li>影片播放：MX Player, DS video</li><li>記錄看書狀況：Readmoo 分享書</li><li>線上學習：Udemy, EggHead.io</li><li>IFTTT</li><li>💳街口支付</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="筆記工具">筆記工具<a href="#筆記工具" class="hash-link" aria-label="Direct link to 筆記工具" title="Direct link to 筆記工具">​</a></h2><ul><li>B5 方格筆記本</li><li>Storage.it 筆記本封套</li><li>搭配 5 隻筆<ul><li>Pilot FRIXION BALL Slim 0.38 藍色筆桿 + 0.5 魔擦筆筆芯</li><li>Pilot HI-TEC-C coleto 雙色筆桿 + 0.38 紅 / 綠筆芯</li><li>Pilot FRIXION light 水藍色魔擦螢光筆</li><li>Pilot FRIXION COLORS 褐，黑色魔擦筆</li></ul></li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="reference">Reference<a href="#reference" class="hash-link" aria-label="Direct link to Reference" title="Direct link to Reference">​</a></h2><ul><li><sup id="fnref-1-425473"><a href="#fn-1-425473" class="footnote-ref">1</a></sup> <a href="/tools/tooling-in-2011">個人工具箱 2011</a></li><li><sup id="fnref-2-425473"><a href="#fn-2-425473" class="footnote-ref">2</a></sup> <a href="/tools/tooling-in-2016">個人工具箱 2016</a></li><li><sup id="fnref-3-425473"><a href="#fn-3-425473" class="footnote-ref">3</a></sup> <a href="/tools/tooling-in-2017">個人工具箱 2017</a></li><li><sup id="fnref-4-425473"><a href="#fn-4-425473" class="footnote-ref">4</a></sup> <a href="/tools/tooling-in-2017-sep">個人工具箱 2017 九月</a></li><li><sup id="fnref-5-425473"><a href="#fn-5-425473" class="footnote-ref">5</a></sup> <a href="/tools/tooling-in-2018-feb">個人工具箱 2018 二月</a></li></ul>]]></content>
        <category label="life" term="life"/>
        <category label="tool" term="tool"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[做一個回覆食材營養成份的聊天機器人]]></title>
        <id>https://blog.gasolin.idv.tw/life/made-an-nutrition-bot</id>
        <link href="https://blog.gasolin.idv.tw/life/made-an-nutrition-bot"/>
        <updated>2018-03-21T17:40:00.000Z</updated>
        <summary type="html"><![CDATA[Imgur]]></summary>
        <content type="html"><![CDATA[<p></p><p>可以透過 QRCode 加入營養成份 LINE bot。</p><p>Update: 謝謝大家熱烈試用「營養成份 bot」, 因為測試帳號已達 50 人的上限，所以將遷移到新的無人數上限的「營養成份 2 bot」，請點選新的「營養成份 bot」邀請連結 <a href="https://line.me/R/ti/p/%40hoz2085q" target="_blank" rel="noopener noreferrer">https://line.me/R/ti/p/%40hoz2085q</a></p><p>歡迎分享新連結給可能需要的朋友，讓大家隨手查營養，吃得更健康。
(目前的 bot 仍然可以使用，但不再更新維護)</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="食物運動與身體平衡">食物，運動，與身體平衡<a href="#食物運動與身體平衡" class="hash-link" aria-label="Direct link to 食物，運動，與身體平衡" title="Direct link to 食物，運動，與身體平衡">​</a></h2><p>最近在看代謝型態飲食全書，裡面提到<code>吃下的東西</code>與<code>運動</code>，與體內的平衡和慢性病的產生有相當密切的關係。要讓身體重新回復到平衡的健康狀態，需要選擇適合自己的食物（營養素的比例）並搭配適當運動（有氧 + 無氧）與充足睡眠。</p><div class="mermaid" data-mermaid-src="graph LR
食物 --> 身體吸收
身體吸收 -- 影響 --> 體內系統的平衡
運動 --> 強化身體
強化身體 -- 影響 --> 體內系統的平衡
睡眠 --> 修補身體
修補身體 -- 影響 --> 體內系統的平衡">graph LR
食物 --&gt; 身體吸收
身體吸收 -- 影響 --&gt; 體內系統的平衡
運動 --&gt; 強化身體
強化身體 -- 影響 --&gt; 體內系統的平衡
睡眠 --&gt; 修補身體
修補身體 -- 影響 --&gt; 體內系統的平衡</div><p>其中我們所選擇的一天三餐與餐間的<code>飲食習慣</code>，則是潛移默化地影響我們的健康。
當我們持續吃不好的食物或錯誤的營養素比例，則讓體內的系統處在有的養分過多，有的養分不足的持續不平衡的狀態。這些不平衡讓各種體內各種系統無法正常工作。例如一餐吃進過多的精製糖份可能造成血液中的糖份快速升高，胰臟必須快速分泌大量胰島素來協助細胞消化糖份，當這樣不平衡的狀態維持久了，就會造成胰臟的過度負擔。當體內的代謝開始失常時，我們可以先觀察到一些亞健康症狀，累積久了就成了各種慢性病。因此<code>選擇適合自己的食物</code>是相當重要的。</p><div class="mermaid" data-mermaid-src="graph LR
吃錯食物 --> 身體吸收
身體吸收 -- 影響 --> 體內系統不平衡
體內系統不平衡 --> 代謝失常
代謝失常 --> 亞健康症狀
亞健康症狀 --> 慢性病">graph LR
吃錯食物 --&gt; 身體吸收
身體吸收 -- 影響 --&gt; 體內系統不平衡
體內系統不平衡 --&gt; 代謝失常
代謝失常 --&gt; 亞健康症狀
亞健康症狀 --&gt; 慢性病</div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="bot-怎麼做成的">Bot 怎麼做成的<a href="#bot-怎麼做成的" class="hash-link" aria-label="Direct link to Bot 怎麼做成的" title="Direct link to Bot 怎麼做成的">​</a></h2><p>要<code>選擇適合自己的食物</code>時，我除了先做了測驗了解個人飲食中三大營養素 (<code>碳水化合物</code>、<code>蛋白質</code>、<code>脂肪</code>) 的參考比例，也想知道每樣吃下的東西大致的營養成份。</p><p>我想到如果有各種食材的營養成份資料，就可以做成聊天機器人或 App 以供隨時查詢。我搜尋了一下，發現政府資料開放平台上有公開的「<a href="https://data.gov.tw/dataset/8543" target="_blank" rel="noopener noreferrer">食品營養成分資料集</a>」，提供 csv, json, xml 等格式下載。</p><p>下載開啟資料後，發現原始的 JSON 格式還是蠻.... 有趣的。</p><p>下載的 JSON 格式資料長這樣：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">[{"食品分類":"魚貝類"},{"資料類別":"樣品基本資料"},{"整合編號":"J11101"},{"樣品名稱":"鮸魚"},{"俗名":"鮸仔,敏魚,鮸,敏仔魚"},{"樣品英文名稱":"Brown croaker; Mi-iuy croaker"}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>... 對於這種 JSON 存法只能... 呵呵。</p><p>重新下載了 csv 檔，這次看到的格式總算正常了點，但解開後的 csv 檔案有接近 50MB 大小。寫了個腳本過濾掉不需要的資料，並轉換成需要的格式後，輸出總共不到 500KB，這樣的大小就算放到 App 裡也還合適。</p><p>這次使用<a href="http://bottender.js.org/" target="_blank" rel="noopener noreferrer">bottender</a>框架來連接到 LINE<sup id="fnref-1-ed20a6"><a href="#fn-1-ed20a6" class="footnote-ref">1</a></sup>。由於 LINE 需要 HTTPS 連線，開發的過程中使用了<a href="https://ngrok.com/" target="_blank" rel="noopener noreferrer">ngrok</a>來讓 LINE 可以連到開發中的電腦，免去另外架設公開網站的麻煩。</p><p>此外還使用了<a href="http://fusejs.io/" target="_blank" rel="noopener noreferrer">Fuse.js</a>這個模糊搜尋函式庫，在搜尋的時候只要打部份內容，就可以搜出相關的條目。</p><p>整個 bot 的軟體架構如下</p><div class="mermaid" data-mermaid-src="graph LR
subgraph 資料處理
公開資料(csv) -- 轉換/過濾 --> JSON
end
subgraph Node
JSON --> fuse.js
fuse.js --> bottender
bottender --> ngrok-cli
end
ngrok-cli --> ngrok
ngrok --> ngrok-cli
ngrok --> LINE
LINE --> ngrok
ngrok-cli --> bottender">graph LR
subgraph 資料處理
公開資料(csv) -- 轉換/過濾 --&gt; JSON
end
subgraph Node
JSON --&gt; fuse.js
fuse.js --&gt; bottender
bottender --&gt; ngrok-cli
end
ngrok-cli --&gt; ngrok
ngrok --&gt; ngrok-cli
ngrok --&gt; LINE
LINE --&gt; ngrok
ngrok-cli --&gt; bottender</div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="開發中遇到的小坑">開發中遇到的小坑<a href="#開發中遇到的小坑" class="hash-link" aria-label="Direct link to 開發中遇到的小坑" title="Direct link to 開發中遇到的小坑">​</a></h2><ul><li>developer channel or free channel</li></ul><p>剛開始申請用 <a href="https://developers.line.me/console/" target="_blank" rel="noopener noreferrer">developer channel</a> ，因為所有 API 都可以使用，開發起來會比較順暢。但稍後就遇到了 Bot 只能加 50 人好友的限制。</p><ul><li>Push Message vs Reply Message</li></ul><p>developer channel 可以用 Push Message API (也就是 bottender 範例中接的 sendText)。free channel 的話不能使用 Push Message API (context.sendText)，只能用 Reply Message API。也就是不能推送訊息，但可以回覆使用者訊息（至多五筆）。查了一下文件<sup id="fnref-2-ed20a6"><a href="#fn-2-ed20a6" class="footnote-ref">2</a></sup>，雖然需要稍微改變一點寫法 (context.reply)，但還算容易解決。</p><p>現在上線讓大家使用的已是改用 Reply Message API 的版本。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="我可以加這個bot嗎">我可以加這個 Bot 嗎？<a href="#我可以加這個bot嗎" class="hash-link" aria-label="Direct link to 我可以加這個 Bot 嗎？" title="Direct link to 我可以加這個 Bot 嗎？">​</a></h2><p>可以透過掃描 QRCode 加入營養成份 LINE bot。</p><p></p><p>或點選以下連結</p><p></p><p>因為使用免費的 Host，不能保證 bot 永遠在線，若第一次沒回應，可以稍等半分鐘後再試。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="會不會-open-source">會不會 Open Source<a href="#會不會-open-source" class="hash-link" aria-label="Direct link to 會不會 Open Source" title="Direct link to 會不會 Open Source">​</a></h2><p>目前程式還沒有好好整理，尚不打算開源。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="參考資料">參考資料<a href="#參考資料" class="hash-link" aria-label="Direct link to 參考資料" title="Direct link to 參考資料">​</a></h2><ul><li>[1]<!-- --> <a href="https://bottender.js.org/docs/Platforms-LINE" target="_blank" rel="noopener noreferrer">https://bottender.js.org/docs/Platforms-LINE</a></li><li>[2]<!-- --> <a href="https://bottender.js.org/docs/APIReference-LineContext#reply-api---official-docs" target="_blank" rel="noopener noreferrer">https://bottender.js.org/docs/APIReference-LineContext#reply-api---official-docs</a></li></ul>]]></content>
        <category label="chatbot" term="chatbot"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Advanced tuning for my daily Elementary OS usage]]></title>
        <id>https://blog.gasolin.idv.tw/tools/advanced_elementary_os_usage</id>
        <link href="https://blog.gasolin.idv.tw/tools/advanced_elementary_os_usage"/>
        <updated>2018-02-25T16:30:46.000Z</updated>
        <summary type="html"><![CDATA[I'm a happy Elementary OS user and use it as my default desktop OS (~95%) several month. There are some useful tweakings that help me live with the Linux desktop.]]></summary>
        <content type="html"><![CDATA[<p>I'm a happy Elementary OS user and use it as my default desktop OS (~95%) several month. There are some useful tweakings that help me live with the Linux desktop.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="1-package-installer">1. Package installer<a href="#1-package-installer" class="hash-link" aria-label="Direct link to 1. Package installer" title="Direct link to 1. Package installer">​</a></h2><p>Elementary OS does not provide deb installer by default, need install manually:</p><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">sudo apt install gdebi</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sudo apt install software-properties-common</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>And you can download <code>ubuntu software center</code> as well(optional).</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="2-setup-fonts">2. Setup Fonts<a href="#2-setup-fonts" class="hash-link" aria-label="Direct link to 2. Setup Fonts" title="Direct link to 2. Setup Fonts">​</a></h2><p>List system supported fonts</p><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">fc-list | cut -f2 -d: | sort -u</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Setup fonts</p><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">gsettings set org.pantheon.terminal.settings font 'Roboto Mono'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">gsettings set org.gnome.desktop.interface font-name 'Open Sans 9'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">gsettings set org.gnome.desktop.interface document-font-name 'Open Sans 10'</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>If you like <code>Fira code</code> for coding font, you can follow <a href="https://github.com/tonsky/FiraCode/wiki/Linux-instructions#installing-with-a-package-manager" target="_blank" rel="noopener noreferrer">https://github.com/tonsky/FiraCode/wiki/Linux-instructions#installing-with-a-package-manager</a> to install it.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="3-pairing-bluetooth-mouse">3. Pairing Bluetooth Mouse<a href="#3-pairing-bluetooth-mouse" class="hash-link" aria-label="Direct link to 3. Pairing Bluetooth Mouse" title="Direct link to 3. Pairing Bluetooth Mouse">​</a></h2><p>I can't use GUI Bluetooth manager to pair with bluetooth device, but these commandline works well for me.</p><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ bluetoothctl</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ agent on</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ default-agent</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ pairable on</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ scan on</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ devices (to see the devices and macs that you want to pair)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ pair &lt;dev mac&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ trust &lt;dev mac&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ connect &lt;dev mac&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="4-saving-power">4. Saving Power<a href="#4-saving-power" class="hash-link" aria-label="Direct link to 4. Saving Power" title="Direct link to 4. Saving Power">​</a></h2><p><code>tlp</code> is a good tool for auto power management</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">sudo add-apt-repository ppa:linrunner/tlp</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sudo apt-get update</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sudo apt-get install tlp</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sudo tlp start</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="5-auto-adjust-color-temperature">5. Auto adjust color temperature<a href="#5-auto-adjust-color-temperature" class="hash-link" aria-label="Direct link to 5. Auto adjust color temperature" title="Direct link to 5. Auto adjust color temperature">​</a></h2><p><a href="http://jonls.dk/redshift/" target="_blank" rel="noopener noreferrer">redshift</a> is by far the great f.lux like app for linux.</p><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ sudo apt-get install redshift redshift-gtk</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ redshift-gtk</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Then configue it as auto start in task bar.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="6-touchpad-indicator">6. Touchpad indicator<a href="#6-touchpad-indicator" class="hash-link" aria-label="Direct link to 6. Touchpad indicator" title="Direct link to 6. Touchpad indicator">​</a></h3><p>Sometimes you may found the cursor is moving to the wrong place. Install Touchpad indicator solved this issue.</p><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">sudo add-apt-repository ppa:atareao/atareao</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sudo apt-get update</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sudo apt-get install touchpad-indicator</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>and Toggle <code>Disable Touchpad on typing</code>.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="7-dropbox-icon">7. Dropbox icon<a href="#7-dropbox-icon" class="hash-link" aria-label="Direct link to 7. Dropbox icon" title="Direct link to 7. Dropbox icon">​</a></h2><p>Install Dropbox from its website, then <a href="http://sandeepbhardwaj.github.io/2016/11/13/missing-dropbox-icons-on-elementary-loki.html" target="_blank" rel="noopener noreferrer">configue to fix the missing icon</a>.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="8-backup">8. Backup<a href="#8-backup" class="hash-link" aria-label="Direct link to 8. Backup" title="Direct link to 8. Backup">​</a></h2><p>Install Timeshift for system backup. Its pretty easy to use via GUI.</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">sudo apt-add-repository -y ppa:teejee2008/ppa</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sudo apt update</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sudo apt install timeshift</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="參考資料">參考資料<a href="#參考資料" class="hash-link" aria-label="Direct link to 參考資料" title="Direct link to 參考資料">​</a></h2><ul><li>Tweaking fonts <a href="https://adam.merrifield.ca/2016/11/12/tweaking-fonts-in-elementary-os/" target="_blank" rel="noopener noreferrer">https://adam.merrifield.ca/2016/11/12/tweaking-fonts-in-elementary-os/</a></li><li>Ubuntu 16.04 LTS: get bluetooth mouse to work <a href="https://askubuntu.com/questions/839014/ubuntu-16-04-lts-cant-get-bluetooth-mouse-to-work?rq=1" target="_blank" rel="noopener noreferrer">https://askubuntu.com/questions/839014/ubuntu-16-04-lts-cant-get-bluetooth-mouse-to-work?rq=1</a></li><li></li><li></li><li></li><li>Top 10 Best Things To Do After Installing Elementary OS 0.4.1 Loki</li><li></li><li>How To Backup And Restore Linux With Timeshift <a href="https://itsfoss.com/backup-restore-linux-timeshift/" target="_blank" rel="noopener noreferrer">https://itsfoss.com/backup-restore-linux-timeshift/</a></li></ul>]]></content>
        <category label="linux" term="linux"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Devtools的近期進展和新功能(2017)]]></title>
        <id>https://blog.gasolin.idv.tw/mozilla/whats-new-in-devtools-2017</id>
        <link href="https://blog.gasolin.idv.tw/mozilla/whats-new-in-devtools-2017"/>
        <updated>2018-01-29T17:25:46.000Z</updated>
        <summary type="html"><![CDATA[2017/9/22我和Ricky Chien在台灣第一次舉辦的Mozilla Developer Conference中，一起為大家介紹Firefox開發者工具, 也就是Devtools的近期進展和新功能。]]></summary>
        <content type="html"><![CDATA[<p>2017/9/22 我和 Ricky Chien 在台灣第一次舉辦的<a href="https://twitter.com/hashtag/mozilladevtw2017?src=hash" target="_blank" rel="noopener noreferrer">Mozilla Developer Conference</a>中，一起為大家介紹 Firefox 開發者工具，也就是 Devtools 的近期進展和新功能<sup id="fnref-7-bfcfe7"><a href="#fn-7-bfcfe7" class="footnote-ref">7</a></sup>。</p><p>Devtools 架構的大幅改進，是過去一年中所有 Devtools 貢獻者共同努力的成果。在這講題中，我們可以看到 Devtools 如何持續改進，並提供各種新的工具，讓開發網頁的過程變得更有效率。</p><p></p><p>透過在 Firefox 57 新版的統一選單介面上開啟 Web Developer Tool，我們可以開啟 Devtools 的各種工具分頁分頁 (Panel)。</p><p>Devtools 簡單來說，就是各式各樣網頁開發者工具的集合。這些工具以一個個分頁（Panel）的形式組織在開發者工具區域中，我們稱這個區域為<code>Toolbox</code>，也就是<code>工具箱</code>。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="devtools-的過去">Devtools 的過去<a href="#devtools-的過去" class="hash-link" aria-label="Direct link to Devtools 的過去" title="Direct link to Devtools 的過去">​</a></h2><p>Devtools 的前身叫做 Firebug<sup id="fnref-1-bfcfe7"><a href="#fn-1-bfcfe7" class="footnote-ref">1</a></sup>。在 2006 年時，Firefox 的創始者之一 Joe Hewitt 寫出了 Firebug 這個 Firefox 的網頁開發工具 addon<sup id="fnref-2-bfcfe7"><a href="#fn-2-bfcfe7" class="footnote-ref">2</a></sup>。
使用者可以利用它除錯、編輯、刪改任何網站的 CSS、HTML、DOM 與 JavaScript。也可以透過 addon 再次擴展它的功能。現在各家瀏覽器的網頁開發者工具都參考了 Firebug 功能。</p><p>過去的 Web 相關技術遠遠沒有今天成熟，Mozilla 發明了一些特有的技術 (XUL, XBL) 來製作瀏覽器的介面與呼叫特殊的 API (Addon API) 來和作業系統互動。因為原有的 addon 架構無法支援 FIrefox 新的多執行緒 (multiple process) 架構，因此 2016 年 Firebug 開發團隊決定<strong>將 Firebug 直接整合進 Devtools 中</strong><sup id="fnref-3-bfcfe7"><a href="#fn-3-bfcfe7" class="footnote-ref">3</a></sup>，原有的 Firebug 開發團隊也大多加入了 Firefox Devtools 團隊繼續貢獻，也因此我和 Ricky 有了和原 Firebug 維護者 Honza 直接共事的機會，在過去半年中我們合作開發 Network Monitor，透過 Daily Meeting 同步進度，也在合作的過程中得到許多難得的經驗。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="devtools-的現在">Devtools 的現在<a href="#devtools-的現在" class="hash-link" aria-label="Direct link to Devtools 的現在" title="Direct link to Devtools 的現在">​</a></h2><p>Devtools 繼承 Firebug 的開發目標，也就是協助網頁開發者更有效率的製作網站。同時作為網頁開發者工具，我們希望開發者工具工具本身，也能用和網頁開發者使用的排版與框架來撰寫。</p><p>於是在 Mozilla Web Summit，大家可以看到我們的成果。我們已經在使用 HTML 和 Web Standard API 來製作 Devtools 開發者工具！</p><p>使用 HTML 與 Web Standard API 只是第一步。我們進一步評估，選用了 React 和 Redux 作為前端 UI 介面與狀態管理框架。經過 react 改寫後，我們有了可在不同工具間中重用的元件庫。透過 redux，每個工具也都有了清晰的 App 狀態管理機制。</p><p>我們將許多 Devtools 核心的專案放到 Github 上以方便開發者，並且將可以重用的元件，放到 <a href="https://github.com/devtools-html/devtools-core" target="_blank" rel="noopener noreferrer">Devtools-Core</a> 專案中，將可以獨立運作的<a href="https://github.com/devtools-html/debugger.html" target="_blank" rel="noopener noreferrer">Debugger.html</a>，<a href="https://github.com/devtools-html/perf.html" target="_blank" rel="noopener noreferrer">Perf.html</a>專案也放到 Github 上，讓參與專案變得更容易。</p><p>如果想開發自己所需的的開發者工具。現在也可以使用 Web Extension API 來製作新的開發者工具面板。面板中也可以重用<code>Devtools-Core</code>專案提供的 React 介面元件，更快地打造自己的開發者工具。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="使用者介面的改進">使用者介面的改進<a href="#使用者介面的改進" class="hash-link" aria-label="Direct link to 使用者介面的改進" title="Direct link to 使用者介面的改進">​</a></h2><p>Firefox 57 上的 Devtools 分頁變得更美觀了。當然這些都已包成 React component，喜歡還可以拿去用。</p><p>對於新配色的選擇，我們的 UX 團隊有做過可用性 (Assessibility) 測試<sup id="fnref-5-bfcfe7"><a href="#fn-5-bfcfe7" class="footnote-ref">5</a></sup>。即使是辨色有障礙的人，也可以容易地分辨不同色塊的差異。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="inspector-工具的改進">Inspector 工具的改進<a href="#inspector-工具的改進" class="hash-link" aria-label="Direct link to Inspector 工具的改進" title="Direct link to Inspector 工具的改進">​</a></h2><p>Inspector 工具是最常被使用的開發者工具。透過 Inspector，可以查看或修改 HTML。選到任一個 Element 時，可以查看並修改這個 Element 目前所有套用的 Style。</p><p>透過重構 Inspector，我們把原本使用的 XUL 與 addon SDK 替換為 HTML 和 web API。並使用 React + Redux 來組織程式的內部架構。</p><p>在整理所有 devtools 新增功能的時候，我最先注意到的就是 "Find Useless Rules" 這個超實用的功能。</p><p>過去在 Inspector 裡只會在不合法的樣式旁顯示警告標誌，現在我們也會在「合法，但無用」的樣式旁也顯示警告標誌。
比如在 grid 或 flex layout 中使用 float 屬性的話沒有作用，Inspector 就會在 float 屬性旁顯示警告標誌。</p><p>此外，Inspector 的 Box Model 會列出所有影響的這個元件位置，大小，或形狀的屬性。透過新的 box model 介面，可以更容易地查看並調整上下左右 position 參數，快速地將版面調整到理想狀態。</p><p>Firefox Devtools 也是最先支援 Grid Layout <sup id="fnref-4-bfcfe7"><a href="#fn-4-bfcfe7" class="footnote-ref">4</a></sup>的開發者工具。我們可以看到，在 Rules side panel 中的任何修改，都會直接反映到頁面上。</p><p>在 Layout Side panel 上會列出了頁面上所有的 Grid Layout。右側則可以選擇要顯示輔助線號碼，區塊名稱，或是要不要延長 Grid 格線以便排版。</p><iframe width="560" height="315" src="https://www.youtube.com/embed/EinJPX86XCE?rel=0" frameborder="0" allow="autoplay; encrypted-media"></iframe><p>不僅如此，在畫面上也可以見到，開發者也可以在 Layout Side panel 中快速的查看對應的網格。我們可以透過這些選項更好地查看頁面上的 Grid Layout。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="ｗeb-console">Ｗeb Console<a href="#ｗeb-console" class="hash-link" aria-label="Direct link to Ｗeb Console" title="Direct link to Ｗeb Console">​</a></h2><p>Web Console 應該是 Javascript 開發者最常用的網頁工具吧。除了查看頁面上的 Javascript 錯誤，印 log 外，Web Console 可以即時執行 javascript，或是存取頁面上的 Ｇlobal Object。</p><p>去年 Web Console 也經過改寫。使用 React + Redux 來組織程式的內部架構。</p><p>我們在 console 中可以即時執行 javascript 並取得執行結果。不管是哪種類型的變數，無論是 boolean, array, object 都會用 Object logs 來顯示。</p><p>在 rewrite web console 的過程中，我們也將 Object logs 包裝起來變成一個可以重用的 React Component。</p><p>這個元件被大量地運用在 Debugger, Network 等其他 panel 上。</p><p>如果你想要開發自己的開發者工具或剛好需要類似的元件，reps 可以在 github 上找到。或是透過<code>npm install devtools-reps</code>命令來安裝到你的專案中。</p><p></p><p>Web console 近期也透過 tree 和 reps 元件，支援了 console group 功能 <a href="https://developer.mozilla.org/en-US/docs/Web/API/Console/group" target="_blank" rel="noopener noreferrer">https://developer.mozilla.org/en-US/docs/Web/API/Console/group</a></p><p></p><p>現在透過 web console 實驗 XMLHTTPRequest 或 fetch 時，也可以透過 HTTP inspector 來即時查看 http request 的內容。整套 HTTP inspector 元件是來自 Network Monitor，只經過一點點修改就能完整套用。因此在 web console 中可以直接看到與在 network panel 中一樣的資訊，非常方便。</p><p></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="perfhtml-網頁效能監測工具">Perf.html 網頁效能監測工具<a href="#perfhtml-網頁效能監測工具" class="hash-link" aria-label="Direct link to Perf.html 網頁效能監測工具" title="Direct link to Perf.html 網頁效能監測工具">​</a></h2><p>最後我想介紹的是 Perf.html 這套工具。</p><p>要提升網頁的效能是相當考驗技術的。
透過 profiling，也就是量測的結果，我們可以更直觀地找出網頁效能的瓶頸並做出針對性地改善。perf.html 就是這樣的量測工具。</p><p>去年 perf.html 也經過改寫。使用 React + Redux 來組織程式的內部架構。有自己的網頁，可以脫離 devtools 獨立運作。程式碼 host 在 github 上。</p><p>perf.html 使用前需先到網站上安裝 addon，在要量測前後按下 start/stop，就可以得到量測的 profile。</p><p>perf.html 最棒的點是，量測好的 profile 可以透過 addon 直接上傳到網站上，我們是在一般網站的介面上查看量測的結果。可以直接分享這個網址，或是標註出關注的時間區間後分享。和其他人一起 trace 效能瓶頸。</p><p>經過 photon 更新後，perf.html 介面風格將變得更加簡潔，配色變得更大膽，用起來更舒服。</p><p>以上是我分享的部分。若您對 Devtools 感興趣，可以到<a href="http://firefox-dev.tools/" target="_blank" rel="noopener noreferrer">firefox-dev.tools</a>網站查看所有與 Firefox Devtools 相關的資訊。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="參考資料">參考資料<a href="#參考資料" class="hash-link" aria-label="Direct link to 參考資料" title="Direct link to 參考資料">​</a></h2><ul><li>[1]<!-- --> Firebug <a href="http://www.drdobbs.com/tools/ajax-debugging-with-firebug/196802787" target="_blank" rel="noopener noreferrer">http://www.drdobbs.com/tools/ajax-debugging-with-firebug/196802787</a></li><li>[2]<!-- --> <a href="https://medium.com/mozilla-tech/a-quick-history-of-firefox-devtools-620d3074b510" target="_blank" rel="noopener noreferrer">https://medium.com/mozilla-tech/a-quick-history-of-firefox-devtools-620d3074b510</a></li><li>[3]<!-- --> Firebug lives on Firefox Devtools <a href="https://hacks.mozilla.org/2016/12/firebug-lives-on-in-firefox-devtools/" target="_blank" rel="noopener noreferrer">https://hacks.mozilla.org/2016/12/firebug-lives-on-in-firefox-devtools/</a></li><li>[4]<!-- --> Grid Layout <a href="https://hacks.mozilla.org/2017/06/new-css-grid-layout-panel-in-firefox-nightly/" target="_blank" rel="noopener noreferrer">https://hacks.mozilla.org/2017/06/new-css-grid-layout-panel-in-firefox-nightly/</a></li><li>[5]<!-- --> colors with accessible contrast in concern <a href="https://blog.nightly.mozilla.org/2017/09/11/developer-tools-visual-refresh-coming-to-nightly/" target="_blank" rel="noopener noreferrer">https://blog.nightly.mozilla.org/2017/09/11/developer-tools-visual-refresh-coming-to-nightly/</a></li><li>[6]<!-- --> Devtools Photon UI <a href="https://hacks.mozilla.org/2017/09/developer-edition-devtools-update-now-with-photon-ui/" target="_blank" rel="noopener noreferrer">https://hacks.mozilla.org/2017/09/developer-edition-devtools-update-now-with-photon-ui/</a></li><li>[7]<!-- --> 簡報檔位於<a href="https://docs.google.com/presentation/d/1mUoXy97Uv4FqkTiPBqMAw5AlgRz3VCrHpzShS1bl9Jc/edit?usp=sharing" target="_blank" rel="noopener noreferrer">Google Doc</a></li></ul>]]></content>
        <category label="web" term="web"/>
        <category label="devtools" term="devtools"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[用gitbook寫書的體驗]]></title>
        <id>https://blog.gasolin.idv.tw/devtools/white-a-gitbook</id>
        <link href="https://blog.gasolin.idv.tw/devtools/white-a-gitbook"/>
        <updated>2018-01-28T13:30:30.000Z</updated>
        <summary type="html"><![CDATA[查看 從 gitbook 遷移到 docusaurus]]></summary>
        <content type="html"><![CDATA[<blockquote><p>查看 <a href="/devtools/tools/docusaurus">從 gitbook 遷移到 docusaurus</a></p></blockquote><p>把過去半年本部落格上關於區塊鏈的文章整理放到 Gitbook。命名為<a href="https://www.gitbook.com/book/gasolin/learn-ethereum-dapp/details" target="_blank" rel="noopener noreferrer">Ethereum 區塊鏈！智能合約 (Smart Contract) 與分散式網頁應用 (DApp) 入門</a>，對區塊鏈，智能合約，分散式應用 (DApp) 感興趣的讀者不妨前往一觀。</p><p>這不是我寫的第一本書<sup id="fnref-1-52895a"><a href="#fn-1-52895a" class="footnote-ref">1</a></sup>，也不是我第一本用 Markdown 寫的電子書 (以前用 Leanpub 出版過<a href="https://leanpub.com/gaiafromabove" target="_blank" rel="noopener noreferrer">Firefox OS 開發書</a>)，但絕對是我編輯過程最順暢的一本書（雖然還未完成 XD）。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="一路markdown">一路 Markdown<a href="#一路markdown" class="hash-link" aria-label="Direct link to 一路 Markdown" title="Direct link to 一路 Markdown">​</a></h2><p>編輯過程最順暢不是因為對主題很熟悉或寫得快，而是因為從部落格文章初稿到 Gitbook，在寫作的過程中可以一路使用 Markdown。而且由於原本部落格圖片皆使用外連，因此引用圖片時也不用像以前編書時需要重新導入的過程。由於 gitbook 也支援<code>mermaid.js</code>插件，支援我常常使用的 flowchart 語法，因此這些流程圖也不需要重新截圖或繪製，節省了大量時間。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="所見即所得編輯器">所見即所得編輯器...<a href="#所見即所得編輯器" class="hash-link" aria-label="Direct link to 所見即所得編輯器..." title="Direct link to 所見即所得編輯器...">​</a></h2><p>我已有Ｍarkdown 格式的初稿，但剛開始我使用 gitbook 提供的所見即所得的編輯器。使用起來感覺非常不自在。</p><p>線上編輯器提供的<code>new change request</code>，所見即所得編輯等功能，特別是 gitbook 提供的所見即所得編輯器無法切換回純 Markdown 模式，對於已熟悉 git, Markdown 語法的我來說並沒有變得好用。直接將 Markdown 格式貼到編輯器上時，也無法順利辨識格式，反而是貼上已輸出的部落格網頁時效果好很多。</p><p>所以最後我放棄使用線上編輯器，而是在本機編輯 Markdown 後直接 git 推送到專案上。</p><p>gitbook 在同步收到新的改動後，會自動編譯並發布新版本，相當方便。接下來應該會繼續使用這個流程。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="參考資料">參考資料<a href="#參考資料" class="hash-link" aria-label="Direct link to 參考資料" title="Direct link to 參考資料">​</a></h2><ul><li>[1]<!-- --> 我的著作 <a href="https://gasolin.idv.tw/portfolio#books" target="_blank" rel="noopener noreferrer">https://gasolin.idv.tw/portfolio#books</a></li><li>[2]<!-- --> 利用 gitbook 命令行工具创建和编译书籍 <a href="http://mdengli.com/gitbook_cmd_study/" target="_blank" rel="noopener noreferrer">http://mdengli.com/gitbook_cmd_study/</a></li><li>[3]<!-- --> 深入淺出 GitBook 寫作與自助出版，電子書也能多人協作 <a href="http://www.codedata.com.tw/social-coding/gitbook-self-publishing" target="_blank" rel="noopener noreferrer">http://www.codedata.com.tw/social-coding/gitbook-self-publishing</a></li><li>[4]<!-- --> 用 GitBook 來寫本書吧！<a href="http://www.oxxostudio.tw/articles/201502/gitbook.html" target="_blank" rel="noopener noreferrer">http://www.oxxostudio.tw/articles/201502/gitbook.html</a></li></ul>]]></content>
        <category label="ethereum" term="ethereum"/>
        <category label="git" term="git"/>
        <category label="markdown" term="markdown"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[我如何做個人自動化紀錄-2018版]]></title>
        <id>https://blog.gasolin.idv.tw/life/personal-automation-in-2018</id>
        <link href="https://blog.gasolin.idv.tw/life/personal-automation-in-2018"/>
        <updated>2018-01-26T09:57:29.000Z</updated>
        <summary type="html"><![CDATA[2017年開始紀錄自己使用的自動化紀錄工具，今年更新。]]></summary>
        <content type="html"><![CDATA[<p>2017 年開始紀錄自己使用的自動化紀錄工具，今年更新。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="為什麼要做個人自動化紀錄">為什麼要做個人自動化紀錄？<a href="#為什麼要做個人自動化紀錄" class="hash-link" aria-label="Direct link to 為什麼要做個人自動化紀錄？" title="Direct link to 為什麼要做個人自動化紀錄？">​</a></h2><p>有人會問，Facebook/Twitter 不就可以記錄大小事了嗎？如果會這麼回答，那就實在太天真了😏 。FB 上也許包含了自己覺得值得分享的事，但生活中還有諸多事情值得記錄，而不適合與大眾分享。
擁有自己的一份完整數位化生活記錄，是我持續的個人目標之一。要達成這個目標，需要藉助一些自動化紀錄工具，好讓整個過程變得自然而不困難。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="照片自動化備份--">照片自動化備份 📷 <a href="#照片自動化備份--" class="hash-link" aria-label="Direct link to 照片自動化備份 📷 " title="Direct link to 照片自動化備份 📷 ">​</a></h2><ul><li>360CAM 所拍的相片一律備份到手機</li><li><a href="http://www.dropbox.com/" target="_blank" rel="noopener noreferrer">Dropbox</a>, 自動從手機上傳照片</li><li>Google 相簿，充電時自動從手機備份照片到 Google 雲端</li><li>NAS (Synnalogy), 透過<code>Cloud Sync</code>從 Dropbox 同步照片。</li></ul><div class="mermaid" data-mermaid-src="graph LR
cam[360 CAM]
User -- take photo --> cam
User -- take photo --> Phone
cam --> Phone
Phone -.-> Dropbox
Phone -.-> gphoto[Google Photo]
Dropbox -.-> NAS">graph LR
cam[360 CAM]
User -- take photo --&gt; cam
User -- take photo --&gt; Phone
cam --&gt; Phone
Phone -.-&gt; Dropbox
Phone -.-&gt; gphoto[Google Photo]
Dropbox -.-&gt; NAS</div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="運動自動化紀錄-️-">運動自動化紀錄 🚶‍♂️ <a href="#運動自動化紀錄-️-" class="hash-link" aria-label="Direct link to 運動自動化紀錄 🚶‍♂️ " title="Direct link to 運動自動化紀錄 🚶‍♂️ ">​</a></h2><ul><li><del>記步，睡眠紀錄：小米手環 2</del></li><li>體重：小米體重計</li></ul><div class="mermaid" data-mermaid-src="graph LR
User -- 量體重 --> 小米體重計
小米體脂計 -.-> 小米運動App">graph LR
User -- 量體重 --&gt; 小米體重計
小米體脂計 -.-&gt; 小米運動App</div><p>現已不再帶小米手環 2，覺得記錄睡眠與步數，並無法改善健康狀況，意義不大。
同時為了降低多走路所需要的意志力，把每日步數改成更容易達成的 300 步，只要開始走，通常都會超過需要的步數。</p><p>Update: 四月開始為了減重需要，又再戴起小米手環 2。並將體重計換成體脂計。因應生活型態的改變，行走目標也改為每天 4000 步。</p><hr><h2 class="anchor anchorWithStickyNavbar_LWe7" id="生活事件自動化紀錄">生活事件自動化紀錄<a href="#生活事件自動化紀錄" class="hash-link" aria-label="Direct link to 生活事件自動化紀錄" title="Direct link to 生活事件自動化紀錄">​</a></h2><p>延續<a href="/life/LifeLog-via-IFTTT">用 IFTTT 做自動生活紀錄</a>這篇的思路，我把看過的書籍、電影，喜歡的 Youtube 影片，貼過的文章，每日完成的事項都記錄到 Google 日曆中，以方便之後回顧。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="自動閱讀觀看紀錄--">自動閱讀 / 觀看紀錄 📚 <a href="#自動閱讀觀看紀錄--" class="hash-link" aria-label="Direct link to 自動閱讀 / 觀看紀錄 📚 " title="Direct link to 自動閱讀 / 觀看紀錄 📚 ">​</a></h3><p>對於書籍與電影，我使用 RSS + IFTTT + Google Calendar 來自動紀錄。
當我在豆瓣上修改狀態，豆瓣的 RSS 也跟著改變，這時 IFTTT 會將 RSS 中的新事項紀錄到 Google 日曆上。
對於 Youtube 上 like 的影片，Facebook 或 Twitter 上新貼的文章，也會透過 IFTTT 紀錄到 Google 日曆上。</p><div class="mermaid" data-mermaid-src="graph LR
User -- add movie --> Douban
User -- post --> Blog
Blog -.-> RSS
Douban -.-> RSS
RSS -.-> IFTTT
IFTTT -.-> gcal[Google Calendar]">graph LR
User -- add movie --&gt; Douban
User -- post --&gt; Blog
Blog -.-&gt; RSS
Douban -.-&gt; RSS
RSS -.-&gt; IFTTT
IFTTT -.-&gt; gcal[Google Calendar]</div><p>透過 RSS 轉 IFTTT 紀錄</p><div class="mermaid" data-mermaid-src="graph LR
User -- like --> Youtube
User -- post --> Facebook
User -- post --> Twitter
Youtube -.-> IFTTT
Facebook -.-> IFTTT
Twitter -.-> IFTTT
IFTTT -.-> gcal[Google Calendar]">graph LR
User -- like --&gt; Youtube
User -- post --&gt; Facebook
User -- post --&gt; Twitter
Youtube -.-&gt; IFTTT
Facebook -.-&gt; IFTTT
Twitter -.-&gt; IFTTT
IFTTT -.-&gt; gcal[Google Calendar]</div><p>直接透過 IFTTT 紀錄</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="自動紀錄每日完成的事項--">自動紀錄每日完成的事項 📓 <a href="#自動紀錄每日完成的事項--" class="hash-link" aria-label="Direct link to 自動紀錄每日完成的事項 📓 " title="Direct link to 自動紀錄每日完成的事項 📓 ">​</a></h3><p>這部份是自動紀錄的核心。使用 Todoist + IFTTT + Google Calendar 即可達成。
我在 Google Calendar 上使用一個單獨的日曆 (<code>成功日記</code>) 來紀錄每日完成的事項。</p><div class="mermaid" data-mermaid-src="graph LR
User -- checked --> Todoist
Todoist -.-> IFTTT
IFTTT -.-> gcal[Google Calendar]">graph LR
User -- checked --&gt; Todoist
Todoist -.-&gt; IFTTT
IFTTT -.-&gt; gcal[Google Calendar]</div><p>If task completed in Todoist, Then log into Google Calendar</p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="從email新增待辦事項-️-">從 Email 新增待辦事項 ✉️ <a href="#從email新增待辦事項-️-" class="hash-link" aria-label="Direct link to 從 Email 新增待辦事項 ✉️ " title="Direct link to 從 Email 新增待辦事項 ✉️ ">​</a></h4><p>為了更方便地蒐集待辦事項，我參考這份影片 <a href="https://youtu.be/V7Dk7pzjJmM?t=11m30s" target="_blank" rel="noopener noreferrer">https://youtu.be/V7Dk7pzjJmM?t=11m30s</a> 來將 Todoist#Inbox 設定為 Email 聯絡人，這樣處理 Email 的過程中也能快速地新增待辦事項。</p><p>此外也透過 IFTTT，將設為<code>Reference</code>標籤的信件備份到 Evernote 中。</p><p>事實上這兩種設定都很少使用。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="紀錄看過或待看的網頁--">紀錄看過或待看的網頁 🌐 <a href="#紀錄看過或待看的網頁--" class="hash-link" aria-label="Direct link to 紀錄看過或待看的網頁 🌐 " title="Direct link to 紀錄看過或待看的網頁 🌐 ">​</a></h3><p>我會將待看的文章搜集到 Pocket。</p><p>除了瀏覽 Facebook 或 Twitter 上的文章，我也使用 Feedly 訂閱一些自己挑選過的網站。並將 Feedly 設定成當我做標記時，就將本篇文章轉存到 Pocket 稍候閱讀列表，我可以掃過 Feedly 列表，標記感興趣的新聞，稍後再到 Pocket 閱讀。</p><p>這樣讓我在看到文章連結當下不需急著看完整篇文章，而是在有空閒的時候才閱讀這些文章。</p><p>我唯一的待辦事項收件夾是 Todoist，若看到值得閱讀 (紀錄) 的網頁，桌面上我使用瀏覽器的<code>Pocket</code>外掛插件 (Firefox 瀏覽器內建)，將待看網頁記錄到 Pocket 中。</p><p>若這個網頁非看不可，我會在按下插件時填入一個自訂標籤<code>fox</code>，然後透過 IFTTT，若發現 Pocket 中新增了一筆含<code>fox</code>標籤的網頁，就新建一筆 Todoist 代辦事項。</p><p>在手機上就直接使用 Todoist 和 Pocket 等 App 達到一樣的效果。</p><div class="mermaid" data-mermaid-src="graph LR
Feedly --> Pocket
Browser --> addon[Pocket addon + tag]
addon --> Pocket
pocket -.-> IFTTT
IFTTT -.-> Todoist">graph LR
Feedly --&gt; Pocket
Browser --&gt; addon[Pocket addon + tag]
addon --&gt; Pocket
pocket -.-&gt; IFTTT
IFTTT -.-&gt; Todoist</div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="文章更新時自動提醒--">文章更新時自動提醒 ⏰ <a href="#文章更新時自動提醒--" class="hash-link" aria-label="Direct link to 文章更新時自動提醒 ⏰ " title="Direct link to 文章更新時自動提醒 ⏰ ">​</a></h3><p>有些網站並未提供 RSS 訂閱，手機上我會使用<a href="https://play.google.com/store/apps/details?id=me.webalert" target="_blank" rel="noopener noreferrer">Web Alert</a>來取得網頁更新提醒。</p><div class="mermaid" data-mermaid-src="graph LR
webalert[Web Alert] --> User
User --> Browser">graph LR
webalert[Web Alert] --&gt; User
User --&gt; Browser</div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="開發工具設定自動備份">開發工具設定自動備份 ¨<a href="#開發工具設定自動備份" class="hash-link" aria-label="Direct link to 開發工具設定自動備份 ¨" title="Direct link to 開發工具設定自動備份 ¨">​</a></h3><p>使用 VS Code <a href="https://marketplace.visualstudio.com/items?itemName=Shan.code-settings-sync" target="_blank" rel="noopener noreferrer">Settings Sync</a> ，只需剛開始時設定一次，之後可同步各種 VS Code 中的設定與插件。</p><hr><h2 class="anchor anchorWithStickyNavbar_LWe7" id="自動化網站部署--">自動化網站部署 🌐 <a href="#自動化網站部署--" class="hash-link" aria-label="Direct link to 自動化網站部署 🌐 " title="Direct link to 自動化網站部署 🌐 ">​</a></h2><p>目前已使用 Github 來放我的個人網站與部落格，透過與 Travis CI 整合，我所修改的任何內容，在幾分鐘之內都會自動部署到網站上。</p><p>如何做可參考 <a href="/life/make/hello-world">Hello Hexo</a> (個人網站自動化部署) 和 <a href="/devtools/ghpage-auto-deploy">Automatically deploy new commit to github pages via Travis CI</a></p><div class="mermaid" data-mermaid-src="graph LR
master[Github:master]
travis[Travis CI]
ghpages[Github:gh-pages]
User -- commit --> master
master -. auto build .-> travis
travis -.  auto deploy .-> ghpages">graph LR
master[Github:master]
travis[Travis CI]
ghpages[Github:gh-pages]
User -- commit --&gt; master
master -. auto build .-&gt; travis
travis -.  auto deploy .-&gt; ghpages</div><p>Auto website deploy flow</p><p>一些可以直接運作在瀏覽器的專案 (如 BlocklyDuino 和 Saihubot)，我會直接將 gh-pages 設為預設分支，所有改動直接 push 到這分支中。這樣一有改動即可在網頁上看到更新成果。</p><hr><h2 class="anchor anchorWithStickyNavbar_LWe7" id="半自動紀錄">半自動紀錄<a href="#半自動紀錄" class="hash-link" aria-label="Direct link to 半自動紀錄" title="Direct link to 半自動紀錄">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="半自動工作紀錄--">半自動工作紀錄 💼 <a href="#半自動工作紀錄--" class="hash-link" aria-label="Direct link to 半自動工作紀錄 💼 " title="Direct link to 半自動工作紀錄 💼 ">​</a></h3><p>透過翻看 Todoist 或 Google Calendar，我可以輕易地將過去一週達成的事項整理出來，再送 PR 到 Github 上。
也可以說這塊目前只能算半自動化地列出過去事項列表，可以再繼續改進。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="定期回顧與整理">定期回顧與整理<a href="#定期回顧與整理" class="hash-link" aria-label="Direct link to 定期回顧與整理" title="Direct link to 定期回顧與整理">​</a></h3><p>我在 Todoist 中增加一個<code>Template</code>項目，裡面放了周檢視 / 月檢視 / 季檢視 / 年檢視樣板，透過重複時間設定，每段時間自動提醒該做檢視了。</p><p>撰寫本文的目的之一，也是讓我有回顧我的自動化運作的機會。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="照片備份規則">照片備份規則<a href="#照片備份規則" class="hash-link" aria-label="Direct link to 照片備份規則" title="Direct link to 照片備份規則">​</a></h3><p>由於 Dropbox 空間有限，會不定期將 Dropbox 上的照片移動到到 NAS 上按年月份分類的<code>photo/</code>資料夾.</p><p>我的照片並不算多，但若有出遊的月份通常照片會暴增。所以我的基本備份規則是依年份，並以雙月份命名資料夾，若是當月有重大活動則直接在檔名中標注。
例如 2016 年的照片資料夾裡會有<code>2016_10_11</code>，或是<code>2016_06_london</code>這樣的命名。</p><p>在整理照片的時候，每當遇到特別喜歡的，我會另存到 Dropbox 中的一個依年份歸檔的資料夾，例如 2017 年的精彩照片我會另存到 <code>dropbox/spot/2017</code>資料夾中，這樣隨時可以找出來欣賞。</p><p>另外每年累積的一些螢幕截圖，也放在當年度的<code>screenshots</code>資料夾裡。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="清理rss-feed">清理 RSS Feed<a href="#清理rss-feed" class="hash-link" aria-label="Direct link to 清理 RSS Feed" title="Direct link to 清理 RSS Feed">​</a></h3><p>透過 Feedly 訂閱 RSS Feed 太容易，但是不小心每天收到的新聞量就遠高於自己能吸收的量，這時可以到
<a href="https://feedly.com/i/organize/my" target="_blank" rel="noopener noreferrer">https://feedly.com/i/organize/my</a> 把那些失效的連結清掉，並快速檢視一下現在仍在訂閱的網站，是否還對這些主題感興趣。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="手動紀錄">手動紀錄<a href="#手動紀錄" class="hash-link" aria-label="Direct link to 手動紀錄" title="Direct link to 手動紀錄">​</a></h2><p>為了平衡日常太依靠電子產品的趨向，前年開始就嘗試使用<code>實體筆記本</code>作一些紀錄，2018 一月中開始嘗試養成更頻繁地使用<code>實體筆記本</code>的習慣。在幾經調整後，目前我使用 B5 方格筆記本做基礎，搭配不同的魔擦筆來作筆記。實體筆記本的好處是除了一般的紀錄，還可以隨意畫心智圖，黏照片，貼紙，蓋印章等。參考各種筆記術書籍，我在每本筆記本前幾頁會空出<code>索引</code>區，將筆記本內容索引起來，以便之後查找。</p><p>暫時還沒想好（也還沒需求）該如何數位化。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="參考資料">參考資料<a href="#參考資料" class="hash-link" aria-label="Direct link to 參考資料" title="Direct link to 參考資料">​</a></h2><ul><li></li></ul>]]></content>
        <category label="web" term="web"/>
        <category label="mobile" term="mobile"/>
        <category label="automation" term="automation"/>
        <category label="life" term="life"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[個人工具箱2018二月]]></title>
        <id>https://blog.gasolin.idv.tw/tools/tooling-in-2018-feb</id>
        <link href="https://blog.gasolin.idv.tw/tools/tooling-in-2018-feb"/>
        <updated>2018-01-25T15:23:00.000Z</updated>
        <summary type="html"><![CDATA[先記錄下來手邊使用的工具，才有機會從繁雜中歸納出簡單的使用規則。]]></summary>
        <content type="html"><![CDATA[<p><code>先記錄下來手邊使用的工具，才有機會從繁雜中歸納出簡單的使用規則。</code></p><p>2011<sup id="fnref-1-0854b2"><a href="#fn-1-0854b2" class="footnote-ref">1</a></sup>年時紀錄了一次當時的個人工具箱，2016 年開始再次紀錄自己手邊工具箱的改變<sup id="fnref-2-0854b2"><a href="#fn-2-0854b2" class="footnote-ref">2</a></sup> <sup id="fnref-3-0854b2"><a href="#fn-3-0854b2" class="footnote-ref">3</a></sup> <sup id="fnref-4-0854b2"><a href="#fn-4-0854b2" class="footnote-ref">4</a></sup>🤹。
今年初工作上有了變化，也將家中的環境包含進配置列表中。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="主要裝備">主要裝備<a href="#主要裝備" class="hash-link" aria-label="Direct link to 主要裝備" title="Direct link to 主要裝備">​</a></h2><ul><li>💻 Dell XPS 13 (8550), Windows 10, i7 4GHz x4, 8GB RAM, 13.3" LCD，作業系統：<a href="/tools/xps13-elementary-os">Elementary OS + Windows</a></li><li>📱 <a href="https://oneplus.net/global/3" target="_blank" rel="noopener noreferrer">One Plus 3</a>, Android, 6GB RAM, 5.5" AMOLED</li><li>🎧 Sony WI-1000 降噪耳機</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="家">家<a href="#家" class="hash-link" aria-label="Direct link to 家" title="Direct link to 家">​</a></h3><ul><li>🖥️ 24" LCD</li><li>⌨️ 羅技 K375s 鍵盤</li><li>🖱 羅技 M720 滑鼠</li><li>📦 Synology NAS: 電影，影集，照片，資料備份</li><li>💡 Yeelight LED 燈泡</li><li>備用 💻 Macbook Air 13", 2012 年版</li><li>備用 📺 Chromecast 一代</li><li>備用 🔈 Echodot</li><li>備用 Respberry Pi 3</li><li>備用 📙 Kindle Voyage</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="和去年相比的改變">和去年相比的改變：<a href="#和去年相比的改變" class="hash-link" aria-label="Direct link to 和去年相比的改變：" title="Direct link to 和去年相比的改變：">​</a></h3><p>主力用💻 Dell XPS 13"，家中添購了一台🖥️ 24" LCD 接筆電，搭配 3 轉 1 HDMI Hub，接🎮Nintendo Switch, Chromecast, Respberry Pi，可滿足影音相關需求。HDMI 設備通電時會自動切換到對應的設備。</p><div class="mermaid" data-mermaid-src="graph LR
LCD -- DVI --- Notebook
LCD -- HDMI --- hub{HDMI Hub}
hub --- ns[Nintendo Switch]
hub --- Chromecast
hub --- rpi[Respberry Pi]">graph LR
LCD -- DVI --- Notebook
LCD -- HDMI --- hub{HDMI Hub}
hub --- ns[Nintendo Switch]
hub --- Chromecast
hub --- rpi[Respberry Pi]</div><p>上次記錄前即開始使用的⌨️ 羅技 K375s 鍵盤與🖱羅技 M720 滑鼠，兩者特點都是同時支援使用 USB 或藍牙控制設備，讓我可以用一套鍵鼠控制多種設備。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="️-網站工具">🕸️ 網站工具<a href="#️-網站工具" class="hash-link" aria-label="Direct link to 🕸️ 網站工具" title="Direct link to 🕸️ 網站工具">​</a></h3><ul><li>🕸️ 主要瀏覽器：<a href="https://www.mozilla.org/en-US/firefox/products/" target="_blank" rel="noopener noreferrer">Firefox</a></li><li>瀏覽器插件<ul><li>顏文字查詢：Emoji cheatsheet</li><li>翻譯：ImTranslator</li><li>拼字訂正：Grammarly</li><li>密碼管理：Bitwarden</li></ul></li><li>瀏覽器常駐分頁<ul><li>✉️ <a href="http://mail.google.com/" target="_blank" rel="noopener noreferrer">GMail</a>, Inbox</li><li>📆 <a href="http://www.google.com/calendar" target="_blank" rel="noopener noreferrer">Google 日曆</a></li><li>📒記帳: <a href="https://toshl.com" target="_blank" rel="noopener noreferrer">Toshl</a> (付費)</li><li>✅待辦事項：<a href="https://todoist.com/" target="_blank" rel="noopener noreferrer">Todoist</a> (付費)</li></ul></li><li>👥 主要社交網站：<a href="http://www.facebook.com/" target="_blank" rel="noopener noreferrer">Facebook</a>、<a href="https://twitter.com/gasolin" target="_blank" rel="noopener noreferrer">Twitter</a></li><li>📝 記事：<a href="http://keep.google.com/" target="_blank" rel="noopener noreferrer">Google keep</a>, Google Doc</li><li>💾 網路硬碟：<a href="http://www.dropbox.com/" target="_blank" rel="noopener noreferrer">Dropbox</a>, 主要用作同步照片</li><li>🔑密碼管理：<a href="https://www.bitwarden.com/" target="_blank" rel="noopener noreferrer">Bitwarden</a></li><li>📰 新聞聚合：<a href="https://feedly.com/" target="_blank" rel="noopener noreferrer">Feedly</a></li><li>📘 閱讀紀錄：<a href="https://share.readmoo.com/mooer/lifaicqb9/bookshelf/gasolin/read" target="_blank" rel="noopener noreferrer">Readmoo 分享書</a></li><li>🎥 看電影記錄：<a href="http://www.douban.com/" target="_blank" rel="noopener noreferrer">豆瓣</a></li><li>🗂️ 個人網站：<a href="http://www.gasolin.idv.tw" target="_blank" rel="noopener noreferrer">個人網站</a>, <a href="https://github.com/gasolin/blog/" target="_blank" rel="noopener noreferrer">Github</a></li><li>🗂️ 個人履歷：<a href="https://www.linkedin.com/in/fredglin/" target="_blank" rel="noopener noreferrer">Linkedin</a></li><li>🔗 IFTTT <a href="/life/personal-automation-in-2018">自動化生活紀錄 2018</a></li><li>📺 <a href="https://www.youtube.com/" target="_blank" rel="noopener noreferrer">Youtube</a></li><li>👛 電子錢包<a href="https://www.myetherwallet.com/" target="_blank" rel="noopener noreferrer">MyEtherWallet</a>, <a href="/crypto/setup_ledger_nano_on_linux">Ledger Nano S</a></li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="設計工具">設計工具<a href="#設計工具" class="hash-link" aria-label="Direct link to 設計工具" title="Direct link to 設計工具">​</a></h3><ul><li>Mockup：<a href="http://www.balsamiq.com/products/mockups" target="_blank" rel="noopener noreferrer">Balsmiq Mockups</a></li><li>螢幕動畫錄製： <a href="https://github.com/phw/peek" target="_blank" rel="noopener noreferrer">Peek</a>(Linux), <a href="http://www.recordit.co/" target="_blank" rel="noopener noreferrer">Recordit</a>(Mac)</li><li>心智圖：XMind</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="開發工具">開發工具<a href="#開發工具" class="hash-link" aria-label="Direct link to 開發工具" title="Direct link to 開發工具">​</a></h3><ul><li>編輯器：VS Code<ul><li>Blank Line at the End</li><li>Diff Tool</li><li>EditorConfig for VSCode</li><li>Go</li><li>Guides: more guide line</li><li>GitLens: more git info</li><li>Python</li><li>Settings Sync</li><li>solidity</li><li>Trailing Spaces</li></ul></li><li>版本控制：git</li><li>套件管理：apt (Linux), <a href="https://github.com/creationix/nvm" target="_blank" rel="noopener noreferrer">nvm</a>, yarn, Chocolatey(windows)</li></ul><p>若需要在 Windows 上開發，能用 Chocolatey 處理的就用 Chocolatey 處理。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="娛樂工具">娛樂工具<a href="#娛樂工具" class="hash-link" aria-label="Direct link to 娛樂工具" title="Direct link to 娛樂工具">​</a></h3><ul><li>🎮Nintendo Switch</li><li>📺 Chromecast (少用)</li><li>🎮Steam /vlc (少用)</li></ul><p>因為攜帶便利，現在主要只玩 NS 上的遊戲。Steam 上看到喜歡的遊戲，也盡量等 NS 上出了再買。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="-android-手機應用">📱 Android 手機應用<a href="#-android-手機應用" class="hash-link" aria-label="Direct link to 📱 Android 手機應用" title="Direct link to 📱 Android 手機應用">​</a></h2><ul><li>瀏覽器：Firefox for Android</li><li>網頁更新通知：Web Alert</li><li>閱讀：Feedly, Readmoo</li><li>稍候閱讀：Pocket</li><li>信箱：Inbox, Gmail</li><li>地圖：Google 地圖</li><li>記事：Keep</li><li>內建相機，內建時鐘</li><li>相簿：內建相簿，Google 相簿，Dropbox</li><li>社交：Facebook, LINE, Twitter</li><li>待辦事項：<a href="https://play.google.com/store/apps/details?id=com.todoist" target="_blank" rel="noopener noreferrer">Todoist</a></li><li>密碼管理：Bitwarden</li><li>記帳: <a href="https://play.google.com/store/apps/details?id=com.thirdframestudios.android.expensoor" target="_blank" rel="noopener noreferrer">Toshl</a></li><li>線上影片：Youtube</li><li>有聲書：Audible</li><li>音樂：豆瓣 FM</li><li>健康：小米運動，Pokemon Go, 7Min workout</li></ul><p>工具</p><ul><li>2 步驟認證：Duo Mobile</li><li>旅遊：Google 翻譯，TripAdvisor</li><li>影片播放：MX Player, DS video</li><li>記錄看書狀況：Readmoo 分享書</li><li>線上學習：Udemy, EggHead.io</li><li>IFTTT</li><li>💳街口支付</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="reference">Reference<a href="#reference" class="hash-link" aria-label="Direct link to Reference" title="Direct link to Reference">​</a></h2><ul><li><sup id="fnref-1-0854b2"><a href="#fn-1-0854b2" class="footnote-ref">1</a></sup> <a href="/tools/tooling-in-2011">個人工具箱 2011</a></li><li><sup id="fnref-2-0854b2"><a href="#fn-2-0854b2" class="footnote-ref">2</a></sup> <a href="/tools/tooling-in-2016">個人工具箱 2016</a></li><li><sup id="fnref-3-0854b2"><a href="#fn-3-0854b2" class="footnote-ref">3</a></sup> <a href="/tools/tooling-in-2017">個人工具箱 2017</a></li><li><sup id="fnref-4-0854b2"><a href="#fn-4-0854b2" class="footnote-ref">4</a></sup> <a href="/tools/tooling-in-2017-sep">個人工具箱 2017 九月</a></li></ul>]]></content>
        <category label="life" term="life"/>
        <category label="tool" term="tool"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[如何撰寫智能合約(Smart Contract)?(IV)加入單元測試]]></title>
        <id>https://blog.gasolin.idv.tw/crypto/howto-write-a-contract-test</id>
        <link href="https://blog.gasolin.idv.tw/crypto/howto-write-a-contract-test"/>
        <updated>2018-01-02T15:00:05.000Z</updated>
        <summary type="html"><![CDATA[因為智能合約一旦部署就難以修改，因此合約的安全性極其重要，要避免合約中出現一些基礎錯誤，除了透過第三方驗證外，完整地單元測試(unit test)也是必需的。]]></summary>
        <content type="html"><![CDATA[<p>因為智能合約一旦部署就難以修改，因此合約的安全性極其重要，要避免合約中出現一些基礎錯誤，除了透過第三方驗證外，完整地單元測試 (unit test) 也是必需的。</p><p>目前最成熟的智能合約單元測試方式，還是透過<code>Truffle</code>開發框架來達成。有趣的是 Truffle 主要使用 Javascript 來撰寫智能合約的單元測試（也可以用 solidity 來寫）。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="加入測試">加入測試<a href="#加入測試" class="hash-link" aria-label="Direct link to 加入測試" title="Direct link to 加入測試">​</a></h2><p>接續上一篇建立的<code>HelloToken</code>合約，在<code>test/</code>目錄下加入<code>test_hello_token.js</code>測試檔案（如果覺得這份程式碼不易理解，可跳過這節，後面會介紹更簡潔的測試方法，到時再回來對照著看）。</p><div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">var</span><span class="token plain"> </span><span class="token maybe-class-name">HelloToken</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> artifacts</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">require</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'HelloToken'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> </span><span class="token constant" style="color:#36acaa">INITIAL_SUPPLY</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">100000</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">let</span><span class="token plain"> _totalSupply</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">contract</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'HelloToken'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">accounts</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#d73a49">it</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'should met initial supply'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">var</span><span class="token plain"> contract</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token maybe-class-name">HelloToken</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">deployed</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">then</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">instance</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        contract </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> instance</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword control-flow" style="color:#00009f">return</span><span class="token plain"> contract</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">totalSupply</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">call</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">then</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">totalSupply</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        _totalSupply </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> totalSupply</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        assert</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">equal</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">totalSupply</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">toNumber</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token constant" style="color:#36acaa">INITIAL_SUPPLY</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword control-flow" style="color:#00009f">return</span><span class="token plain"> contract</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">balanceOf</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">accounts</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">then</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">senderBalance</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        assert</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">equal</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">_totalSupply</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">toNumber</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> senderBalance</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">toNumber</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>運行<code>truffle test</code>可看到測試通過的結果。</p><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">Contract: HelloToken</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    ✓ should met initial supply</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">1 passing (11ms)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="講解">講解<a href="#講解" class="hash-link" aria-label="Direct link to 講解" title="Direct link to 講解">​</a></h3><div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">var</span><span class="token plain"> </span><span class="token maybe-class-name">HelloToken</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> artifacts</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">require</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'HelloToken'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><code>artifacts.require</code>的用法和在<code>migrations/</code>中的用法相同，可以直接引入對應的智能合約。</p><div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">contract</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'HelloToken'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">accounts</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#d73a49">it</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'should met initial supply'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Truffle 是使用 Javascript 開發中常見的<a href="https://mochajs.org/" target="_blank" rel="noopener noreferrer">Mocha</a>測試框架和<a href="http://chaijs.com/" target="_blank" rel="noopener noreferrer">Chai</a>斷言庫來做單元測試。差別只是把 Mocha test 中的 <code>describe</code>換成<code>contract</code>。根據官方文件<sup id="fnref-1-736c7d"><a href="#fn-1-736c7d" class="footnote-ref">1</a></sup>，<code>contact</code>執行前會自動重新部署到 testrpc (或測試網路) 上，所以智能合約會是剛部署好乾淨的狀態。</p><p>此外，<code>contract</code>也會帶入<code>accounts</code>變數，裡面儲存了 testrpc 或其他你運行的測試網路所提供的帳號，開發者可以直接使用這些帳號來測試合約。</p><p>第一個測試是來測部署合約後預設的代幣數目是否正確。</p><div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">var</span><span class="token plain"> contract</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token maybe-class-name">HelloToken</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">deployed</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">then</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">instance</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    contract </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> instance</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword control-flow" style="color:#00009f">return</span><span class="token plain"> contract</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">totalSupply</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">call</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">then</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">totalSupply</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token spread operator" style="color:#393A34">...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>這邊內容和在<code>truffle console</code>中輸入的測試內容雷同，使用<code>Promise</code>來確定每個非同步的操作都在上一個操作完成後才繼續執行。</p><p>上一個操作可以透過 <code>return</code> 語句回傳下個操作需要的參數。例如這邊<code>then</code>裡面傳入的<code>totalSupply</code>參數，是來自上一行<code>return contract.totalSupply.call()</code>的結果。</p><div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">assert</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">equal</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">totalSupply</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">toNumber</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token constant" style="color:#36acaa">INITIAL_SUPPLY</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token spread operator" style="color:#393A34">...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">assert</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">equal</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">_totalSupply</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">toNumber</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> senderBalance</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">toNumber</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>這邊我們透過<code>assert.equal</code>語句驗證了<code>HelloToken</code>合約中的初始代幣總額與<code>INITIAL_SUPPLY</code>參數的值相符，且與合約部署者 (<code>accounts[0]</code>) 帳戶中擁有的總額相符。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="使用-asyncawait-簡化測試">使用 async/await 簡化測試<a href="#使用-asyncawait-簡化測試" class="hash-link" aria-label="Direct link to 使用 async/await 簡化測試" title="Direct link to 使用 async/await 簡化測試">​</a></h2><p>要理解這樣的 promise chain 需要一些練習。但其實上面的測試用例中，我們只想做好最後的兩個 assert 驗證。有沒有比較直覺的測試方法呢？</p><p>有的！2017 下半年，Javascript 語言支援了<code>async/await</code>語句<!-- -->[2]<!-- -->（只要安裝 Node 7.6 版以上即可使用），可以用更直覺的方式撰寫非同步的程式碼。</p><p>智能合約測試剛好也使用大量的非同步程式碼。使用<code>async/await</code>語句改寫後的智能合約測試程式碼如下：</p><div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">var</span><span class="token plain"> </span><span class="token maybe-class-name">HelloToken</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> artifacts</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">require</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'HelloToken'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> </span><span class="token constant" style="color:#36acaa">INITIAL_SUPPLY</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">100000</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">contract</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'HelloToken'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">accounts</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#d73a49">it</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'should met initial supply'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">async</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">let</span><span class="token plain"> contract </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#00009f">await</span><span class="token plain"> </span><span class="token maybe-class-name">HelloToken</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">deployed</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">let</span><span class="token plain"> totalSupply </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#00009f">await</span><span class="token plain"> contract</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">totalSupply</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">call</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">let</span><span class="token plain"> senderBalance </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#00009f">await</span><span class="token plain"> contract</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">balanceOf</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">accounts</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    assert</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">equal</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">totalSupply</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">toNumber</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token constant" style="color:#36acaa">INITIAL_SUPPLY</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    assert</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">equal</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">totalSupply</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">toNumber</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> senderBalance</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">toNumbe</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>運行<code>truffle test</code>可看到測試通過的結果。</p><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">Contract: HelloToken</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    ✓ should met initial supply</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">1 passing (11ms)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="講解-1">講解<a href="#講解-1" class="hash-link" aria-label="Direct link to 講解" title="Direct link to 講解">​</a></h3><div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">it</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'should met initial supply'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">async</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>要在程式碼中使用 async/await，需要在函式前加入<code>async</code>宣告，這樣解譯器才會解析函式中的<code>await</code>語法。</p><div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">let</span><span class="token plain"> contract </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#00009f">await</span><span class="token plain"> </span><span class="token maybe-class-name">HelloToken</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">deployed</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">let</span><span class="token plain"> totalSupply </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#00009f">await</span><span class="token plain"> contract</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">totalSupply</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">call</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">let</span><span class="token plain"> senderBalance </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#00009f">await</span><span class="token plain"> contract</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">balanceOf</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">accounts</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>透過在非同步的操作前加上<code>await</code>宣告，這三行程式會依照順序，等待第一行 await 語句執行完，取得<code>contract</code>變數後，再依序執行第二行語句。第二行語句執行完，取得<code>totalSupply</code>變數後，再繼續執行第三行語句以取得<code>senderBalance</code>變數。</p><p>後面兩個 assert 語句則與 promise 撰寫時完全一樣。這樣改寫後，程式碼的可讀性大大地提昇了！</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="加入轉帳測試">加入轉帳測試<a href="#加入轉帳測試" class="hash-link" aria-label="Direct link to 加入轉帳測試" title="Direct link to 加入轉帳測試">​</a></h2><p>再透過<code>async/await</code>語句試著加入轉帳測試：</p><div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#d73a49">it</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'should have right balance after transfer'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">async</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> </span><span class="token constant" style="color:#36acaa">AMOUNT</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">123</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">let</span><span class="token plain"> contract </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#00009f">await</span><span class="token plain"> </span><span class="token maybe-class-name">HelloToken</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">deployed</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// check init balance</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">let</span><span class="token plain"> account0Balance </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#00009f">await</span><span class="token plain"> contract</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">balanceOf</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">accounts</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">let</span><span class="token plain"> account1Balance </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#00009f">await</span><span class="token plain"> contract</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">balanceOf</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">accounts</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    assert</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">equal</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">account0Balance</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">toNumber</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token constant" style="color:#36acaa">INITIAL_SUPPLY</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    assert</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">equal</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">account1Balance</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">toNumber</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// check balance after transferred</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword control-flow" style="color:#00009f">await</span><span class="token plain"> contract</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">transfer</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">accounts</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token constant" style="color:#36acaa">AMOUNT</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    account0Balance </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#00009f">await</span><span class="token plain"> contract</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">balanceOf</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">accounts</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    account1Balance </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#00009f">await</span><span class="token plain"> contract</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">balanceOf</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">accounts</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    assert</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">equal</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">account0Balance</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">toNumber</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token constant" style="color:#36acaa">INITIAL_SUPPLY</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> </span><span class="token constant" style="color:#36acaa">AMOUNT</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    assert</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">equal</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">account1Balance</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">toNumber</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token constant" style="color:#36acaa">AMOUNT</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>運行<code>truffle test</code>可看到測試通過的結果。</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">Contract: HelloToken</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    ✓ should met initial supply</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    ✓ should have right balance after transfer (92ms)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">2 passing (151ms)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="講解-2">講解<a href="#講解-2" class="hash-link" aria-label="Direct link to 講解" title="Direct link to 講解">​</a></h3><div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">let</span><span class="token plain"> account0Balance </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#00009f">await</span><span class="token plain"> contract</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">balanceOf</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">accounts</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">let</span><span class="token plain"> account1Balance </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#00009f">await</span><span class="token plain"> contract</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">balanceOf</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">accounts</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">assert</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">equal</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">account0Balance</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">toNumber</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token constant" style="color:#36acaa">INITIAL_SUPPLY</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">assert</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">equal</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">account1Balance</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">toNumber</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>範例的前半部測試<code>帳號0</code>與<code>帳號1</code>中的代幣餘額。<code>帳號0</code>即部署代幣的帳號，因此擁有所有的<code>HelloToken</code>代幣，而<code>帳號1</code>中則沒有<code>HelloToken</code>代幣。</p><div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword control-flow" style="color:#00009f">await</span><span class="token plain"> contract</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">transfer</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">accounts</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token constant" style="color:#36acaa">AMOUNT</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>接著呼叫合約的<code>transfer</code>方法將一些代幣轉入<code>帳號1</code>。注意這些都是非同步的操作（送出傳輸命令後，要先等待區塊鍊確認），因此需要使用<code>await</code>語句。</p><div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">account0Balance </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#00009f">await</span><span class="token plain"> contract</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">balanceOf</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">accounts</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">account1Balance </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#00009f">await</span><span class="token plain"> contract</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">balanceOf</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">accounts</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">assert</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">equal</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">account0Balance</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">toNumber</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token constant" style="color:#36acaa">INITIAL_SUPPLY</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> </span><span class="token constant" style="color:#36acaa">AMOUNT</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">assert</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">equal</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">account1Balance</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">toNumber</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token constant" style="color:#36acaa">AMOUNT</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>範例的後半部再次測試<code>帳號0</code>與<code>帳號1</code>中的代幣餘額。結果符合轉帳後兩個帳戶的預期代幣數額。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="結語">結語<a href="#結語" class="hash-link" aria-label="Direct link to 結語" title="Direct link to 結語">​</a></h2><p><code>async/await</code>語句相當適合拿來寫非同步的程式，這特性太適合用來寫智能合約的測試了。因為<code>async/await</code>這語法太新，所以大部分的參考資料都還在用<code>Promise</code>來撰寫。我建議當你看到相關的智能合約測試時，可以用 async/await 改寫看看，會有很不一樣的感受。</p><h1>參考資料</h1><p>[1]<!-- --> Writing Tests in Javascript <a href="http://truffleframework.com/docs/getting_started/javascript-tests" target="_blank" rel="noopener noreferrer">http://truffleframework.com/docs/getting_started/javascript-tests</a>
<!-- -->[2]<!-- --> 6 Reasons Why JavaScript’s Async/Await Blows Promises Away (Tutorial)<a href="https://hackernoon.com/6-reasons-why-javascripts-async-await-blows-promises-away-tutorial-c7ec10518dd9" target="_blank" rel="noopener noreferrer">https://hackernoon.com/6-reasons-why-javascripts-async-await-blows-promises-away-tutorial-c7ec10518dd9</a></p>]]></content>
        <category label="ethereum" term="ethereum"/>
        <category label="solidity" term="solidity"/>
        <category label="javascript" term="javascript"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[在 Linux 上設定 Ledger Nano S 硬體錢包]]></title>
        <id>https://blog.gasolin.idv.tw/crypto/setup_ledger_nano_on_linux</id>
        <link href="https://blog.gasolin.idv.tw/crypto/setup_ledger_nano_on_linux"/>
        <updated>2017-12-26T23:10:30.000Z</updated>
        <summary type="html"><![CDATA[今天已把前陣子買到的 Ledget Nano S 硬體錢包在Windows 10/Elementary OS(/Ubuntu 16.04)上設定好，正式開始使用。和預期一樣，雖然在Linux上剛開始設定時需要多做一些步驟，但是一旦設定好後，使用過程和在其他平台上並沒有區別。]]></summary>
        <content type="html"><![CDATA[<p>今天已把前陣子買到的 Ledget Nano S 硬體錢包在 Windows 10/Elementary OS (/Ubuntu 16.04) 上設定好，正式開始使用。和預期一樣，雖然在 Linux 上剛開始設定時需要多做一些步驟，但是一旦設定好後，使用過程和在其他平台上並沒有區別。</p><h1>硬體錢包</h1><p>過去透過 NAS，外接硬碟等方式來保護自己的相片，作品等「數位資產」，以防哪天檔案遺失或外流。現在要守護的範圍更要擴及「加密代幣」，即保護自己的「數位財產」。</p><div class="mermaid" data-mermaid-src="graph LR
作品 --> NAS
相片 --> NAS
相片 --> 線上備份
NAS --> 數位資產
線上備份 --> 數位資產
加密代幣 --> 硬體錢包
硬體錢包 --> 數位資產">graph LR
作品 --&gt; NAS
相片 --&gt; NAS
相片 --&gt; 線上備份
NAS --&gt; 數位資產
線上備份 --&gt; 數位資產
加密代幣 --&gt; 硬體錢包
硬體錢包 --&gt; 數位資產</div><p>MyEtherWallet 網站<a href="https://myetherwallet.github.io/knowledge-base/hardware-wallets/hardware-wallet-recommendations.html" target="_blank" rel="noopener noreferrer">推薦</a>任何擁有超過「2 周的薪資」數位財產的人，使用「硬體錢包」來保管自己的「加密代幣」，以避免可能的財產損失。</p><p>目前 Ledget Nano S 和 TREZOR 是兩款較多人使用的硬體錢包。硬體錢包的安全性從產生錢包帳號開始。硬體錢包帳號的私鑰一直保存在硬體設備中，只要保存好「recovery phase」(Mnemonic Seed)，不會發生使用線上交易所時帳號或帳戶中的代幣可能被盜的風險。只有在發送代幣時需要解鎖錢包帳號。解鎖錢包帳號時，輸入 PIN 碼解鎖的過程，也是透過硬體錢包上的按鍵完成，從而避免了所使用的電腦可能已被入侵者安裝鍵盤側錄軟體而造成的財產上的風險。</p><h1>設定流程</h1><h2 class="anchor anchorWithStickyNavbar_LWe7" id="1-設定-ledget-nano-s-硬體">1. 設定 Ledget Nano S 硬體<a href="#1-設定-ledget-nano-s-硬體" class="hash-link" aria-label="Direct link to 1. 設定 Ledget Nano S 硬體" title="Direct link to 1. 設定 Ledget Nano S 硬體">​</a></h2><p>在 Ledget Nano S 上透過按壓左右兩顆硬體按鈕，設定 4~8 字的 PIN Code 與 24 個單字的「recovery phase」，並用紙筆等實體方式記錄下來（千萬別用拍照的...）。完成後機器會隨機挑幾個次序測試，而你需要選擇對應的單字來確認安全性。如果以後機器壞了或遺失了，仍然可以透過這 24 個單字的「recovery phase」來取回帳號。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="2-在電腦上安裝-chrome-或-chromium">2. 在電腦上安裝 Chrome 或 Chromium<a href="#2-在電腦上安裝-chrome-或-chromium" class="hash-link" aria-label="Direct link to 2. 在電腦上安裝 Chrome 或 Chromium" title="Direct link to 2. 在電腦上安裝 Chrome 或 Chromium">​</a></h2><p>因為目前 Ledger Nano S 使用 Chrome App 技術來提供桌面應用程式，Chrome 也是唯一支援<a href="https://wicg.github.io/webusb/" target="_blank" rel="noopener noreferrer">WebUSB API</a>的瀏覽器...Google 近期公告 Chrome App 即將被 Progressive Web App 取代，我們拭目以待 Ledger 公司將拿出什麼方案來應對。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="3-安裝-ledger-manager">3. 安裝 Ledger Manager<a href="#3-安裝-ledger-manager" class="hash-link" aria-label="Direct link to 3. 安裝 Ledger Manager" title="Direct link to 3. 安裝 Ledger Manager">​</a></h2><p>前往<a href="https://www.ledgerwallet.com/apps/manager" target="_blank" rel="noopener noreferrer">https://www.ledgerwallet.com/apps/manager</a>安裝 Ledger Manager。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="4-設定-usb-連線">4. 設定 USB 連線<a href="#4-設定-usb-連線" class="hash-link" aria-label="Direct link to 4. 設定 USB 連線" title="Direct link to 4. 設定 USB 連線">​</a></h2><p>這時開啟 Ledger Manager，將 Ledget Nano S 連線到電腦並解鎖，Ledger Manager 無法找到對應的設備。</p><p>這時可以參考<a href="https://ledger.zendesk.com/hc/en-us/articles/115005165269-What-if-Ledger-Wallet-is-not-recognized-on-Linux-" target="_blank" rel="noopener noreferrer">What if Ledger Wallet is not recognized on Linux?</a>在命令行環境下輸入以下命令：</p><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">wget -q -O - https://www.ledgerwallet.com/support/add_udev_rules.sh | sudo bash</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>執行後重新將 Ledget Nano S 連線到電腦並解鎖，可以看到 Ledger Manager 開始更新資料。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="4-安裝-ethereum-app">4. 安裝 Ethereum App<a href="#4-安裝-ethereum-app" class="hash-link" aria-label="Direct link to 4. 安裝 Ethereum App" title="Direct link to 4. 安裝 Ethereum App">​</a></h2><p>Ledger Manager 與 Ledget Nano S 連線後，除了可以更新韌體之外，也能安裝不同的「加密代幣」App 進 Ledget Nano S。</p><p>這邊選擇安裝 Ethereum App。</p><p>安裝完成後，在 Ledget Nano S 上可以看到多出一個<code>Ethereum</code>的圖示。</p><p>點選進入<code>Ethereum</code>，確認<code>Browser Support</code>選項為<code>No</code> (Ethereum&gt; Settings &gt; Browser Support &gt; No)，這樣稍後安裝的 Ledger Wallet Ethereum 才能辨識到 Ledget Nano S。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="5-安裝-ledger-wallet-ethereum">5. 安裝 Ledger Wallet Ethereum<a href="#5-安裝-ledger-wallet-ethereum" class="hash-link" aria-label="Direct link to 5. 安裝 Ledger Wallet Ethereum" title="Direct link to 5. 安裝 Ledger Wallet Ethereum">​</a></h2><p>參考<a href="https://ledger.zendesk.com/hc/en-us/articles/115005199649-How-to-install-and-use-Ethereum-and-Ethereum-Classic-" target="_blank" rel="noopener noreferrer">How to install and use Ethereum and Ethereum Classic?</a> 前往<a href="https://www.ledgerwallet.com/apps/ethereum" target="_blank" rel="noopener noreferrer">https://www.ledgerwallet.com/apps/ethereum</a>下載 Ledger Wallet Ethereum App。</p><p>安裝好後重新將 Ledget Nano S 連線到電腦並解鎖，可以看到相關操作界面。</p><h1>使用 MyEtherWallet 取代 Ledger Wallet Ethereum</h1><p>若不喜歡使用 App，還可透過 MyEtherWallet 來存取。</p><p>參考<a href="https://myetherwallet.github.io/knowledge-base/migration/moving-from-private-key-to-ledger-hardware-wallet.html" target="_blank" rel="noopener noreferrer">Moving from MyEtherWallet to Ledger</a> 和<a href="https://ledger.zendesk.com/hc/en-us/articles/115005200009-How-to-use-MyEtherWallet-with-Ledger" target="_blank" rel="noopener noreferrer">How to use MyEtherWallet with Ledger</a> 這兩篇設定，將<code>Setting</code>中的<code>Contract Data</code>與<code>Browser support</code>選項都設成<code>Yes</code>，</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">Ethereum &gt; Settings &gt; Contract Data &gt; Yes</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Ethereum &gt; Settings &gt; Browser Support &gt; Yes</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>透過 Chrome 瀏覽器，在 MyEtherWallet 中看到<code>How would you like to access your wallet</code>選項時，選擇<code>Ledger Wallet</code>並在硬體上解鎖即可。</p><h1>參考資料</h1><ul><li>BIP39 Mnemonic Code Converter <a href="https://iancoleman.io/bip39/" target="_blank" rel="noopener noreferrer">https://iancoleman.io/bip39/</a></li></ul>]]></content>
        <category label="ethereum" term="ethereum"/>
        <category label="linux" term="linux"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Firefox 使用者導覽 (Onboarding)]]></title>
        <id>https://blog.gasolin.idv.tw/code/firefox-onboarding</id>
        <link href="https://blog.gasolin.idv.tw/code/firefox-onboarding"/>
        <updated>2017-11-27T16:30:18.000Z</updated>
        <summary type="html"><![CDATA[隨著Firefox 56，57版的推出，我參與製作的Firefox Onboarding功能也正式和大眾見面了。]]></summary>
        <content type="html"><![CDATA[<p>隨著 Firefox 56，57 版的推出，我參與製作的 Firefox Onboarding 功能也正式和大眾見面了。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="firefox-56">Firefox 56<a href="#firefox-56" class="hash-link" aria-label="Direct link to Firefox 56" title="Direct link to Firefox 56">​</a></h2><p>在 Firefox 56 版中當新使用者開啟瀏覽器時，會看到一個可愛的狐狸頭。
<img loading="lazy" src="https://i.imgur.com/5f4I31q.png" alt="Imgur" class="img_ev3q"></p><p>點進去可以看到一些功能導覽頁面。
<img loading="lazy" src="https://i.imgur.com/WaOb0Fo.png" alt="Imgur" class="img_ev3q"></p><p>點擊導覽頁面右下方的按鈕的話，會聚焦到瀏覽器對應的功能區塊上，使用者可以快速嘗試這些功能。
<img loading="lazy" src="https://i.imgur.com/JhNp2K4h.png" alt="Imgur" class="img_ev3q"></p><p>我們也加入了 Web assessibility，使用者可以只用鍵盤來瀏覽整個使用者導覽頁面。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="firefox-quantum-57">Firefox Quantum (57)<a href="#firefox-quantum-57" class="hash-link" aria-label="Direct link to Firefox Quantum (57)" title="Direct link to Firefox Quantum (57)">​</a></h2><p>經過使用者研究 (User research)，在 Firefox Quantum (57) 版上我們針對 Onboarding 的體驗又做了不小的修改。</p><p></p><p>這次的更新除了主視覺與一些互動元素都變得不一樣之外，也加了個小彩蛋：新使用者 (全新的 profile) 和從過去版本升級的使用者，所看到的功能導覽項目是不盡相同的喔。</p><p></p><p>有興趣進一步了解我們怎麼製作 Onboarding Tour，可參考<a href="https://github.com/mozilla/gecko-dev/tree/master/browser/extensions/onboarding" target="_blank" rel="noopener noreferrer">Onboarding 文件</a></p>]]></content>
        <category label="web" term="web"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[為 Elementary OS 設定中文環境]]></title>
        <id>https://blog.gasolin.idv.tw/tools/chinese-in-elementary-os</id>
        <link href="https://blog.gasolin.idv.tw/tools/chinese-in-elementary-os"/>
        <updated>2017-11-04T19:19:48.000Z</updated>
        <summary type="html"><![CDATA[在前一篇文章中我已經設定好了雙系統（Elementary OS/Windows 10）開機。在這篇中將繼續把系統的基礎中文環境（中文界面 + 輸入法）設定起來。感謝前路上的貢獻者讓整個過程變得相當容易。]]></summary>
        <content type="html"><![CDATA[<p>在前一篇文章中我已經設定好了雙系統（Elementary OS/Windows 10）開機。在這篇中將繼續把系統的基礎中文環境（中文界面 + 輸入法）設定起來。感謝前路上的貢獻者讓整個過程變得相當容易。</p><p>設定好的中文環境如下
<img loading="lazy" src="https://i.imgur.com/WjBUcl6m.png" alt="Imgur" class="img_ev3q"></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="為什麼要用elementary-os">為什麼要用 Elementary OS?<a href="#為什麼要用elementary-os" class="hash-link" aria-label="Direct link to 為什麼要用 Elementary OS?" title="Direct link to 為什麼要用 Elementary OS?">​</a></h2><p>其實 Ubuntu 等發行版的中文環境已經做得很好，如果使用 Ubuntu 等更成熟的發行版，基礎的中文環境都是預設好開箱即用的。</p><p>但我就是任性想用基於 Ubuntu，但是界面看起來更養眼的<a href="https://elementary.io/zh_TW/" target="_blank" rel="noopener noreferrer">Elementary OS</a>。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="調整語系">調整語系<a href="#調整語系" class="hash-link" aria-label="Direct link to 調整語系" title="Direct link to 調整語系">​</a></h2><p></p><p>首先，打開<code>Settings</code>中的<code>Language &amp; Region</code>，在左側<code>Installed Languages</code>選單中將界面切換到中文。並選擇完全安裝（Complete Installation）。</p><p>等待安裝好後重新登入，就可以看到全中文界面了。</p><p></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="安裝新酷音輸入法">安裝新酷音輸入法<a href="#安裝新酷音輸入法" class="hash-link" aria-label="Direct link to 安裝新酷音輸入法" title="Direct link to 安裝新酷音輸入法">​</a></h2><p>在安裝好 Elementary OS 0.4.1 後，預設並沒有輸入法選項，但其實內部已安裝了 ibus 輸入法框架。</p><p>因為沒有內建輸入法，所以若要使用輸入法，需要自行安裝。</p><p>在命令列中輸入以下命令以安裝新酷音輸入法</p><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ sudo apt update</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ sudo apt install ibus-chewing</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>安裝好後再輸入<code>ibus-setup</code>，可開啟輸入法設定畫面</p><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ ibus-setup</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>在 「輸入法」 分頁底下的 「漢語」 子選單當中可以加入剛安裝的新酷音輸入法。</p><p></p><p>按「確定」，在設定畫面中可以看到的新酷音輸入法。</p><p></p><p>最後重要的步驟，就是將切換方式改成個人較習慣的<code>Ctrl+Space</code>。</p><p></p><p>如此一來，就可以在 Elementary OS 上輸入中文啦！這篇文章就是從截圖到文章編輯 / 上傳，全程在已照上述方式安裝好 Elmentary OS 基礎中文環境的筆電上完成的。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="fcitx-版">fcitx 版<a href="#fcitx-版" class="hash-link" aria-label="Direct link to fcitx 版" title="Direct link to fcitx 版">​</a></h3><p>我也試了安裝 fcitx 版本的新酷音</p><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ sudo apt install fcitx fcitx-chewing</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>安裝好後使用<code>im-config</code>命令將預設輸入法框架切換成<code>fcitx</code>，重新開機後就可以看到輸入法圖示了。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="參考資料">參考資料<a href="#參考資料" class="hash-link" aria-label="Direct link to 參考資料" title="Direct link to 參考資料">​</a></h2><ul><li>Ubuntu fcitx + chewing 新酷音輸入法 <a href="https://gist.github.com/tanyuan/c0d4ee15cf0c9c93da28cc1cf0ff87b3" target="_blank" rel="noopener noreferrer">https://gist.github.com/tanyuan/c0d4ee15cf0c9c93da28cc1cf0ff87b3</a></li></ul>]]></content>
        <category label="linux" term="linux"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Dual boot Elementary OS & Windows 10 on XPS 13 (9360)]]></title>
        <id>https://blog.gasolin.idv.tw/tools/xps13-elementary-os</id>
        <link href="https://blog.gasolin.idv.tw/tools/xps13-elementary-os"/>
        <updated>2017-10-25T14:40:48.000Z</updated>
        <summary type="html"><![CDATA[I just successfully installed Elementary OS Luna (0.4.1) along side with Windows 10 on my new Dell XPS 9360 machine.]]></summary>
        <content type="html"><![CDATA[<p>I just successfully installed Elementary OS Luna (0.4.1) along side with Windows 10 on my new Dell XPS 9360 machine.</p><p>Comparing this XPS 13 <code>9360 (8th Gen i7)</code> with my previous model <code>9343 (5th Gen i7)</code>, the CPU is way faster(feels like 3 times faster), the wireless works well and the signal is stronger (which I was encountered some issues in XPS 13 9343), the keyboard feedback is pleasent, and the battery life did last longer in 9360.</p><p>Several settings are trickier than early days when I try to install *nux on Notebook. Here's the self reference guide and hope it could help others.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="settings-on-windows">Settings on Windows<a href="#settings-on-windows" class="hash-link" aria-label="Direct link to Settings on Windows" title="Direct link to Settings on Windows">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="login-to-microsoft-account">Login to Microsoft account<a href="#login-to-microsoft-account" class="hash-link" aria-label="Direct link to Login to Microsoft account" title="Direct link to Login to Microsoft account">​</a></h3><p>It's necessary to bind your account with the device, so you can get recovery key later.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="flash-elementary-os-to-the-usb-disk">Flash Elementary OS to the USB disk<a href="#flash-elementary-os-to-the-usb-disk" class="hash-link" aria-label="Direct link to Flash Elementary OS to the USB disk" title="Direct link to Flash Elementary OS to the USB disk">​</a></h3><p>I download the OS image from <a href="http://elementary.io/" target="_blank" rel="noopener noreferrer">Elementary OS web site</a> and use <a href="https://unetbootin.github.io/" target="_blank" rel="noopener noreferrer">Unetbootin</a> to flash the image into the disk.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="shrink-the-disk-space">Shrink the disk space<a href="#shrink-the-disk-space" class="hash-link" aria-label="Direct link to Shrink the disk space" title="Direct link to Shrink the disk space">​</a></h3><p>I have the 256GB SSD, I use <a href="https://www.partitionwizard.com/" target="_blank" rel="noopener noreferrer">Partition Wizard</a> to slice ~100GB for Elementary OS. </p><p>I have 8GB RAM so I <a href="https://askubuntu.com/questions/49109/i-have-16gb-ram-do-i-need-32gb-swap" target="_blank" rel="noopener noreferrer">reference</a> the recommend swap size and left ~8GB for swap.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="disable-fast-startup">Disable fast startup<a href="#disable-fast-startup" class="hash-link" aria-label="Direct link to Disable fast startup" title="Direct link to Disable fast startup">​</a></h3><p>I also need to follow the instructions to <a href="https://www.tenforums.com/tutorials/4189-turn-off-fast-startup-windows-10-a.html" target="_blank" rel="noopener noreferrer">disable the fast startup</a> on Windows.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="switch-sata-operation-mode-from-raid-to-ahci">Switch SATA operation mode from RAID to AHCI<a href="#switch-sata-operation-mode-from-raid-to-ahci" class="hash-link" aria-label="Direct link to Switch SATA operation mode from RAID to AHCI" title="Direct link to Switch SATA operation mode from RAID to AHCI">​</a></h3><p>Here's the most tricky part. It takes me a while to figure out how to switch the SATA storage from RAID to AHCI. The trick is doing this procedure with <a href="http://triplescomputers.com/blog/uncategorized/solution-switch-windows-10-from-raidide-to-ahci-operation/" target="_blank" rel="noopener noreferrer">Windows safe mode</a>.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="settings-on-bios">Settings on BIOS<a href="#settings-on-bios" class="hash-link" aria-label="Direct link to Settings on BIOS" title="Direct link to Settings on BIOS">​</a></h2><p>Press <code>F12</code> during booting.</p><ul><li>Don't need to turn off the security boot.</li><li>Follow above link's instructions to config SATA storage.</li><li>Save the configureation before exit.</li></ul><p>Reboot to windows and make sure windows runs nicely in safemode. Then follow above link's instructions to jump out of safemode.</p><p>Now I'm prepared and able to install Elementary OS.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="install-elementary-os-through-usb-disk">Install Elementary OS through USB disk<a href="#install-elementary-os-through-usb-disk" class="hash-link" aria-label="Direct link to Install Elementary OS through USB disk" title="Direct link to Install Elementary OS through USB disk">​</a></h2><p>Install Elementary OS as usual Ubuntu distribution.</p><p>First connect to wifi and allow install 3rd party softwares. </p><p>Add the left space as <code>/</code>(root) with <code>Ext4</code> format. And set the left ~8GB as <code>SWAP</code> format.</p><p>Then continue the auto install process.</p><p>Now I have a clean Elementary OS.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="recover-windows-with-bitlocker-recovery-keys">Recover Windows with BitLocker recovery keys<a href="#recover-windows-with-bitlocker-recovery-keys" class="hash-link" aria-label="Direct link to Recover Windows with BitLocker recovery keys" title="Direct link to Recover Windows with BitLocker recovery keys">​</a></h2><p>After restart I can see an option menu with Elementary OS and Windows Boot Manager.</p><p>I can boot to Elementary OS without major issue.</p><p>Well, I met the problem that AppCenter can't start correctly, so I do <code>sudo apt update &amp;&amp; sudo apt upgrade</code> then <code>sudo apt purge appcenter &amp;&amp; sudo apt purge packagekit</code> then restart and run <code>sudo apt install appcenter &amp;&amp; sudo apt install packagekit</code> to make it work normally.</p><p>The input method and bluetooth pairing seems not work out of box, but I can live with that.</p><p>Then when I boot to Windows, I need to enter the BitLocker recovery keys. That could be solved by <a href="https://support.microsoft.com/en-us/help/17133/windows-8-bitlocker-recovery-keys-frequently-asked-questions" target="_blank" rel="noopener noreferrer">following the FAQ from microsoft</a>. I need to login to Microsoft Account and find the recovery key.</p><p>Enter the recovery key then everything works.</p>]]></content>
        <category label="linux" term="linux"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[如何撰寫智能合約(Smart Contract)?(III)建立標準代幣]]></title>
        <id>https://blog.gasolin.idv.tw/crypto/howto-write-an-erc20-compatible-token</id>
        <link href="https://blog.gasolin.idv.tw/crypto/howto-write-an-erc20-compatible-token"/>
        <updated>2017-09-16T17:35:31.000Z</updated>
        <summary type="html"><![CDATA[上一篇中我們已寫好並部署完成了簡單的加密代幣🔒💵合約。在閱讀完本文後，你將學會建立一個可以放到乙太幣錢包的加密代幣🔒💵。]]></summary>
        <content type="html"><![CDATA[<p><a href="/crypto/howto-write-a-simple-token">上一篇</a>中我們已寫好並部署完成了簡單的加密代幣🔒💵合約。在閱讀完本文後，你將學會建立一個可以放到乙太幣錢包👛 的加密代幣🔒💵。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="開發前的準備">開發前的準備<a href="#開發前的準備" class="hash-link" aria-label="Direct link to 開發前的準備" title="Direct link to 開發前的準備">​</a></h2><p>延續上一篇的內容，在開發的過程中，我們將繼續使用<code>testrpc</code><sup id="fnref-1-893fd4"><a href="#fn-1-893fd4" class="footnote-ref">1</a></sup>工具在電腦上模擬智能合約所需的乙太坊區塊鏈測試環境。</p><p>首先確保已啟動 testrpc。若尚未啟動，可以使用以下命令啟動：</p><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ testrpc</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">...</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>這邊有個值得一學的小技巧：在啟動 testrpc 時加上<code>--seed</code>參數，例如</p><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">testrpc --seed apple banana cherry</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>這樣之後重新啟動 testrpc 時可以產生一樣的帳號 (accounts) 和私鑰 (private key)。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="erc20標準">ERC20 標準<a href="#erc20標準" class="hash-link" aria-label="Direct link to ERC20 標準" title="Direct link to ERC20 標準">​</a></h2><p>建立的代幣若要能透過乙太幣錢包👛 來收送，必須相容於以太坊的 ERC20 標準<sup id="fnref-2-893fd4"><a href="#fn-2-893fd4" class="footnote-ref">2</a></sup>。ERC20 標準定義了支援錢包所必須的合約介面。</p><p>本篇將使用<code>OpenZeppelin</code><sup id="fnref-2-893fd4"><a href="#fn-2-893fd4" class="footnote-ref">2</a></sup>函式庫來簡化建立加密代幣🔒💵的過程。<code>OpenZeppelin</code>是一套協助撰寫安全的加密合約的函式庫，裡面也提供了相容 ERC20 標準的智能合約。可以透過 npm 工具安裝到專案目錄<code>node_modules/zeppelin-solodity/</code>中：</p><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ npm install zeppelin-solidity</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>準備完成，我們可以開始建立新的加密代幣智能合約了。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="建立一個標準代幣合約">建立一個標準代幣合約<a href="#建立一個標準代幣合約" class="hash-link" aria-label="Direct link to 建立一個標準代幣合約" title="Direct link to 建立一個標準代幣合約">​</a></h2><p>在<code>contracts/</code>目錄下建立一個<code>HelloToken.sol</code>檔案。也可以使用以下命令來產生檔案：</p><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ truffle create contract HelloToken</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><code>HelloToken.sol</code>檔案內容如下：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">pragma solidity ^0.4.11;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import "zeppelin-solidity/contracts/token/StandardToken.sol";</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">contract HelloToken is StandardToken {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  string public name = "HelloCoin";</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  string public symbol = "H@";</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  uint8 public decimals = 2;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  uint256 public INITIAL_SUPPLY = 88888;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  function HelloToken() public {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    totalSupply = INITIAL_SUPPLY;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    balances[msg.sender] = INITIAL_SUPPLY;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="講解">講解<a href="#講解" class="hash-link" aria-label="Direct link to 講解" title="Direct link to 講解">​</a></h3><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">pragma solidity ^0.4.11;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>第一行指名目前使用的 solidity 版本，不同版本的 solidity 可能會編譯出不同的 bytecode。</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">import "zeppelin-solidity/contracts/token/StandardToken.sol";</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>接著我們使用<code>import</code>語句，來讀入<code>zeppelin-solidity</code>提供的<code>StandardToken</code>合約。</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">contract HelloToken is StandardToken {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>建立<code>HelloToken</code>合約時，使用<code>is</code>語句繼承了<a href="https://github.com/OpenZeppelin/zeppelin-solidity/blob/master/contracts/token/StandardToken.sol" target="_blank" rel="noopener noreferrer">StandardToken</a>合約。因此<code>HelloToken</code>合約繼承了<code>StandardToken</code>合約所包含的資料與呼叫方法。</p><p>當我們繼承了<code>StandardToken</code>合約，也就支援了以下 ERC-20 標準中<sup id="fnref-2-893fd4"><a href="#fn-2-893fd4" class="footnote-ref">2</a></sup>規定的函式</p><table><thead><tr><th>函式</th><th>描述</th></tr></thead><tbody><tr><td>totalSupply()</td><td>代幣發行的總量</td></tr><tr><td>balanceOf(A)</td><td>查詢 A 帳戶下的代幣數目</td></tr><tr><td>transfer(A,x)</td><td>傳送 x 個代幣到 A 帳戶</td></tr><tr><td>transferFrom(A,x)</td><td>從 A 帳戶提取 x 個代幣</td></tr><tr><td>approve(A,x)</td><td>同意 A 帳戶從我的帳戶中提取代幣</td></tr><tr><td>allowance(A,B)</td><td>查詢 B 帳戶可以從 A 帳戶提取多少代幣</td></tr></tbody></table><p>和前一篇一樣，後面驗證時會用到<code>balanceOf</code>和<code>transfer</code>兩個函式。因為<code>StandardToken</code>合約中已經幫我們實做了這些函式，因此我們不需要自己從頭再寫一次。</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">string public name = "HelloCoin";</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">string public symbol = "H@";</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">uint8 public decimals = 2;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">uint256 public INITIAL_SUPPLY = 100000;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>這邊設定參數的目的是指定這個代幣的一些特性。以美元為例，美元的名稱 (<code>name</code>) 是<code>dollar</code>，美元的代號為<code>$</code>，拿一美元去找零最小可以拿到零錢是一美分 (cent)，也就是 0.01 元。因為一美元最小可分割到小數點後 2 位 (0.01)，因此最小交易單位 (decimals) 為 2。</p><p>這邊將這個加密代幣取名 (name) 為<code>HelloCoin</code>(哈囉幣)，代幣的代號 (symbol) 為<code>H@</code>，最小分割單位是 2 (最小可以找 0.01 個哈囉幣)。</p><p>以下為美金，比特幣，以太幣，哈囉幣的對照表供參考：</p><table><thead><tr><th>Name</th><th>Symbol</th><th>decimals</th></tr></thead><tbody><tr><td>Dollar</td><td>$</td><td>2</td></tr><tr><td>Bitcoin</td><td>BTC</td><td>8</td></tr><tr><td>Ethereum</td><td>ETH</td><td>18</td></tr><tr><td>HelloCoin</td><td>H@</td><td>2</td></tr></tbody></table><p>最後也定義了初始代幣數目<code>INITIAL_SUPPLY</code>為<code>100000</code>。當我們把全域變數設為<code>public</code>(公開)，編譯時就會自動新增一個讀取公開變數的 ABI 接口，我們在<code>truffle console</code>中也可以讀取這些變數。</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">function HelloToken() public {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  totalSupply = INITIAL_SUPPLY;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  balances[msg.sender] = INITIAL_SUPPLY;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>和合約同名的<code>HelloToken</code>方法，就是<code>HelloToken</code>合約的建構函式 (constructor)。
在建構式裡指定了<code>totalSupply</code>數目，並將所有的初始代幣<code>INITIAL_SUPPLY</code>都指定給<code>msg.sender</code>帳號，也就是用來部署這個合約的帳號。‵<code>totalSupply</code>定義於<a href="https://github.com/OpenZeppelin/zeppelin-solidity/blob/master/contracts/token/ERC20Basic.sol#L10" target="_blank" rel="noopener noreferrer">ERC20Basic.sol</a>中，<code>balances</code>定義於<a href="https://github.com/OpenZeppelin/zeppelin-solidity/blob/master/contracts/token/BasicToken.sol#L15" target="_blank" rel="noopener noreferrer">BasicToken.sol</a>中。</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">import '../math/SafeMath.sol';</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">...</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">using SafeMath for uint256;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">...</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">balances[msg.sender] = balances[msg.sender].sub(_value);</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>進一步追去看<a href="https://github.com/OpenZeppelin/zeppelin-solidity/blob/master/contracts/token/BasicToken.sol" target="_blank" rel="noopener noreferrer">BasicToken.sol</a>合約的內容，可以發現<code>BasicToken.sol</code>合約中匯入了<code>SafeMath.sol</code>合約<sup id="fnref-7-893fd4"><a href="#fn-7-893fd4" class="footnote-ref">7</a></sup>。<code>SafeMath</code>對各種數值運算加入了必要的驗證，讓合約中的數字計算更安全。</p><p>如此一來，我們已寫好一個可透過以太幣錢包交易的新加密代幣🔒💵合約。如果將這個合約部署到乙太坊公開區塊鍊上，這個代幣合約就會一直存在，世界上從此也就多了一種新的加密代幣。只要你能找到人想擁有這種代幣，這種代幣就有交易的價值。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="編譯與部署">編譯與部署<a href="#編譯與部署" class="hash-link" aria-label="Direct link to 編譯與部署" title="Direct link to 編譯與部署">​</a></h3><p>在<code>migrations/</code>目錄下建立一個<code>4_deploy_hellotoken.js</code>檔案，內容如下：</p><div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">var</span><span class="token plain"> </span><span class="token maybe-class-name">HelloToken</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> artifacts</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">require</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"HelloToken"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">module</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method-variable function-variable method function property-access" style="color:#d73a49">exports</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">deployer</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  deployer</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">deploy</span><span class="token punctuation" style="color:#393A34">(</span><span class="token maybe-class-name">HelloToken</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>現在執行 compile 與 migrate 命令</p><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ truffle compile</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">...</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ truffle migrate --reset</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Using network 'development'.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Running migration: 4_deploy_hellotoken.js</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  Deploying HelloToken...</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  ... 0x2c4659528c68b4e43d1edff6c989fba05e8e7e56cc4085d408426d339b4e9ba4</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  HelloToken: 0x352fa9aa18106f269d944935503afe57a00a9a0d</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Saving successful migration to network...</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  ... 0x1434c1b61e9719f410fc6090ce37c0ec141a1738aba278dd320738e4a5d229fa</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Saving artifacts...</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>如此一來我們已將 HelloCoin 代幣合約部署到 testrpc 上。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="驗證">驗證<a href="#驗證" class="hash-link" aria-label="Direct link to 驗證" title="Direct link to 驗證">​</a></h2><p>我們一樣可以透過<code>truffle console</code>來驗證<code>HelloToken</code>是否部署成功。</p><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ truffle console</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; let contract</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; HelloToken.deployed().then(instance =&gt; contract = instance)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; contract.address</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">'0x352fa9aa18106f269d944935503afe57a00a9a0d'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; contract.balanceOf(web3.eth.coinbase)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">BigNumber { s: 1, e: 5, c: [ 100000 ] }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; contract.balanceOf(web3.eth.accounts[1])</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">BigNumber { s: 1, e: 0, c: [ 0 ] }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; contract.transfer(web3.eth.accounts[1], 123)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">...</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; contract.balanceOf(web3.eth.accounts[0])</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">BigNumber { s: 1, e: 4, c: [ 99877 ] }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; contract.balanceOf(web3.eth.accounts[1])</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">BigNumber { s: 1, e: 2, c: [ 123 ] }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="講解-1">講解<a href="#講解-1" class="hash-link" aria-label="Direct link to 講解" title="Direct link to 講解">​</a></h3><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">&gt; let contract</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; SimpleToken.deployed().then(instance =&gt; contract = instance)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>這邊使用<code>HelloToken.deployed().then</code>語句來取得 HelloToken 合約的 Instance (實例)，並存到<code>contract</code>變數中，以方便後續的呼叫。</p><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">&gt; contract.balanceOf(web3.eth.coinbase)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">BigNumber { s: 1, e: 5, c: [ 100000 ] }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; contract.balanceOf(web3.eth.accounts[1])</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">BigNumber { s: 1, e: 0, c: [ 0 ] }</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><code>web3.eth.coinbase</code> 代表操作者預設的帳號，即 testrpc 所提供的 10 個帳號中的第一個帳號，也可以透過<code>web3.eth.accounts[0]</code>取得。
這兩句的目的是在進行轉帳操作前，先查詢前兩個帳號所擁有的代幣餘額。透過呼叫<code>balanceOf</code>函式，可以看到第一個帳號 (部署合約的帳號) 裡存著所有的代幣。</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">&gt; contract.transfer(web3.eth.accounts[1], 123)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">...</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>接著使用<code>transfer</code>函式來傳送<code>123</code>個代幣到第二個帳號<code>web3.eth.accounts[1]</code>。如果轉帳成功，傳送者預設帳號中會減少<code>123</code>個代幣，接收者帳號中會增加<code>123</code>個代幣。</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">&gt; contract.balanceOf(web3.eth.accounts[0])</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">BigNumber { s: 1, e: 4, c: [ 99877 ] }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; contract.balanceOf(web3.eth.accounts[1])</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">BigNumber { s: 1, e: 2, c: [ 123 ] }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>我們再次透過呼叫<code>balanceOf</code>函式，查詢傳送者帳號和接收者帳號各自剩下的 HelloToken 數目。發現轉帳真的成功了。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="結語">結語<a href="#結語" class="hash-link" aria-label="Direct link to 結語" title="Direct link to 結語">​</a></h2><p>我們用到 <code>OpenZeppelin</code>提供的函式庫來簡化撰寫加密代幣合約的工作。要實際投入使用前，還是建議將呼叫到的程式碼都再審查幾遍。可以從 OpenZeppelin 自己提供的 Audit 開始看<sup id="fnref-4-893fd4"><a href="#fn-4-893fd4" class="footnote-ref">4</a></sup>，可以學到一些觀念。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="參考資料">參考資料<a href="#參考資料" class="hash-link" aria-label="Direct link to 參考資料" title="Direct link to 參考資料">​</a></h2><ul><li>[1]<!-- --> <a href="https://github.com/ethereumjs/testrpc" target="_blank" rel="noopener noreferrer">https://github.com/ethereumjs/testrpc</a></li><li>[2]<!-- --> ERC20 <a href="https://theethereum.wiki/w/index.php/ERC20_Token_Standard" target="_blank" rel="noopener noreferrer">https://theethereum.wiki/w/index.php/ERC20_Token_Standard</a> 或 <a href="https://github.com/ethereum/EIPs/blob/master/EIPS/eip-20-token-standard.md" target="_blank" rel="noopener noreferrer">https://github.com/ethereum/EIPs/blob/master/EIPS/eip-20-token-standard.md</a></li><li>[3]<!-- --> OpenZeppelin <a href="https://github.com/OpenZeppelin/zeppelin-solidity" target="_blank" rel="noopener noreferrer">https://github.com/OpenZeppelin/zeppelin-solidity</a></li><li>[4]<!-- --> OpenZeppelin Audit <a href="https://github.com/OpenZeppelin/zeppelin-solidity/blob/master/audit/ZeppelinAudit.md" target="_blank" rel="noopener noreferrer">https://github.com/OpenZeppelin/zeppelin-solidity/blob/master/audit/ZeppelinAudit.md</a></li><li>[5]<!-- --> An Ethereum Hello World Smart Contract for Beginners part 1 <a href="http://www.talkcrypto.org/blog/2017/04/17/an-ethereum-hello-world-smart-contract-for-beginners-part-1/" target="_blank" rel="noopener noreferrer">http://www.talkcrypto.org/blog/2017/04/17/an-ethereum-hello-world-smart-contract-for-beginners-part-1/</a></li><li>[6]<!-- --> <a href="http://www.talkcrypto.org/blog/2017/04/22/an-ethereum-hello-world-smart-contract-for-beginners-part-2/" target="_blank" rel="noopener noreferrer">http://www.talkcrypto.org/blog/2017/04/22/an-ethereum-hello-world-smart-contract-for-beginners-part-2/</a></li><li>[7]<!-- --> OpenZeppelin <a href="https://github.com/OpenZeppelin/zeppelin-solidity/blob/master/contracts/math/SafeMath.sol" target="_blank" rel="noopener noreferrer">SafeMath 合約</a></li></ul>]]></content>
        <category label="ethereum" term="ethereum"/>
        <category label="solidity" term="solidity"/>
        <category label="javascript" term="javascript"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[如何撰寫智能合約(Smart Contract)?(II)建立加密代幣]]></title>
        <id>https://blog.gasolin.idv.tw/crypto/howto-write-a-simple-token</id>
        <link href="https://blog.gasolin.idv.tw/crypto/howto-write-a-simple-token"/>
        <updated>2017-09-12T00:47:31.000Z</updated>
        <summary type="html"><![CDATA[Update: 12/28/2017 更新教程，使用require取代throw。]]></summary>
        <content type="html"><![CDATA[<p>Update: 12/28/2017 更新教程，使用 require 取代 throw。</p><p><a href="/crypto/howto-write-a-smart-contract">上一篇</a>中我們已寫好並部署完成了第一個智能合約，也驗證了合約確實可以運作。在閱讀完本篇後，你將學會建立一個簡易的加密代幣🔒💵。本篇目的並非為了寫出一個安全可用的加密代幣，而是以介紹代幣合約的相關概念為主， 是以對合約做了適當地簡化，好更易於理解。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="開發前的準備">開發前的準備<a href="#開發前的準備" class="hash-link" aria-label="Direct link to 開發前的準備" title="Direct link to 開發前的準備">​</a></h2><p>延續上一篇的內容，在開發的過程中，我們將繼續使用<code>testrpc</code><sup id="fnref-1-7b9845"><a href="#fn-1-7b9845" class="footnote-ref">1</a></sup>工具在電腦上模擬智能合約所需的乙太坊區塊鏈測試環境。</p><p>首先確保已啟動 testrpc，若尚未啟動，可以使用以下命令啟動</p><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ testrpc</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">...</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>這樣我們就可以開始建立加密代幣智能合約專案了。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="代幣合約的基礎概念">代幣合約的基礎概念<a href="#代幣合約的基礎概念" class="hash-link" aria-label="Direct link to 代幣合約的基礎概念" title="Direct link to 代幣合約的基礎概念">​</a></h2><p>代幣合約扮演像是銀行🏦 的角色。使用者在代幣合約中，用自己的乙太幣帳戶地址當作銀行帳戶，可以透過代幣合約執行轉帳 (transfer，將代幣由一個帳戶傳送到另一個帳戶)，查詢餘額 (balanceOf，查詢指定帳戶中擁有的代幣) 等原本由銀行負責的工作。因為合約部署在公開區塊鏈上，所有的交易都是公開透明，可供檢驗的。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="建立一個代幣合約">建立一個代幣合約<a href="#建立一個代幣合約" class="hash-link" aria-label="Direct link to 建立一個代幣合約" title="Direct link to 建立一個代幣合約">​</a></h2><p>在<code>contracts/</code>目錄下建立一個<code>SimpleToken.sol</code>檔案。也可以使用以下命令來產生檔案：</p><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ truffle create contract SimpleToken</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><code>SimpleToken.sol</code>檔案內容如下：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">pragma solidity ^0.4.11;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">contract SimpleToken {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  uint256 INITIAL_SUPPLY = 10000;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  mapping(address =&gt; uint256) balances;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  function SimpleToken() public {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    balances[msg.sender] = INITIAL_SUPPLY;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  // transfer token for a specified address</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  function transfer(address _to, uint256 _amount) public {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    require(balances[msg.sender] &gt; _amount);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    balances[msg.sender] -= _amount;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    balances[_to] += _amount;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  // Gets the balance of the specified address</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  function balanceOf(address _owner) public constant returns (uint256) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    return balances[_owner];</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="講解">講解<a href="#講解" class="hash-link" aria-label="Direct link to 講解" title="Direct link to 講解">​</a></h3><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">pragma solidity ^0.4.11;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>第一行指名目前使用的 solidity 版本，不同版本的 solidity 可能會編譯出不同的 bytecode。</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">uint256 INITIAL_SUPPLY = 10000;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">mapping(address =&gt; unit256) balances;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>我們定義了初始代幣數目<code>INITIAL_SUPPLY</code>。這邊隨意選擇了一個數字<code>10000</code>。</p><p>我們用<code>mapping</code>來定義一個可以儲存鍵值對 (key-value pair) 的資料結構 (類似 Javascript 中的<code>{"0xaabbccddeeff": 888}</code>)，同時也需要分別指定<code>address</code>作為鍵的型別，指定<code>uint256</code>作為值的型別。和 Javascript 不同，型別定義好後不能隨時更改要儲存的型別。</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">contract SimpleToken {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  function SimpleToken() public {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    balances[msg.sender] = INITIAL_SUPPLY;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>和合約同名的<code>SimpleToken</code>函式，就是<code>SimpleToken</code>這個合約的建構函式 (constructor)。函式中我們拿<code>msg.sender</code>當作 key，<code>INITIAL_SUPPLY</code>當作值，將所有的初始代幣<code>INITIAL_SUPPLY</code>都指定給<code>msg.sender</code>帳號。
<code>msg</code>是一個全域 (Global) 物件<sup id="fnref-2-7b9845"><a href="#fn-2-7b9845" class="footnote-ref">2</a></sup>，<code>msg.sender</code>表示用作呼叫當前函式的帳號。由於建構函式只有在合約部署時會被執行，因此這邊用到的<code>msg.sender</code>，也就代表著用來部署這個合約的帳號。</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">function transfer(address _to, uint256 _amount) public {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  require(balances[msg.sender] &gt; _amount);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  balances[msg.sender] -= _amount;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  balances[_to] += _amount;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><code>transfer</code>函式定義了如何<code>轉帳</code>，只要指定要傳送的帳號與數目，就會從呼叫者手上把對應數目的代幣移轉到指定的帳號上。</p><div class="mermaid" data-mermaid-src="graph LR
傳送者 -- 轉帳 --> 代幣合約
代幣合約 -.-> 修改傳送者和接收者餘額">graph LR
傳送者 -- 轉帳 --&gt; 代幣合約
代幣合約 -.-&gt; 修改傳送者和接收者餘額</div><p><code>require(balances[msg.sender] &gt; _amount);</code>語句判斷帳戶中是否還有足夠轉出的餘額，若存款小於想轉出的數目，就丟出錯誤。</p><p>這個函式這麼寫當然還是過度簡化了，若要能實際使用，需要檢查更多可能的狀況。但就先這樣吧。</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">function balanceOf(address _owner) public constant returns (uint256) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  return balances[_owner];</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><code>balanceOf</code>函式的作用，是讓使用者可以查詢任一帳號的餘額。透過傳入<code>_owner</code>帳號，可以查詢<code>_owner</code>帳號儲存在<code>balances</code>對照表中的值。</p><div class="mermaid" data-mermaid-src="graph LR
傳送者 --> 代幣合約
代幣合約 -. 查詢結果 .-> 傳送者">graph LR
傳送者 --&gt; 代幣合約
代幣合約 -. 查詢結果 .-&gt; 傳送者</div><p>如此一來，我們就寫好一個新加密代幣🔒💵合約囉！接下來將要編譯合約並部署到區塊鏈上。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="編譯與部署">編譯與部署<a href="#編譯與部署" class="hash-link" aria-label="Direct link to 編譯與部署" title="Direct link to 編譯與部署">​</a></h3><p>在<code>migrations/</code>目錄下建立一個<code>3_deploy_token.js</code>檔案，內容如下：</p><div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">var</span><span class="token plain"> </span><span class="token maybe-class-name">SimpleToken</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> artifacts</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">require</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"SimpleToken"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">module</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method-variable function-variable method function property-access" style="color:#d73a49">exports</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">deployer</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  deployer</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">deploy</span><span class="token punctuation" style="color:#393A34">(</span><span class="token maybe-class-name">SimpleToken</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>現在可執行 compile 與 migrate 命令</p><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ truffle compile</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">...</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ truffle migrate</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Using network 'development'.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Running migration: 3_deploy_token.js</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  Deploying HelloToken...</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  ... 0x2c4659528c68b4e43d1edff6c989fba05e8e7e56cc4085d408426d339b4e9ba4</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  SimpleToken: 0x352fa9aa18106f269d944935503afe57a00a9a0d</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Saving successful migration to network...</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  ... 0x1434c1b61e9719f410fc6090ce37c0ec141a1738aba278dd320738e4a5d229fa</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Saving artifacts...</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>如此一來我們已將<code>SimpleToken</code>代幣合約部署到 testrpc 上。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="驗證">驗證<a href="#驗證" class="hash-link" aria-label="Direct link to 驗證" title="Direct link to 驗證">​</a></h2><p>合約部署完成後，我們可以使用<code>truffle console</code>命令開啟 console，輸入以下命令來驗證合約是否能照我們設計的方式運作。</p><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ truffle console</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; let contract</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; SimpleToken.deployed().then(instance =&gt; contract = instance)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; contract.balanceOf(web3.eth.coinbase)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">BigNumber { s: 1, e: 4, c: [ 10000 ] }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; contract.balanceOf(web3.eth.accounts[1])</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">BigNumber { s: 1, e: 0, c: [ 0 ] }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; contract.transfer(web3.eth.accounts[1], 123)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">...</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; contract.balanceOf(web3.eth.coinbase)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">BigNumber { s: 1, e: 3, c: [ 9877 ] }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; contract.balanceOf.call(web3.eth.accounts[1])</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">BigNumber { s: 1, e: 2, c: [ 123 ] }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="講解-1">講解<a href="#講解-1" class="hash-link" aria-label="Direct link to 講解" title="Direct link to 講解">​</a></h3><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">&gt; let contract</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; SimpleToken.deployed().then(instance =&gt; contract = instance)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>這邊使用<code>SimpleToken.deployed().then</code>語句來取得 SimpleToken 合約的 Instance (實例)，並存到<code>contract</code>變數中，以方便後續的呼叫。</p><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">&gt; contract.balanceOf(web3.eth.coinbase)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">BigNumber { s: 1, e: 4, c: [ 10000 ] }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; contract.balanceOf(web3.eth.accounts[1])</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">BigNumber { s: 1, e: 0, c: [ 0 ] }</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>還記得啟動 testrpc 後預設會產生 10 個帳號 (Accounts) 嗎？。<code>web3.eth.coinbase</code> 代表操作者預設的帳號，即 10 個帳號中的第一個帳號<code>web3.eth.accounts[0]</code>，所以這邊呼叫<code>web3.eth.coinbase</code>或<code>web3.eth.accounts[0]</code>結果是一樣的。</p><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">&gt; contract.balanceOf(web3.eth.accounts[0])</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">BigNumber { s: 1, e: 4, c: [ 10000 ] }</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>這兩句的目的是在進行轉帳操作前，先查詢前兩個帳號所擁有的代幣餘額。透過呼叫<code>balanceOf</code>函式，可以看到第一個帳號 (部署合約的帳號) 裡存著所有的代幣。</p><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">&gt; contract.transfer(web3.eth.accounts[1], 123)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">...</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>接著使用<code>transfer</code>函式來傳送<code>123</code>個代幣到第二個帳號<code>web3.eth.accounts[1]</code>。如果轉帳成功，傳送者預設帳號中會減少 123 個代幣，接收者帳號中會增加 123 個代幣。</p><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">&gt; contract.balanceOf(web3.eth.coinbase)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">BigNumber { s: 1, e: 3, c: [ 9877 ] }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; contract.balanceOf.call(web3.eth.accounts[1])</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">BigNumber { s: 1, e: 2, c: [ 123 ] }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>我們再次透過呼叫<code>balanceOf</code>函式，查詢傳送者帳號和接收者帳號各自剩下的 SimpleToken 數目。發現轉帳真的成功了。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="你知道剛剛的程式碼裡有一堆安全漏洞-嗎">你知道剛剛的程式碼裡有一堆安全漏洞💣 嗎？<a href="#你知道剛剛的程式碼裡有一堆安全漏洞-嗎" class="hash-link" aria-label="Direct link to 你知道剛剛的程式碼裡有一堆安全漏洞💣 嗎？" title="Direct link to 你知道剛剛的程式碼裡有一堆安全漏洞💣 嗎？">​</a></h2><p>寫智能合約看起來並不困難吧？但因為智能合約的運作是透明公開的，而且其中牽涉了代幣或金錢的流動，這提供了駭客很強的挑戰動機。</p><p>因此如果要妥善處理智能合約，會遇到的諸多安全問題。即使單純如本篇中的<code>SimpleToken</code>，也至少會遇到幾個問題：例如<code>transfer</code>函式中沒有禁止傳入負數金額，因此傳送者反過來可以從接收者那邊取得代幣。同時也沒有檢查接收者帳號是否合法，因此傳送者可能會傳送失敗或因為送到黑洞中，白白損失了代幣。</p><p>有著一堆安全漏洞的合約，輕則執行失敗白花交易費用，嚴重則影響到合約中的代幣或以太幣。已有多起因為合約的漏洞，造成儲存在合約中的代幣或以太幣被駭客轉走，使得 ICO 失敗的案例。</p><p>有興趣的人可以進一步查看參考資料<sup id="fnref-4-7b9845"><a href="#fn-4-7b9845" class="footnote-ref">4</a></sup>和<sup id="fnref-5-7b9845"><a href="#fn-5-7b9845" class="footnote-ref">5</a></sup>了解智能合約當前的一些最佳實現。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="結語">結語<a href="#結語" class="hash-link" aria-label="Direct link to 結語" title="Direct link to 結語">​</a></h2><p>看完這篇除了學到本篇講解的<code>SimpleToken</code>外，應該也可以大致看得懂 truffle 預設的<code>MetaCoin.sol</code>合約了。不同的細節可以查看 solidity 相關語法<sup id="fnref-2-7b9845"><a href="#fn-2-7b9845" class="footnote-ref">2</a></sup>。
下一篇會接著介紹如何使用經過驗證的函式庫，來建立一份可以放到乙太幣錢包👛 的加密代幣🔒💵合約。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="參考資料">參考資料<a href="#參考資料" class="hash-link" aria-label="Direct link to 參考資料" title="Direct link to 參考資料">​</a></h2><ul><li>[1]<!-- --> <a href="https://github.com/ethereumjs/testrpc" target="_blank" rel="noopener noreferrer">https://github.com/ethereumjs/testrpc</a></li><li>[2]<!-- --> Units and Globally Available Variables <a href="http://solidity.readthedocs.io/en/develop/units-and-global-variables.html" target="_blank" rel="noopener noreferrer">http://solidity.readthedocs.io/en/develop/units-and-global-variables.html</a></li><li>[3]<!-- --> An Ethereum Hello World Smart Contract for Beginners <a href="http://www.talkcrypto.org/blog/2017/04/17/an-ethereum-hello-world-smart-contract-for-beginners-part-1/" target="_blank" rel="noopener noreferrer">part 1</a>, <a href="http://www.talkcrypto.org/blog/2017/04/22/an-ethereum-hello-world-smart-contract-for-beginners-part-2/" target="_blank" rel="noopener noreferrer">part 2</a></li><li>[4]<!-- --> Onward with Ethereum Smart Contract Security <a href="https://blog.zeppelin.solutions/onward-with-ethereum-smart-contract-security-97a827e47702" target="_blank" rel="noopener noreferrer">https://blog.zeppelin.solutions/onward-with-ethereum-smart-contract-security-97a827e47702</a></li><li>[5]<!-- --> Ethereum Contract Security Techniques and Tips <a href="https://github.com/ConsenSys/smart-contract-best-practices" target="_blank" rel="noopener noreferrer">https://github.com/ConsenSys/smart-contract-best-practices</a></li></ul>]]></content>
        <category label="ethereum" term="ethereum"/>
        <category label="solidity" term="solidity"/>
        <category label="javascript" term="javascript"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[如何撰寫智能合約(Smart Contract)?(I)]]></title>
        <id>https://blog.gasolin.idv.tw/crypto/howto-write-a-smart-contract</id>
        <link href="https://blog.gasolin.idv.tw/crypto/howto-write-a-smart-contract"/>
        <updated>2017-09-06T18:30:31.000Z</updated>
        <summary type="html"><![CDATA[Update: 11/30/2017 更新教程，使用Truffle 4.0.1。]]></summary>
        <content type="html"><![CDATA[<p>Update: 11/30/2017 更新教程，使用<a href="https://github.com/trufflesuite/truffle/releases/tag/v4.0.0" target="_blank" rel="noopener noreferrer">Truffle 4.0.1</a>。</p><p><a href="/crypto/what-is-smart-contract">上一篇</a>中介紹了智能合約📒 是什麼，也概略描述了從編譯到部署智能合約的流程，接下來將介紹如何使用 solidity 語言來寫智能合約。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="使用solidity語言撰寫智能合約">使用 solidity 語言撰寫智能合約<a href="#使用solidity語言撰寫智能合約" class="hash-link" aria-label="Direct link to 使用 solidity 語言撰寫智能合約" title="Direct link to 使用 solidity 語言撰寫智能合約">​</a></h2><p>Ethereum 上的智能合約需要使用<code>solidity</code><sup id="fnref-1-fe74e8"><a href="#fn-1-fe74e8" class="footnote-ref">1</a></sup>語言來撰寫。雖然還有其他能用來撰寫智能合約的語言如<code>Serpent</code>(類 Python)、<code>lll</code>(類 Fortran)，但目前看到所有公開的智能合約都是使用 solidity 撰寫。</p><p>宣傳上說，solidity 是一種類似 Javascript 的語言，而且圍繞著 solidity 的各種開發工具鏈，都是使用屬於 Javascript 生態系的 npm 來提供的。但我覺得 solidity 還是比較像 Java 或 C#。
因為和 Javascript 不同，solidity 與 Java 或 C# 同屬於強型別 (Strong Type，在定義變數時需要指定型別) 語言、在定義函式 (function) 時同樣需指定回傳的型別 (type)、同樣也需要先編譯才能執行。這些特性都是 Javascript 所不具備的。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="開發前的準備">開發前的準備<a href="#開發前的準備" class="hash-link" aria-label="Direct link to 開發前的準備" title="Direct link to 開發前的準備">​</a></h2><p>本文將使用當前最活躍的智能合約開發框架<code>truffle</code><sup id="fnref-3-fe74e8"><a href="#fn-3-fe74e8" class="footnote-ref">3</a></sup>為基礎來開發。之前提到過的 ENS (Ethereum Name Service)<sup id="fnref-5-fe74e8"><a href="#fn-5-fe74e8" class="footnote-ref">5</a></sup>也是採用 truffle 框架。其他選擇還有<code>embark</code><sup id="fnref-4-fe74e8"><a href="#fn-4-fe74e8" class="footnote-ref">4</a></sup>等。</p><p>就像一般網站或 App 開發一樣，在提供公開服務之前，開發者會在自己用於寫程式的電腦 (又稱作本機)💻 或透過測試網路🕸️ 來測試程式執行的效果，測試完成後，才會部署到公開的網路上提供服務。
開發區塊鏈智能合約 (程式) 的過程也是如此。特別是公開鏈上所有寫入或讀取計算結果的操作都需要真金白銀 (虛擬代幣)💸 ，而且根據網路狀況，每個公開鏈上的操作都需要要一小段反應時間 (15 秒～數分鐘)，這些等待頗浪費寶貴的開發時間⏳ 。
因此在開發的過程中，我們將使用<code>testrpc</code><sup id="fnref-6-fe74e8"><a href="#fn-6-fe74e8" class="footnote-ref">6</a></sup>工具在電腦上模擬智能合約所需的乙太坊區塊鏈測試環境。</p><p>testrpc 中也包含了 Javascript 版本的 Ethereum 虛擬機 (Ethereum Virtual Machine)<sup id="fnref-7-fe74e8"><a href="#fn-7-fe74e8" class="footnote-ref">7</a></sup>，因此可以完整地執行智能合約😇 。</p><p>此外，開發前還需準備一個合手的編輯器。我目前是使用<a href="https://code.visualstudio.com" target="_blank" rel="noopener noreferrer">Visual Studio Code</a>搭配<a href="https://marketplace.visualstudio.com/items?itemName=JuanBlanco.solidity" target="_blank" rel="noopener noreferrer">solidity</a>插件來開發。solidity 插件除了支援語法高亮之外，也會透過 Solium<sup id="fnref-11-fe74e8"><a href="#fn-11-fe74e8" class="footnote-ref">11</a></sup>檢查並提示基本的語法錯誤，相當方便。其他編輯器應該也有類似的插件可選擇。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="安裝所需工具">安裝所需工具<a href="#安裝所需工具" class="hash-link" aria-label="Direct link to 安裝所需工具" title="Direct link to 安裝所需工具">​</a></h3><p>首先開發機上必須裝好 Node.js，再使用以下命令安裝所需的工具：</p><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ npm install -g ethereumjs-testrpc truffle</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="啟動-testrpc">啟動 Testrpc<a href="#啟動-testrpc" class="hash-link" aria-label="Direct link to 啟動 Testrpc" title="Direct link to 啟動 Testrpc">​</a></h3><p>安裝好後隨時可以使用<code>testrpc</code>命令來啟動乙太坊測試環境。</p><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ testrpc</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Available Accounts</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">==================</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">(0) 0xa4d7ce9137e6f8de4fb1311595b33230be15be50</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">(1) 0x26c231bdd7c8a7304983b04694c3437b30331019</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">(2) 0xe238ccca936dcdbd48f0cf3a1e6f147d04b55527</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">(3) 0x769ed341bf83cc86e5037cb78388012d6e2d9cc9</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">(4) 0x72a084c80195de79e5cd8dca59488e67982f65d7</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">(5) 0xcfda0765b0a82721d2f59581f53846a12e392999</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">(6) 0x4b0349aea768b4e1ed4cec683f8f7dd112729fea</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">(7) 0x643c305f0b3844984d7f1f7b9f3ab93a73dfdfcf</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">(8) 0x2ee0a7974326604442dca127d02fac4957ab3e8a</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">(9) 0xe00e57db1772f6e81bcccc982e565a10ae26ab92</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Private Keys</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">==================</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">(0) 7de56fb677edc8d0c7a1f3a6d5bcb8f73ce257d44996e9b5fc8ad414af38a22a</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">(1) 4401de20cf287d15d1c062005d866a35cd82e2a73f8cb43ec0cb90b117d1ec38</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">(2) 8f51f9100a81218343d44a047ae3b0be5d80d262a13fbef24dc569b3e335e820</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">(3) 241a0ff98dfb6f290dbee909c9a7a4eea2de3a2174e7cddf834868ea03f80fa9</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">(4) ce1108cc6763bc74658068a55b080c6ccbfb1bd26e609588b81c07d13affc70d</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">(5) f9614c1fd34224787e6c95bbe881fb28fd0fdc00808ef85d0430505f4a348690</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">(6) 4c1baad08f720f5c5754bb185e66490b45e3480aa3ec419e4b76f7a81118b296</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">(7) af9af2c6b519d49605cc58b719240299e5e8b9a89a7e94a85625734fc30c46bd</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">(8) 55ab79ae6de4fad5b98bc1dfd795b945ba8e7d92dcc88073f9e3fdfef471f69f</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">(9) e9299fb391c8830370991659780933e6b62269e32a8cbc55a29aa5f73df995a2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">HD Wallet</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">==================</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Mnemonic:      addict cherry medal cupboard bless reduce oven beauty egg gift pledge exact</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Base HD Path:  m/44'/60'/0'/0/{account_index}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>可以看到 testrpc 啟動後自動建立了 10 個帳號 (Accounts)，與每個帳號對應的私鑰 (Private Key)🔑 。每個帳號中都有 100 個測試用的以太幣 (Ether)💵 。要注意 testrpc 僅運行在記憶體中，因此每次重開時都會回到全新的狀態。</p><p>一切準備就緒，我們可以開始建立第一份智能合約專案了。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="建立專案">建立專案<a href="#建立專案" class="hash-link" aria-label="Direct link to 建立專案" title="Direct link to 建立專案">​</a></h2><p>開啟另一個命令列視窗，輸入以下命令以建立專案：</p><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ mkdir hello</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ cd hello</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ truffle init</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>如此一來，我們已建立好第一份智能合約專案了。</p><p>在<code>demo/</code>資料夾下，可以看到<code>contracts/</code>資料夾，裡面放的是這個專案所包含的所有 solidity 程式。我們在<code>contracts/</code>資料夾中額外建立一個<code>HelloWorld.sol</code>檔案。（或者也可以用<code>truffle create contract HelloWorld</code>命令來建立）</p><p><code>HelloWorld.sol</code>檔案內容如下：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">pragma solidity ^0.4.11;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">contract HelloWorld {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    function sayHello() public returns (string) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        return ("Hello World");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="講解">講解<a href="#講解" class="hash-link" aria-label="Direct link to 講解" title="Direct link to 講解">​</a></h3><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">pragma solidity ^0.4.11;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>第一行指名目前使用的 solidity 版本，不同版本的 solidity 可能會編譯出不同的 bytecode。</p><p>想要知道當前的 solidity 版本，也可以用 <code>truffle version</code> 命令來查看當前使用的 truffle 與 solidity 版本：</p><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ truffle version</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Truffle v4.0.1 (core: 4.0.1)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Solidity v0.4.18 (solc-js)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">contract HelloWorld {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  ...</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><code>contract</code>關鍵字類似於其他語言中較常見的<code>class</code>。因為 solidity 是專為智能合約 (Contact) 設計的語言，宣告<code>contract</code>後即內建了開發智能合約所需的功能。也可以把這句理解為<code>class HelloWorld extends Contract</code>。</p><p>雖然一個.sol 檔案中可以定義多個 Contract，但建議一個.sol 檔案中只定義一個 Contract 以便於後續的維護。</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">function sayHello() public returns (string) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    return ("Hello World");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>函式的結構與其他程式類似，但如果有傳入的參數或回傳值，需要指定參數或回傳值的型別 (type)。所有支援的型別可以查看參考資料<sup id="fnref-10-fe74e8"><a href="#fn-10-fe74e8" class="footnote-ref">10</a></sup>。</p><p>solidity 官方推薦的縮排風格為 4 個空格<sup id="fnref-13-fe74e8"><a href="#fn-13-fe74e8" class="footnote-ref">13</a></sup>。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="編譯">編譯<a href="#編譯" class="hash-link" aria-label="Direct link to 編譯" title="Direct link to 編譯">​</a></h2><p>現在執行<code>truffle compile</code>命令，我們可以將<code>HelloWorld.sol</code>原始碼編譯成 Ethereum bytecode。</p><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ truffle compile</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>編譯成功的話，在<code>build/contracts/</code>目錄下會多出<code>HelloWorld.json</code>這個檔案。（在 Windows 平台上執行 truffle compile 若遇到問題，可以查看參考資料<sup id="fnref-9-fe74e8"><a href="#fn-9-fe74e8" class="footnote-ref">9</a></sup>來解決。）</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="部署">部署<a href="#部署" class="hash-link" aria-label="Direct link to 部署" title="Direct link to 部署">​</a></h2><p>為了將寫好的 solidity 程式碼部署到區塊鍊上，我們需要做一些相應的設定。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="遷移">遷移<a href="#遷移" class="hash-link" aria-label="Direct link to 遷移" title="Direct link to 遷移">​</a></h3><p>truffle 框架中提供了方便部署合約的腳本。我們可以在<code>migrations/</code>目錄下維護這些腳本。這些腳本除了能部署合約，也可以用來遷移合約中的資料。建立<code>migrations/2_deploy_contracts.js</code>檔案 (這些腳本使用 Javascript 撰寫)，將內容修改如下</p><div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">var</span><span class="token plain"> </span><span class="token maybe-class-name">HelloWorld</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> artifacts</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">require</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"HelloWorld"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">module</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method-variable function-variable method function property-access" style="color:#d73a49">exports</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">deployer</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  deployer</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">deploy</span><span class="token punctuation" style="color:#393A34">(</span><span class="token maybe-class-name">HelloWorld</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>這些 migration 檔案會依照檔案的<code>編號</code>來執行。例如<code>2_</code>就會在<code>1_</code>之後執行。檔案後面的文字只為協助開發者理解之用。</p><p>在檔案中可使用<code>artifacts.require</code>語句來取得準備部署的合約。使用<code>deployer.deploy</code>語句將合約部署到區塊鏈上。這邊<code>HelloWorld</code>是<code>contract</code>的名稱而不是檔名。因此可以用此語法讀入任一<code>.sol</code>檔案中的任一合約。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="區塊網路設定">區塊網路設定<a href="#區塊網路設定" class="hash-link" aria-label="Direct link to 區塊網路設定" title="Direct link to 區塊網路設定">​</a></h3><p>為了與<code>testrpc</code>連線，需要打開<code>truffle.js</code>並加入以下設定：</p><div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">module</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">exports</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// See &lt;http://truffleframework.com/docs/advanced/configuration&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// to customize your Truffle configuration!</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token literal-property property" style="color:#36acaa">networks</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token literal-property property" style="color:#36acaa">development</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token literal-property property" style="color:#36acaa">host</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"localhost"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token literal-property property" style="color:#36acaa">port</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">8545</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token literal-property property" style="color:#36acaa">network_id</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"*"</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// Match any network id</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>truffle 使用 Javascript 的 Object 格式來定義設定。這邊定義了<code>development</code>網路為<code>localhost:8545</code>，即 testrpc 所提供的網路位址。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="部署-1">部署<a href="#部署-1" class="hash-link" aria-label="Direct link to 部署" title="Direct link to 部署">​</a></h3><p>現在執行<code>truffle migrate</code>命令</p><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ truffle migrate</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Using network 'development'.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Running migration: 1_initial_migration.js</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">...</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Saving successful migration to network...</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Running migration: 2_deploy_contracts.js</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">...</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Saving successful migration to network...</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">...</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Saving artifacts...</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>如此一來合約已經部署到 testrpc 中。切換到 testrpc 視窗，可以看到 testrpc 有反應了。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="與合約互動">與合約互動<a href="#與合約互動" class="hash-link" aria-label="Direct link to 與合約互動" title="Direct link to 與合約互動">​</a></h3><p>truffle 提供命令行工具，執行<code>truffle console</code>命令後，可用 Javascript 來和剛剛部署的合約互動。</p><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ truffle console</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; let contract</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; HelloWorld.deployed().then(instance =&gt; contract = instance)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; contract.sayHello.call()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">'Hello World'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h4 class="anchor anchorWithStickyNavbar_LWe7" id="講解-1">講解<a href="#講解-1" class="hash-link" aria-label="Direct link to 講解" title="Direct link to 講解">​</a></h4><div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token maybe-class-name">HelloWorld</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">deployed</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">then</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">instance</span><span class="token plain"> </span><span class="token arrow operator" style="color:#393A34">=&gt;</span><span class="token plain"> contract </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> instance</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><code>truffle console</code>中預載了<code>truffle-contract</code><sup id="fnref-12-fe74e8"><a href="#fn-12-fe74e8" class="footnote-ref">12</a></sup>函式庫，以方便操作部署到區塊鏈上的合約。</p><p>這邊使用<code>HelloWorld.deployed().then</code>語句來取得 HelloWorld 合約的 Instance (實例)，並存到<code>contract</code>變數中，以方便後續的呼叫。</p><p>上面用的是 Javascript ES6 + 的語法，這句也可以寫成</p><div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token maybe-class-name">HelloWorld</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">deployed</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">then</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">function</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">instance</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  hello </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> instance</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">&gt; contract.sayHello.call()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">'Hello World'</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>這邊直接呼叫<code>contract.sayHello()</code>也會得到一樣的結果。<code>truffle-contract</code>提供使用<code>call()</code>來讀取唯讀 (read only) 的資料，這樣就不需提供 gas。因此如果遇到的操作需要向區塊鏈寫入資料，我們就不能用<code>call</code>語句了。</p><p>如此一來，我們已寫好並部署完成了第一個智能合約，也驗證了合約確實可以運作。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="加入新方法">加入新方法<a href="#加入新方法" class="hash-link" aria-label="Direct link to 加入新方法" title="Direct link to 加入新方法">​</a></h3><p>我們在<code>HelloWorld.sol</code>中再加入一個<code>echo</code>方法，<code>echo</code>方法接受輸入一個參數，並回傳傳送的參數。</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">function echo(string name) constant returns (string) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  return name;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>新的<code>echo</code>方法中傳入了一個<code>name</code>參數。我們也為<code>echo</code>方法加入一個<code>constant</code>宣告，表示呼叫這個方法並不會改變區塊鏈的狀態。如此一來，透過<code>truffle-contract</code>來呼叫此方法時，會自動選用<code>call</code>來呼叫，也不需要額外提供 gas。</p><p>由於更新了合約內容，我們需要先重新新編譯一次，將編譯結果部署到 testrpc 上，再透過<code>truffle console</code>執行看看結果。</p><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ truffle compile</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">...</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ truffle migrate --reset</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">...</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ truffle console</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; let contract</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; HelloWorld.deployed().then(instance =&gt; contract = instance)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; contract.echo("yo man")</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">'yo man'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><code>echo</code>方法確實將我們輸入的內容回傳了。同時因為宣告了<code>constant</code>，我們不需要直接呼叫<code>call()</code>方法，<code>truffle</code>會自動選用 call 來呼叫。</p><p>另一點需要注意的，是這次如果還是用<code>truffle migrate</code>命令，我們會得到如下訊息：</p><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ truffle migrate</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Using network 'development'.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Network up to date.</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Truffle 會告訴你現在網路上的合約都已是最新的，但事實上剛剛程式中新增的方法並沒有更新到區塊鏈上。要更新區塊鏈上已部署的程式，需要改寫<code>migrations</code>中的腳本，但現在還不到介紹 migration 的時候。還好我們開發用的區塊鏈是怎麼修改都沒關係的 testrpc，可以使用<code>truffle migrate --reset</code>命令直接重新在 testrpc 上部署一次🎉 。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="使用truffle-develop命令">使用 truffle develop 命令<a href="#使用truffle-develop命令" class="hash-link" aria-label="Direct link to 使用 truffle develop 命令" title="Direct link to 使用 truffle develop 命令">​</a></h2><p>truffle 4.0.0 版本之後加入了<code>truffle develop</code>命令。這個命令讓我們不需要另外安裝 testrpc 等環境，就能直接上手開發。</p><p>例如</p><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">truffle develop</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Truffle Develop started at http://localhost:9545/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Accounts:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">(0) 0x627306090abab3a6e1400e9345bc60c78a8bef57</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">(1) 0xf17f52151ebef6c7334fad080c5704d77216b732</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">(2) 0xc5fdf4076b8f3a5357c5e395ab970b5b54098fef</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">(3) 0x821aea9a577a9b44299b9c15c88cf3087f3b5544</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">(4) 0x0d1d4e623d10f9fba5db95830f7d3839406c6af2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">(5) 0x2932b7a2355d6fecc4b5c0b6bd44cc31df247a2e</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">(6) 0x2191ef87e392377ec08e7c08eb105ef5448eced5</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">(7) 0x0f4f2ac550a1b4e2280d04c21cea7ebd822934b5</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">(8) 0x6330a553fc93768f612722bb8c2ec78ac90b3bbc</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">(9) 0x5aeda56215b167893e80b4fe645ba6d5bab767de</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Mnemonic: candy maple cake sugar pudding cream honey rich smooth crumble sweet treat</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">truffle(develop)&gt; compile</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">truffle(develop)&gt; migrate</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Using network 'develop'.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Running migration: 1_initial_migration.js</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  Deploying Migrations...</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">...</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Saving artifacts...</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Running migration: 2_deploy_contracts.js</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  Deploying HelloWorld...</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">...</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Saving artifacts...</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">truffle(develop)&gt; let contract</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">truffle(develop)&gt; HelloWorld.deployed().then(instance =&gt;contract = instance)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">...</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">truffle(develop)&gt; contract.sayHello.call()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">'Hello World'</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>可以看到，在命令行中輸入<code>truffle develop</code>命令，可以直接在裡面執行<code>compile</code>，<code>migrate</code>指令，還可以直接使用<code>console</code>命令所提供的與區塊鍊互動等功能。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="結語">結語<a href="#結語" class="hash-link" aria-label="Direct link to 結語" title="Direct link to 結語">​</a></h2><p>本篇設計的範例<sup id="fnref-8-fe74e8"><a href="#fn-8-fe74e8" class="footnote-ref">8</a></sup>相當簡單，但已達到完整地帶大家快速⚡ 走一遍智能合約開發流程的目的。要透過智能合約實現各種功能，可以參考<a href="http://solidity.readthedocs.io/en/latest/solidity-by-example.html" target="_blank" rel="noopener noreferrer">Solidity by example</a> 和 <a href="http://truffleframework.com/docs/getting_started/" target="_blank" rel="noopener noreferrer">Truffle getting started</a> 網站學習更多的內容。也歡迎讀者留言，分享學習資源或提供建議。</p><p>下一篇會接著介紹如何建立一份簡單的加密代幣🔒💵合約。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="參考資料">參考資料<a href="#參考資料" class="hash-link" aria-label="Direct link to 參考資料" title="Direct link to 參考資料">​</a></h2><ul><li>[1]<!-- --> Solidity <a href="http://solidity.readthedocs.io/en/latest/index.html" target="_blank" rel="noopener noreferrer">http://solidity.readthedocs.io/en/latest/index.html</a></li><li>[2]<!-- --> Solidity 線上編輯器　<a href="https://ethereum.github.io/browser-solidity/" target="_blank" rel="noopener noreferrer">https://ethereum.github.io/browser-solidity/</a></li><li>[3]<!-- --> Truffle Framework <a href="http://truffleframework.com/" target="_blank" rel="noopener noreferrer">http://truffleframework.com/</a></li><li>[4]<!-- --> Embark Framework <a href="https://github.com/iurimatias/embark-framework" target="_blank" rel="noopener noreferrer">https://github.com/iurimatias/embark-framework</a></li><li>[5]<!-- --> ENS 也使用 Truffle 框架 <a href="https://github.com/ethereum/ens" target="_blank" rel="noopener noreferrer">https://github.com/ethereum/ens</a></li><li>[6]<!-- --> <a href="https://github.com/ethereumjs/testrpc" target="_blank" rel="noopener noreferrer">https://github.com/ethereumjs/testrpc</a></li><li>[7]<!-- --> <a href="https://github.com/ethereumjs/ethereumjs-vm" target="_blank" rel="noopener noreferrer">https://github.com/ethereumjs/ethereumjs-vm</a></li><li>[8]<!-- --> HelloWorld 範例修改自 <a href="https://app.pluralsight.com/library/courses/blockchain-fundamentals/" target="_blank" rel="noopener noreferrer">https://app.pluralsight.com/library/courses/blockchain-fundamentals/</a></li><li>[9]<!-- -->  Truffle issue on windows <a href="http://truffleframework.com/docs/advanced/configuration#resolving-naming-conflicts-on-windows" target="_blank" rel="noopener noreferrer">http://truffleframework.com/docs/advanced/configuration#resolving-naming-conflicts-on-windows</a></li><li>[10]<!-- --> Solidity 支援的型別 (Type) <a href="https://solidity.readthedocs.io/en/develop/types.html" target="_blank" rel="noopener noreferrer">https://solidity.readthedocs.io/en/develop/types.html</a></li><li>[11]<!-- --> Solium syntax check <a href="https://github.com/duaraghav8/Solium" target="_blank" rel="noopener noreferrer">https://github.com/duaraghav8/Solium</a></li><li>[12]<!-- --> <a href="http://truffleframework.com/docs/getting_started/contracts" target="_blank" rel="noopener noreferrer">http://truffleframework.com/docs/getting_started/contracts</a></li><li>[13]<!-- --> Coding Style <a href="http://solidity.readthedocs.io/en/develop/style-guide.html" target="_blank" rel="noopener noreferrer">http://solidity.readthedocs.io/en/develop/style-guide.html</a></li><li>[14]<!-- --> 本篇也已分享到 medium 上的 Taipei Ethereum Meetup 台灣以太坊社群專欄　<a href="https://medium.com/taipei-ethereum-meetup/%E5%A6%82%E4%BD%95%E6%92%B0%E5%AF%AB%E6%99%BA%E8%83%BD%E5%90%88%E7%B4%84-smart-contract-i-363d06b1965b" target="_blank" rel="noopener noreferrer">https://medium.com/taipei-ethereum-meetup/%E5%A6%82%E4%BD%95%E6%92%B0%E5%AF%AB%E6%99%BA%E8%83%BD%E5%90%88%E7%B4%84-smart-contract-i-363d06b1965b</a></li></ul>]]></content>
        <category label="javascript" term="javascript"/>
        <category label="solidity" term="solidity"/>
        <category label="ethereum" term="ethereum"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[什麼是智能合約(Smart Contract)?]]></title>
        <id>https://blog.gasolin.idv.tw/crypto/what-is-smart-contract</id>
        <link href="https://blog.gasolin.idv.tw/crypto/what-is-smart-contract"/>
        <updated>2017-09-02T22:14:48.000Z</updated>
        <summary type="html"><![CDATA[智能合約是什麼?]]></summary>
        <content type="html"><![CDATA[<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">聲明：gasolin.eth 此 Domain 已過期，我並未繼續註冊</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="智能合約是什麼">智能合約是什麼？<a href="#智能合約是什麼" class="hash-link" aria-label="Direct link to 智能合約是什麼？" title="Direct link to 智能合約是什麼？">​</a></h2><p>在區塊鏈上運行的程式，通常稱為智能合約 (Smart Contract)📒 。所以通常會把 "寫區塊鏈程式" 改稱作 "寫智能合約"。雖然比特幣 (Bitcoin) 上也能寫智能合約，但是比特幣所支援的語法僅與交易有關，能做的事情比較有限。因此目前提到寫智能合約，通常指的是支援執行圖靈完備程式的以太坊 (Ethereum) 區塊鏈⛓️ 。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="智能合約可以做什麼">智能合約可以做什麼<a href="#智能合約可以做什麼" class="hash-link" aria-label="Direct link to 智能合約可以做什麼" title="Direct link to 智能合約可以做什麼">​</a></h2><p>目前最常見的智能合約是各種加密貨幣合約💷 ，開發者可以很容易地透過部署一個智能合約，來提供運行於以太坊上的新加密代幣。如果這份智能合約相容於 ERC20 標準<sup id="fnref-1-ae8ce2"><a href="#fn-1-ae8ce2" class="footnote-ref">1</a></sup>，開發者不需要重新開發從挖礦到交易的整個代幣生態系，你的新加密代幣就可以直接使用支援以太坊的電子錢包💰 來收送，大大降低了建立新加密代幣的門檻。</p><p>智能合約也讓募資💸 變得更透明。參與者投資資金或提供服務，也可獲得相應的權益。這份權益可以用代幣的形式返還給參與者。同樣地如果這代幣相容於 ERC20 標準<sup id="fnref-2-ae8ce2"><a href="#fn-2-ae8ce2" class="footnote-ref">2</a></sup>，投資者或贊助者還可以隨時交易這些代幣。讓資金的運用變得更加彈性，也降低了投資的門檻。</p><p>除此之外，智能合約也可以用來運作各式公開公正的自動服務機構 (DAO，Decentralized Autonomous Organization)🏦 。透過分散在全球各節點上運作的智能合約，所有運作與決策都是公開透明的，降低了交易的不確定性 (Uncertainty)。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="智能合約和一般程式的差異">智能合約和一般程式的差異<a href="#智能合約和一般程式的差異" class="hash-link" aria-label="Direct link to 智能合約和一般程式的差異" title="Direct link to 智能合約和一般程式的差異">​</a></h2><p>以太坊智能合約確實有些和一般程式不同的特性，以下整理了四個不同點。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="一整合金流容易">一，整合金流容易<a href="#一整合金流容易" class="hash-link" aria-label="Direct link to 一，整合金流容易" title="Direct link to 一，整合金流容易">​</a></h3><p>一般的應用程式要整合金流是件非常不容易的事情。而智能合約極容易整合金流系統 (使用以太幣或自行建立的新代幣合約)。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="二部署時與後續寫入時需費用">二，部署時與後續寫入時需費用<a href="#二部署時與後續寫入時需費用" class="hash-link" aria-label="Direct link to 二，部署時與後續寫入時需費用" title="Direct link to 二，部署時與後續寫入時需費用">​</a></h3><p>一般的應用程式需要提供網址讓使用者下載，一般的網頁應用程式也需要運行在伺服器上，開發者需要維持伺服器的運作以提供服務，這需要持續地花費（就算是免費的伺服器或網頁空間，也是廠商自行吸收了費用），程式開始運作後，除了維持費用外不需額外的花費。</p><p>智能合約在部署時需要一筆費用，這筆費用將分給參與交易驗證（挖礦）的人。而在合約部署成功後，合約會作為不可更改的區塊鏈的一部分，分散地儲存在全球各地以太坊的節點上。也因此，智能合約在部署後，並不需定期提供維持費用，同時查詢已寫入區塊鏈的靜態資料時也不需費用。只有在每次透過智能合約寫入或讀取計算結果時，需要提供一小筆交易費用。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="三儲存資料的成本更高">三，儲存資料的成本更高<a href="#三儲存資料的成本更高" class="hash-link" aria-label="Direct link to 三，儲存資料的成本更高" title="Direct link to 三，儲存資料的成本更高">​</a></h3><p>一般的應用程式將資料儲存在本機或伺服器上，需要資料時再從本機或伺服器上讀取，而智能合約將資料儲存在區塊鏈上，儲存資料所需的時間與成本相對昂貴。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="四部署後無法更改">四，部署後無法更改<a href="#四部署後無法更改" class="hash-link" aria-label="Direct link to 四，部署後無法更改" title="Direct link to 四，部署後無法更改">​</a></h3><p>一般的應用程式改版時可透過安裝新版程式，網頁應用程式也可透過部署新版程式達成，而智能合約一旦部署到區塊鏈上後，就無法更改這個智能合約。當然聰明的開發者透過加入額外的智能合約，也已有辦法繞過智能合約部署後無法再更改的限制。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="如何撰寫智能合約">如何撰寫智能合約？<a href="#如何撰寫智能合約" class="hash-link" aria-label="Direct link to 如何撰寫智能合約？" title="Direct link to 如何撰寫智能合約？">​</a></h2><p>Ethereum 上的智能合約需要使用 solidity<sup id="fnref-2-ae8ce2"><a href="#fn-2-ae8ce2" class="footnote-ref">2</a></sup>語言來撰寫。之前還有其他能用來撰寫智能合約的語言如 Serpent (類 Python)、lll (類 Fortran)，但目前看到所有公開的智能合約都是使用 solidity 撰寫。官方宣傳上說 solidity 是一種類似 Javascript 的語言，而且圍繞著 solidity 的各種開發工具鏈都是使用屬於 Javascript 生態系的 npm 來提供的。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="將智能合約部署到區塊鏈的流程">將智能合約部署到區塊鏈的流程<a href="#將智能合約部署到區塊鏈的流程" class="hash-link" aria-label="Direct link to 將智能合約部署到區塊鏈的流程" title="Direct link to 將智能合約部署到區塊鏈的流程">​</a></h2><p>寫好 solidity 程式碼 (.sol) 後，需要先將程式碼編譯 (compile) 成 EVM (Ethereum Virtual Machine) 能讀懂的二進位 Contract ByteCode，才能部署到 Ethereum 的區塊鏈上執行。部署到區塊鏈上的合約會有一個和錢包地址（Address）一樣格式的合約地址（Contract Address）。</p><div class="mermaid" data-mermaid-src="graph LR
subgraph local
.sol -- compile --> bytecode[Contract Bytecode]
end
subgraph ethereum
bytecode -- deploy --> Contract
end">graph LR
subgraph local
.sol -- compile --&gt; bytecode[Contract Bytecode]
end
subgraph ethereum
bytecode -- deploy --&gt; Contract
end</div><p>部署後智能合約可自動執行。後續呼叫智能合約的時候，使用者可以使用部署合約的錢包地址 (Owner Account)，或依據撰寫的智能合約條件，讓其他錢包地址也能呼叫這個智能合約。
所謂的 "呼叫智能合約"，其實就是向這個合約地址發起交易，只是交易的不只是代幣，而可以是智能合約提供的呼叫方法。</p><div class="mermaid" data-mermaid-src="graph LR
subgraph local
Account
end
subgraph ethereum
Account -- call --> Contract
Contract --> EVM
end">graph LR
subgraph local
Account
end
subgraph ethereum
Account -- call --&gt; Contract
Contract --&gt; EVM
end</div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="有點抽象來個例子--">有點抽象，來個例子？ 🌰 <a href="#有點抽象來個例子--" class="hash-link" aria-label="Direct link to 有點抽象，來個例子？ 🌰 " title="Direct link to 有點抽象，來個例子？ 🌰 ">​</a></h2><p>在<a href="/crypto/got-my-ens-domain">收到我的 ENS 網域啦 gasolin.eth</a>這篇文章中，我介紹了申請 Ethereum Name Service 的心得。其實 ENS 本身就是一堆智能合約的集合，透過這些智能合約，一起提供了 Ethereum Name Service 從申請，競價，到設定地址對應的服務。</p><p>要和智能合約互動，除了需要有合約地址外，還需要知道合約所提供的操作介面 (Application Binary Interface，ABI)，即知道如何呼叫程式提供的功能，和如何解釋程式回傳的資料。
ABI（JSON 格式）檔案在從原始碼編譯成 ByteCode 時會一併產生。</p><p>下圖即是 ENS Public Resolver 這個合約的地址和 ABI。
<img loading="lazy" src="https://i.imgur.com/y6jvpAUl.png" class="img_ev3q"></p><p>準備好合約地址和 ABI 後，我們才能呼叫對應功能來存取合約。
<img loading="lazy" src="https://i.imgur.com/5550HgNl.png" alt="Imgur" class="img_ev3q"></p><p>在<a href="/crypto/howto-write-a-smart-contract">下一篇</a>中，我將簡單介紹如何撰寫 Solidity 程式。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="參考資料">參考資料<a href="#參考資料" class="hash-link" aria-label="Direct link to 參考資料" title="Direct link to 參考資料">​</a></h2><ul><li>[1]<!-- --> ERC20 <a href="https://theethereum.wiki/w/index.php/ERC20_Token_Standard" target="_blank" rel="noopener noreferrer">https://theethereum.wiki/w/index.php/ERC20_Token_Standard</a></li><li>[2]<!-- --> Solidity <a href="http://solidity.readthedocs.io/en/latest/index.html" target="_blank" rel="noopener noreferrer">http://solidity.readthedocs.io/en/latest/index.html</a></li><li>[3]<!-- --> migration contracts <a href="http://truffleframework.com/docs/getting_started/migrations" target="_blank" rel="noopener noreferrer">http://truffleframework.com/docs/getting_started/migrations</a></li></ul>]]></content>
        <category label="ethereum" term="ethereum"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[個人工具箱2017九月]]></title>
        <id>https://blog.gasolin.idv.tw/tools/tooling-in-2017-sep</id>
        <link href="https://blog.gasolin.idv.tw/tools/tooling-in-2017-sep"/>
        <updated>2017-09-01T00:01:00.000Z</updated>
        <summary type="html"><![CDATA[先記錄下來手邊使用的工具，才有機會從繁雜中歸納出簡單的使用規則。]]></summary>
        <content type="html"><![CDATA[<p><code>先記錄下來手邊使用的工具，才有機會從繁雜中歸納出簡單的使用規則。</code></p><p>2011<sup id="fnref-1-a4a739"><a href="#fn-1-a4a739" class="footnote-ref">1</a></sup>年時紀錄了一次當時的個人工具箱，去年開始再次紀錄<sup id="fnref-2-a4a739"><a href="#fn-2-a4a739" class="footnote-ref">2</a></sup>。
今年給自己定的一大目標是個人自動化。年初開始紀錄自己工具箱的改變<sup id="fnref-3-a4a739"><a href="#fn-3-a4a739" class="footnote-ref">3</a></sup>🤹，持續更新。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="主要裝備">主要裝備<a href="#主要裝備" class="hash-link" aria-label="Direct link to 主要裝備" title="Direct link to 主要裝備">​</a></h2><ul><li>💻 Macbook Air 13", 2012 年版</li><li>📱 <a href="https://oneplus.net/global/3" target="_blank" rel="noopener noreferrer">One Plus 3</a>, Android, 6GB RAM, 5.5" AMOLED</li><li>💻 Dell XPS 13 (4943), Windows 10, i7 2.4GHz x2, 8GB RAM, 13" LCD</li><li>📙 Kindle Voyage </li><li>🖥️ Desktop PC, <a href="https://elementary.io/" target="_blank" rel="noopener noreferrer">Elementary OS</a>, Intel i7 3770 3.40GHz x8, 16GB RAM, GeForce GT 630, 23" LCD x2</li><li>📦 Synology NAS: 電影，影集，照片，資料備份</li></ul><p>和年初相比的改變：</p><p>主力用 Macbook Air，用回 Macbook Air 的主因，是因為目前工作中一定得用到的 mozreview 預期年底會淘汰，懶得為每台機器重新做設定。而且在 Windows 上編譯工作用的東西還是不太順手。
桌機多擺了一台螢幕，雙螢幕工作。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="️-網站工具">🕸️ 網站工具<a href="#️-網站工具" class="hash-link" aria-label="Direct link to 🕸️ 網站工具" title="Direct link to 🕸️ 網站工具">​</a></h3><ul><li>🕸️ 主要瀏覽器：<a href="https://www.mozilla.org/en-US/firefox/products/" target="_blank" rel="noopener noreferrer">Firefox Nightly</a></li><li>👥 主要社交網站：<a href="http://www.facebook.com/" target="_blank" rel="noopener noreferrer">Facebook</a>、<a href="https://twitter.com/gasolin" target="_blank" rel="noopener noreferrer">Twitter</a></li><li>✅<a href="https://todoist.com/" target="_blank" rel="noopener noreferrer">Todoist</a> (付費)</li><li>✉️ <a href="http://mail.google.com/" target="_blank" rel="noopener noreferrer">GMail</a>, Inbox</li><li>📆 <a href="http://www.google.com/calendar" target="_blank" rel="noopener noreferrer">Google 日曆</a></li><li>📝 Google Doc, <a href="http://keep.google.com/" target="_blank" rel="noopener noreferrer">Google keep</a> 記事</li><li>💾 個人網路硬碟：<a href="http://www.dropbox.com/" target="_blank" rel="noopener noreferrer">Dropbox</a>, 主要用作同步照片，</li><li>🔑密碼管理：<a href="https://www.lastpass.com/" target="_blank" rel="noopener noreferrer">Lasspass</a></li><li>📒記帳: <a href="https://toshl.com" target="_blank" rel="noopener noreferrer">Toshl</a> (付費)</li><li>📰 新聞聚合：<a href="https://feedly.com/" target="_blank" rel="noopener noreferrer">Feedly</a></li><li></li><li><a href="http://www.douban.com/" target="_blank" rel="noopener noreferrer">豆瓣</a> 看電影記錄</li><li>🗂️ 個人網站：<a href="http://www.gasolin.idv.tw" target="_blank" rel="noopener noreferrer">個人網站</a>, <a href="https://github.com/gasolin/blog/" target="_blank" rel="noopener noreferrer">Github</a></li><li>🗂️ 個人履歷：<a href="https://www.linkedin.com/in/fredglin/" target="_blank" rel="noopener noreferrer">Linkedin</a></li><li>🔗 IFTTT <a href="/tools/tooling-in-2017">自動化生活紀錄 2017</a></li><li>📺 <a href="https://www.youtube.com/" target="_blank" rel="noopener noreferrer">Youtube</a></li><li>👛 電子錢包<a href="https://www.myetherwallet.com/" target="_blank" rel="noopener noreferrer">MyEtherWallet</a></li></ul><p>和年初相比的改變：</p><p>使用多年的 Anobii 已經漸漸缺乏維護，嘗試使用<a href="https://share.readmoo.com/" target="_blank" rel="noopener noreferrer">Readmoo 分享書</a>替代，但就我繁，簡，英文書交換著看的情況，Readmoo 分享書能掃到的書實在有限，因此今年到目前已看的書漏記了不少😓 。</p><p>此外也付費訂閱<a href="https://todoist.com/" target="_blank" rel="noopener noreferrer">Todoist</a>和<a href="https://toshl.com" target="_blank" rel="noopener noreferrer">Toshl</a>兩種工具服務。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="設計">設計<a href="#設計" class="hash-link" aria-label="Direct link to 設計" title="Direct link to 設計">​</a></h3><ul><li>Mockup：<a href="http://www.balsamiq.com/products/mockups" target="_blank" rel="noopener noreferrer">Balsmiq Mockups</a></li><li>錄螢幕動畫：<a href="http://www.recordit.co/" target="_blank" rel="noopener noreferrer">Recordit</a></li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="開發">開發<a href="#開發" class="hash-link" aria-label="Direct link to 開發" title="Direct link to 開發">​</a></h3><ul><li>編輯器：Visual Studio Code</li><li>版本控制：git, git-cinnabar</li><li>套件管理：apt, <a href="https://github.com/creationix/nvm" target="_blank" rel="noopener noreferrer">nvm</a>, yarn, Chocolatey(windows)</li><li>Shell: zsh</li></ul><p>Ubuntu bash on windows 用起來還不夠穩定，目前在 Windows 上盡量能用 Chocolatey 處理的就用 Chocolatey 處理。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="常用插件">常用插件<a href="#常用插件" class="hash-link" aria-label="Direct link to 常用插件" title="Direct link to 常用插件">​</a></h3><p>Browser</p><ul><li>Emoji cheatsheet</li><li>A Weel translation</li><li>Context Plus</li><li>Grammarly (付費)</li></ul><p>Grammarly 可以自動找出英文語法錯誤，相當方便。</p><p>VSCode</p><ul><li>Git Blame</li><li>Document This</li><li>EditorConfig for VS Code</li><li>WakaTime</li><li>solidity</li></ul><p>JS</p><ul><li>Babel</li><li>ESlint</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="娛樂">娛樂<a href="#娛樂" class="hash-link" aria-label="Direct link to 娛樂" title="Direct link to 娛樂">​</a></h3><ul><li>🎮Nintendo Switch</li><li>🎮Steam / vlc</li></ul><p>因為攜帶便利，現在主要只玩 NS 上的遊戲。Steam 上看到喜歡的遊戲，也盡量等 NS 上出了再買。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="-android-手機">📱 Android 手機<a href="#-android-手機" class="hash-link" aria-label="Direct link to 📱 Android 手機" title="Direct link to 📱 Android 手機">​</a></h2><ul><li>瀏覽器：Firefox for Android (Nightly)</li><li>網頁更新通知：Web Alert</li><li>閱讀：Palabre (feedly), Readmoo</li><li>稍候閱讀：Pocket</li><li>信箱：Gmail, Inbox</li><li>地圖：Google 地圖</li><li>記事：Keep</li><li>內建相機，內建時鐘</li><li>相簿：Dropbox, Google 相簿</li><li>社交：Facebook, LINE, Twitter, WeChat</li><li>待辦事項：<a href="https://play.google.com/store/apps/details?id=com.todoist" target="_blank" rel="noopener noreferrer">Todoist</a>* 密碼管理：<a href="https://play.google.com/store/apps/details?id=com.lastpass.lpandroid" target="_blank" rel="noopener noreferrer">LastPass</a></li><li>記帳: <a href="https://play.google.com/store/apps/details?id=com.thirdframestudios.android.expensoor" target="_blank" rel="noopener noreferrer">Toshl</a></li><li>線上影片：Youtube</li><li>有聲書：Audible</li><li>音樂：豆瓣 FM</li><li>健康：小米運動，Pokemon Go</li></ul><p>工具</p><ul><li>公事：Expensify, Duo Mobile</li><li>旅遊：Google 翻譯，TripAdvisor</li><li>影片播放：MX Player, DS video (少用)</li><li>記錄看書狀況：Readmoo 分享書</li><li>線上學習：Udemy, Pluralsight</li><li>IFTTT</li><li>💳街口支付</li><li>拼字訂正：Grammarly</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="reference">Reference<a href="#reference" class="hash-link" aria-label="Direct link to Reference" title="Direct link to Reference">​</a></h2><ul><li><sup id="fnref-1-a4a739"><a href="#fn-1-a4a739" class="footnote-ref">1</a></sup> <a href="/tools/tooling-in-2011">個人工具箱 2011</a></li><li><sup id="fnref-2-a4a739"><a href="#fn-2-a4a739" class="footnote-ref">2</a></sup> <a href="/tools/tooling-in-2016">個人工具箱 2016</a></li><li><sup id="fnref-3-a4a739"><a href="#fn-3-a4a739" class="footnote-ref">3</a></sup> <a href="/tools/tooling-in-2017">個人工具箱 2017</a></li></ul>]]></content>
        <category label="life" term="life"/>
        <category label="tool" term="tool"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[以太坊(Ethereum)是什麼？]]></title>
        <id>https://blog.gasolin.idv.tw/crypto/what-is-ethereum</id>
        <link href="https://blog.gasolin.idv.tw/crypto/what-is-ethereum"/>
        <updated>2017-08-18T23:21:31.000Z</updated>
        <summary type="html"><![CDATA[以太坊(Ethereum)是近幾年才發展起來的一種新的底層區塊鏈技術。以太幣(Ether)是以太坊公有鏈上產生的🔒💵加密貨幣(Crypto　Currency)，除了可以拿來像比特幣(Bitcoin)一樣做交易外，還具有實際的用途。]]></summary>
        <content type="html"><![CDATA[<p>以太坊 (Ethereum) 是近幾年才發展起來的一種新的底層<a href="/crypto/what-is-blockchain">區塊鏈</a>技術。以太幣 (Ether) 是以太坊公有鏈上產生的🔒💵加密貨幣 (Crypto　Currency)，除了可以拿來像比特幣 (Bitcoin) 一樣做交易外，還具有實際的用途。</p><p>以太坊和比特幣一樣是基於 P2P 網路與密碼學建立起的區塊鏈機制，不同之處是，以太坊在每個運作的節點上都運行著一個以太坊虛擬機 (Ethereum Virtual Machine, EVM)，可以用來執行完整的程式。這些程式在以太坊中被稱為⚖📒<strong>智能合約</strong>(Smart Contract)。智能合約除了可以處理資料，還內建轉帳功能，可以很容易地透過智能合約來交易加密貨幣。由於智能合約可在每個以太坊的節點上執行並進行驗證，所以計算結果被認為是可信任的。以太坊還開發出了<a href="https://github.com/ethereum/wiki/wiki/JavaScript-API" target="_blank" rel="noopener noreferrer">web3.js</a>讓開發者可以使用網頁技術撰寫智能合約的操作介面。這樣的網頁操作介面又稱為🕸🅰<strong>分散式應用程式</strong>(DAPP)。要使用 DAPP，必須在支援 DAPP 的瀏覽器中才能使用 (如<a href="https://github.com/ethereum/mist/releases" target="_blank" rel="noopener noreferrer">Mist</a>或<a href="https://parity.io/" target="_blank" rel="noopener noreferrer">Parity</a>)。</p><p>使用智能合約技術製作的服務，也構成了以太坊生態圈的一環。例如<a href="/crypto/got-my-ens-domain">Ethereum Name Service(ENS)</a>就提供了讓使用者更容易尋找到轉帳對象、智能合約，和 DAPP 的方式。</p><p>以太坊提供了便於交易的加密貨幣以太幣 (Ether)，可透過智能合約解決交易上的信任問題，同時也可撰寫 DAPP 來提供友善的資訊彙總與操作介面，讓以太坊成為一個目前最理想的區塊鏈底層技術。</p><div class="mermaid" data-mermaid-src="graph TD
DAPP -.- DAPP瀏覽器
DAPP瀏覽器 -.- 智能合約
錢包 -.- 智能合約
智能合約 --- 以太坊
錢包 -.- 以太幣
以太幣 --- 以太坊
以太幣 --- 激勵機制
以太坊 --- P2P
以太坊 --- 共識機制
共識機制 --- 密碼學
P2P --- 網際網路
分散式APP -.- ENS
智能合約 -.- ENS
以太幣 -.- ENS">graph TD
DAPP -.- DAPP瀏覽器
DAPP瀏覽器 -.- 智能合約
錢包 -.- 智能合約
智能合約 --- 以太坊
錢包 -.- 以太幣
以太幣 --- 以太坊
以太幣 --- 激勵機制
以太坊 --- P2P
以太坊 --- 共識機制
共識機制 --- 密碼學
P2P --- 網際網路
分散式APP -.- ENS
智能合約 -.- ENS
以太幣 -.- ENS</div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="以太幣ether的實際用途">以太幣 (Ether) 的實際用途<a href="#以太幣ether的實際用途" class="hash-link" aria-label="Direct link to 以太幣 (Ether) 的實際用途" title="Direct link to 以太幣 (Ether) 的實際用途">​</a></h2><p>在電腦上執行的一般的程式碼，寫出來可能會有迴圈不斷執行 (死迴圈) 的情況，搬到區塊鏈上亦然。那麼以太坊怎麼解決這個問題呢？以太坊開發者想到的辦法是讓執行的程式碼變得有價。EVM 裡支援的所有的指令 (OPCODE) 都有<a href="https://github.com/ethereum/pyethereum/blob/develop/ethereum/opcodes.py" target="_blank" rel="noopener noreferrer">明碼標價</a>，執行智能合約需要消耗與執行的指令數量相當的以太幣。在智能合約的術語中，這些拿來消耗的以太幣被稱為 "gas"(燃料)。部署合約到區塊鏈上時，需要附加一定數量的燃料。當燃料消耗完而程式還沒執行完，就會出現 "Out of Gas"(燃料耗盡) 錯誤。智能合約透過這樣的方式來避免死迴圈等情況。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="智能合約能做什麼事">智能合約能做什麼事？<a href="#智能合約能做什麼事" class="hash-link" aria-label="Direct link to 智能合約能做什麼事？" title="Direct link to 智能合約能做什麼事？">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="創造新的加密代幣">創造新的加密代幣<a href="#創造新的加密代幣" class="hash-link" aria-label="Direct link to 創造新的加密代幣" title="Direct link to 創造新的加密代幣">​</a></h3><p>智能合約最基本的應用，就是做出新的加密代幣！只要<a href="https://theethereum.wiki/w/index.php/ERC20_Token_Standard" target="_blank" rel="noopener noreferrer">遵循一定的規範</a>(ERC20)，部署一份智能合約到以太坊區塊鏈上，任何人都可以可以很容易地創造出自己的加密代幣。</p><p>不用像比特幣的山寨幣一樣需要自行徵募礦工。你的加密代幣會以 "以太坊的一個智能合約" 的形式存在於以太坊的區塊鏈中。現有支援以太幣的錢包與交易所，也可以快速地接入你的加密代幣。只要你發行的加密代幣與代幣背後所代表的服務具有交易的價值，代幣也可能變貨幣。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="募資">募資<a href="#募資" class="hash-link" aria-label="Direct link to 募資" title="Direct link to 募資">​</a></h3><p>此外，在募資上，智能合約也有無與倫比的優勢。新創公司<a href="https://cointelegraph.com/news/the-ico-mania-and-its-consequences-on-ethereum" target="_blank" rel="noopener noreferrer">ICO</a>可透過以太坊的智能合約，在收到資助者的以太幣時，自動發出等值的加密代幣。</p><p>由於這些加密代幣可交易，如果公司的服務有價值，早期投資人在投資的前期，就可以透過交易加密代幣來調整持有量。</p><p>普通的投資人也第一次有機會直接支持自己感興趣的創業者，並可能從而獲得豐厚 (<a href="/crypto/things-to-know-before-join-ico">或歸零</a>) 的回報。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="程式能做的事">程式能做的事<a href="#程式能做的事" class="hash-link" aria-label="Direct link to 程式能做的事" title="Direct link to 程式能做的事">​</a></h3><p>當你需要公開，可被信任的紀錄時，都可以透過智能合約達成。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="以太坊的缺點">以太坊的缺點<a href="#以太坊的缺點" class="hash-link" aria-label="Direct link to 以太坊的缺點" title="Direct link to 以太坊的缺點">​</a></h2><p>目前以太坊區塊鏈的速度和電腦執行速度無法相比，不適合快速交易，或是需要儲存較大資料的情境。近期的<a href="http://www.investopedia.com/news/what-plasma-and-how-will-it-strengthen-ethereum-blockchain/" target="_blank" rel="noopener noreferrer">plasma</a>提案有望解決快速交易的問題。</p><p>因為缺乏即時調控區塊大小的手段，在一些很熱門的交易時段 (如某些熱門的 ICO 開放認購時)，整個網路的交易延遲會變地很長。</p><p>智能合約一經部署就永遠存在，除非擁有者啟動智能合約中的自毀 (selfdestruct) 功能。如何升級合約並保存其中的參數與代幣，是一個值得探討的課題。</p><p>以太坊網路節點上並不適合儲存較大的檔案。目前有<a href="https://github.com/ethersphere/swarm" target="_blank" rel="noopener noreferrer">Swarm</a>與<a href="https://ipfs.io/" target="_blank" rel="noopener noreferrer">IPFS</a>等分散式檔案儲存方式可供選擇。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="其他參考資料">其他參考資料<a href="#其他參考資料" class="hash-link" aria-label="Direct link to 其他參考資料" title="Direct link to 其他參考資料">​</a></h2><ul><li>以太坊設計原理 <a href="http://ethfans.org/posts/510" target="_blank" rel="noopener noreferrer">http://ethfans.org/posts/510</a></li><li>ethereum <a href="https://github.com/ethereum/wiki/wiki" target="_blank" rel="noopener noreferrer">https://github.com/ethereum/wiki/wiki</a></li><li>挖礦教學 <a href="https://www.ptt.cc/bbs/DigiCurrency/M.1495624721.A.6A8.html" target="_blank" rel="noopener noreferrer">https://www.ptt.cc/bbs/DigiCurrency/M.1495624721.A.6A8.html</a></li><li>以太坊、以太幣是什麼？ETH 電腦挖礦圖文教程<a href="http://www.gooread.com/article/20122396003/" target="_blank" rel="noopener noreferrer">http://www.gooread.com/article/20122396003/</a></li><li></li><li>Ethereum Overview <a href="http://truffleframework.com/tutorials/ethereum-overview" target="_blank" rel="noopener noreferrer">http://truffleframework.com/tutorials/ethereum-overview</a></li><li></li></ul>]]></content>
        <category label="ethereum" term="ethereum"/>
        <category label="blockchain" term="blockchain"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[收到我的ENS網域啦 gasolin.eth]]></title>
        <id>https://blog.gasolin.idv.tw/crypto/got-my-ens-domain</id>
        <link href="https://blog.gasolin.idv.tw/crypto/got-my-ens-domain"/>
        <updated>2017-08-13T15:07:30.000Z</updated>
        <summary type="html"><![CDATA[前幾天剛拿到gasolin.eth這個ENS網域。ENS (Ethereum Name Service) 的功能類似我們較熟悉的DNS(Domain Name Service)網域名稱服務，但提供的不是Internet網址，而是將以太坊(Ethereum)錢包地址和智能合約地址以xxxxxxx.eth網址的方式表示，可以用於轉帳或存取智能合約等地方。]]></summary>
        <content type="html"><![CDATA[<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">聲明：gasolin.eth 此 Domain 已過期，我並未繼續註冊</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>前幾天剛拿到<a href="https://etherscan.io/enslookup?q=gasolin.eth" target="_blank" rel="noopener noreferrer">gasolin.eth</a>這個 ENS 網域。ENS (Ethereum Name Service)<sup id="fnref-1-79cf82"><a href="#fn-1-79cf82" class="footnote-ref">1</a></sup> 的功能類似我們較熟悉的 DNS (Domain Name Service) 網域名稱服務，但提供的不是 Internet 網址，而是將以太坊 (Ethereum) 錢包地址和智能合約地址以<code>xxxxxxx.eth</code>網址的方式表示，可以用於轉帳或存取智能合約等地方。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="ens網域的應用情境">ENS 網域的應用情境<a href="#ens網域的應用情境" class="hash-link" aria-label="Direct link to ENS 網域的應用情境" title="Direct link to ENS 網域的應用情境">​</a></h2><p>例如有人想轉錢給我，就可以請他將以太幣轉到<code>gasolin.eth</code>這網址，<code>gasolin.eth</code>會自動轉址到我指定的錢包地址 (0x....)，轉帳的人不需要記憶一串根本像亂碼的以太幣錢包地址。</p><p></p><p>若我想要公開智能合約讓大眾使用，我可以公開諸如<code>service.gasolin.eth</code>這樣的網址，使用者只要連到<code>service.gasolin.eth</code>，就會自動轉到對應的智能合約地址。若這個智能合約所提供的是單次服務，我也可以透過修改<code>service.gasolin.eth</code>對應的智能合約地址，來 "升級" 這個智能合約服務。使用者依然是連到<code>service.gasolin.eth</code>使用這個服務，而不需要了解背後的機制。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="查詢可申請的網域">查詢可申請的網域<a href="#查詢可申請的網域" class="hash-link" aria-label="Direct link to 查詢可申請的網域" title="Direct link to 查詢可申請的網域">​</a></h2><p>因為<code>gasolin.eth</code>已經被我申請了，查詢可申請地址這部分將以搞笑的 NMB (嫩模幣) ICO<sup id="fnref-3-79cf82"><a href="#fn-3-79cf82" class="footnote-ref">3</a></sup>為例，我會以申請<code>nenmocoin.eth</code>當做例子，介紹整個申請 ENS 網域的流程。</p><p>嫩模幣的投資條件是<code>本次投資僅接受ETH，最少投資額0.0.1ETH,ETH錢包地址:0x74b7bafafd200a58e79b719f3565cbb43af7d6b7</code>。如果能將<code>0x74b7bafafd200a58e79b719f3565cbb43af7d6b7</code>換成<code>nenmocoin.eth</code>，投資者轉帳起來就更直覺了。</p><p>在寫作時<code>nenmocoin</code>(<a href="https://registrar.ens.domains/#nenmocoin)%E9%80%99%E5%80%8B%E7%B6%B2%E5%9F%9F%E6%98%AF%E5%8F%AF%E4%BB%A5%E7%94%B3%E8%AB%8B%E7%9A%84(%E7%9B%AE%E5%89%8DENS%E5%83%85%E6%8E%A5%E5%8F%97%E7%94%B3%E8%AB%8B7%E5%80%8B%E5%AD%97%E6%AF%8D%E4%BB%A5%E4%B8%8A%E7%9A%84%E7%B6%B2%E5%9F%9F)%E3%80%82" target="_blank" rel="noopener noreferrer">https://registrar.ens.domains/#nenmocoin) 這個網域是可以申請的 (目前 ENS 僅接受申請 7 個字母以上的網域)。</a></p><p>想查詢可用的網域，可以前往　<a href="http://registrar.ens.domains/" target="_blank" rel="noopener noreferrer">http://registrar.ens.domains/</a>　或連到<a href="https://www.myetherwallet.com/" target="_blank" rel="noopener noreferrer">MyEtherWallet</a><sup id="fnref-2-79cf82"><a href="#fn-2-79cf82" class="footnote-ref">2</a></sup>並切換到<code>ENS</code>分頁，查詢可用的 ENS 網址。</p><p></p><p>如果在一般瀏覽器中查看，會看到黃色欄的警告提示。</p><p></p><p>這是因為 ENS 服務是跑在以太坊 Ethereum 區塊鏈上，要麼用專用的 browser（如 Mist），不然就是裝 Parity，或瀏覽器擴充套件 MetaMask (Chrome only)。還有個選擇就是用<a href="https://www.myetherwallet.com/" target="_blank" rel="noopener noreferrer">MyEtherWallet</a>網頁錢包，裡面內建註冊 ENS 需要的功能。</p><p>我是使用<a href="https://www.myetherwallet.com/" target="_blank" rel="noopener noreferrer">MyEtherWallet</a>網頁錢包來完成整個註冊 gasolin.eth 網域的流程。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="競標網域須知">競標網域須知<a href="#競標網域須知" class="hash-link" aria-label="Direct link to 競標網域須知" title="Direct link to 競標網域須知">​</a></h2><ul><li>註冊 ENS 網域並不需要實名或其他認證流程，只要有一個以太幣錢包地址即可。</li><li>請參考<a href="/crypto/things-to-know-before-join-ico">參與首次代幣發行 (ICO) 時要知道的事</a>，絕對不要用交易所提供的錢包競標網域，不然即使競標到網域也會變成交易所的 XD。</li><li>ENS 網域的最低起標價是 0.01ETH (當前匯率是美金 $2~3)</li></ul><p>要註冊 ENS 網域，需要遵循 ENS 網域競標流程 (bid)。</p><p>ENS 網域競標流程模擬現實的競標，首先是寫下標價，並將相應數量的以太幣傳入 ENS 票箱。兩天後就可以公告這個網域競標 (揭標)，其他人能看到這個網域已經開始競標了。如果他們有興趣，也可以加入這個網域的競標。最終價高者得，但出價最高的人只需要繳交第二高者的標價。ENS 會自動退回所有參與者的標金，也會返回得標者標金的差額。如果得標者一年後未續約，ENS 將釋出此網域並退回押金。</p><div class="mermaid" data-mermaid-src="graph LR
網域可註冊 --> 提出標金
提出標金 -- 2 天 --> 公告競標
公告競標 -- 2 天 --> 取得網域
取得網域 -. 1 年後未續約 .-> 釋出網域並退回押金">graph LR
網域可註冊 --&gt; 提出標金
提出標金 -- 2 天 --&gt; 公告競標
公告競標 -- 2 天 --&gt; 取得網域
取得網域 -. 1 年後未續約 .-&gt; 釋出網域並退回押金</div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="提出標金">提出標金<a href="#提出標金" class="hash-link" aria-label="Direct link to 提出標金" title="Direct link to 提出標金">​</a></h2><p>確定 "nenmocoin" 網域可用，接下來就是打開錢包，開始競標吧。</p><p></p><p>打開錢包，輸入超過最低起標價 0.01ETH 的數字，勇敢按下<code>Start an Auction</code>按鈕，並照著指示完成競標手續。</p><p>記得將畫面上的資料複製留存，後面的手續中會用到。
完成競標手續後會進入 2 天的等待期。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="公告競標">公告競標<a href="#公告競標" class="hash-link" aria-label="Direct link to 公告競標" title="Direct link to 公告競標">​</a></h2><p></p><p>其實照著<a href="https://www.myetherwallet.com/" target="_blank" rel="noopener noreferrer">MyEtherWallet</a>上面的說明完成公告手續並不困難😤。最重要的事，就是在 2 天的等待期結束後，</p><p><strong>記得回來公告競標，</strong>
<strong>記得回來公告競標，</strong>
<strong>記得回來公告競標，</strong></p><p>如果沒做這個動作，前幾天提出的標金會被送到黑洞消失掉，沒辦法取回喔！我第一次試著註冊網域的時候就這樣被吃掉 0.01ETH😭。</p><p>公告後其他人可以看到網域開始競標的訊息。這時有兩天的時間讓其他感興趣的人一起競標，當前最高價會顯示在查詢頁面上。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="取得網域">取得網域<a href="#取得網域" class="hash-link" aria-label="Direct link to 取得網域" title="Direct link to 取得網域">​</a></h2><p>公告期結束後，如果順利取得網域，可以看到如下訊息</p><p></p><p>這時
<strong>記得回來宣告取得網域，</strong>
<strong>記得回來宣告取得網域，</strong>
<strong>記得回來宣告取得網域，</strong></p><p>照著<a href="https://www.myetherwallet.com/" target="_blank" rel="noopener noreferrer">MyEtherWallet</a>上面的說明完成宣告手續後，才能正式取得這個網域。</p><p>以後其他人查詢時，就會看到這個網域已經被註冊的訊息。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="取得網域之後">取得網域之後<a href="#取得網域之後" class="hash-link" aria-label="Direct link to 取得網域之後" title="Direct link to 取得網域之後">​</a></h2><p>取得網域之後，在<a href="https://www.myetherwallet.com/" target="_blank" rel="noopener noreferrer">MyEtherWallet</a>上查看網域並打開錢包，就會看到如何設定網域的說明。</p><p>目前設定網域的方式比較複雜些，需要到<code>Contracts</code>(合約) 目錄下，在<code>Select Existing Contract</code>（選擇已經存在的合約）選擇<code>ENS - Public Resolver</code>，並在<code>Read/Write Contract</code>(讀取 / 寫入合約) 部分選擇<code>setAddr</code>(設定地址) 功能，照著設定網域說明將錢包地址輸入，這樣網域才能正確解析到我們想要的錢包地址。</p><p></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="如何節省交易手續費">如何節省交易手續費<a href="#如何節省交易手續費" class="hash-link" aria-label="Direct link to 如何節省交易手續費" title="Direct link to 如何節省交易手續費">​</a></h2><p>以上整套設定 ENS 的過程牽涉到 5~6 次交易。只有第一次需轉出標金，後面的各種動作都只收交易手續費。因此註冊一個 ENS 網域的成本其實是標金 + 多次手續費。標金在到期之後會返還，因此實際影響持有成本最大的是交易手續費。</p><p><a href="https://www.myetherwallet.com/" target="_blank" rel="noopener noreferrer">MyEtherWallet</a>右上角預設的交易手續費是 21GWei（1 Ether = 10^9 GWei）。手續費是給分礦工（提供計算力協助以太幣記帳的人）的，調低的話，交易確認的速度會變慢，調高則變快。我剛開始不懂，因此就使用了預設值。後來看 Youtube 上的教學，才知道可以參考<a href="http://ethgasstation.info/" target="_blank" rel="noopener noreferrer">Gas Station</a>網站即時的<code>SafeLow Cost</code>（最低安全交易手續費）來設置。只要我們提供的手續費高於這個數目，交易都會成功。</p><p></p><p>這陣子最低手續費大多是 3 ~ 5 GWei。我照這個手續費做設定（並斟酌提高 1 ~ 2 Gwei）交易都有成功。雖然不管用什麼標準來算，以太坊的手續費都已經很便宜，但多一步簡單的操作，就能感受到精打細算的樂趣。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="結語">結語<a href="#結語" class="hash-link" aria-label="Direct link to 結語" title="Direct link to 結語">​</a></h2><p>上面舉了嫩模幣 ICO 的轉帳地址當做例子。<strong>我故意把引用的嫩模幣錢包地址，換成了我自己的錢包地址</strong>。如果不提，應該沒幾個人會注意到吧？
如果錢包地址改用本文提到的<code>nenmocoin.eth</code>，參與者是不是更容易發現收款地址已被修改了呢？
ENS 並沒有做身分認證，釣魚網站也可以申請相似的 ENS 域名來釣魚，要避免這樣的情況，也有賴服務提供者有在提供服務前，有優先註冊域名的保護意識。</p><p>ENS 本身其實就是一系列基於以太坊的智能合約<sup id="fnref-4-79cf82"><a href="#fn-4-79cf82" class="footnote-ref">4</a></sup>，內部的流程都是自動的，對於智能合約與 DAPP 開發者來說，也是很值得參考的架構。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="參考資料">參考資料<a href="#參考資料" class="hash-link" aria-label="Direct link to 參考資料" title="Direct link to 參考資料">​</a></h2><ul><li>[1]<!-- --> Ethereum Name Service <a href="https://ens.domains/" target="_blank" rel="noopener noreferrer">https://ens.domains/</a></li><li>[2][Myetherwallet介紹]<!-- -->(<a href="http://blockcast.it/2017/05/27/eth-and-eth-token-wallet-series-myetherwallet/" target="_blank" rel="noopener noreferrer">http://blockcast.it/2017/05/27/eth-and-eth-token-wallet-series-myetherwallet/</a>)</li><li>[3]<!-- --> 嫩模幣 <a href="http://nmb.fun/" target="_blank" rel="noopener noreferrer">http://nmb.fun/</a></li><li>[4]<!-- --> ENS 原始碼　<a href="https://github.com/ethereum/ens" target="_blank" rel="noopener noreferrer">https://github.com/ethereum/ens</a></li></ul><hr><p><a href="https://etherscan.io/enslookup?q=gasolin.eth" target="_blank" rel="noopener noreferrer">gasolin.eth</a>這個網址真的可以用喔！覺得這篇文章寫得蠻好想打賞一下，可以傳到我的錢包地址<code>gasolin.eth</code>。</p>]]></content>
        <category label="ethereum" term="ethereum"/>
        <category label="ens" term="ens"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[參與首次代幣發行(ICO)時要知道的事]]></title>
        <id>https://blog.gasolin.idv.tw/crypto/things-to-know-before-join-ico</id>
        <link href="https://blog.gasolin.idv.tw/crypto/things-to-know-before-join-ico"/>
        <updated>2017-08-12T20:46:30.000Z</updated>
        <summary type="html"><![CDATA[最近首次代幣發行(ICO)相當熱門，但當代幣投資者打算贊助某個專案時，有相當多技術原因可能導致投資失敗，而這些原因大多是可以避免的。]]></summary>
        <content type="html"><![CDATA[<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">聲明：gasolin.eth 此 Domain 已過期，我並未繼續註冊</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>最近首次代幣發行 (ICO)<sup id="fnref-1-fc5541"><a href="#fn-1-fc5541" class="footnote-ref">1</a></sup>相當熱門，但當代幣投資者打算贊助某個專案時，有相當多技術原因可能導致投資失敗，而這些原因大多是可以避免的。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="1投資ico新創99機率跟遇到詐騙沒兩樣">1. 投資 ICO / 新創，99% 機率跟遇到詐騙沒兩樣<a href="#1投資ico新創99機率跟遇到詐騙沒兩樣" class="hash-link" aria-label="Direct link to 1. 投資 ICO / 新創，99% 機率跟遇到詐騙沒兩樣" title="Direct link to 1. 投資 ICO / 新創，99% 機率跟遇到詐騙沒兩樣">​</a></h2><p>一般統計 9 成的新創會在一年內關門，存活下來的又有 90% 會在五年內倒閉。
換句話說，新創的五年存活率只有 1%。</p><p>首次代幣發行 ICO 的發起人多是新創公司，投資下去就跟投資新創一樣，有極大失敗的可能。
如果不了解風險，沒做足夠的功課而盲目投資，99% 機率投資 ICO 就跟遇到詐騙沒兩樣。
就算發起人說得天花亂墜，到時參與 ICO 換得的代幣也只能當紀念用了。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="2-別用交易所錢包轉帳">2. 別用交易所錢包轉帳<a href="#2-別用交易所錢包轉帳" class="hash-link" aria-label="Direct link to 2. 別用交易所錢包轉帳" title="Direct link to 2. 別用交易所錢包轉帳">​</a></h2><p><strong>交易所的錢包並不能換回其他代幣，</strong>
<strong>交易所的錢包並不能換回其他代幣，</strong>
<strong>交易所的錢包並不能換回其他代幣，</strong>
重要的事說三遍。</p><p>交易所幾乎都會向客戶宣稱：開戶送比特幣 / 以太幣錢包。當客戶兌換好代幣後，客戶可以看到錢包帳戶裡的餘額，也可以轉進轉出，從客戶看來確實 "擁有" 了比特幣 / 以太幣錢包。</p><p>但是交易所的錢包畢竟是交易所的錢包。在轉出比特幣 / 以太幣時，交易所會動態選用自己轄下的某個錢包帳號出帳。你所參與的代幣眾籌，它的智能合約收到的是交易所的錢包帳號而不是你的錢包帳號，所以智能合約發代幣的對象也變成交易所了。</p><p>比較建議的方式是使用<a href="https://www.myetherwallet.com/" target="_blank" rel="noopener noreferrer">MyEtherWallet</a><sup id="fnref-5-fc5541"><a href="#fn-5-fc5541" class="footnote-ref">5</a></sup>或硬體錢包參與以太坊相關的 ICO。其他可使用的錢包可查看參考資料<sup id="fnref-7-fc5541"><a href="#fn-7-fc5541" class="footnote-ref">7</a></sup>。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="3-用到假錢包">3. 用到假錢包<a href="#3-用到假錢包" class="hash-link" aria-label="Direct link to 3. 用到假錢包" title="Direct link to 3. 用到假錢包">​</a></h2><p>無論是網路上或是手機應用程式商店中，有許多宣稱有比特幣 / 以太幣錢包功能的網站 / App。其中依然有些是假錢包。當你使用這些錢包轉幣時，可能會被騙走。因此盡量選擇自己常用，有信譽的網站 / 應用，或硬體錢包來操作 ICO。</p><p>網站應該加入書籤，以後都使用書籤中的網站存取。不要盲目信任搜尋引擎搜到的連結 (原因在下一條)，或透過 slack 等社交網站，那些看起來像官方訊息提供的連結或地址<!-- -->[10]<!-- -->。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="4轉帳時填錯地址或轉到假地址">4. 轉帳時填錯地址或轉到假地址<a href="#4轉帳時填錯地址或轉到假地址" class="hash-link" aria-label="Direct link to 4. 轉帳時填錯地址或轉到假地址" title="Direct link to 4. 轉帳時填錯地址或轉到假地址">​</a></h2><p>比特幣跟以太幣所謂的<code>錢包</code>地址，跟 IPv6 地址一樣，就是一串 16 進位數字 (而且是頗長的一串。有人算過總共幾位數嗎？)。要投資時需要照著網站上提供的指示，將錢包地址複製到自己的錢包接收地址欄中。
要是很不幸地複製錯了，你轉出的資金就被轉到不知是誰的錢包裡去了。由於以太坊上沒有銀行，一旦轉錯了，也沒有申訴的地方喔。</p><p>對於釣魚網站來說，這種根本就是亂碼的錢包地址真是個福音，因為只要將網站複製一下，錢包地址換成自己的，弄個前面網址一模一樣，但並非<code>.com</code>的假官方網域，再下個 Google 搜尋廣告，就可以開張來詐騙了！</p><p>但幸好最近 ENS (Ethereum Name Service)<sup id="fnref-4-fc5541"><a href="#fn-4-fc5541" class="footnote-ref">4</a></sup> 地址網域開始投入使用，可以將以太坊 (Ethereum) 錢包地址以類似網址的方式表示。
例如我 (gasolin) 若發起一個 ICO，就可以請投資者將以太幣轉到<code>gasolin.eth</code>這網址。
<code>gasolin.eth</code>會自動轉址到我指定的錢包地址。之後要公開智能合約讓大眾使用時，也可以公開諸如<code>service.gasolin.eth</code>這樣的網址，<code>service.gasolin.eth</code>會自動轉到對應的智能合約地址。</p><p></p><p>期望之後有更多的 ICO 和智能合約使用 ENS，讓贊助者可以更安心地轉帳。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="5代幣詐騙scams">5. 代幣詐騙 (scams)<a href="#5代幣詐騙scams" class="hash-link" aria-label="Direct link to 5. 代幣詐騙 (scams)" title="Direct link to 5. 代幣詐騙 (scams)">​</a></h2><p>隨著代幣眾籌愈發熱門，代幣詐騙 (scams) 也層出不窮。除了那種本來就是打算來詐騙 (或是來搞笑<sup id="fnref-2-fc5541"><a href="#fn-2-fc5541" class="footnote-ref">2</a></sup>?) 的專案之外，另一種可能的詐騙方式，是詐騙者做一個長得一模一樣的釣魚網站 (phishing)，選一個與原來 ICO 網站類似的網址，並透過搜尋引擎或論壇散播。沒注意到的投資者就可能因此被騙去代幣。
因此投資前務必多方確認。也可以到<code>cointelegraph</code><sup id="fnref-3-fc5541"><a href="#fn-3-fc5541" class="footnote-ref">3</a></sup>或<code>tokenmarket</code><sup id="fnref-6-fc5541"><a href="#fn-6-fc5541" class="footnote-ref">6</a></sup>上查看近期的 ICO 列表。上面列出的 ICO 項目不代表可靠，但至少新聞網站為了信譽，會把明顯是詐騙的 ICO 剔除掉 (?)。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="結語">結語<a href="#結語" class="hash-link" aria-label="Direct link to 結語" title="Direct link to 結語">​</a></h2><p>投資一定有風險，ICO 投資有賺有賠，申購前應詳閱公開說明書。
可以將上面提到的幾點當作檢核表，避免因為技術原因導致投資失利。</p><p>雖然上面舉的 gasolin ICO 只是個例子，但 <a href="https://etherscan.io/enslookup?q=gasolin.eth" target="_blank" rel="noopener noreferrer">gasolin.eth</a> 這個網址真的可以用喔！
覺得這篇文章寫得蠻好想打賞一下，可以打賞一點 ETH 到我的錢包地址，順便試試 ENS 的功能:p
之後也將分享如何註冊 ETH 地址的心得。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="參考資料">參考資料<a href="#參考資料" class="hash-link" aria-label="Direct link to 參考資料" title="Direct link to 參考資料">​</a></h2><ul><li>[1]<!-- --> 首次公開發行加密代幣 <a href="https://zh.wikipedia.org/wiki/%E9%A6%96%E6%AC%A1%E4%BB%A3%E5%B8%81%E5%8F%91%E5%94%AE" target="_blank" rel="noopener noreferrer">https://zh.wikipedia.org/wiki/%E9%A6%96%E6%AC%A1%E4%BB%A3%E5%B8%81%E5%8F%91%E5%94%AE</a></li><li>[2]<!-- --> 嫩模幣 <a href="http://nmb.fun/" target="_blank" rel="noopener noreferrer">http://nmb.fun/</a></li><li>[3]<!-- --> <a href="https://cointelegraph.com/ico-calendar" target="_blank" rel="noopener noreferrer">https://cointelegraph.com/ico-calendar</a></li><li>[4]<!-- --> <a href="https://registrar.ens.domains/" target="_blank" rel="noopener noreferrer">https://registrar.ens.domains/</a></li><li>[5][Myetherwallet介紹]<!-- -->(<a href="http://blockcast.it/2017/05/27/eth-and-eth-token-wallet-series-myetherwallet/" target="_blank" rel="noopener noreferrer">http://blockcast.it/2017/05/27/eth-and-eth-token-wallet-series-myetherwallet/</a>)</li><li>[6]<!-- --> <a href="https://tokenmarket.net/ico-calendar" target="_blank" rel="noopener noreferrer">https://tokenmarket.net/ico-calendar</a></li><li>[7]<!-- --> Token compatible Ethereum wallet list <a href="https://tokenmarket.net/what-is/ethereum-token-wallets/" target="_blank" rel="noopener noreferrer">https://tokenmarket.net/what-is/ethereum-token-wallets/</a></li><li>[8]<!-- --> Protecting Yourself and Your Funds <a href="https://myetherwallet.github.io/knowledge-base/getting-started/protecting-yourself-and-your-funds.html" target="_blank" rel="noopener noreferrer">https://myetherwallet.github.io/knowledge-base/getting-started/protecting-yourself-and-your-funds.html</a></li><li>[9]<!-- --> 如果你打算發行 ICO，可以看看這篇介紹 ICO 過程中各種花式被駭的經驗 <a href="https://medium.com/@kickico/how-they-tried-to-hack-our-ico-d348659dc4" target="_blank" rel="noopener noreferrer">https://medium.com/@kickico/how-they-tried-to-hack-our-ico-d348659dc4</a></li><li>[10]<!-- --> How to scam Ethereum in 24 hrs with Slack <a href="https://hackernoon.com/how-to-scam-102-860-usd-worth-of-ethereum-in-24-hrs-with-slack-63ce1032219c" target="_blank" rel="noopener noreferrer">https://hackernoon.com/how-to-scam-102-860-usd-worth-of-ethereum-in-24-hrs-with-slack-63ce1032219c</a></li></ul>]]></content>
        <category label="ethereum" term="ethereum"/>
        <category label="ico" term="ico"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[區塊鏈是什麼？]]></title>
        <id>https://blog.gasolin.idv.tw/crypto/what-is-blockchain</id>
        <link href="https://blog.gasolin.idv.tw/crypto/what-is-blockchain"/>
        <updated>2017-08-10T22:23:31.000Z</updated>
        <summary type="html"><![CDATA[今年比特幣(Bitcoin)與以太幣(Ether)價格紛紛到達新高。主因除了隨著更多支援加密貨幣(Crypto Currency)-當地貨幣的兌換/代購/交易所開張，取得虛擬貨幣/代幣的方式更加多元外，首次公開發行加密代幣(ICO, Initial Coin/Crypto Token Offering) 這種創新的投資/募資方式愈加熱絡，也讓一些個人與機構意識到虛擬貨幣作為貨幣或貨品的投資價值。]]></summary>
        <content type="html"><![CDATA[<p>今年比特幣 (Bitcoin)<sup id="fnref-1-2c34ab"><a href="#fn-1-2c34ab" class="footnote-ref">1</a></sup>與以太幣 (Ether)<sup id="fnref-2-2c34ab"><a href="#fn-2-2c34ab" class="footnote-ref">2</a></sup>價格紛紛到達新高。主因除了隨著更多支援加密貨幣 (Crypto Currency)- 當地貨幣的兌換 / 代購 / 交易所開張，取得虛擬貨幣 / 代幣的方式更加多元外，首次公開發行加密代幣 (ICO, Initial Coin/Crypto Token Offering)<sup id="fnref-3-2c34ab"><a href="#fn-3-2c34ab" class="footnote-ref">3</a></sup> 這種創新的投資 / 募資方式愈加熱絡，也讓一些個人與機構意識到虛擬貨幣作為貨幣或貨品的投資價值。</p><p>這些虛擬幣背後所使用的技術叫做區塊鏈 (blockchain)<sup id="fnref-4-2c34ab"><a href="#fn-4-2c34ab" class="footnote-ref">4</a></sup>，可以被用來解決各種「交易」相關的問題。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="網際網路交換訊息區塊鏈交換價值">網際網路交換訊息，區塊鏈交換價值<a href="#網際網路交換訊息區塊鏈交換價值" class="hash-link" aria-label="Direct link to 網際網路交換訊息，區塊鏈交換價值" title="Direct link to 網際網路交換訊息，區塊鏈交換價值">​</a></h2><p>網際網路出現之前，不同的系統之間沒辦法用標準的協定來互相通訊和傳遞訊息。網際網路讓不同連網方式（撥接、光纖、4G）、不同設備間可以互相連接，滿足人與人之間對訊息的即時需求。人們的生活在網際網路發展起來的這 20 多年間，也因此產生了極大地改變。</p><p>2001 年時，Napter<sup id="fnref-5-2c34ab"><a href="#fn-5-2c34ab" class="footnote-ref">5</a></sup>開啟了透過點對點 (P2P) 網路交換 MP3 的風潮，這是第一次大眾意識到點對點網路可以被廣泛地應用在資訊交換上。隨後 BitTorrent (BT)<sup id="fnref-6-2c34ab"><a href="#fn-6-2c34ab" class="footnote-ref">6</a></sup>接過大旗，透過 BitTorrent 與配合的磁力連結 (Magnet Link)<sup id="fnref-7-2c34ab"><a href="#fn-7-2c34ab" class="footnote-ref">7</a></sup>，2009 年時已占據了近 50% 整體網際網路流量。</p><p>區塊鏈基於網際網路，點對點 (P2P) 網路，和以密碼學為基礎的共識紀錄機制，提供了一個可以不被地域限制，快速交換價值的方式，降低交易的不確定性 (uncertainty) 與風險。
網際網路和點對點網路解決了資訊交換的問題，而區塊鏈則進一步想解決價值交換與交易信任的問題。</p><div class="mermaid" data-mermaid-src="graph TD
公開加密貨幣 --- 區塊鏈
公開加密貨幣 --- 激勵機制
區塊鏈 --- P2P
區塊鏈 --- 共識機制
共識機制 --- 密碼學
P2P --- 網際網路">graph TD
公開加密貨幣 --- 區塊鏈
公開加密貨幣 --- 激勵機制
區塊鏈 --- P2P
區塊鏈 --- 共識機制
共識機制 --- 密碼學
P2P --- 網際網路</div><p>區塊鏈不僅只是加密貨幣，透過區塊鏈，我們可以和各地的人做生意，用很低的手續費在不同國家收款與匯款 (都在同一個公開區塊鏈上)，而且幾分鐘內就可到帳；交易的過程中，所有的合約都由網路上的節點自動執行 (智能合約 Smart Contract)，可以避免人為操縱與詐欺等潛在的信任問題，讓人們可以更安心地交易；未來還可以透過瀏覽器使用智能合約，就像使用網站一樣容易 (分散式應用 DAPP)。</p><p>暢想未來的商業模型，可能是顧客透過易用的手機或網頁 DAPP 取得商家提供的資訊，經由可信任的智能合約，讓彼此能快速地交換價值與服務。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="聯盟鏈">聯盟鏈<a href="#聯盟鏈" class="hash-link" aria-label="Direct link to 聯盟鏈" title="Direct link to 聯盟鏈">​</a></h2><p>區塊鏈根據型態，大致分為公有鏈，私有鏈、聯盟鏈幾種。公有鏈就是大眾比較常聽到的各種加密代幣。可以在 <a href="https://coinmarketcap.com/" target="_blank" rel="noopener noreferrer">https://coinmarketcap.com/</a> 查看大部分的加密貨幣。除了公有鏈之外，多家銀行、支付機構、甚至 IBM、微軟等科技公司也相繼投入資源，參與區塊鏈研究與發展。多數機構採用的是聯盟鏈的形式。Apache 基金會下的 Hyper Ledger<sup id="fnref-9-2c34ab"><a href="#fn-9-2c34ab" class="footnote-ref">9</a></sup>計畫是目前發展較好的聯盟鏈。</p><p>聯盟鏈與公有鏈有許多不同點。其一是對資料一致性有更高地要求。其二因為相對來說聯盟鏈的節點比較可控，也不需要加入代幣激勵機制或浪費能源在比拚算力的 Prove-of-WOrk (PoW) 共識機制上。其三是需要對資源與智能合約存取設置權限，以符合企業內部的需求。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="區塊鏈用到的加密技術">區塊鏈用到的加密技術<a href="#區塊鏈用到的加密技術" class="hash-link" aria-label="Direct link to 區塊鏈用到的加密技術" title="Direct link to 區塊鏈用到的加密技術">​</a></h2><p>可以在 Youtube 上查看 <a href="https://youtu.be/_160oMzblY8" target="_blank" rel="noopener noreferrer">Blockchain 101 - A Visual Demo</a>影片<sup id="fnref-14-2c34ab"><a href="#fn-14-2c34ab" class="footnote-ref">14</a></sup>，或前往對應的<a href="https://anders.com/blockchain/" target="_blank" rel="noopener noreferrer">Block Chain Demo 網站</a><sup id="fnref-15-2c34ab"><a href="#fn-15-2c34ab" class="footnote-ref">15</a></sup>自行動手試驗。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="參考資料">參考資料<a href="#參考資料" class="hash-link" aria-label="Direct link to 參考資料" title="Direct link to 參考資料">​</a></h2><ul><li>[1]<!-- --> 比特幣 <a href="https://zh.wikipedia.org/wiki/%E6%AF%94%E7%89%B9%E5%B8%81" target="_blank" rel="noopener noreferrer">https://zh.wikipedia.org/wiki/%E6%AF%94%E7%89%B9%E5%B8%81</a></li><li>[2]<!-- --> 以太坊 <a href="https://zh.wikipedia.org/wiki/%E4%BB%A5%E5%A4%AA%E5%9D%8A" target="_blank" rel="noopener noreferrer">https://zh.wikipedia.org/wiki/%E4%BB%A5%E5%A4%AA%E5%9D%8A</a></li><li>[3]<!-- --> 首次公開發行加密代幣 <a href="https://zh.wikipedia.org/wiki/%E9%A6%96%E6%AC%A1%E4%BB%A3%E5%B8%81%E5%8F%91%E5%94%AE" target="_blank" rel="noopener noreferrer">https://zh.wikipedia.org/wiki/%E9%A6%96%E6%AC%A1%E4%BB%A3%E5%B8%81%E5%8F%91%E5%94%AE</a></li><li>[4]<!-- --> 區塊鏈<a href="https://zh.wikipedia.org/wiki/%E5%8C%BA%E5%9D%97%E9%93%BE" target="_blank" rel="noopener noreferrer">https://zh.wikipedia.org/wiki/%E5%8C%BA%E5%9D%97%E9%93%BE</a></li><li>[5]<!-- --> Napster <a href="https://en.wikipedia.org/wiki/Napster" target="_blank" rel="noopener noreferrer">https://en.wikipedia.org/wiki/Napster</a></li><li>[6]<!-- --> BitTorrent <a href="https://en.wikipedia.org/wiki/BitTorrent" target="_blank" rel="noopener noreferrer">https://en.wikipedia.org/wiki/BitTorrent</a></li><li>[7]<!-- --> 磁力連結 <a href="https://zh.wikipedia.org/wiki/%E7%A3%81%E5%8A%9B%E9%93%BE%E6%8E%A5" target="_blank" rel="noopener noreferrer">https://zh.wikipedia.org/wiki/%E7%A3%81%E5%8A%9B%E9%93%BE%E6%8E%A5</a></li><li>[8][What Are Magnet Links, and How Do I Use Them to Download Torrents?]<!-- -->(<a href="http://lifehacker.com/5875899/what-are-magnet-links-and-how-do-i-use-them-to-download-torrents" target="_blank" rel="noopener noreferrer">http://lifehacker.com/5875899/what-are-magnet-links-and-how-do-i-use-them-to-download-torrents</a>)</li><li>[9]<!-- --> <a href="https://www.hyperledger.org/" target="_blank" rel="noopener noreferrer">https://www.hyperledger.org/</a></li><li>[10]<!-- --> <a href="https://entethalliance.org/" target="_blank" rel="noopener noreferrer">https://entethalliance.org/</a></li><li>[11]<!-- --> <a href="https://en.wikipedia.org/wiki/Proof-of-work_system" target="_blank" rel="noopener noreferrer">https://en.wikipedia.org/wiki/Proof-of-work_system</a></li><li>[12]<!-- --> How Bitcoin Works Under the Hood <a href="https://www.youtube.com/watch?v=Lx9zgZCMqXE" target="_blank" rel="noopener noreferrer">https://www.youtube.com/watch?v=Lx9zgZCMqXE</a></li><li>[13]<!-- --> TED <a href="https://www.youtube.com/watch?v=RplnSVTzvnU" target="_blank" rel="noopener noreferrer">How the blockchain will radically transform the economy</a></li><li>[14][Blockchain 101 - A Visual Demo]<!-- -->(<a href="https://youtu.be/_160oMzblY8" target="_blank" rel="noopener noreferrer">https://youtu.be/_160oMzblY8</a>)</li><li>[15][Block Chain Demo網站]<!-- -->(<a href="https://anders.com/blockchain/" target="_blank" rel="noopener noreferrer">https://anders.com/blockchain/</a>)</li><li>[16]<!-- --> What is an Initial Coin Offering? <a href="https://www.youtube.com/watch?v=iyuZ_bCQeIE" target="_blank" rel="noopener noreferrer">https://www.youtube.com/watch?v=iyuZ_bCQeIE</a></li></ul>]]></content>
        <category label="blockchain" term="blockchain"/>
        <category label="ethereum" term="ethereum"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Node.js 的發展]]></title>
        <id>https://blog.gasolin.idv.tw/service/how-node-works</id>
        <link href="https://blog.gasolin.idv.tw/service/how-node-works"/>
        <updated>2017-07-21T17:54:18.000Z</updated>
        <summary type="html"><![CDATA[2009年推出的Node.js是讓Javascript成為一門廣為通用的程式語言的關鍵。Node.js將原專為Chrome瀏覽器開發的V8引擎抽離出瀏覽器，讓使用者在一般命令行環境中就可以執行Javascript。]]></summary>
        <content type="html"><![CDATA[<p>2009 年推出的 Node.js<sup id="fnref-1-915b4b"><a href="#fn-1-915b4b" class="footnote-ref">1</a></sup>是讓 Javascript 成為一門廣為通用的程式語言的關鍵。Node.js 將原專為 Chrome<sup id="fnref-2-915b4b"><a href="#fn-2-915b4b" class="footnote-ref">2</a></sup>瀏覽器開發的 V8 引擎抽離出瀏覽器，讓使用者在一般命令行環境中就可以執行 Javascript。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="開發者的需求">開發者的需求<a href="#開發者的需求" class="hash-link" aria-label="Direct link to 開發者的需求" title="Direct link to 開發者的需求">​</a></h2><p>要完成一個全功能的現代網站，開發者除了需要至少理解某門語言相關的網站後端技術之外，Javascript 也是身在 Web 開發領域的開發者至少必須 "略懂" 的腳本程式語言 (scripting language)。</p><p>既然不管精通哪門程式語言的開發者，想在瀏覽器上發揮，都仍需要某種程度地熟悉 Javascript 程式語言。那麼，如果在瀏覽器之外，也可以拿 Javascript 來做事情不是很好嗎？</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="nodejs">Node.js<a href="#nodejs" class="hash-link" aria-label="Direct link to Node.js" title="Direct link to Node.js">​</a></h2><p>Node.js 並不是第一款讓使用者在一般命令行環境中就可以執行 Javascript 的工具 (最早推出的可能是 Mozilla 的 Rhino 或 XULRunner<sup id="fnref-3-915b4b"><a href="#fn-3-915b4b" class="footnote-ref">3</a></sup>)，但它跟上了潮流。
2008 年推出的 Chrome 瀏覽器，裡面使用了同被 KDE 與 Apple 使用的 Webkit 作為渲染引擎 (Render)，並自行開發了全新的 Javascript 引擎 (V8 引擎)。Chrome 瀏覽器的 V8 引擎率先支援 JIT (Just in Time) 編譯技術，使得當年 Javascript 的執行效率一舉提升了 8 倍以上📈 。基於 V8 引擎的 Node.js 也比其他 Javascript 運行環境有更強的競爭力。由於執行速度的改善，Javascript 語言終於有了和其他程式語言在瀏覽器之外的環境同場競技的實力。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="nodejs的好夥伴-npm">Node.js 的好夥伴: NPM<a href="#nodejs的好夥伴-npm" class="hash-link" aria-label="Direct link to Node.js 的好夥伴: NPM" title="Direct link to Node.js 的好夥伴: NPM">​</a></h2><p>Node.js 推出當時，除了擁有一個比其他相似競爭者快上幾倍的引擎之外，在隔年整合的 NPM (Node Package Manager)<sup id="fnref-4-915b4b"><a href="#fn-4-915b4b" class="footnote-ref">4</a></sup>套件管理工具，讓 Javascript 開發者擁有了更有效率地分享與重用函式庫的方式。到了今天，下載大多數使用 Javascript 語言撰寫的專案，只要執行<code>npm install</code>(或衍生的<code>yarn install</code>)，NPM 就能自行安裝與解決套件之間的依賴關係。NPM 實是今日 Node.js 之所以能形成圍繞著 Javascript 語言建立起龐大生態系的不可或缺的功臣。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="nodejs衍生發展">Node.js 衍生發展<a href="#nodejs衍生發展" class="hash-link" aria-label="Direct link to Node.js 衍生發展" title="Direct link to Node.js 衍生發展">​</a></h2><p>隨著 Node.js 更加成熟，Web 開發者也圍繞著 Node.js 重新發明他們常用的工具。最先是 Web 開發框架（如 Express.js<sup id="fnref-5-915b4b"><a href="#fn-5-915b4b" class="footnote-ref">5</a></sup>, hapi, koa）與資料庫接口，再來是相關的編譯工具（grunt, gulp, webpack<sup id="fnref-6-915b4b"><a href="#fn-6-915b4b" class="footnote-ref">6</a></sup>）。同時，也有人開始嘗試將 Node.js 與原有的瀏覽器環境結合，讓開發者得以使用網頁相關技術打造桌面應用（nw.js, electron<sup id="fnref-7-915b4b"><a href="#fn-7-915b4b" class="footnote-ref">7</a></sup>)。基於此技術還發展了數個流行的程式編輯器（atom, Visual Studio Code<sup id="fnref-8-915b4b"><a href="#fn-8-915b4b" class="footnote-ref">8</a></sup>）。時至今日，也可透過 Node.js 相關編譯工具，使用網頁相關技術來做行動裝置 App 開發（Cordova, React Native<sup id="fnref-9-915b4b"><a href="#fn-9-915b4b" class="footnote-ref">9</a></sup>）。圍繞著 Node.js 的種種發明，讓使用網頁技術的開發者，得以從開發到部署，全都在圍繞網頁技術的生態系中完成。並由此誕生了稱之為 "Full Stack" 全端工程師（前端，後端，整合，測試）和大前端工程師的工作。全端工程師除了需處理網頁端（前端）頁面版型與互動效果外，也要兼顧伺服器端（後端）與資料庫處理。大前端工程師則是除了網頁端之外，也須兼顧行動裝置 App 的開發。</p><div class="mermaid" data-mermaid-src="graph LR
Javascript --> Browser
Javascript --> Node
Node --> Webframework[Web Framework]
Node --> Build[Build tools]
Build --> ReactNative[Mobile App]
Node --> Electron[Desktop App]
Electron --> Editor[Editor]
Browser --> Electron">graph LR
Javascript --&gt; Browser
Javascript --&gt; Node
Node --&gt; Webframework[Web Framework]
Node --&gt; Build[Build tools]
Build --&gt; ReactNative[Mobile App]
Node --&gt; Electron[Desktop App]
Electron --&gt; Editor[Editor]
Browser --&gt; Electron</div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="參考資料">參考資料<a href="#參考資料" class="hash-link" aria-label="Direct link to 參考資料" title="Direct link to 參考資料">​</a></h2><ul><li><sup id="fnref-1-915b4b"><a href="#fn-1-915b4b" class="footnote-ref">1</a></sup> <a href="https://en.wikipedia.org/wiki/Node.js" target="_blank" rel="noopener noreferrer">Node.js</a></li><li><sup id="fnref-2-915b4b"><a href="#fn-2-915b4b" class="footnote-ref">2</a></sup> <a href="https://en.wikipedia.org/wiki/Google_Chrome" target="_blank" rel="noopener noreferrer">Google Chrome</a></li><li><sup id="fnref-3-915b4b"><a href="#fn-3-915b4b" class="footnote-ref">3</a></sup> <a href="https://en.wikipedia.org/wiki/XULRunner" target="_blank" rel="noopener noreferrer">XULRunner</a></li><li><sup id="fnref-4-915b4b"><a href="#fn-4-915b4b" class="footnote-ref">4</a></sup> <a href="https://en.wikipedia.org/wiki/Npm_(software)" target="_blank" rel="noopener noreferrer">NPM</a></li><li><sup id="fnref-5-915b4b"><a href="#fn-5-915b4b" class="footnote-ref">5</a></sup> <a href="https://expressjs.com/" target="_blank" rel="noopener noreferrer">Express.js</a></li><li><sup id="fnref-6-915b4b"><a href="#fn-6-915b4b" class="footnote-ref">6</a></sup> <a href="https://webpack.github.io/" target="_blank" rel="noopener noreferrer">webpack</a></li><li><sup id="fnref-7-915b4b"><a href="#fn-7-915b4b" class="footnote-ref">7</a></sup> <a href="https://electron.atom.io/" target="_blank" rel="noopener noreferrer">Electron</a></li><li><sup id="fnref-8-915b4b"><a href="#fn-8-915b4b" class="footnote-ref">8</a></sup> <a href="https://code.visualstudio.com/" target="_blank" rel="noopener noreferrer">Visual Studio Code</a></li><li><sup id="fnref-9-915b4b"><a href="#fn-9-915b4b" class="footnote-ref">9</a></sup> <a href="https://facebook.github.io/react-native/" target="_blank" rel="noopener noreferrer">React Native</a></li></ul>]]></content>
        <category label="web" term="web"/>
        <category label="mobile" term="mobile"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Current Progress of Netmonitor.html]]></title>
        <id>https://blog.gasolin.idv.tw/devtools/current-progress-of-netmonitor-html</id>
        <link href="https://blog.gasolin.idv.tw/devtools/current-progress-of-netmonitor-html"/>
        <updated>2017-03-29T00:33:37.000Z</updated>
        <summary type="html"><![CDATA[Update: Full instructions are avaiable on Netmonitor Readme to run the Network Monitor in the browser tab.]]></summary>
        <content type="html"><![CDATA[<p>Update: Full instructions are avaiable on <a href="https://github.com/mozilla/gecko-dev/blob/master/devtools/client/netmonitor/README.md" target="_blank" rel="noopener noreferrer">Netmonitor Readme</a> to run the Network Monitor in the browser tab.</p><p>Firefox Devtools is in progress of modernizing its infrastructure to use the same toolset that modern web developers are familiar with. When talking about <code>modern</code> web developers toolset, I mean <code>React</code>, <code>Redux</code>, <code>Immutablejs</code>, and <code>npm</code> modules.😎</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="what-firefox-devtools-team-did-last-year">What Firefox Devtools team did last year<a href="#what-firefox-devtools-team-did-last-year" class="hash-link" aria-label="Direct link to What Firefox Devtools team did last year" title="Direct link to What Firefox Devtools team did last year">​</a></h2><p>Firefox Devtools was no different from Firefox itself. The Devtools panels are written in <code>XUL</code>, an HTML-like syntax language, and use several Firefox internal API called <code>XPCOM</code> or <code>Chrome privileged API</code>(Nothing related to Chrome Browser) to make the browser works.👽</p><p>In last year(2016), Firefox Devtools team's main goal is to convert the code base from XUL to pure HTML. The second goal is convert each tool with React/Redux structure for maintenance. Debugger, Inspector, Web Console are the first batch in the conversion progress.
<a href="https://hacks.mozilla.org/2016/09/introducing-debugger-html/" target="_blank" rel="noopener noreferrer">Debugger.html</a> is the very first attempt from Firefox Devtools team to embrace the modern web developers' toolset. Now new Debugger and Web Console are available in Firefox <a href="https://www.mozilla.org/en-US/firefox/channel/desktop/" target="_blank" rel="noopener noreferrer">Nightly</a>🍸</p><p><a href="https://github.com/devtools-html/debugger.html" target="_blank" rel="noopener noreferrer">Debugger.html</a>, Perf.html(Performance) has their standalone repository hosted on Github. A developer could use <code>git clone</code> to get the repository, and then do <code>yarn install</code>, <code>yarn start</code>(similar to npm command) to debug the debugger.html/perf.html with any browser's devtools!🚅</p><div class="mermaid" data-mermaid-src="graph LR
clone[git clone] --> install[yarn install]
install --> start[yarn start]">graph LR
clone[git clone] --&gt; install[yarn install]
install --&gt; start[yarn start]</div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="what-run-on-the-browser-tab-means">What <code>Run on the Browser tab</code> means?<a href="#what-run-on-the-browser-tab-means" class="hash-link" aria-label="Direct link to what-run-on-the-browser-tab-means" title="Direct link to what-run-on-the-browser-tab-means">​</a></h2><p><code>Run on the Browser tab</code> is a term versus <code>Run inside of the developer panel</code>. Traditionally Devtools are running inside of the browser's developer panel. But some of new Firefox Devtools support run as normal web pages. Those pages can be opened in a browser tab by any modern browser such as Chrome, Safari, or Edge. The benefit is we can improve Firefox Devtools with any Browser's Devtools, its an unfair advantage.🚀</p><div class="mermaid" data-mermaid-src="graph LR
Firefox -- debugging --> netmonitor(Netmonitor.html)
netmonitor -- mozilla-rdp --> Firefox
Chrome -- debugging --> netmonitor
Edge -- debugging --> netmonitor
Safari -- debugging --> netmonitor">graph LR
Firefox -- debugging --&gt; netmonitor(Netmonitor.html)
netmonitor -- mozilla-rdp --&gt; Firefox
Chrome -- debugging --&gt; netmonitor
Edge -- debugging --&gt; netmonitor
Safari -- debugging --&gt; netmonitor</div><p>We are going to make more Devtools easy to debug and can be used for cross-browser debugging.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="current-status">Current Status<a href="#current-status" class="hash-link" aria-label="Direct link to Current Status" title="Direct link to Current Status">​</a></h2><p>To replacing the jet engine while still flying is a challenging engineering work. To make it happen, we take several engineering experiments around Devtools.</p><p>Here are the projects in progress and where they are hosted from:</p><div class="mermaid" data-mermaid-src="graph LR
debugger(Debugger.html) --> Nightly
perf(Perf.html) --> Nightly
webconsole(WebConsole.html) --> Nightly
standalone[Github] --> debugger
standalone --> perf
refactor[mozilla-central] --> webconsole
inspector(Inspector.html) --> Release
netmonitor(Netmonitor.html) --> Release
refactor --> inspector
refactor --> netmonitor">graph LR
debugger(Debugger.html) --&gt; Nightly
perf(Perf.html) --&gt; Nightly
webconsole(WebConsole.html) --&gt; Nightly
standalone[Github] --&gt; debugger
standalone --&gt; perf
refactor[mozilla-central] --&gt; webconsole
inspector(Inspector.html) --&gt; Release
netmonitor(Netmonitor.html) --&gt; Release
refactor --&gt; inspector
refactor --&gt; netmonitor</div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="what-we-have-done-in-netmonitorhtml">What we have done in Netmonitor.html<a href="#what-we-have-done-in-netmonitorhtml" class="hash-link" aria-label="Direct link to What we have done in Netmonitor.html" title="Direct link to What we have done in Netmonitor.html">​</a></h2><p>Ricky Chien and I joined the effort of convert Object Inspector from XUL to HTML. Object Inspector is a more complicated tool to convert, so Object Inspector is still half <code>React</code> and without <code>Redux</code> in the playground.</p><p>When the Object Inspector is fully converted to HTML, we shift our focus on convert the next important Devtool: <code>Netmonitor</code>. With Honza, Janda, Steve Chung, and other contributors' help, at the end of Feb we have reached our first phase tangible goal: Converted the whole Netmonitor panel from XUL to HTML, with <code>React</code>, <code>Redux</code>, and <code>Immutablejs</code>. Now we have confidence that the code base is easy to read and contribute.🤗</p><p><img loading="lazy" src="http://i.imgur.com/aiqBXV5.png" alt="Imgur" class="img_ev3q">
Picture: How current Netmonitor looks like</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="what-we-plan-to-do-next">What we plan to do next<a href="#what-we-plan-to-do-next" class="hash-link" aria-label="Direct link to What we plan to do next" title="Direct link to What we plan to do next">​</a></h2><p>We just finished the Netmonitor workweek (Fred, Honza, Ricky) in Taiwan, plenty of discussions have occurred, and we have good progress for what should be going on for the Netmonitor.</p><p>Here they are:</p><ul><li>We’ve triaged all new Netmonitor bugs and identify <a href="http://firefox-dev.tools/?easy&amp;tool=network" target="_blank" rel="noopener noreferrer">good-first-bugs</a></li><li>We have Prove-Of-Concept branches to prove we can run netmonitor on the browser tab</li><li>We decide to keep using <code>mozilla-central</code>(The gecko) repo. Beside the current workflow, a developer would able to run <code>yarn start</code> command to debugging Netmonitor on the browser tab with any browser's devtool.</li><li>We stop Netmonitor.html phase I work immediately (convert XUL to HTML, MVP 100% completed)</li><li>We'll start Netmonitor.html phase II (To run Netmonitor on a browser tab so that we can debug Netmonitor with any browser's devtool)<ul><li>All phase II bugs are filed in the <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=1348737" target="_blank" rel="noopener noreferrer">Meta-bug</a></li></ul></li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="what-could-expect-in-the-future">What could expect in the future<a href="#what-could-expect-in-the-future" class="hash-link" aria-label="Direct link to What could expect in the future" title="Direct link to What could expect in the future">​</a></h2><p>Currently, Debugger.html have supported both Firefox and Chrome remote debugging protocols, so Debugger.html could be used to debug Firefox, Chrome, or even Node.js!😮</p><div class="mermaid" data-mermaid-src="graph LR
Firefox -- debugging --> netmonitor(Netmonitor.html)
netmonitor -- mozilla-rdp --> Firefox
Chrome -- debugging --> netmonitor
netmonitor -- chrome-rdp --> Chrome
netmonitor -- chrome-rdp --> Node[Node.js]
Safari -- debugging --> netmonitor
Edge -- debugging --> netmonitor">graph LR
Firefox -- debugging --&gt; netmonitor(Netmonitor.html)
netmonitor -- mozilla-rdp --&gt; Firefox
Chrome -- debugging --&gt; netmonitor
netmonitor -- chrome-rdp --&gt; Chrome
netmonitor -- chrome-rdp --&gt; Node[Node.js]
Safari -- debugging --&gt; netmonitor
Edge -- debugging --&gt; netmonitor</div><p>Since Debugger.html's pure web stack nature, you can imagine one day the debugger.html can be embedded into some editors(Atom, Visual Studio Code) as plugins, or even in other browsers!😇</p><div class="mermaid" data-mermaid-src="graph LR
debugger(Debugger.html) --> Firefox
debugger --> browsertab[Browser Tab]
debugger --> Editor
debugger --> other[Other Browser]">graph LR
debugger(Debugger.html) --&gt; Firefox
debugger --&gt; browsertab[Browser Tab]
debugger --&gt; Editor
debugger --&gt; other[Other Browser]</div><p><code>Run with different remote debugging protocols</code> is the next step once we make Netmonitor.html run on the browser tab.</p>]]></content>
        <category label="web" term="web"/>
        <category label="devtools" term="devtools"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[如何修改 git commits]]></title>
        <id>https://blog.gasolin.idv.tw/devtools/git-merge-commits</id>
        <link href="https://blog.gasolin.idv.tw/devtools/git-merge-commits"/>
        <updated>2017-03-13T18:16:20.000Z</updated>
        <summary type="html"><![CDATA[與其他人合作🤝使用git版本控制系統時，為了讓最後合併（Merge）的commit好看，常常會需要調整自己的commit。]]></summary>
        <content type="html"><![CDATA[<p>與其他人合作🤝使用 git 版本控制系統時，為了讓最後合併（Merge）的 commit 好看，常常會需要調整自己的 commit。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="同時修改一個commit">同時修改一個 commit<a href="#同時修改一個commit" class="hash-link" aria-label="Direct link to 同時修改一個 commit" title="Direct link to 同時修改一個 commit">​</a></h2><p>剛開始工作時一次只修改一個 commit，最常用到的命令是：</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="修改commit訊息message">修改 commit 訊息 (message)<a href="#修改commit訊息message" class="hash-link" aria-label="Direct link to 修改 commit 訊息 (message)" title="Direct link to 修改 commit 訊息 (message)">​</a></h3><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">git commit --amend</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>在 commit 後加入<code>--amend</code>(修正) 參數，可以修改最後一個 commit 的訊息。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="將後續修改合併成一個commit">將後續修改合併成一個 commit<a href="#將後續修改合併成一個commit" class="hash-link" aria-label="Direct link to 將後續修改合併成一個 commit" title="Direct link to 將後續修改合併成一個 commit">​</a></h3><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">git rebase -i HEAD~2</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>將要合併的 commit 從<strong>pick</strong>改成<strong>s</strong>(squish) 後儲存，修改 commit 訊息後，可以得到剩下的一個 commit。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="同時修改多個commit">同時修改多個 commit<a href="#同時修改多個commit" class="hash-link" aria-label="Direct link to 同時修改多個 commit" title="Direct link to 同時修改多個 commit">​</a></h2><p>到後來為了讓審查 (Review) 更容易，漸漸開始嘗試在遇到某些較複雜的問題時，在同一個 Branch 堆疊多個 commit 的開發方式。</p><p>假設手上有 3 個疊在一起的 commit (commit 1,commit 2,commit 3. commit 3 是最新的 commit), 這時在修改的過程中會遇到的主要問題，
就是現在的修改與最新的 commit (commit 3) 無關，但與最前面的 commit (commit 1) 相關。
這時若想要將現在的修改與之前的 commit 1 合併，原本常使用的<code>git rebase</code>就不是那麼好用了。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="為前面commit的打補釘">為前面 commit 的打補釘<a href="#為前面commit的打補釘" class="hash-link" aria-label="Direct link to 為前面 commit 的打補釘" title="Direct link to 為前面 commit 的打補釘">​</a></h3><p>要為前面 commit 的打補釘，可以使用命令</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">git commit --fixup &lt;commit&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><code>&lt;commmit&gt;</code>代表之前 commit (commit 1) 的 hash。輸入後最新的 commit 中會出現<code>fixup &lt;commit 1&gt;</code>的註記。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="合併所有的補釘">合併所有的補釘<a href="#合併所有的補釘" class="hash-link" aria-label="Direct link to 合併所有的補釘" title="Direct link to 合併所有的補釘">​</a></h3><p>當一系列修改完成後，只要使用命令</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">git rebase -i --autosquash</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>儲存後可以得到干淨的 commit 1,2,3🤘</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="修改任何之前的commit訊息">修改任何之前的 commit 訊息<a href="#修改任何之前的commit訊息" class="hash-link" aria-label="Direct link to 修改任何之前的 commit 訊息" title="Direct link to 修改任何之前的 commit 訊息">​</a></h3><p>如果只想修改之前的 commit 訊息，可以用命令</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">git rebase -i HEAD~3</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>將<strong>pick</strong>改成<strong>reword</strong>，儲存後就可以修改訊息。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="參考資料">參考資料<a href="#參考資料" class="hash-link" aria-label="Direct link to 參考資料" title="Direct link to 參考資料">​</a></h2><ul><li></li><li></li></ul>]]></content>
        <category label="git" term="git"/>
        <category label="work" term="work"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[2017年，我的部落格改進了什麼?]]></title>
        <id>https://blog.gasolin.idv.tw/life/blog-updates-in-2017</id>
        <link href="https://blog.gasolin.idv.tw/life/blog-updates-in-2017"/>
        <updated>2017-03-04T16:08:00.000Z</updated>
        <summary type="html"><![CDATA[Imgur]]></summary>
        <content type="html"><![CDATA[<p></p><p>在去年改用 Hexo<sup id="fnref-1-911ab6"><a href="#fn-1-911ab6" class="footnote-ref">1</a></sup>架部落格後，由於用 Markdown 寫起來更方便了，又有 Mermaid<sup id="fnref-2-911ab6"><a href="#fn-2-911ab6" class="footnote-ref">2</a></sup>語法支援可以快速畫出一些流程圖，因此多寫了幾篇。</p><p>在此期間，也陸續為這個部落格加了一些小功能。主要有</p><ul><li>將 Hexo 預設的 Markdown 引擎換成 markdown-it，以支援顏文字 (emoji)<sup id="fnref-9-911ab6"><a href="#fn-9-911ab6" class="footnote-ref">9</a></sup> 🎉  </li><li>加入類似 Medium 的文章預計閱讀時間 (每篇文章標題下方顯示 x min. read) ⏳ </li><li>支援腳注 (footnote)🔗 ，如下方的參考資料</li></ul><p>為了折騰這些功能花了些時間，不知道這樣的投資能不能攤平到下個十年 :p</p><p>🔸 以下是在改進部落格的過程中發現的一些小知識:</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="將hexo預設的markdown引擎換成markdown-it--">將 Hexo 預設的 Markdown 引擎換成 markdown-it 🎉 <a href="#將hexo預設的markdown引擎換成markdown-it--" class="hash-link" aria-label="Direct link to 將 Hexo 預設的 Markdown 引擎換成 markdown-it 🎉 " title="Direct link to 將 Hexo 預設的 Markdown 引擎換成 markdown-it 🎉 ">​</a></h2><p>為了要支援 emoji，在網上找到的做法是改用<code>hexo-renderer-markdown-it</code><sup id="fnref-3-911ab6"><a href="#fn-3-911ab6" class="footnote-ref">3</a></sup>引擎並同時安裝<code>markdown-it-emoji</code><sup id="fnref-4-911ab6"><a href="#fn-4-911ab6" class="footnote-ref">4</a></sup>
最後必要的是在<code>_config.yml</code> 裡加入相應的<code>markdown</code>設定<sup id="fnref-5-911ab6"><a href="#fn-5-911ab6" class="footnote-ref">5</a></sup></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="加入類似medium的文章預計閱讀時間--">加入類似 Medium 的文章預計閱讀時間 ⏳ <a href="#加入類似medium的文章預計閱讀時間--" class="hash-link" aria-label="Direct link to 加入類似 Medium 的文章預計閱讀時間 ⏳ " title="Direct link to 加入類似 Medium 的文章預計閱讀時間 ⏳ ">​</a></h2><p>原本我裝的是 <code>hexo-reading-time</code><sup id="fnref-6-911ab6"><a href="#fn-6-911ab6" class="footnote-ref">6</a></sup>，整合好後一看，所有中文文章的閱讀時長都短得可以，讓我懷疑它根本沒有支援中文字數計算。後來找一找，才拿可支援中文字數計算的<code>hexo-wordcount</code><sup id="fnref-7-911ab6"><a href="#fn-7-911ab6" class="footnote-ref">7</a></sup>來替換掉。隨後又丟了個 PR<sup id="fnref-8-911ab6"><a href="#fn-8-911ab6" class="footnote-ref">8</a></sup>過去來調整預設的閱讀時長，最終才接近想要的效果。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="參考資料--">參考資料 📓 <a href="#參考資料--" class="hash-link" aria-label="Direct link to 參考資料 📓 " title="Direct link to 參考資料 📓 ">​</a></h2><ul><li><sup id="fnref-1-911ab6"><a href="#fn-1-911ab6" class="footnote-ref">1</a></sup> <a href="/make/hello-world">Hello Hexo</a></li><li><sup id="fnref-2-911ab6"><a href="#fn-2-911ab6" class="footnote-ref">2</a></sup> <a href="https://knsv.github.io/mermaid/" target="_blank" rel="noopener noreferrer">Mermaid, Generation of diagrams and flowcharts from text</a></li><li><sup id="fnref-3-911ab6"><a href="#fn-3-911ab6" class="footnote-ref">3</a></sup> <a href="https://github.com/celsomiranda/hexo-renderer-markdown-it" target="_blank" rel="noopener noreferrer">hexo-renderer-markdown-it</a></li><li><sup id="fnref-4-911ab6"><a href="#fn-4-911ab6" class="footnote-ref">4</a></sup> <a href="https://github.com/markdown-it/markdown-it-emoji" target="_blank" rel="noopener noreferrer">markdown-it-emoji</a></li><li><sup id="fnref-5-911ab6"><a href="#fn-5-911ab6" class="footnote-ref">5</a></sup> <a href="https://github.com/gasolin/blog/blob/master/_config.yml#L100" target="_blank" rel="noopener noreferrer">本 Blog 的_config.yml</a></li><li><sup id="fnref-6-911ab6"><a href="#fn-6-911ab6" class="footnote-ref">6</a></sup> <a href="https://github.com/ierhyna/hexo-reading-time/" target="_blank" rel="noopener noreferrer">hexo-reading-time</a></li><li><sup id="fnref-7-911ab6"><a href="#fn-7-911ab6" class="footnote-ref">7</a></sup> <a href="https://github.com/willin/hexo-wordcount" target="_blank" rel="noopener noreferrer">hexo-wordcount</a></li><li><sup id="fnref-8-911ab6"><a href="#fn-8-911ab6" class="footnote-ref">8</a></sup> <a href="https://github.com/willin/hexo-wordcount/issues/3" target="_blank" rel="noopener noreferrer">Patch for hexo-wordcount</a></li><li><sup id="fnref-9-911ab6"><a href="#fn-9-911ab6" class="footnote-ref">9</a></sup> <a href="https://gist.github.com/rxaviers/7360908" target="_blank" rel="noopener noreferrer">Complete list of github markdown emoji markup</a></li></ul>]]></content>
        <category label="life" term="life"/>
        <category label="blog" term="blog"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[聊天機器人是怎麼運作的(I)]]></title>
        <id>https://blog.gasolin.idv.tw/iot/how-bot-works</id>
        <link href="https://blog.gasolin.idv.tw/iot/how-bot-works"/>
        <updated>2017-03-01T10:36:53.000Z</updated>
        <summary type="html"><![CDATA[聊天機器人（Chat bot）已存在許久，常見於各種即時通訊工具中。一般人最可能接觸到的，還是銀行的語音服務（Voice Response System）。]]></summary>
        <content type="html"><![CDATA[<p>聊天機器人（Chat bot）已存在許久，常見於各種即時通訊工具中。一般人最可能接觸到的，還是銀行的語音服務（Voice Response System）。</p><p>當我們打電話到銀行免付費專線，會有語音提示我們輸入驗證資料，然後輸入對應的數字來得到銀行服務。
只有在根據一串語音提示，輸入特定數字時才轉接到真人回應的專線。這個過程跟使用聊天機器人基本上是一樣的。</p><div class="mermaid" data-mermaid-src="graph LR
User[使用者] --> dial[撥號]
dial -- 輸入 --> identify[身份驗證資料]
identify -- 選擇 --> number[服務項目]
number --> auto[1-8: 自動應答]
number --> manual[9: 專人服務]">graph LR
User[使用者] --&gt; dial[撥號]
dial -- 輸入 --&gt; identify[身份驗證資料]
identify -- 選擇 --&gt; number[服務項目]
number --&gt; auto[1-8: 自動應答]
number --&gt; manual[9: 專人服務]</div><p>銀行的語音服務流程</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="行動裝置的完全普及">行動裝置的完全普及<a href="#行動裝置的完全普及" class="hash-link" aria-label="Direct link to 行動裝置的完全普及" title="Direct link to 行動裝置的完全普及">​</a></h2><p>近年來聊天機器人能重新進入公眾視線，主因還是行動裝置的完全普及：
幾乎所有的人都擁有一台智慧型手機。而且所有人的手機上都有一至數個聊天 App（LINE, Facebook Messenger, Wechat）。</p><p>邏輯思維 2017 年跨年演講<sup id="fnref-1-e353f3"><a href="#fn-1-e353f3" class="footnote-ref">1</a></sup>裡提到，美國，中國想上網的人基本都已經能上網（上網人口已經接近飽和），人們每周平均花 24 小時上網，而這些數字都已經沒有太大的提升空間。因此所有的網路服務都得從有限的總量中搶占使用者的上網時間與關注。</p><p>換句話說，2016 年我們已正式進入行動網路（移動互連網）的下半場，廠商除了需要想方法佔用更多使用者上網時間之外，另一條路或是協助使用者更有效地利用上網的時間。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="聊天app佔用使用者更多上網時間">聊天 App 佔用使用者更多上網時間<a href="#聊天app佔用使用者更多上網時間" class="hash-link" aria-label="Direct link to 聊天 App 佔用使用者更多上網時間" title="Direct link to 聊天 App 佔用使用者更多上網時間">​</a></h2><p>2016 年初的調查顯示，人們每天平均在手機和在電腦上所花的時間差不多。
隨著手機 App 的發展，人們能透過手機完成的事也越來越多。可以預見到的是人們每天花在手機上的時間佔比會再增加。
人們在手機上花費最多時間的是聊天 App 和社交 App。而今天的聊天 / 社交 App 都已內建網頁檢視（webview）功能。
看到「朋友」分享的新聞連結，點選後可以直接瀏覽內容，完全不需要另外再開啟瀏覽器來查看新聞。</p><p>由於聊天 App 佔用了使用者多數的時間，依照「使用者在哪，機會就在哪」的原則，聊天機器人，或是對話式界面 (Conversational UI) 成了一個選項。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="siri-聊天機器人的濫觴">Siri, 聊天機器人的濫觴<a href="#siri-聊天機器人的濫觴" class="hash-link" aria-label="Direct link to Siri, 聊天機器人的濫觴" title="Direct link to Siri, 聊天機器人的濫觴">​</a></h2><p>這波新一代聊天機器人的濫觴，也許可以歸功於 2011 年蘋果推出的 Siri<sup id="fnref-2-e353f3"><a href="#fn-2-e353f3" class="footnote-ref">2</a></sup>，雖然 Siri 並不存在於聊天 App 中。
iPhone 的使用者可以透過手機上的 Siri 智能助理應用，做到用口語詢問近期天氣，日程表，查詢地圖，餐廳，設定鬧鐘等行動，從而用更便利的方式取得服務。
雖然今天 Siri 與其他選擇相比，已盡顯不足之處，但當時 Siri 的推出，讓人們感知到與機器直接對話已不再遙不可及，這直接鼓勵了眾家廠商願意加大投入。</p><p>近幾年語音辨識，人工智能 AI 的爆發式進展，與此必然有著千絲萬縷的聯繫。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="聊天機器人有什麼用">聊天機器人有什麼用？<a href="#聊天機器人有什麼用" class="hash-link" aria-label="Direct link to 聊天機器人有什麼用？" title="Direct link to 聊天機器人有什麼用？">​</a></h2><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">Reddit 曾有用戶提問，如果某個 1950 年代的人突然出現，最難向他解釋的現代事物是什麼？</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">最多人推的回答是： 「我擁有一部機器，就放在我的口袋裡，我可以用它來存取任何人類已知的知識。</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">我常用這個來看貓咪的圖片，還有跟陌生人筆戰。」</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">-- @wastemobile</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>就像现在手机 App 一样，大部分的 App 其实没什么用，用了只是消耗自己的时间。
但是像 Siri 所能做的，使用者透過聊天機器人簡化日常的瑣事，或是快速得到常見問題的答案。
Slack 平台上已有許多機器人，可以同步 Github Bug，同步代辦事項資訊，提醒今日任務等。這些 Bot 能省下使用者寶貴的線上時間。
我們更多需要的是這類型（用更便利的方式取得服務）的聊天機器人。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="聊天機器人與使用者的互動方式">聊天機器人與使用者的互動方式<a href="#聊天機器人與使用者的互動方式" class="hash-link" aria-label="Direct link to 聊天機器人與使用者的互動方式" title="Direct link to 聊天機器人與使用者的互動方式">​</a></h2><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">在網際網路上，沒人知道你是一隻狗</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>聊天軟體原本的功用是讓使用者可以和「另一個使用者」或「一群使用者」交流。聊天機器人則是取代「另一個使用者」的角色<sup id="fnref-3-e353f3"><a href="#fn-3-e353f3" class="footnote-ref">3</a></sup>，讓使用者和「聊天機器人」一對一交流，或是讓聊天機器人加入群組，和「一群使用者」交流。</p><div class="mermaid" data-mermaid-src="graph LR
User --> bot[Chat Bot]
bot --> User">graph LR
User --&gt; bot[Chat Bot]
bot --&gt; User</div><p>一對一</p><div class="mermaid" data-mermaid-src="graph LR
User --> Group
Group --> User
Group --> bot[Chat Bot]
bot --> Group">graph LR
User --&gt; Group
Group --&gt; User
Group --&gt; bot[Chat Bot]
bot --&gt; Group</div><p>群組（多對多）</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="聊天機器人的應對方式">聊天機器人的應對方式<a href="#聊天機器人的應對方式" class="hash-link" aria-label="Direct link to 聊天機器人的應對方式" title="Direct link to 聊天機器人的應對方式">​</a></h2><p>除了「一對一」，「群組」（多對多）之外，依據聊天機器人的應對方式，還可以分為通知型（Notify），模式型（Pattern Matching），對話型（Context Aware）等幾種聊天機器人<sup id="fnref-4-e353f3"><a href="#fn-4-e353f3" class="footnote-ref">4</a></sup>。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="通知型notify">通知型（Notify）<a href="#通知型notify" class="hash-link" aria-label="Direct link to 通知型（Notify）" title="Direct link to 通知型（Notify）">​</a></h3><p>通知型機器人會根據使用者「訂閱」的資訊，傳訊息通知使用者。例如明日天氣預報機器人可以定時告訴使用者明天氣象狀況與溫度，出門需不須要帶傘。
使用者一般不需要輸入任何訊息與機器人對話。</p><div class="mermaid" data-mermaid-src="graph RL
bot[Chat Bot] -- notify --> User">graph RL
bot[Chat Bot] -- notify --&gt; User</div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="模式型pattern-matching">模式型（Pattern Matching）<a href="#模式型pattern-matching" class="hash-link" aria-label="Direct link to 模式型（Pattern Matching）" title="Direct link to 模式型（Pattern Matching）">​</a></h3><p>模式型機器人會比對使用者送出的訊息，如果符合機器人設定好的一些模式，就做出對應的回應。</p><div class="mermaid" data-mermaid-src="graph RL
subgraph chatbot
Matcher[Pattern Matching] --> Responder[Build Response]
end
User -- request --> Matcher
Responder -- response --> User">graph RL
subgraph chatbot
Matcher[Pattern Matching] --&gt; Responder[Build Response]
end
User -- request --&gt; Matcher
Responder -- response --&gt; User</div><p>例如使用者可以透過天氣機器人，輸入 "weather in Taipei" 查詢當前台北的天氣。</p><p>基本的模式型機器人沒有對話的概念，並不會根據使用者過去的應對而改變回應的結果。
例如使用天氣機器人時每次都需要指定想查詢的地點，或是透過預先設定地點 / 偏好溫度格式來簡化使用方式。</p><p>除了傳統使用正則表達式 (Regex) 來比對模式外，Facebook Messenger bot 則提供更接近口語的自然語言處理（Nature language Processing）模式比對。
多數聊天機器人框架目前都仍偏向模式型。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="對話型context-aware">對話型（Context Aware）<a href="#對話型context-aware" class="hash-link" aria-label="Direct link to 對話型（Context Aware）" title="Direct link to 對話型（Context Aware）">​</a></h3><p>對話型機器人會從與使用者過去的對話中提取使用者的偏好，並運用到後續的對話中。</p><p>例如 Google Assistant 會根據你之前的查詢，去進一步找到你想听的音樂。</p><div class="mermaid" data-mermaid-src="graph RL
subgraph chatbot
Parser -- Action --> Processor[Do actions]
Processor --> contexture[Context Brain]
contexture --> Processor
contexture --> Responder
Processor --> Responder[Build Response]
end
User -- request --> Parser[Intent Parser]
Responder -- response --> User">graph RL
subgraph chatbot
Parser -- Action --&gt; Processor[Do actions]
Processor --&gt; contexture[Context Brain]
contexture --&gt; Processor
contexture --&gt; Responder
Processor --&gt; Responder[Build Response]
end
User -- request --&gt; Parser[Intent Parser]
Responder -- response --&gt; User</div><p>能理解與使用者過去的對話，也是對話型人工智能的重要特徵。當使用者在聊天軟體中新加入一個 bot 服務，使用者與這個服務的對話都與和一般服務員的交談無異，那麼服務的後面是不是真人還重要嗎？</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="參考資料">參考資料<a href="#參考資料" class="hash-link" aria-label="Direct link to 參考資料" title="Direct link to 參考資料">​</a></h2><ul><li><sup id="fnref-1-e353f3"><a href="#fn-1-e353f3" class="footnote-ref">1</a></sup> 羅輯思維 4 小時跨年演講 <a href="https://kknews.cc/zh-tw/tech/xz2x4p8.html" target="_blank" rel="noopener noreferrer">https://kknews.cc/zh-tw/tech/xz2x4p8.html</a></li><li><sup id="fnref-2-e353f3"><a href="#fn-2-e353f3" class="footnote-ref">2</a></sup> <a href="https://en.wikipedia.org/wiki/Siri" target="_blank" rel="noopener noreferrer">https://en.wikipedia.org/wiki/Siri</a></li><li><sup id="fnref-3-e353f3"><a href="#fn-3-e353f3" class="footnote-ref">3</a></sup> <a href="https://zh.wikipedia.org/wiki/%E5%9C%A8%E4%BA%92%E8%81%94%E7%BD%91%E4%B8%8A%EF%BC%8C%E6%B2%A1%E4%BA%BA%E7%9F%A5%E9%81%93%E4%BD%A0%E6%98%AF%E4%B8%80%E6%9D%A1%E7%8B%97" target="_blank" rel="noopener noreferrer">在網際網路上，沒人知道你是一隻狗</a></li><li><sup id="fnref-4-e353f3"><a href="#fn-4-e353f3" class="footnote-ref">4</a></sup> <a href="http://willschenk.com/bot-design-patterns/" target="_blank" rel="noopener noreferrer">Bot Design Patterns</a></li></ul>]]></content>
        <category label="web" term="web"/>
        <category label="chatbot" term="chatbot"/>
        <category label="mobile" term="mobile"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[我如何做個人自動化紀錄-2017版]]></title>
        <id>https://blog.gasolin.idv.tw/life/personal-automation-in-2017</id>
        <link href="https://blog.gasolin.idv.tw/life/personal-automation-in-2017"/>
        <updated>2017-02-02T10:57:29.000Z</updated>
        <summary type="html"><![CDATA[為什麼要做個人自動化紀錄?]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="為什麼要做個人自動化紀錄">為什麼要做個人自動化紀錄？<a href="#為什麼要做個人自動化紀錄" class="hash-link" aria-label="Direct link to 為什麼要做個人自動化紀錄？" title="Direct link to 為什麼要做個人自動化紀錄？">​</a></h2><p>有人會問，Facebook/Twitter 不就可以記錄大小事了嗎？如果會這麼回答，那就實在太天真了😏 。FB 上也許包含了自己覺得值得分享的事，但生活中還有諸多事情值得記錄，而不適合與大眾分享。
擁有自己的一份完整數位化生活記錄，是我今年的個人目標之一。要達成這個目標，需要藉助一些自動化紀錄工具，好讓整個過程變得自然而不困難。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="照片自動化備份--">照片自動化備份 📷 <a href="#照片自動化備份--" class="hash-link" aria-label="Direct link to 照片自動化備份 📷 " title="Direct link to 照片自動化備份 📷 ">​</a></h2><ul><li>360CAM 所拍的相片一律備份到手機</li><li><a href="http://www.dropbox.com/" target="_blank" rel="noopener noreferrer">Dropbox</a>, 自動從手機上傳照片</li><li>Google 相簿，自動從手機上傳照片</li><li>NAS (Synnalogy), 從 Dropbox 同步照片。由於 Dropbox 空間有限，會不定期將 Dropbox 上的照片手動整理備份到 NAS 上.</li></ul><div class="mermaid" data-mermaid-src="graph LR
cam[360 CAM]
User -- take photo --> cam
User -- take photo --> Phone
cam --> Phone
Phone -.-> Dropbox
Phone -.-> gphoto[Google Photo]
Dropbox -.-> NAS">graph LR
cam[360 CAM]
User -- take photo --&gt; cam
User -- take photo --&gt; Phone
cam --&gt; Phone
Phone -.-&gt; Dropbox
Phone -.-&gt; gphoto[Google Photo]
Dropbox -.-&gt; NAS</div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="照片備份規則">照片備份規則<a href="#照片備份規則" class="hash-link" aria-label="Direct link to 照片備份規則" title="Direct link to 照片備份規則">​</a></h3><p>我的照片並不算多，但若有出遊的月份通常照片會暴增。所以我的基本備份規則是依年份，並以雙月份命名資料夾，若是當月有重大活動則直接在檔名中標注。
例如 2016 年的照片資料夾裡會有<code>2016_1011</code>，或是<code>2016_06倫敦</code>這樣的命名。</p><p>在整理照片的時候，每當遇到特別喜歡的，我會另存到 Dropbox 中的一個依年份歸檔的資料夾，例如 2017 年的精彩照片我會另存到 <code>dropbox/spot/2017</code>資料夾中，這樣隨時可以找出來欣賞。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="運動自動化紀錄-️-">運動自動化紀錄 🚶‍♂️ <a href="#運動自動化紀錄-️-" class="hash-link" aria-label="Direct link to 運動自動化紀錄 🚶‍♂️ " title="Direct link to 運動自動化紀錄 🚶‍♂️ ">​</a></h2><ul><li>記步，睡眠紀錄：小米手環 2</li><li>體重：小米體重計</li></ul><div class="mermaid" data-mermaid-src="graph LR
User -. 走路 .-> 小米手環2
User -. 睡覺 .-> 小米手環2
User -- 量體重 --> 小米體重計
小米手環2 -.-> 小米運動App
小米體重計 -.-> 小米運動App">graph LR
User -. 走路 .-&gt; 小米手環2
User -. 睡覺 .-&gt; 小米手環2
User -- 量體重 --&gt; 小米體重計
小米手環2 -.-&gt; 小米運動App
小米體重計 -.-&gt; 小米運動App</div><p>今年將每天預定的步數由 3000 步提高到<code>4000步</code>，略高於平常的活動數字，
每天要達成這個目標的話，需要特意地多走幾步路。</p><p>update (9/1): 後來不再帶小米手環 2，覺得記錄睡眠與步數意義不大。同時為了降低多走路所需要的意志力，把每日步數改成更容易達成的 300 步，只要開始走，通常都會超過需要的步數。</p><hr><h2 class="anchor anchorWithStickyNavbar_LWe7" id="生活事件自動化紀錄">生活事件自動化紀錄<a href="#生活事件自動化紀錄" class="hash-link" aria-label="Direct link to 生活事件自動化紀錄" title="Direct link to 生活事件自動化紀錄">​</a></h2><p>延續<a href="/life/LifeLog-via-IFTTT">用 IFTTT 做自動生活紀錄</a>這篇的思路，我把看過的書籍、電影，喜歡的 Youtube 影片，貼過的文章，每日完成的事項都記錄到 Google Calendar 中，以方便之後回顧。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="自動閱讀觀看紀錄--">自動閱讀 / 觀看紀錄 📚 <a href="#自動閱讀觀看紀錄--" class="hash-link" aria-label="Direct link to 自動閱讀 / 觀看紀錄 📚 " title="Direct link to 自動閱讀 / 觀看紀錄 📚 ">​</a></h3><p>對於書籍與電影，我使用 RSS + IFTTT + Google Calendar 來自動紀錄。
當我在 Anobii 或豆瓣上修改狀態，Anobii 或豆瓣的 RSS 也跟著改變，這時 IFTTT 會將 RSS 中的新事項紀錄到 Google Calendar 上。
對於 Youtube 上 like 的影片，Facebook 或 Twitter 上新貼的文章，也會透過 IFTTT 紀錄到 Google Calendar 上。</p><div class="mermaid" data-mermaid-src="graph LR
User -- update book --> Anobii
User -- add movie --> Douban
User -- post --> Blog
Blog -.-> RSS
Anobii -.-> RSS
Douban -.-> RSS
RSS -.-> IFTTT
IFTTT -.-> gcal[Google Calendar]">graph LR
User -- update book --&gt; Anobii
User -- add movie --&gt; Douban
User -- post --&gt; Blog
Blog -.-&gt; RSS
Anobii -.-&gt; RSS
Douban -.-&gt; RSS
RSS -.-&gt; IFTTT
IFTTT -.-&gt; gcal[Google Calendar]</div><p>透過 RSS 轉 IFTTT 紀錄</p><div class="mermaid" data-mermaid-src="graph LR
User -- like --> Youtube
User -- post --> Facebook
User -- post --> Twitter
Youtube -.-> IFTTT
Facebook -.-> IFTTT
Twitter -.-> IFTTT
IFTTT -.-> gcal[Google Calendar]">graph LR
User -- like --&gt; Youtube
User -- post --&gt; Facebook
User -- post --&gt; Twitter
Youtube -.-&gt; IFTTT
Facebook -.-&gt; IFTTT
Twitter -.-&gt; IFTTT
IFTTT -.-&gt; gcal[Google Calendar]</div><p>直接透過 IFTTT 紀錄</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="自動紀錄每日完成的事項--">自動紀錄每日完成的事項 📓 <a href="#自動紀錄每日完成的事項--" class="hash-link" aria-label="Direct link to 自動紀錄每日完成的事項 📓 " title="Direct link to 自動紀錄每日完成的事項 📓 ">​</a></h3><p>這部份是自動紀錄的核心。使用 Todoist + IFTTT + Google Calendar 即可達成。
我在 Google Calendar 上使用一個單獨的日曆 (成功日記) 來紀錄每日完成的事項。</p><div class="mermaid" data-mermaid-src="graph LR
User -- checked --> Todoist
Todoist -.-> IFTTT
IFTTT -.-> gcal[Google Calendar]">graph LR
User -- checked --&gt; Todoist
Todoist -.-&gt; IFTTT
IFTTT -.-&gt; gcal[Google Calendar]</div><p>If task completed in Todoist, Then log into Google Calendar</p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="從email新增待辦事項-️-">從 Email 新增待辦事項 ✉️ <a href="#從email新增待辦事項-️-" class="hash-link" aria-label="Direct link to 從 Email 新增待辦事項 ✉️ " title="Direct link to 從 Email 新增待辦事項 ✉️ ">​</a></h4><p>為了更方便地蒐集待辦事項，我參考這份影片 <a href="https://youtu.be/V7Dk7pzjJmM?t=11m30s" target="_blank" rel="noopener noreferrer">https://youtu.be/V7Dk7pzjJmM?t=11m30s</a> 來將 Todoist#Inbox 設定為 Email 聯絡人，這樣處理 Email 的過程中也能快速地新增待辦事項。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="紀錄看過或待看的網頁--">紀錄看過或待看的網頁 🌐 <a href="#紀錄看過或待看的網頁--" class="hash-link" aria-label="Direct link to 紀錄看過或待看的網頁 🌐 " title="Direct link to 紀錄看過或待看的網頁 🌐 ">​</a></h3><p>因為我唯一的收件夾是 Todoist，所以若看到值得閱讀 (紀錄) 的網頁，桌面上我使用自己開發的瀏覽器 Web Extension，搭配 IFTTT 去紀錄網頁到 Todoist，或加個短評分享到 Facebook 或 Twitter。
在手機上就直接使用 Todoist 和 Facebook 等 App 達到一樣的效果。</p><div class="mermaid" data-mermaid-src="graph LR
User -- tap --> Browser[Browser addon]
Browser -.-> IFTTT[IFTTT Maker Channel]
IFTTT -.-> Todoist
IFTTT -.-> Facebook
IFTTT -.-> Twitter">graph LR
User -- tap --&gt; Browser[Browser addon]
Browser -.-&gt; IFTTT[IFTTT Maker Channel]
IFTTT -.-&gt; Todoist
IFTTT -.-&gt; Facebook
IFTTT -.-&gt; Twitter</div><p>If new task then create new Todoist item, If share then share to Facebook and Twitter.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="文章更新時自動提醒--">文章更新時自動提醒 ⏰ <a href="#文章更新時自動提醒--" class="hash-link" aria-label="Direct link to 文章更新時自動提醒 ⏰ " title="Direct link to 文章更新時自動提醒 ⏰ ">​</a></h3><p>除了偶而瀏覽 Facebook 或 Twitter 上充滿同溫層的快餐短文，我也使用 Feedly 訂閱一些自己挑選過的網站。
然而有些網站並未提供 RSS 訂閱，手機上我會使用<a href="https://play.google.com/store/apps/details?id=me.webalert" target="_blank" rel="noopener noreferrer">Web Alert</a>來取得網頁更新提醒。
搭配 Todoist 稍候閱讀列表，我可以不在看到文章連結當下急著消費，而是在有空閒的時候才閱讀這些文章。</p><div class="mermaid" data-mermaid-src="graph LR
webalert[Web Alert] --> User
User --> Browser">graph LR
webalert[Web Alert] --&gt; User
User --&gt; Browser</div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="半自動工作紀錄--">半自動工作紀錄 💼 <a href="#半自動工作紀錄--" class="hash-link" aria-label="Direct link to 半自動工作紀錄 💼 " title="Direct link to 半自動工作紀錄 💼 ">​</a></h3><p>透過翻看 Todoist 或 Google Calendar，我可以輕易地將過去一週達成的事項整理出來，再送 PR 到 Github 上。
也可以說這塊目前只能算半自動化地列出過去事項列表，可以再繼續改進。</p><hr><h2 class="anchor anchorWithStickyNavbar_LWe7" id="自動化網站部署--">自動化網站部署 🌐 <a href="#自動化網站部署--" class="hash-link" aria-label="Direct link to 自動化網站部署 🌐 " title="Direct link to 自動化網站部署 🌐 ">​</a></h2><p>目前已使用 Github 來放我的個人網站與部落格，透過與 Travis CI 整合，我所修改的任何內容，在幾分鐘之內都會自動部署到網站上。</p><p>如何做可參考 <a href="/life/make/hello-world">Hello Hexo</a> (個人網站自動化部署) 和 <a href="/devtools/ghpage-auto-deploy">Automatically deploy new commit to github pages via Travis CI</a></p><div class="mermaid" data-mermaid-src="graph LR
master[Github:master]
travis[Travis CI]
ghpages[Github:gh-pages]
User -- commit --> master
master -. auto build .-> travis
travis -.  auto deploy .-> ghpages">graph LR
master[Github:master]
travis[Travis CI]
ghpages[Github:gh-pages]
User -- commit --&gt; master
master -. auto build .-&gt; travis
travis -.  auto deploy .-&gt; ghpages</div><p>Auto website deploy flow</p><p>一些可以直接運作在瀏覽器的專案 (如 BlocklyDuino 和 Saihubot)，我會直接將 gh-pages 設為預設分支，所有改動直接 push 到這分支中。
這樣一有改動即可在網頁上看到更新成果。</p>]]></content>
        <category label="web" term="web"/>
        <category label="mobile" term="mobile"/>
        <category label="automation" term="automation"/>
        <category label="life" term="life"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[個人工具箱2017二月]]></title>
        <id>https://blog.gasolin.idv.tw/tools/tooling-in-2017</id>
        <link href="https://blog.gasolin.idv.tw/tools/tooling-in-2017"/>
        <updated>2017-02-02T10:25:00.000Z</updated>
        <summary type="html"><![CDATA[先記錄下來手邊使用的工具，才有機會從繁雜中歸納出簡單的使用規則。]]></summary>
        <content type="html"><![CDATA[<p><code>先記錄下來手邊使用的工具，才有機會從繁雜中歸納出簡單的使用規則。</code></p><p>2011<sup id="fnref-1-7d465a"><a href="#fn-1-7d465a" class="footnote-ref">1</a></sup>年時紀錄了一次當時的個人工具箱，去年開始再次紀錄<sup id="fnref-2-7d465a"><a href="#fn-2-7d465a" class="footnote-ref">2</a></sup>。
今年給自己定的一大目標是個人自動化，就從年初開始紀錄自己工具箱的改變吧🤹，持續更新。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="主要裝備">主要裝備<a href="#主要裝備" class="hash-link" aria-label="Direct link to 主要裝備" title="Direct link to 主要裝備">​</a></h2><ul><li>Desktop PC, <a href="https://elementary.io/" target="_blank" rel="noopener noreferrer">Elementary OS</a>, Intel i7 3770 3.40GHz x8, 16GB RAM, GeForce GT 630, 23" LCD</li><li>Dell XPS 13 (4943), Windows 10, i7 2.4GHz x2, 8GB RAM, 13" LCD</li><li><a href="https://oneplus.net/global/3" target="_blank" rel="noopener noreferrer">One Plus 3</a>, Android, 6GB RAM, 5.5" AMOLED</li><li>Synology NAS: 電影，影集，照片，資料備份</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="windows--linux">Windows &amp; Linux<a href="#windows--linux" class="hash-link" aria-label="Direct link to Windows &amp; Linux" title="Direct link to Windows &amp; Linux">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="網站工具">網站工具<a href="#網站工具" class="hash-link" aria-label="Direct link to 網站工具" title="Direct link to 網站工具">​</a></h3><p>使用多年的 Anobii 已經漸漸缺乏維護，嘗試使用<a href="https://share.readmoo.com/" target="_blank" rel="noopener noreferrer">Readmoo 分享書</a>替代。</p><ul><li>主要瀏覽器：<a href="https://www.mozilla.org/en-US/firefox/products/" target="_blank" rel="noopener noreferrer">Firefox</a></li><li>主要社交網站：<a href="http://www.facebook.com/" target="_blank" rel="noopener noreferrer">Facebook</a>、<a href="https://twitter.com/gasolin" target="_blank" rel="noopener noreferrer">Twitter</a></li><li></li><li></li><li><a href="http://mail.google.com/" target="_blank" rel="noopener noreferrer">GMail</a>, Inbox</li><li>Google Doc, <a href="http://keep.google.com/" target="_blank" rel="noopener noreferrer">Google keep</a> 記事</li><li>個人網路硬碟：<a href="http://www.dropbox.com/" target="_blank" rel="noopener noreferrer">Dropbox</a>, 主要用作同步照片，</li><li>密碼管理：<a href="https://www.lastpass.com/" target="_blank" rel="noopener noreferrer">Lasspass</a></li><li>新聞聚合：<a href="https://feedly.com/" target="_blank" rel="noopener noreferrer">Feedly</a></li><li><a href="https://share.readmoo.com/" target="_blank" rel="noopener noreferrer">Readmoo 分享書</a>, <a href="http://www.anobii.com/" target="_blank" rel="noopener noreferrer">Anobii</a> 看書記錄</li><li><a href="http://www.douban.com/" target="_blank" rel="noopener noreferrer">豆瓣</a> 看電影記錄</li><li>個人網站：<a href="https://github.com/gasolin/blog/" target="_blank" rel="noopener noreferrer">Github</a></li><li>個人履歷：<a href="http://www.gasolin.idv.tw" target="_blank" rel="noopener noreferrer">個人網站</a>、Linkedin</li><li>IFTTT <a href="/life/LifeLog-via-IFTTT">自動化生活紀錄</a></li><li>Youtube</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="設計">設計<a href="#設計" class="hash-link" aria-label="Direct link to 設計" title="Direct link to 設計">​</a></h3><ul><li>Mockup：<a href="http://www.balsamiq.com/products/mockups" target="_blank" rel="noopener noreferrer">Balsmiq Mockups</a></li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="開發">開發<a href="#開發" class="hash-link" aria-label="Direct link to 開發" title="Direct link to 開發">​</a></h3><ul><li>編輯器：Visual Studio Code</li><li>版本控制：git, git-cinnabar</li><li>套件管理：apt, <a href="https://github.com/creationix/nvm" target="_blank" rel="noopener noreferrer">nvm</a>, yarn, Chocolatey(windows)</li><li>Shell: zsh, Ubuntu bash on windows</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="常用插件">常用插件<a href="#常用插件" class="hash-link" aria-label="Direct link to 常用插件" title="Direct link to 常用插件">​</a></h3><p>Browser</p><ul><li><a href="https://testpilot.firefox.com/experiments/tab-center" target="_blank" rel="noopener noreferrer">tab center</a>
VSCode</li><li>Document This</li><li>EditorConfig for VS Code</li><li>ESLint</li><li>Git Blame</li><li>WakaTime
JS</li><li>Babel</li><li>ESlint</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="娛樂">娛樂<a href="#娛樂" class="hash-link" aria-label="Direct link to 娛樂" title="Direct link to 娛樂">​</a></h3><ul><li>vlc</li><li>steam, origin</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="android-手機">Android 手機<a href="#android-手機" class="hash-link" aria-label="Direct link to Android 手機" title="Direct link to Android 手機">​</a></h2><ul><li>瀏覽器：Firefox for Android</li><li>網頁更新通知：Web Alert</li><li>閱讀：Palabre (feedly), Readmoo</li><li>稍候閱讀：Pocket</li><li>信箱：Inbox</li><li>地圖：Google 地圖</li><li>內建相機，內建時鐘</li><li>相簿：Dropbox, Google 相簿</li><li>社交：Facebook, LINE, Twitter, WeChat</li><li>待辦事項：<a href="https://play.google.com/store/apps/details?id=com.todoist" target="_blank" rel="noopener noreferrer">Todoist</a>, <a href="https://play.google.com/store/apps/details?id=org.dayup.gtask" target="_blank" rel="noopener noreferrer">GTasks</a>,</li><li>密碼：<a href="https://play.google.com/store/apps/details?id=com.lastpass.lpandroid" target="_blank" rel="noopener noreferrer">LastPass</a></li><li>線上影片：Youtube, Eleven Sports</li><li>音樂：豆瓣 FM</li><li>健康：小米運動，Pokemon Go</li></ul><p>工具</p><ul><li>公事：Expensify, Duo Mobile</li><li>旅遊：Google 翻譯，TripAdvisor</li><li>心智圖：SimpleMind, XMind</li><li>影片播放：MX Player, DS video</li><li>記錄看書狀況：Readmoo 分享書</li><li>線上學習：Udemy, Pluralsight, Duolingo</li><li>IFTTT</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="reference">Reference<a href="#reference" class="hash-link" aria-label="Direct link to Reference" title="Direct link to Reference">​</a></h2><ul><li><sup id="fnref-1-7d465a"><a href="#fn-1-7d465a" class="footnote-ref">1</a></sup> <a href="/tools/tooling-in-2011">個人工具箱 2011</a></li><li><sup id="fnref-2-7d465a"><a href="#fn-2-7d465a" class="footnote-ref">2</a></sup> <a href="/tools/tooling-in-2016">個人工具箱 2016</a></li></ul>]]></content>
        <category label="life" term="life"/>
        <category label="tool" term="tool"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[2016年，我開源了哪些專案(My open source projects in 2016)]]></title>
        <id>https://blog.gasolin.idv.tw/make/my-open-source-projects-in-2016</id>
        <link href="https://blog.gasolin.idv.tw/make/my-open-source-projects-in-2016"/>
        <updated>2017-01-03T16:48:35.000Z</updated>
        <summary type="html"><![CDATA[今年隨著Firefox OS退場，工作內容有了不小的改變。年初時嘗試了一些不同的方向，也修了一些Firefox界面bug，後半年則主要專注於開發者工具改進這塊。]]></summary>
        <content type="html"><![CDATA[<p></p><p>今年隨著 Firefox OS 退場，工作內容有了不小的改變。年初時嘗試了一些不同的方向，也修了一些 Firefox 界面 bug，後半年則主要專注於開發者工具改進這塊。
以下是我今年主要參與或建立的開源專案。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="jan">Jan<a href="#jan" class="hash-link" aria-label="Direct link to Jan" title="Direct link to Jan">​</a></h2><ul><li><a href="https://github.com/gasolin/webby" target="_blank" rel="noopener noreferrer">Webby</a> send command to your internet assistant through the web</li></ul><p>It's <a href="http://gasolin.github.io/webby/" target="_blank" rel="noopener noreferrer">playable online</a></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="feb">Feb<a href="#feb" class="hash-link" aria-label="Direct link to Feb" title="Direct link to Feb">​</a></h2><ul><li><a href="https://github.com/gasolin/webbybot" target="_blank" rel="noopener noreferrer">Webbybot</a> chatterbot written in es6 (es2015), fork from hubot</li><li><a href="https://github.com/gasolin/webby-calculator" target="_blank" rel="noopener noreferrer">webby-calculator</a> es6 port of hubot-calculator</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="mar">Mar<a href="#mar" class="hash-link" aria-label="Direct link to Mar" title="Direct link to Mar">​</a></h2><ul><li><a href="https://github.com/gasolin/hubot-mockadapter" target="_blank" rel="noopener noreferrer">hubot-mockadapter</a> A mock Adapter written in ES6 for unit testing Hubot and Webbybot scripts</li><li><a href="https://github.com/gasolin/webby-template" target="_blank" rel="noopener noreferrer">webby-template</a> A template for make a working webby bot </li><li><a href="https://github.com/gasolin/webby-grove-demo" target="_blank" rel="noopener noreferrer">webby-grove-demo</a> demostrate control device via messengers </li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="apr">Apr<a href="#apr" class="hash-link" aria-label="Direct link to Apr" title="Direct link to Apr">​</a></h2><ul><li><a href="https://github.com/gasolin/aframe-href-component" target="_blank" rel="noopener noreferrer">aframe-href-component</a> A Hyper Link component for A-Frame, turning object to a html linkable element </li></ul><p></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="may">May<a href="#may" class="hash-link" aria-label="Direct link to May" title="Direct link to May">​</a></h2><ul><li>New Firefox Sites Permission</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="june">June<a href="#june" class="hash-link" aria-label="Direct link to June" title="Direct link to June">​</a></h2><ul><li>Firefox Password doorhanger</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="july">July<a href="#july" class="hash-link" aria-label="Direct link to July" title="Direct link to July">​</a></h2><ul><li>Firefox Devtools Inspector</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="aug">Aug<a href="#aug" class="hash-link" aria-label="Direct link to Aug" title="Direct link to Aug">​</a></h2><ul><li><a href="https://github.com/gasolin/saihubot" target="_blank" rel="noopener noreferrer">Saihubot</a> client side chatbot that can be embedded in any web site</li><li><a href="https://github.com/gasolin/cosbot" target="_blank" rel="noopener noreferrer">Cosbot</a> coscup2016 網頁版聊天機器人
<a href="https://gasolin.github.io/cosbot/" target="_blank" rel="noopener noreferrer">https://gasolin.github.io/cosbot/</a></li></ul><p></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="sep">Sep<a href="#sep" class="hash-link" aria-label="Direct link to Sep" title="Direct link to Sep">​</a></h2><ul><li>Firefox Devtools Network Monitor</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="oct">Oct<a href="#oct" class="hash-link" aria-label="Direct link to Oct" title="Direct link to Oct">​</a></h2><ul><li><a href="https://github.com/gasolin/blog" target="_blank" rel="noopener noreferrer">blog</a> personal tech blog</li></ul><p></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="nov">Nov<a href="#nov" class="hash-link" aria-label="Direct link to Nov" title="Direct link to Nov">​</a></h2><ul><li><a href="https://github.com/gasolin/generator-360-photo" target="_blank" rel="noopener noreferrer">generator-360-photo</a> Generator to quickly create a web based 360 photo scaffold with aframe</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="dec">Dec<a href="#dec" class="hash-link" aria-label="Direct link to Dec" title="Direct link to Dec">​</a></h2><ul><li><a href="https://github.com/gasolin/awesome-webextension" target="_blank" rel="noopener noreferrer">awesome-webextension</a> A curated list of awesome articles, tutorials and resources dealing with web extention.</li><li><a href="https://github.com/gasolin/postcss-bidirection" target="_blank" rel="noopener noreferrer">postcss-bidirection</a> PostCSS plugin that polyfill Bi-directional CSS properties and values to suppot rtl and ltr rules in all browsers</li><li><a href="https://github.com/gasolin/generator-neutrino-react" target="_blank" rel="noopener noreferrer">generator-neutrino-react</a> generate basic react project powered by neutrino </li><li><a href="https://github.com/gasolin/gasolin.github.io" target="_blank" rel="noopener noreferrer">gasolin homepage</a> personal homepage <a href="http://www.gasolin.idv.tw" target="_blank" rel="noopener noreferrer">http://www.gasolin.idv.tw</a></li><li><a href="https://github.com/gasolin/ghpage-auto-deploy" target="_blank" rel="noopener noreferrer">ghpage-auto-deploy</a> Use github as a web host is that easy. This template provide essential configurations to auto deploy your github repo to gh-pages via Travis CI</li></ul>]]></content>
        <category label="web" term="web"/>
        <category label="oss" term="oss"/>
        <category label="work" term="work"/>
        <category label="life" term="life"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Automatically deploy new commit to github pages via Travis CI]]></title>
        <id>https://blog.gasolin.idv.tw/devtools/ghpage-auto-deploy</id>
        <link href="https://blog.gasolin.idv.tw/devtools/ghpage-auto-deploy"/>
        <updated>2017-01-03T13:24:46.000Z</updated>
        <summary type="html"><![CDATA[After  migrated my blog from blogger to github,]]></summary>
        <content type="html"><![CDATA[<p></p><p>After  migrated <a href="/make/hello-world">my blog</a> from blogger to <a href="https://github.com/gasolin/blog/" target="_blank" rel="noopener noreferrer">github</a>,
at the end of 2016, I've migrated <a href="/make/hello-world">my blog</a> and <a href="http://www.gasolin.idv.tw/" target="_blank" rel="noopener noreferrer">home page</a> to host on <a href="https://github.com/gasolin/gasolin.github.io" target="_blank" rel="noopener noreferrer">github</a> as well.</p><p>Both sites are fully stored in github and deployed automatically via <a href="https://travis-ci.org/gasolin/gasolin.github.io" target="_blank" rel="noopener noreferrer">Travis CI</a>.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="before-auto-deploy">Before auto deploy<a href="#before-auto-deploy" class="hash-link" aria-label="Direct link to Before auto deploy" title="Direct link to Before auto deploy">​</a></h2><p>Before apply auto deploy method, the usual workflow to hosting web page on github are 2 steps:</p><p>First, user commit changes to local git master branch.</p><div class="mermaid" data-mermaid-src="graph LR
user(User)
master[Local:master]
user -- commits* --> master">graph LR
user(User)
master[Local:master]
user -- commits* --&gt; master</div><p>Then, user run the build process to generate contents for deploy.</p><div class="mermaid" data-mermaid-src="graph LR
user(User)
dist[dist/]
user -- build --> dist">graph LR
user(User)
dist[dist/]
user -- build --&gt; dist</div><p>Then, use git commands to push generated contents to github <code>gh-pages</code> branch</p><div class="mermaid" data-mermaid-src="graph LR
user(User)
ghpages[Github:gh-pages]
user -- deploy --> ghpages">graph LR
user(User)
ghpages[Github:gh-pages]
user -- deploy --&gt; ghpages</div><p>At this time, our source code is still stored in local machine, we have to push the changes to github as well for safety.</p><div class="mermaid" data-mermaid-src="graph LR
user(User)
master[Github:master]
user -- push --> master">graph LR
user(User)
master[Github:master]
user -- push --&gt; master</div><p>Of course the manual works can be improved. After apply auto deploy method, all I have to do is
commit to github and let the web services do the rest.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="after-auto-deploy">After auto deploy<a href="#after-auto-deploy" class="hash-link" aria-label="Direct link to After auto deploy" title="Direct link to After auto deploy">​</a></h2><p>Here's what my current workflow looks like</p><div class="mermaid" data-mermaid-src="graph LR
master[Github:master]
travis[Travis CI]
ghpages[Github:gh-pages]
User -- commit --> master
master -. auto build .-> travis
travis -.  auto deploy .-> ghpages">graph LR
master[Github:master]
travis[Travis CI]
ghpages[Github:gh-pages]
User -- commit --&gt; master
master -. auto build .-&gt; travis
travis -.  auto deploy .-&gt; ghpages</div><p>The dot line process are automatically done for you.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="github-page-auto-deploy-to-rescue">Github page auto deploy to rescue<a href="#github-page-auto-deploy-to-rescue" class="hash-link" aria-label="Direct link to Github page auto deploy to rescue" title="Direct link to Github page auto deploy to rescue">​</a></h2><p>After auto deploy, I am able to run test, do lint check, and build source with a few changes on <code>.travis.yml</code>(The travis configuration file),
<strong>the only thing I need to care about is the content</strong>.
The bonus is github now become my online web page editor. Web page is auto updated after each commit.</p><p>All these automation only needs one time setup, which is a pretty good deal to save foreseeable deploy time.
For security concern, my current workflow add the github token into Travis environment variables(to let Travis able to commit gh-pages), and make the actual git push quiet to prevent showing the token on Travis.</p><p>To not reinvent wheels myself, I distilled the auto deploy scripts and instructions into <a href="https://github.com/gasolin/ghpage-auto-deploy" target="_blank" rel="noopener noreferrer">ghpage-auto-deploy</a> project.
you can use it to deploy your next web page as well.</p><p><a href="https://github.com/gasolin/ghpage-auto-deploy#fork-destination-box" target="_blank" rel="noopener noreferrer">Fork the ghpage-auto-deploy project</a> to get start, feel free to add new issues to send suggestions or pull request to me if you want to imporove it.</p>]]></content>
        <category label="web" term="web"/>
        <category label="travis" term="travis"/>
        <category label="automation" term="automation"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Debugging Firefox Devtools in 2016]]></title>
        <id>https://blog.gasolin.idv.tw/ipv6/debugging-firefox-devtools-in-2016</id>
        <link href="https://blog.gasolin.idv.tw/ipv6/debugging-firefox-devtools-in-2016"/>
        <updated>2016-12-22T11:12:05.000Z</updated>
        <summary type="html"><![CDATA[Not like previous article about general workflow on Mozilla Gecko project,]]></summary>
        <content type="html"><![CDATA[<p>Not like <a href="/mozilla/The-newbies-workflow-on-Mozilla-Gecko-project">previous article about general workflow on Mozilla Gecko project</a>,
This article is like a cookbook that I encountered during debugging Firefox devtools (mostly around inspector and network monitor).</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="remote-debugging">Remote debugging<a href="#remote-debugging" class="hash-link" aria-label="Direct link to Remote debugging" title="Direct link to Remote debugging">​</a></h2><p>According to <a href="https://developer.mozilla.org/en-US/Add-ons/WebExtensions/Debugging" target="_blank" rel="noopener noreferrer">MDN</a>, first of all you need to go through <code>Developer &gt; Toggle Tools &gt; Toolbox Options &gt; Advance settings</code> to check 2 options:</p><ul><li>Enable browser chrome and add-on debugging toolboxes</li><li>Enable remote debugging</li></ul><p>Then use <code>Shift+Option+Command+i</code> on Mac or <code>Ctrl+Shift+i</code> on linux to open the remote debugger.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="disable-autohide-in-popup">Disable autohide in popup<a href="#disable-autohide-in-popup" class="hash-link" aria-label="Direct link to Disable autohide in popup" title="Direct link to Disable autohide in popup">​</a></h3><p>Once I'm developing toolbar web extensions or any popup windows, I feel very appreciate this feature. </p><p></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="boost-build-time-via-set-mozconfig-artifact">Boost build time via set mozconfig artifact<a href="#boost-build-time-via-set-mozconfig-artifact" class="hash-link" aria-label="Direct link to Boost build time via set mozconfig artifact" title="Direct link to Boost build time via set mozconfig artifact">​</a></h3><p>Add these settings in <code>mozconfig</code> file</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># Enable debug version of the pre-build binary artifact</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">export MOZ_DEBUG="1"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># Automatically download and use compiled C++ components:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">ac_add_options --enable-artifact-builds</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># Write build artifacts to:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">mk_add_options MOZ_OBJDIR=./objdir-frontend-debug-artifact</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>If you just develop frontend UI(JS, CSS, XUL, HTML), the <a href="https://developer.mozilla.org/en-US/docs/Mozilla/Developer_guide/Build_Instructions/Artifact_builds" target="_blank" rel="noopener noreferrer">artifact build</a> prebuild the C++ and the static part of the code so you can download and link it automatically during <code>mach build</code>, it saves you tremendous build time and helps you move quicker.</p><p>You can use the command</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">./mach build faster</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>to further boost the build time.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="enable-react-and-other-js-debugging-message">Enable React and other JS debugging message<a href="#enable-react-and-other-js-debugging-message" class="hash-link" aria-label="Direct link to Enable React and other JS debugging message" title="Direct link to Enable React and other JS debugging message">​</a></h3><p>Add these settings in <code>mozconfig</code> file</p><p><code>ac_add_options --enable-debug-js-modules</code></p><p>It will turn on React and other JS debugging message. Note that will influence performance while running.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="open-devtools-and-chrome-debugger-with-website">Open devtools and chrome debugger with website<a href="#open-devtools-and-chrome-debugger-with-website" class="hash-link" aria-label="Direct link to Open devtools and chrome debugger with website" title="Direct link to Open devtools and chrome debugger with website">​</a></h3><p>You may not know its possible to open a website with opened devtool with the command:</p><p><code>./mach run --devtools --jsdebugger www.yahoo.com.tw</code></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="test-on-try-server">Test on Try server<a href="#test-on-try-server" class="hash-link" aria-label="Direct link to Test on Try server" title="Direct link to Test on Try server">​</a></h3><p>Mozilla Try Server let you run tests on all supported platforms. You can pick which test set and which platform to run by providing command arguments. Here's what I used for test devtools related bugs on Windows, Mac, and Linux.</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">try: -b do -p linux64,macosx64,win64 -u mochitest-dt,mochitest-e10s-devtools-chrome -t none --artifact</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Add <code>--artifact</code> argument will both save total running time and computing resources.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="tracing-code">Tracing Code<a href="#tracing-code" class="hash-link" aria-label="Direct link to Tracing Code" title="Direct link to Tracing Code">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="via-global-search-in-editor">Via global search in editor<a href="#via-global-search-in-editor" class="hash-link" aria-label="Direct link to Via global search in editor" title="Direct link to Via global search in editor">​</a></h3><p>Many modern editor ex sublime, visual studio code provide great support of global search. <code>Ctrl + Shift + f</code> is your good friend.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="via-dxr-or-searchfox">Via DXR or searchfox<a href="#via-dxr-or-searchfox" class="hash-link" aria-label="Direct link to Via DXR or searchfox" title="Direct link to Via DXR or searchfox">​</a></h3><p><a href="http://dxr.mozilla.org/" target="_blank" rel="noopener noreferrer">DXR</a> and <a href="http://searchfox.org" target="_blank" rel="noopener noreferrer">searchfox</a> is a code search and navigation tool for large projects like Mozilla-center.
It supports full-text and regex searches as well as structural queries.</p><p></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="es6-nits">ES6 nits<a href="#es6-nits" class="hash-link" aria-label="Direct link to ES6 nits" title="Direct link to ES6 nits">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="do-not-use-foreach-with-yield">Do not use forEach with yield<a href="#do-not-use-foreach-with-yield" class="hash-link" aria-label="Direct link to Do not use forEach with yield" title="Direct link to Do not use forEach with yield">​</a></h3><p><code>forEach</code> is a good way to loop array, but is not compatible with the generator(because the need of implement iterator interface), so if you use <code>yield</code> inside of <code>forEach</code> loop, it will not behave as you expect.
The better choice is use <code>for..of</code> loop or <code>map</code> instead.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="try-to-be-functional">Try to be functional<a href="#try-to-be-functional" class="hash-link" aria-label="Direct link to Try to be functional" title="Direct link to Try to be functional">​</a></h3><p>The powerful <code>=&gt;</code> arrow syntax sugar is not just for replacing <code>bind(this)</code>, it gives the developer a clear way to write more compact code.</p><p>For example </p><div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">promise</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">then</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">function</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">a </span><span class="token parameter punctuation" style="color:#393A34">,</span><span class="token parameter"> b</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword control-flow" style="color:#00009f">return</span><span class="token plain"> a </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> b</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>can be written as </p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">promise.then((a, b) =&gt; a + b);</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="misc">Misc<a href="#misc" class="hash-link" aria-label="Direct link to Misc" title="Direct link to Misc">​</a></h2><ul><li></li><li></li><li></li></ul>]]></content>
        <category label="devtools" term="devtools"/>
        <category label="web" term="web"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[個人工具箱2016]]></title>
        <id>https://blog.gasolin.idv.tw/tools/tooling-in-2016</id>
        <link href="https://blog.gasolin.idv.tw/tools/tooling-in-2016"/>
        <updated>2016-12-19T17:16:00.000Z</updated>
        <summary type="html"><![CDATA[先記錄下來手邊使用的工具，才有機會從繁雜中歸納出簡單的使用規則。]]></summary>
        <content type="html"><![CDATA[<p><code>先記錄下來手邊使用的工具，才有機會從繁雜中歸納出簡單的使用規則。</code></p><p>2011<sup id="fnref-1-a2e1da"><a href="#fn-1-a2e1da" class="footnote-ref">1</a></sup>年時紀錄了一次當時的個人工具箱，今年再次紀錄，</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="主要裝備">主要裝備<a href="#主要裝備" class="hash-link" aria-label="Direct link to 主要裝備" title="Direct link to 主要裝備">​</a></h2><ul><li>Desktop PC, <a href="https://elementary.io/" target="_blank" rel="noopener noreferrer">Elementary OS</a>, Intel i7 3770 3.40GHz x8, 16GB RAM, GeForce GT 630, 23" LCD</li><li>Dell XPS 13 (4943), Windows 10, i7 2.4GHz x2, 8GB RAM, 13" LCD</li><li><a href="https://oneplus.net/global/3" target="_blank" rel="noopener noreferrer">One Plus 3</a>, Android, 6GB RAM, 5.5" AMOLED</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="windows--linux">Windows &amp; Linux<a href="#windows--linux" class="hash-link" aria-label="Direct link to Windows &amp; Linux" title="Direct link to Windows &amp; Linux">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="網站工具">網站工具<a href="#網站工具" class="hash-link" aria-label="Direct link to 網站工具" title="Direct link to 網站工具">​</a></h3><ul><li>主要瀏覽器：<a href="https://www.mozilla.org/en-US/firefox/products/" target="_blank" rel="noopener noreferrer">Firefox</a></li><li>主要社交網站：<a href="http://www.facebook.com/" target="_blank" rel="noopener noreferrer">Facebook</a>、<a href="https://twitter.com/gasolin" target="_blank" rel="noopener noreferrer">Twitter</a></li><li></li><li><a href="https://mail.google.com/tasks/canvas?pli=1" target="_blank" rel="noopener noreferrer">Google Tasks</a>, 將遷移到<a href="https://todoist.com/" target="_blank" rel="noopener noreferrer">Todoist</a></li><li>Inbox, <a href="http://mail.google.com/" target="_blank" rel="noopener noreferrer">GMail</a></li><li><a href="http://keep.google.com/" target="_blank" rel="noopener noreferrer">Google keep</a> 記事</li><li>Google Doc</li><li>個人網路硬碟：<a href="http://www.dropbox.com/" target="_blank" rel="noopener noreferrer">Dropbox</a></li><li>密碼管理：<a href="https://www.lastpass.com/" target="_blank" rel="noopener noreferrer">Lasspass</a></li><li>新聞聚合：<a href="https://feedly.com/" target="_blank" rel="noopener noreferrer">Feedly</a></li><li><a href="http://www.anobii.com/" target="_blank" rel="noopener noreferrer">Anobii</a> 看書記錄</li><li><a href="http://www.douban.com/" target="_blank" rel="noopener noreferrer">豆瓣</a> 看電影記錄</li><li>個人網站：使用<a href="https://www.openshift.com" target="_blank" rel="noopener noreferrer">OpenShift</a>架設，將遷移到<a href="https://github.com/gasolin/blog/" target="_blank" rel="noopener noreferrer">Github</a></li><li>個人履歷：<a href="http://www.gasolin.idv.tw" target="_blank" rel="noopener noreferrer">個人網站</a>、Linkedin</li><li>IFTTT <a href="/life/LifeLog-via-IFTTT">自動化生活紀錄</a></li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="設計">設計<a href="#設計" class="hash-link" aria-label="Direct link to 設計" title="Direct link to 設計">​</a></h3><ul><li>Mockup：<a href="http://www.balsamiq.com/products/mockups" target="_blank" rel="noopener noreferrer">Balsmiq Mockups</a></li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="開發">開發<a href="#開發" class="hash-link" aria-label="Direct link to 開發" title="Direct link to 開發">​</a></h3><ul><li>編輯器：Visual Studio Code</li><li>版本控制：git, git-cinnabar</li><li>套件管理：apt, <a href="https://github.com/creationix/nvm" target="_blank" rel="noopener noreferrer">nvm</a>, Chocolatey(windows)</li><li>Ubuntu bash on windows</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="常用插件">常用插件<a href="#常用插件" class="hash-link" aria-label="Direct link to 常用插件" title="Direct link to 常用插件">​</a></h3><p>Browser</p><ul><li><a href="https://testpilot.firefox.com/experiments/tab-center" target="_blank" rel="noopener noreferrer">tab center</a>
VSCode</li><li>ESLint</li><li>WakaTime
JS</li><li>Babel</li><li>ESlint</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="娛樂">娛樂<a href="#娛樂" class="hash-link" aria-label="Direct link to 娛樂" title="Direct link to 娛樂">​</a></h3><ul><li>vlc</li><li>steam, origin</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="android-手機">Android 手機<a href="#android-手機" class="hash-link" aria-label="Direct link to Android 手機" title="Direct link to Android 手機">​</a></h2><ul><li>主要瀏覽器：Firefox for Android</li><li>桌面：Arrow Launcher</li><li>信箱：Inbox</li><li>地圖：Google 地圖</li><li>內建相機，內建時鐘</li><li>相簿：Dropbox, Google 相簿</li><li>社交：Facebook, LINE, Twitter, WeChat</li><li>待辦事項：<a href="https://play.google.com/store/apps/details?id=com.todoist" target="_blank" rel="noopener noreferrer">Todoist</a>, <a href="https://play.google.com/store/apps/details?id=org.dayup.gtask" target="_blank" rel="noopener noreferrer">GTasks</a>,</li><li>密碼：<a href="https://play.google.com/store/apps/details?id=com.lastpass.lpandroid" target="_blank" rel="noopener noreferrer">LastPass</a></li><li>線上學習：Udemy, Pluralsight, Duolingo</li><li>線上影片：Youtube, Eleven Sports</li><li>影片播放：MX Player, DS video</li><li>閱讀：Palabre (feedly), Readmoo</li><li>音樂：豆瓣 FM</li><li>公事：Expensify, Duo Mobile</li><li>遊戲：Pokemon Go</li><li>心智圖：SimpleMind, XMind</li><li>健康：小米運動</li></ul><p>不常用</p><ul><li>旅遊：Google 翻譯，TripAdvisor</li><li>IFTTT</li><li>Anobii，Readmoo 記錄看書狀況</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="reference">Reference<a href="#reference" class="hash-link" aria-label="Direct link to Reference" title="Direct link to Reference">​</a></h2><p><sup id="fnref-1-a2e1da"><a href="#fn-1-a2e1da" class="footnote-ref">1</a></sup> <a href="/tools/tooling-in-2011">個人工具箱 2011</a></p>]]></content>
        <category label="life" term="life"/>
        <category label="tool" term="tool"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Install react-native for android environment on windows]]></title>
        <id>https://blog.gasolin.idv.tw/react-native/install-react-native-android-development-environment-on-windows</id>
        <link href="https://blog.gasolin.idv.tw/react-native/install-react-native-android-development-environment-on-windows"/>
        <updated>2016-12-13T17:59:25.000Z</updated>
        <summary type="html"><![CDATA[You may think its pretty hard to setup everything on windows. But after I found chocolatey the process is deadly simple.]]></summary>
        <content type="html"><![CDATA[<p>You may think its pretty hard to setup everything on windows. But after I found <a href="http://chocolatey.org/" target="_blank" rel="noopener noreferrer">chocolatey</a> the process is deadly simple.
Chocolatey is the package manager for windows. Like homebrew for Mac, you can use Chocolatey to install all react-native dependencies and let chocolatey setup system PATH for you automatically.</p><p>Sounds good? let's install react-native on windows.</p><p>The very first step is install chocolatey via <!-- -->[following its instuction]<a href="https://chocolatey.org/install" target="_blank" rel="noopener noreferrer">https://chocolatey.org/install</a>).</p><p>Then install git, node, android-sdk</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">C:\&gt; choco install git nvm android-sdk</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>And you can download the <a href="https://nodejs.org/en/download/current/" target="_blank" rel="noopener noreferrer">latest node version</a> via command</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">nvm install 8.4.0</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Note that Java Development Kit (JDK) is also installed when you install <code>android-sdk</code>, neat!
As I mentioned earlier, the SYSTEM PATH are automatically set so you can run <code>android</code> command on <code>cmd</code> or the alternative to open up the SDK manager after install is complete! </p><p>Once you can open android SDK manager, check <a href="https://facebook.github.io/react-native/docs/getting-started.html#3-install-the-android-6-0-marshmallow-sdk" target="_blank" rel="noopener noreferrer">Getting Started</a> section in React Native doc to find out which android SDK versions to download.</p><p>You can also check Chocolatey's <a href="https://chocolatey.org/packages" target="_blank" rel="noopener noreferrer">package list</a> to install a editor.
Since its windows, I'll give Visual Studio Code a try:</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">c:\&gt; choco install visualstudiocode</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Now you are on the fast track to install react-native, its all node related instructions now.</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">c:\&gt; npm install -g create-react-native-app</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">c:\&gt; create-react-native-app sample</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">c:\&gt; cd sample</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">c:\sample&gt; npm start</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Happy coding!</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="reference">Reference:<a href="#reference" class="hash-link" aria-label="Direct link to Reference:" title="Direct link to Reference:">​</a></h2><ul><li></li></ul>]]></content>
        <category label="web" term="web"/>
        <category label="mobile" term="mobile"/>
        <category label="react-native" term="react-native"/>
        <category label="chocolatey" term="chocolatey"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[360照片網頁產生器]]></title>
        <id>https://blog.gasolin.idv.tw/vr/360-photo</id>
        <link href="https://blog.gasolin.idv.tw/vr/360-photo"/>
        <updated>2016-11-17T20:35:14.000Z</updated>
        <summary type="html"><![CDATA[From Dubai Airport (The image is dragable to change view 可以拖曳照片來改變視角喔)]]></summary>
        <content type="html"><![CDATA[<iframe src="https://gasolin.github.io/2016-london-allhands/dubai_airport.html" height="400px" width="600px" align="center"></iframe>From Dubai Airport (The image is dragable to change view 可以拖曳照片來改變視角喔)<p>之前寫過一篇<a href="/vr/upload-360photo-to-facebook">使用手機上傳 360 圖片到 Facebook</a>，但其實要分享 360 照片<sup id="fnref-1-94ba55"><a href="#fn-1-94ba55" class="footnote-ref">1</a></sup>的話，我們也可以用<a href="http://aframe.io" target="_blank" rel="noopener noreferrer">aframe</a>自己弄個網頁來分享。</p><p>將照片放在自己空間的缺點是所有工作得自己來。我用<a href="http://yeoman.io/" target="_blank" rel="noopener noreferrer">yeoman</a>寫了個的 360 照片網頁產生器<a href="https://www.npmjs.com/package/generator-360-photo" target="_blank" rel="noopener noreferrer">generator-360-photo</a>，可以用來產生如上的 360 照片網頁 (照片與照片網頁都放在 github page，透過 iframe 嵌入)，簡化了自己弄網頁來分享 360 照片的難度。</p><p><a href="https://www.npmjs.com/package/generator-360-photo" target="_blank" rel="noopener noreferrer">generator-360-photo</a>在產生展示 360 照片網頁的同時，也對照片做優化。由於嵌入到 600x400 空間的圖檔解析度不需要太大，原本圖檔大小 5.6MB，解析度 5660x2830，優化為解析度 2048x1024 的圖檔後，大小只剩下 481KB。下載時間只需要原來的 1/11。</p><p>使用前需要使用 npm 安裝 yeoman 和 generator-360-photo</p><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">npm install -g yo</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">npm install -g generator-360-photo</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>generator-360-photo 用到<a href="https://www.npmjs.com/package/sharp" target="_blank" rel="noopener noreferrer">sharp</a>來最佳化照片，如果在 Ubuntu linux 或 windows bash 環境下，需要使用</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">apt install build-essential</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>命令安裝必要的編譯工具。</p><p>安裝後切換到放照片的資料夾，就可以使用</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">yo 360-photo</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>命令來建立 360 照片網頁啦。</p><p>如果使用上有遇到什麼問題或建議，可以前往<a href="https://github.com/gasolin/generator-360-photo/issues" target="_blank" rel="noopener noreferrer">專案網頁</a>回報。</p><div class="footnotes"><hr><ol><li id="fn-1-94ba55"><a href="#fnref-1-94ba55" class="footnote-backref">↩</a></li></ol></div>]]></content>
        <category label="aframe" term="aframe"/>
        <category label="360photo" term="360photo"/>
        <category label="selfhost" term="selfhost"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Android + Chrome OS = Andromeda?]]></title>
        <id>https://blog.gasolin.idv.tw/android/rumor-andromeda</id>
        <link href="https://blog.gasolin.idv.tw/android/rumor-andromeda"/>
        <updated>2016-10-01T10:32:48.000Z</updated>
        <summary type="html"><![CDATA[peanut butter-filled chocolate cake]]></summary>
        <content type="html"><![CDATA[<p></p><p>隨著 Firefox OS<sup id="fnref-1-997115"><a href="#fn-1-997115" class="footnote-ref">1</a></sup>，黑莓 BlackBerry 10<sup id="fnref-2-997115"><a href="#fn-2-997115" class="footnote-ref">2</a></sup>，與 Windows Phone<sup id="fnref-3-997115"><a href="#fn-3-997115" class="footnote-ref">3</a></sup>三種行動裝置 OS 都陸續傳出退出消費市場或停產的消息，表明現在行動裝置 OS 已大勢底定，由 Android 與 iOS 二分天下。</p><p>最近甚囂塵上的傳言<sup id="fnref-4-997115"><a href="#fn-4-997115" class="footnote-ref">4</a></sup>是 Google 將在下周發表 Android 與 Chrome OS 合併的作業系統 Andromeda (英文中是 "仙女座" 的意思。有人跟我一樣感覺這唸起來尾音頗像韓國話嗎？)。這讓我想起 2008 年的時候，我寫過一篇<a href="/android/Androbian">Androbian?</a>短評關於 Android 與 Symbian 將合併的傳言。裡面引用了一段話:</p><blockquote><p>How they will merge two platforms that have so many things different about them is beyond us.
One is chocolate, the other is peanut butter. Two completely different things. However, we know how good they taste together!</p><p>一邊是巧克力，另一邊是花生醬，兩者是完全不同的東西。但是，我們都知道巧克力花生醬嚐起來是多麼地美味！</p></blockquote><p>這樣相對樂觀的期待，仍然可以套用在新的傳言上。</p><div class="footnotes"><hr><ol><li id="fn-1-997115"><a href="#fnref-1-997115" class="footnote-backref">↩</a></li><li id="fn-2-997115"><a href="#fnref-2-997115" class="footnote-backref">↩</a></li><li id="fn-3-997115"><a href="#fnref-3-997115" class="footnote-backref">↩</a></li><li id="fn-4-997115"><a href="#fnref-4-997115" class="footnote-backref">↩</a></li></ol></div>]]></content>
        <category label="Android" term="Android"/>
        <category label="mobile" term="mobile"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[在Windows 10上透過vagrant, virtualbox安裝與設定Elementary OS 0.4 (Loki)]]></title>
        <id>https://blog.gasolin.idv.tw/tools/setup-elementary-os-loki</id>
        <link href="https://blog.gasolin.idv.tw/tools/setup-elementary-os-loki"/>
        <updated>2016-09-30T17:22:16.000Z</updated>
        <summary type="html"><![CDATA[Imgur]]></summary>
        <content type="html"><![CDATA[<p></p><p>承上一篇，我工作用的桌機通常灌的是 Ubuntu（Linux）系統。筆電則是在 Windows 10 上灌 Ubuntu VM 解決。</p><p>但上個月我的桌機從 16.04LTS 升級到 16.04.1 時，竟然升級失敗無法開機，這讓我很火。
於是利用這個機會，我嘗試安裝了 <a href="https://www.linuxmint.com/" target="_blank" rel="noopener noreferrer">Mint</a> 和 <a href="http://elementary.io/" target="_blank" rel="noopener noreferrer">Elementary OS</a><sup id="fnref-1-f96d0c"><a href="#fn-1-f96d0c" class="footnote-ref">1</a></sup>。
Mint 和 Elementary OS 都是 Ubuntu 的衍生版本，所以在套件和命令行使用上與 Ubuntu 一致，在重新設定開發環境時比較不會遇到困難。</p><p>兩者嘗試後，最終是 Elementary OS 的高顏值與類似 Mac OS 的使用經驗，讓我決定繼續用下去。
當時安裝的版本是基於 Ubuntu 14.04LTS 的 Elementary OS 0.3 版 (Freya)。至目前使用上相當滿意，終於可以擺脫不甚順手的 Unity 桌面了。</p><p>就在前幾周，基於 Ubuntu 16.04LTS 的 Elementary OS 0.4 版 (Loki)<a href="http://blog.elementary.io/post/147637979911/loki-04-stable-release" target="_blank" rel="noopener noreferrer">終於釋出了</a>。
但是新版本竟然不支援直接從舊版升級，於是我依然錯過在第一時間試用新版本的機會。</p><p>今天心血來潮再次搜尋了一下 vagrant 上是否有提供 Elementary OS 的 Box，很幸運<a href="https://atlas.hashicorp.com/TimWSpence/boxes/elementaryos" target="_blank" rel="noopener noreferrer">找到了</a>！</p><p>步驟：</p><ol><li>在 Windows 10 上按視窗鍵，搜尋 cmd 並開啟</li><li>在命令行工具中輸入以下 2 行命令，以啟動一個 Elementary OS VM</li></ol><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">vagrant init TimWSpence/elementaryos</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">vagrant up</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>第一次啟動後要開啟 VirtualBox 並選擇「顯示」，之後就不需再用到 vagrant 命令了。
vagrant box 所使用的登入的密碼是 "vagrant"。</p><p>啟動後我照著<a href="https://itsfoss.com/things-to-do-after-installing-elementary-os-loki/" target="_blank" rel="noopener noreferrer">11 things to do after install Elementary OS Loki</a> 文章的建議，安裝了一些工具。
同時因為我的 Dell XPS 13 (9495) 筆電解析度較高，預設的解析度之下每個字都超級小，我透過 gsettings 命令多設定了 text scaling:</p><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">gsettings get org.gnome.desktop.interface scaling-factor</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">gsettings set org.gnome.desktop.interface scaling-factor 2</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>在做了這個修改之後，才得到對眼睛比較友善的使用界面。（如題圖）</p><div class="footnotes"><hr><ol><li id="fn-1-f96d0c"><a href="#fnref-1-f96d0c" class="footnote-backref">↩</a></li></ol></div>]]></content>
        <category label="desktop" term="desktop"/>
        <category label="work" term="work"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[在Windows 10上透過vagrant, virtualbox安裝Ubuntu 16.04]]></title>
        <id>https://blog.gasolin.idv.tw/tools/create-ubuntu-vm-on-windows-with-vagrant</id>
        <link href="https://blog.gasolin.idv.tw/tools/create-ubuntu-vm-on-windows-with-vagrant"/>
        <updated>2016-09-30T16:51:23.000Z</updated>
        <summary type="html"><![CDATA[幾周前透過Ubuntu升級筆電的Firmware後，Ubuntu竟然就再也無法正確抓到無線網卡了！]]></summary>
        <content type="html"><![CDATA[<p>幾周前透過 Ubuntu 升級筆電的 Firmware 後，Ubuntu 竟然就再也無法正確抓到無線網卡了！</p><p>我想說那就趁這機會重灌 OS 吧！然而在嘗試灌各種 Linux 套件（Elementary OS Loki (Beta), Ubuntu 16.04, Ubuntu 14.04）都抓不到網卡驅動程式後，只好乖乖灌回 Windows 10。</p><p>由於在筆電上依然需要一個 Linux 工作環境，我就<a href="/mozilla/FoxBox-1-0-install-Firefox-OS-devtool-within-1hr">之前的經驗</a>繼續使用 vagrant 來建立工作環境 VM。安裝好<a href="https://www.virtualbox.org/" target="_blank" rel="noopener noreferrer">VirtualBox</a>和<a href="https://www.vagrantup.com/" target="_blank" rel="noopener noreferrer">Vagrant</a>後，只需要 2 行命令即可安裝完成，而且之後隨時可以砍掉重新開一個全新的 VM。</p><p>步驟：</p><ol><li>在 Windows 10 上按視窗鍵，搜尋 cmd 並開啟</li><li>在命令行工具中輸入以下 2 行命令，以啟動一個 Ubuntu VM</li></ol><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">vagrant init boxcutter/ubuntu1604-desktop</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">vagrant up</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>第一次啟動後要開啟 VirtualBox 並選擇「顯示」，之後就不需再用到 vagrant 命令了。
vagrant box 所使用的登入的密碼是 "vagrant"。</p><p>由於 Vagrant 使用最小化地配置 VM 可使用的 CPU 和記憶體，對於桌面開發環境來說有些不夠用。我會到 VirtualBox 中修改「配置」，去適量增加可用的記憶體數值。
目前這方式在 Windows 上運作地相當順利。</p>]]></content>
        <category label="desktop" term="desktop"/>
        <category label="work" term="work"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Hello Hexo]]></title>
        <id>https://blog.gasolin.idv.tw/make/hello-world</id>
        <link href="https://blog.gasolin.idv.tw/make/hello-world"/>
        <updated>2016-09-18T14:17:44.000Z</updated>
        <summary type="html"><![CDATA[Imgur]]></summary>
        <content type="html"><![CDATA[<p></p><p>I just <strong>migrated my blog</strong> from Blogger to Github (via <a href="https://hexo.io/" target="_blank" rel="noopener noreferrer">Hexo</a>)! Because I'd like to use Markdown to write things efficiently (format, syntax highlight...), and think if I can finally integrate blog as part of my homepage (which soon or later will be hosted on github).</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="migrate-from-blogger">Migrate from blogger<a href="#migrate-from-blogger" class="hash-link" aria-label="Direct link to Migrate from blogger" title="Direct link to Migrate from blogger">​</a></h2><p>To migrate from blogger, I use these instructions:</p><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">npm install -g hexo-cli</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">mkdir blog &amp;&amp; cd blog</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">npm install --save hexo-migrator-rss</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">hexo migrate rss https://www.blogger.com/feeds/xxxxxxx/posts/default?max-results=600</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><code>xxxxxxx</code> is your blog id which can be found from url bar of blogger's admin panel.</p><p>To test render result locally, run</p><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">hexo s --debug</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>To generate static file then update to github, run</p><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">hexo generate --deploy --debug</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>If you have amount of articles like me (about 500 articles), make sure you have allocate enough memory if you run the command in VM.</p><p>The template comes from <a href="http://theme-next.iissnan.com/" target="_blank" rel="noopener noreferrer">hexo-theme-next</a> with great document.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="github-related-configurations">Github related configurations<a href="#github-related-configurations" class="hash-link" aria-label="Direct link to Github related configurations" title="Direct link to Github related configurations">​</a></h2><p>Make sure you've follow <a href="https://help.github.com/articles/setting-up-a-custom-subdomain/" target="_blank" rel="noopener noreferrer">"Setting up a custom subdomain"</a> , and install <code>hexo-generator-cname</code> to generate CNAME file for your static web site.</p><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">npm install --save hexo-generator-cname</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Add <code>cname</code> property in <code>_config.yml</code>:</p><div class="language-yml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-yml codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token key atrule" style="color:#00a4db">cname</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> blog.gasolin.idv.tw</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>You can check <a href="https://github.com/gasolin/blog/blob/master/_config.yml" target="_blank" rel="noopener noreferrer">_config.yml</a> and <a href="https://github.com/gasolin/blog/tree/master/themes" target="_blank" rel="noopener noreferrer">themes/</a> for my site configurations.</p><p>The theme customization is done via npm scripts. You can check <a href="https://github.com/gasolin/blog/blob/master/package.json" target="_blank" rel="noopener noreferrer">package.json::scripts</a> for detail.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="deploy-automatically-via-travis-ci">deploy automatically via travis CI<a href="#deploy-automatically-via-travis-ci" class="hash-link" aria-label="Direct link to deploy automatically via travis CI" title="Direct link to deploy automatically via travis CI">​</a></h2><p>Read</p><ul><li><a href="http://magicse7en.github.io/2016/03/27/travis-ci-auto-deploy-hexo-github/" target="_blank" rel="noopener noreferrer">使用 Travis CI 自动构建 hexo 博客</a> (in chinese)</li><li></li></ul><p>for step by step instructions. Or you can check My version of <a href="https://github.com/gasolin/blog/blob/master/.travis.yml" target="_blank" rel="noopener noreferrer">.travis.yml</a> with <a href="https://github.com/gasolin/blog/blob/master/.gitmodules" target="_blank" rel="noopener noreferrer">hexo-theme-next gitsubmodule</a></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="seo-enhancements">SEO enhancements<a href="#seo-enhancements" class="hash-link" aria-label="Direct link to SEO enhancements" title="Direct link to SEO enhancements">​</a></h2><p>Read <a href="http://fionat.github.io/blog/2013/10/23/sitemap/" target="_blank" rel="noopener noreferrer">如何向 google 提交 sitemap</a> (in chinese) to send sitemap.xml to google for better indexing.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="update-theme">Update theme<a href="#update-theme" class="hash-link" aria-label="Direct link to Update theme" title="Direct link to Update theme">​</a></h2><p>Use command</p><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">git submodule foreach git pull origin master</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>to update your theme. Read <a href="http://stackoverflow.com/questions/5828324/update-git-submodule-to-latest-commit-on-origin" target="_blank" rel="noopener noreferrer">Update Git submodule to latest commit on origin</a> for more detail.</p>]]></content>
        <category label="life" term="life"/>
        <category label="blog" term="blog"/>
        <category label="webframework" term="webframework"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[聊天機器人一份，不加咖啡]]></title>
        <id>https://blog.gasolin.idv.tw/iot/chatbot-slide</id>
        <link href="https://blog.gasolin.idv.tw/iot/chatbot-slide"/>
        <updated>2016-08-25T01:55:50.000Z</updated>
        <summary type="html"><![CDATA[「聊天機器人一份，不加咖啡」是今年在 Coscup 2016 分享的講題，投影片在此。]]></summary>
        <content type="html"><![CDATA[<p></p><p>「聊天機器人一份，不加咖啡」是今年在 Coscup 2016 分享的講題，<a href="https://hackmd.io/p/HJ7dfgVc#/" target="_blank" rel="noopener noreferrer">投影片在此</a>。
內容包含介紹聊天機器人與 <a href="https://github.com/github/hubot" target="_blank" rel="noopener noreferrer">Hubot</a>，轉換 Coffeescript 到 ES6，與移植經驗總結。</p><iframe src="https://hackmd.io/p/HJ7dfgVc#/" height="400px" width="600px" align="center"></iframe><p><a href="https://github.com/gasolin/webbybot" target="_blank" rel="noopener noreferrer">Webbybot</a> 是我們將 Hubot 完全移植到 ES6 的成果。在準備這場演講時，有鑑於 Server Side 聊天機器人設定上還是稍嫌複雜，於是我參考 Hubot 架構，做了原始版本只有 80 行的網頁端聊天機器人。除了支援聊天機器人基本功能外，同時也支援擴充腳本 (plugin) 與擴充功能 (addon)。由於參考了 Hubot 架構，於是命名時就取了<a href="https://gasolin.github.io/saihubot/" target="_blank" rel="noopener noreferrer"><strong>Sai</strong>hubot</a> 這個既包含 Hubot，又有濃濃台味的名稱（SaiHu 即台語的「師傅」）。</p><p>這次活動官方有提供 LINE 版的聊天機器人。我在活動早上花幾小時基於 Saihubot　做了　<a href="https://gasolin.github.io/cosbot/" target="_blank" rel="noopener noreferrer">Coscup 2016 網頁版機器人</a>，可以上去玩玩。</p><iframe src="https://gasolin.github.io/cosbot/" height="400px" width="600px" align="center"></iframe><p>要做一個自己的網頁聊天機器人，只須在 github 上 fork 專案，然後就可以直接在 Github 上編輯，修改後的結果直接反應到 https://<!-- -->[your name]<!-- -->.github.io/saihubot 網站上。修改極端容易，畢竟核心只有不到 100 行，對聊天機器人有點興趣的人可以照著上述說明試試，看看原始碼，當然若能送個 Issue 或 Pull Request，這場「扎根」議程達到的效果就最好了。</p>]]></content>
        <category label="javascript" term="javascript"/>
        <category label="chatbot" term="chatbot"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[The newbie's workflow on Mozilla Gecko project]]></title>
        <id>https://blog.gasolin.idv.tw/mozilla/The-newbies-workflow-on-Mozilla-Gecko-project</id>
        <link href="https://blog.gasolin.idv.tw/mozilla/The-newbies-workflow-on-Mozilla-Gecko-project"/>
        <updated>2016-08-09T06:35:24.000Z</updated>
        <summary type="html"><![CDATA[As our recent development focus shifting from Firefox OS to Firefox, we need to contribute to gecko repository directly instead of contributing to Gaia repository on Github.]]></summary>
        <content type="html"><![CDATA[<p>As our recent development focus shifting from Firefox OS to Firefox, we need to contribute to gecko repository directly instead of contributing to Gaia repository on Github.
The most of the works are related to Javascript. The main change is the workflow and API difference.<!-- -->&nbsp;<!-- --> In Gaia we work between Bugzilla and Github; In gecko, we have Bugzilla and mozReview.</p><p>Once you have setup the environment, the workflow could also be based on git(or hg), and most things are dealt automatically.
Mozilla is a pretty open workplace so that I can share my workflow with the world. Here is a reference to how I did for per patch/weekly/per setup/one-time workflow.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="do-it-one-time">Do it One time<a href="#do-it-one-time" class="hash-link" aria-label="Direct link to Do it One time" title="Direct link to Do it One time">​</a></h2><p>To become a mozilla committer, read <a href="https://www.mozilla.org/en-US/about/governance/policies/commit/" target="_blank" rel="noopener noreferrer">https://www.mozilla.org/en-US/about/governance/policies/commit/</a></p><p>Create Bugzilla API key<a href="https://bugzilla.mozilla.org/userprefs.cgi?tab=apikey" target="_blank" rel="noopener noreferrer">https://bugzilla.mozilla.org/userprefs.cgi?tab=apikey</a>
and ssh key <a href="https://login.mozilla.com/ssh_keys_index" target="_blank" rel="noopener noreferrer">https://login.mozilla.com/ssh_keys_index</a></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="do-at-every-setup">Do at every Setup<a href="#do-at-every-setup" class="hash-link" aria-label="Direct link to Do at every Setup" title="Direct link to Do at every Setup">​</a></h2><p>You may check MDN as a start point, with Developer Guide <a href="https://developer.mozilla.org/en-US/docs/Mozilla/Developer_guide" target="_blank" rel="noopener noreferrer">https://developer.mozilla.org/en-US/docs/Mozilla/Developer_guide</a> and especially the source code page
<a href="https://developer.mozilla.org/en-US/docs/Mozilla/Developer_guide/Source_Code" target="_blank" rel="noopener noreferrer">https://developer.mozilla.org/en-US/docs/Mozilla/Developer_guide/Source_Code</a></p><p>I will do the setup flow every time I got a new laptop.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="1-update-git">1. Update git<a href="#1-update-git" class="hash-link" aria-label="Direct link to 1. Update git" title="Direct link to 1. Update git">​</a></h3><p>Use the <a href="https://launchpad.net/%7Egit-core/+archive/ubuntu/ppa" target="_blank" rel="noopener noreferrer">PPA</a> from the maintainers of <code>git</code> on Ubuntu: </p><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ sudo apt-add-repository ppa:git-core/ppa</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ sudo apt-get update</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ sudo apt-get install git</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="2-install-git-cinnabar">2. Install git-cinnabar<a href="#2-install-git-cinnabar" class="hash-link" aria-label="Direct link to 2. Install git-cinnabar" title="Direct link to 2. Install git-cinnabar">​</a></h3><p>Gecko itself managed via mercurial, we need install <a href="https://github.com/glandium/git-cinnabar" target="_blank" rel="noopener noreferrer">git-cinnabar</a> to help us deal with mercurial codebase via git.Check <a href="http://mozilla-version-control-tools.readthedocs.org/en/latest/mozreview/install-git.html#mozreview-install-git" target="_blank" rel="noopener noreferrer">http://mozilla-version-control-tools.readthedocs.org/en/latest/mozreview/install-git.html#mozreview-install-git</a>&nbsp;<!-- -->`<a href="https://github.com/glandium/git-cinnabar/wiki/Mozilla:-A-git-workflow-for-Gecko-development" target="_blank" rel="noopener noreferrer"></a></p><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ sudo apt-get install mercurial</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ git clone https://github.com/glandium/git-cinnabar.git</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Then set git-cinnabar into system PATH,</p><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ gedit ~/.bashrc</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token builtin class-name">export</span><span class="token plain"> </span><span class="token assign-left variable environment constant" style="color:#36acaa">PATH</span><span class="token operator" style="color:#393A34">=</span><span class="token environment constant" style="color:#36acaa">$PATH</span><span class="token plain">:absolute_path_to/git-cinnabar</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ . ~/.bashrc</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>And do <code>git cinnabar download</code> to get the faster helper.</p><p>Then follow `<a href="https://github.com/glandium/git-cinnabar/wiki/Mozilla:-A-git-workflow-for-Gecko-development" target="_blank" rel="noopener noreferrer">Mozilla: A git workflow for Gecko development</a> to checkout gecko via git.</p><p>Make sure you follow the Firefox build guide <a href="https://developer.mozilla.org/en-US/docs/Mozilla/Developer_guide/Build_Instructions/Simple_Firefox_build" target="_blank" rel="noopener noreferrer">https://developer.mozilla.org/en-US/docs/Mozilla/Developer_guide/Build_Instructions/Simple_Firefox_build</a> to setup Firefox build environment.</p><p>You can <code>install style check related libraries via the following command:</code></p><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ ./mach eslint --setup</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>You may want install mozreview which improves the overall experience of review with Bugzilla<a href="http://mozilla-version-control-tools.readthedocs.org/en/latest/mozreview/install.html" target="_blank" rel="noopener noreferrer"> http://mozilla-version-control-tools.readthedocs.org/en/latest/mozreview/install.html</a><code> </code></p><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ ./mach mercurial-setup</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Will clone <code>version-control-tools</code> into <code>~/.mozbuild/version-control-tools</code>. We need update system PATH</p><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ gedit ~/.bashrc</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token builtin class-name">export</span><span class="token plain"> </span><span class="token assign-left variable environment constant" style="color:#36acaa">PATH</span><span class="token operator" style="color:#393A34">=</span><span class="token environment constant" style="color:#36acaa">$PATH</span><span class="token plain">:absolute_path_to/git-cinnabar:/path/to/.mozbuild/version-control-tools/git/commands</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ . ~/.bashrc</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ git config --global bz.username gasolin@example.com</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ git config --global bz.apikey [your bugzilla key]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ git config --global mozreview.nickname gasolin</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ git mozreview configure</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Then, run bootstrap script to install required build environment,</p><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ ./mach bootstrap</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Then, <strong>the most time-saving advice</strong>: setup mozconfig for <a href="https://developer.mozilla.org/en-US/docs/Mozilla/Developer_guide/Build_Instructions/Artifact_builds" target="_blank" rel="noopener noreferrer">artifact builds</a> if possible. When you only work for front-end related work (non c++), Artifact build will download compiled platform code to save you lots of build time.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="weekly-workflow">Weekly workflow<a href="#weekly-workflow" class="hash-link" aria-label="Direct link to Weekly workflow" title="Direct link to Weekly workflow">​</a></h2><p>Previously build takes more time, I usually do the following command only twice a week if necessary. But now we can use artifact build, which is pretty fast and can be done many times a day.</p><p>We need update Gecko repository regularly:</p><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ git remote update</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Then merge recent updates into current repo with</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ git rebase central/default</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Checkout a new bug and then rebuild the stack,</p><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ ./mach build</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>The command will compile the whole gecko.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="per-patch-workflow">Per patch workflow<a href="#per-patch-workflow" class="hash-link" aria-label="Direct link to Per patch workflow" title="Direct link to Per patch workflow">​</a></h2><p>When I work on a new bug, I'll checkout a new branch (on mac)</p><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ git checkout -b bugxxxxxxx central/branches/default/tip</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>or (on Ubuntu)</p><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ git checkout -b bugxxxxxxx mozilla/central</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Usually, the bug is focused on a component of gecko, such as <code>browser/components/customizableui</code>. To make .js/.jsm changes work, we don't need to rebuild gecko. But to make some C++ code or new test code works, we need to rebuild this part of source via</p><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ ./mach build browser/components/customizableui</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Once we have some progress for the patch, we can test code via the command: </p><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ ./mach test browser/components/customizableui/test</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>You need to make sure you've followed the JS code style <a href="https://wiki.mozilla.org/DevTools/CodingStandards#Code_style" target="_blank" rel="noopener noreferrer">https://wiki.mozilla.org/DevTools/CodingStandards#Code_style </a>and CSS code style <a href="https://wiki.mozilla.org/Firefox/CSS_Tips" target="_blank" rel="noopener noreferrer">https://wiki.mozilla.org/Firefox/CSS_Tips</a>. Do the eslint test before commit to make sure the patch does not contain some obvious syntax error.</p><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ ./mach eslint browser/components/customizableui/test</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Once the patch is ready, commit it as normal git commit, with a <a href="http://mozilla-version-control-tools.readthedocs.org/en/latest/mozreview/commits.html#mozreview-commits" target="_blank" rel="noopener noreferrer">structured syntax</a>:
<code>Bug xxxxxxx - description. ;r=?reviewer_bugzilla_alias</code>.</p><p>Then, use git mozreview command to push the commit onto Bugzilla for review.</p><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ git mozreview push</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>You can use try chooser<a href="http://trychooser.pub.build.mozilla.org/" target="_blank" rel="noopener noreferrer"> http://trychooser.pub.build.mozilla.org/</a> to select test suites that run automatically on the test server. Treeherder is Mozilla's test server hosted on AWS (Amazon Web Service). Push code there and everyone will have the same base to validate if your code works well on anyone's computer.</p><p>The reference try script (credit from :Gijs) for <code>browser/component</code> is</p><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">try: -b od -t none -p win32,win64,macosx64,linux,linux64,linux64-asan -u mochitest-bc,mochitest-e10s-bc,marionette,marionette-e10s</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>You can manipulate the script based on what you need to test.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="if-you-like-to-file-a-bug">If you like to file a bug<a href="#if-you-like-to-file-a-bug" class="hash-link" aria-label="Direct link to If you like to file a bug" title="Direct link to If you like to file a bug">​</a></h2><ul><li>Assign priorities when filing new bugs that you're going to work on in the component.</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="reference">Reference<a href="#reference" class="hash-link" aria-label="Direct link to Reference" title="Direct link to Reference">​</a></h2><ul><li></li></ul>]]></content>
        <category label="Mozilla" term="Mozilla"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[使用手機上傳 360 圖片到 Facebook]]></title>
        <id>https://blog.gasolin.idv.tw/vr/upload-360photo-to-facebook</id>
        <link href="https://blog.gasolin.idv.tw/vr/upload-360photo-to-facebook"/>
        <updated>2016-07-04T05:56:24.000Z</updated>
        <summary type="html"><![CDATA[前幾天 Facebook 開放上傳 360 影片，經過幾番嘗試後，終於找出直接在手機上直接上傳 360 照片的方法。]]></summary>
        <content type="html"><![CDATA[<p>前幾天 Facebook 開放上傳 360 影片，經過幾番嘗試後，終於找出直接在手機上直接上傳 360 照片的方法。</p><p>剛嘗試的人建議使用 <a href="https://github.com/gasolin/webvrdemo/blob/gh-pages/Lab360Image.md" target="_blank" rel="noopener noreferrer">Google Street View</a> 或 <a href="https://github.com/gasolin/webvrdemo/blob/gh-pages/LabPanorama.md" target="_blank" rel="noopener noreferrer">Cardboard Camera</a> 試試效果，這兩個 App 可以在 Android 或 iOS 應用商店中找到。</p><p>透過這兩個 App 拍攝的 360 影片，直接上傳到 Facebook 應該是沒問題的。</p><p>但現在有更方便的 360 影片拍攝工具如 Ricoh Theta S 或是 LG 360 CAM，這類設備搭載兩個鏡頭，拍攝時只要按一下拍攝鈕，就輕鬆完成全景照片。</p><p></p><p>使用全景相機拍攝 360 照片或影片
有的設備如 LG 360 CAM，目前 Facebook 還無法辨認（更新：現直接上傳 360 照片已經可以正確辨認），所以只能用一些繞過的方法。朋友傳來<a href="http://360rumors.blogspot.co.uk/2016/06/facebook-posts-detailed-instructions.html" target="_blank" rel="noopener noreferrer">這篇教學文章</a>。根據這篇文章的說明，我做了些嘗試與改進，並最終成功透過手機上傳 360 照片。</p><ol><li>首先準備一張 360 照片 （我用的是 LG 360 CAM）</li></ol><p></p><ol start="2"><li>接著從應用商店取得可以編輯照片 Exif 資訊的應用。我選的是免費的 Photo Exif editor。</li><li>從照片 (Gallery, Photo) App 預覽到想要修改的 360 照片，選擇分享（Share）到 Photo Exif editor。
<!-- -->&nbsp;<!-- -->4<!-- -->.<!-- --> 照著修改 以下欄位的值：</li></ol><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">Camera maker: **Ricoh **（首字母大寫）**</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">**</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Camera model: **RICOH THETA S**** **（全大寫）</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><a href="https://1.bp.blogspot.com/-Oj_TnMi4gOo/V15V-GIQGqI/AAAAAAAAEL8/Y8mpHvEJ6ekCWxQpQoTaMo13_mO0uiyhwCLcB/s1600/2016-06-12%2B06.42.55.png" target="_blank" rel="noopener noreferrer"><img loading="lazy" src="https://1.bp.blogspot.com/-Oj_TnMi4gOo/V15V-GIQGqI/AAAAAAAAEL8/Y8mpHvEJ6ekCWxQpQoTaMo13_mO0uiyhwCLcB/s640/2016-06-12%2B06.42.55.png" class="img_ev3q"></a>
5<!-- -->.<!-- --> 最後再透過相片軟體選擇分享到 Facebook 即可。如果成功，可以看到相片下角出現球狀 360 影片圖示。</p><p></p><p>我的觀察啦，360 相機使用上相當方便，按一下拍攝鈕啟動相機，再按一下就拍張照。長按就開始拍攝影片。</p><p>拍照時只要把相機往上平舉，就整個環境都拍到了（一個小技巧：拍攝時將相機舉在頭上就不會拍到自己），不需要什麼特別的攝影技巧。這對只是想分享當下體驗的我相當適合。這種特性也很適合團體拍照。這樣方便的新品，加上 Facebook 這樣容易分享相片的環境，相信很快 360 相機就會流行起來。
<!-- -->&nbsp;<!-- -->
目前拍 360 相片時，附近的人其實並沒有意識到我在幹什麼，但其實附近的人也是全部入鏡的。使用 360 相機時要如何兼顧隱私的保護也會是一個議題。</p>]]></content>
        <category label="360photo" term="360photo"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Setup a skype chatbot on Respberry pi with 4GB SD Card]]></title>
        <id>https://blog.gasolin.idv.tw/iot/Setup-a-skype-chatbot-on-Respberry-pi-with-4GB-SD-Card</id>
        <link href="https://blog.gasolin.idv.tw/iot/Setup-a-skype-chatbot-on-Respberry-pi-with-4GB-SD-Card"/>
        <updated>2016-04-08T02:45:45.000Z</updated>
        <summary type="html"><![CDATA[It's a small challenge and fun to setup a chatbot on a small device with restrained resource.]]></summary>
        <content type="html"><![CDATA[<p>It's a small challenge and fun to setup a chatbot on a small device with restrained resource.</p><p>Here's the instruction to setup a chatbot on Respberry pi with 4GB SD Card.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="download-respbian-lite">Download respbian lite<a href="#download-respbian-lite" class="hash-link" aria-label="Direct link to Download respbian lite" title="Direct link to Download respbian lite">​</a></h3><p>We need respbian lite because normal Respbian took more than 4GB space. If you have 8GB or larger SD Card, normal Respbian works fine for you.</p><p>You can download them from <a href="https://www.raspberrypi.org/downloads/raspbian/" target="_blank" rel="noopener noreferrer">https://www.raspberrypi.org/downloads/raspbian/</a></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="flash-image-to-sdcard">Flash image to sdcard<a href="#flash-image-to-sdcard" class="hash-link" aria-label="Direct link to Flash image to sdcard" title="Direct link to Flash image to sdcard">​</a></h3><p>I did it in Mac with diskutil. You can check the install guide from <a href="https://www.raspberrypi.org/documentation/installation/installing-images/README.md" target="_blank" rel="noopener noreferrer">https://www.raspberrypi.org/documentation/installation/installing-images/README.md</a> for other platforms.</p><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ diskutil list</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">/dev/disk0 (internal, physical):</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">...</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">/dev/disk1 (internal, virtual):</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">...</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">/dev/disk2 (internal, virtual):</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">... 2: Linux 3.8 GB disk2s2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ diskutil unmountDisk disk2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ sudo dd bs=1m if=2016-03-18-raspbian-jessie-lite.img of=/dev/rdisk2</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="login-to-respbian">Login to respbian<a href="#login-to-respbian" class="hash-link" aria-label="Direct link to Login to respbian" title="Direct link to Login to respbian">​</a></h3><p>Respbian lite does not provide desktop environment, so we'll do everything with command line.</p><p>Insert SDCard, bootup and login into respbian with</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">name: pi</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">password: raspberry</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Refer from <a href="http://elinux.org/RPi_Distributions#Raspbian" target="_blank" rel="noopener noreferrer">http://elinux.org/RPi_Distributions#Raspbian</a></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="install-node-and-redis">Install node and redis<a href="#install-node-and-redis" class="hash-link" aria-label="Direct link to Install node and redis" title="Direct link to Install node and redis">​</a></h3><p>Refer from <a href="https://nodejs.org/en/download/package-manager/" target="_blank" rel="noopener noreferrer">https://nodejs.org/en/download/package-manager/</a></p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ `curl -sL https://deb.nodesource.com/setup_5.x &gt; script</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ chmod 755 script</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ sudo -E ./script</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ sudo apt-get install -y nodejs build-essential redis-server</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ node -v</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">v5.10.1</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="install-webbybot">Install webbybot<a href="#install-webbybot" class="hash-link" aria-label="Direct link to Install webbybot" title="Direct link to Install webbybot">​</a></h3><p>Webbybot is the rewrite of hubot from coffeescript to ES6, its will be more maintainable in the future.</p><p>In respbian lite, the git is not pre-installed, so we need install <strong>git-core</strong> from <strong>apt-get</strong> as well.</p><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ sudo apt-get install git-core</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ git clone https://github.com/gasolin/webby-template pibot</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ cd pibot</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ npm install</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ ./bin/webby</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">webby&gt; webby test</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">webby&gt; **pong**</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="deploy-on-messengers">Deploy on messengers<a href="#deploy-on-messengers" class="hash-link" aria-label="Direct link to Deploy on messengers" title="Direct link to Deploy on messengers">​</a></h3><p>Check Workable adapters section to install your bot onto telegram, facebook messenger, or skype <a href="https://github.com/gasolin/webby-template#workable-adapters" target="_blank" rel="noopener noreferrer">https://github.com/gasolin/webby-template#workable-adapters</a></p><p>Let's take skype for example. First you need sign up an skype account, then put the username/password on to <code>.env</code> file.</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">vi .env</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">HUBOT_SKYPE_USERNAME=name</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">HUBOT_SKYPE_PASSWORD=password</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Then install hubot-skyweb adapter and switch the core to webbybot</p><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">npm install hubot-skyweb</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">vi node_module/hubot-skyweb/src/skyweb.coffee</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>replace require 'hubot' to 'webbybot'. Then run</p><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">./bin/webby -a skyweb</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>You are good to go! You can add new skills on your pibot by following <a href="https://github.com/gasolin/webbybot/#add-plugins" target="_blank" rel="noopener noreferrer">https://github.com/gasolin/webbybot/#add-plugins</a> which is same as hubot, and create your own plugin to control the respberry pi <a href="https://github.com/gasolin/webbybot#write-your-own-plugin" target="_blank" rel="noopener noreferrer">https://github.com/gasolin/webbybot#write-your-own-plugin</a>.</p><p>Have fun!</p>]]></content>
        <category label="javascript" term="javascript"/>
        <category label="fun" term="fun"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[How we ported Hubot from Coffeescript to ES6]]></title>
        <id>https://blog.gasolin.idv.tw/code/How-we-ported-Hubot-from-Coffeescript-to-ES6</id>
        <link href="https://blog.gasolin.idv.tw/code/How-we-ported-Hubot-from-Coffeescript-to-ES6"/>
        <updated>2016-03-14T09:04:42.000Z</updated>
        <summary type="html"><![CDATA[Hubo]]></summary>
        <content type="html"><![CDATA[<p><a href="https://www.flickr.com/photos/franzbrandtwein/210333714/in/photolist-jA1Tm-7zsdd5-c3S9RY-6nV3Rp-96h4Vx-of3ttt-38gqh7-gmHXQv-dVEbJF-7E2T3H-HtFB3-robohy-druZRm-nrF4vh-HtFAN-7Dk3uW-pkMp7E-qpn51r-67WHcz-dmkogt-AkVdM-951oFH-af6bdQ-igcWis-bw1gLG-6ZkGsP-r3KjtA-aojgSy-qXYEst-ckHzAN-97rv7G-qfi5f6-bu6G96-4mdWDR-62fyWi-qgcVh4-89o3px-8AKiYq-Xb2wh-5K91Q3-rwerig-i19QiK-7jGYc7-2Pc3VK-bNBoUp-9RDmqK-9iEDUt-kb1z7K-dwYP4H-pN2djS" target="_blank" rel="noopener noreferrer" title="Hubo"><img loading="lazy" src="https://farm1.staticflickr.com/91/210333714_cccff3a76f.jpg" alt="Hubo" class="img_ev3q"></a><script charset="utf-8" src="//embedr.flickr.com/assets/client-code.js"></script></p><p>We (Fred Lin <!-- -->&amp;<!-- --> Ray Lin) have ported Github's popular chat robot framework '<a href="https://github.com/github/hubot" target="_blank" rel="noopener noreferrer">Hubot'</a> from Coffeescript to plain Javascript with ES6 features. Currently I name it <a href="https://github.com/gasolin/webbybot" target="_blank" rel="noopener noreferrer"><strong>webbybot</strong></a> to denote ES6 version of hubot, to better test the port result and avoid the naming confusion with the original hubot.</p><p>Now webbybot is fully functional and still support all coffeescript written plugins.
If you have an existing bot generated by  hubot-generator, you can install webbybot via <code>npm  install webbybot</code> command, follow <a href="https://github.com/gasolin/webbybot#how-to-replace-hubot-to-webbybot" target="_blank" rel="noopener noreferrer">with simple instruction</a> and see your bot works smoothly with webbybot core.</p><p>(For experienced developer, the instruction guide you to replace script in  generated '/bin' folder from 'hubot' to 'webby'. And change the adapter  library import from 'hubot' to 'webbybot'.)</p><p>As time goes to 2016, there're less reason to use <a href="http://coffeescript.org/" target="_blank" rel="noopener noreferrer">Coffeescript</a> instead of standard ES6 Javascript. During the porting we do learned something that might helpful for your projects.</p><p><strong>1<!-- -->.<!-- --> Use npm script directly instead of gulp or grunt</strong></p><p>With npm we can define some scripts directly in the 'script' attribution of 'package.json' file. Webbybot use 'npm run build' command to compile ES6 to plain javascript via <a href="http://babeljs.io/" target="_blank" rel="noopener noreferrer">Babel</a>. Do style checking via 'npm run lint' command.</p><p><strong>2<!-- -->.<!-- --> Use babel directly instead of webpack</strong></p><p>At the beginning we count on <a href="https://webpack.github.io/" target="_blank" rel="noopener noreferrer">webpack</a>'s babel-loader to convert ES6 to plain javascript. Alas its a beginning of 'Try and Error' journey. Webpack is originally designed for front-end packaging and works very well on that purpose. But for backend program like webbybot that feature is not important for us. Webpack also bring 'require' keyword to the front-end, but its not suit for backend program that depends on dynamic import. As a framework, hubot heavily counts on NODE require to load plugins. Webpack treat all 'require' as its keyword and try hard in vain to find external modules from packed files.</p><p>We tried several ways to detour these side effects, and finally replaced the full webpack stack with <a href="https://github.com/gasolin/webbybot/blob/master/package.json#L10" target="_blank" rel="noopener noreferrer">one line npm build script</a>. Now its easier to debug and no hacks needed in source code.</p><p><strong>3<!-- -->.<!-- --> return or not return, its the question</strong></p><p>We use the  "Try Coffeescript" utility provide form <a href="http://coffeescript.org/" target="_blank" rel="noopener noreferrer">Coffeescript</a> official site, which you can paste Coffeescript the page will convert the source to Javascript instantly.
The converted code is... not all pretty for human read, and all converted functions will contain a return statement even its unnecessary. It needs check by hand.</p><p><strong>4<!-- -->.<!-- --> test cases matter</strong></p><p>Hubot itself contains good coverage of unit tests. So we are able to test one ported script file with one ported test file when we start the porting. The unit test files contain great number of redundant return sentences when convert from coffeescript.</p><p><strong>5<!-- -->.<!-- --> class and super</strong></p><p>Hubot use Class syntax from Coffeescript。Thanksfully ES6 support the Class syntax, which is a bit different from Coffeescript. You can check how to use Class and super on <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Classes" target="_blank" rel="noopener noreferrer">MDN.</a> </p><p><strong>6<!-- -->.<!-- --> Default + rest + spread</strong></p><p>Hubot contain several syntax like 'reply(strings...)'. The syntax 'strings...' in Coffeescript is correspondent to "...strings" in ES6（The order of '...' is reversed）.
'...strings' denotes an array and I feel its a bit hard to figure out when to expand it or not.</p><p><strong>7<!-- -->.<!-- --> for..of instead of for..in</strong></p><p>To use for..in loop in ES6, we need add 'hasOwnProperty' check to make sure inherited property are not looped. Or we can rewrite for..in loop in Coffeescript to forEach iteration. Though there are some cases that need 'break' or 'return' from a loop.</p><p>Now we use ES6 <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for...of" target="_blank" rel="noopener noreferrer">for..of loop</a> in Webbybot to replace forEach and for..in loop. You need wrap object with Object.keys syntax to iterate with object. ex: <code>for (let item  of Object.keys(TargetObj)) {...}</code>.</p><p><strong>8<!-- -->.<!-- --> Object.assign instead of Extend</strong></p><p>We can use <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign" target="_blank" rel="noopener noreferrer">Object.assign</a> to extend a object without handmade extend function or lodash!</p><p><strong>9<!-- -->.<!-- --> Do you know hubot also <a href="https://github.com/gasolin/webbybot/blob/master/src/robot.js#L404" target="_blank" rel="noopener noreferrer">support write plugin with plain javascript</a>?</strong></p><p>Learning how chat bot works is the main reason we start porting hubot to ES6!
A simple plain javascript plugin could be as easy as: (src/simple.js)</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">&gt; module.exports = function(robot) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; &amp;nbsp; robot.respond(/(hello)/i, function(res) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; &amp;nbsp; &amp;nbsp; res.send('hi'); </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; &amp;nbsp; });</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; }You can put it in generated plugin folder and it will just work.</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>I've created a <a href="https://github.com/github/hubot/issues/1138" target="_blank" rel="noopener noreferrer">ticket on hubot issue list</a> to start a discussion if hubot would like to go with ES6 in its future version.</p><p>The webbybot source is at<a href="https://github.com/gasolin/webbybot" target="_blank" rel="noopener noreferrer"> https://github.com/gasolin/webbybot</a></p><p>Do you have a project ported from coffeescript to ES6? Welcome to drop by your thoughts.</p>]]></content>
        <category label="javascript" term="javascript"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[將聊天機器人框架 hubot 從 Coffescript 移植到 ES6]]></title>
        <id>https://blog.gasolin.idv.tw/devtools/port-hubot-from-Coffescript-to-ES6</id>
        <link href="https://blog.gasolin.idv.tw/devtools/port-hubot-from-Coffescript-to-ES6"/>
        <updated>2016-03-14T08:31:46.000Z</updated>
        <summary type="html"><![CDATA[Hubo]]></summary>
        <content type="html"><![CDATA[<p><a href="https://www.flickr.com/photos/franzbrandtwein/210333714/in/photolist-jA1Tm-7zsdd5-c3S9RY-6nV3Rp-96h4Vx-of3ttt-38gqh7-gmHXQv-dVEbJF-7E2T3H-HtFB3-robohy-druZRm-nrF4vh-HtFAN-7Dk3uW-pkMp7E-qpn51r-67WHcz-dmkogt-AkVdM-951oFH-af6bdQ-igcWis-bw1gLG-6ZkGsP-r3KjtA-aojgSy-qXYEst-ckHzAN-97rv7G-qfi5f6-bu6G96-4mdWDR-62fyWi-qgcVh4-89o3px-8AKiYq-Xb2wh-5K91Q3-rwerig-i19QiK-7jGYc7-2Pc3VK-bNBoUp-9RDmqK-9iEDUt-kb1z7K-dwYP4H-pN2djS" target="_blank" rel="noopener noreferrer" title="Hubo"><img loading="lazy" src="https://farm1.staticflickr.com/91/210333714_cccff3a76f.jpg" alt="Hubo" class="img_ev3q"></a> </p><p>(<a href="/code/How-we-ported-Hubot-from-Coffeescript-to-ES6">English Version available here</a>）</p><p>用兩周多的時間，路路續續把原本用 <a href="http://coffeescript.org/" target="_blank" rel="noopener noreferrer">Coffeescript</a> 撰寫的 <a href="https://github.com/github/hubot" target="_blank" rel="noopener noreferrer">Hubot</a> 聊天機器人框架移植成使用到 ES6 特性的純 Javascript 版本。
現在這個移植版本已經可供使用。移植後依然可以使用 Hubot 原來以 Coffeescript 撰寫的各種擴充套件 (Plugins) 。
<a href="https://github.com/gasolin/webbybot" target="_blank" rel="noopener noreferrer">https://github.com/gasolin/webbybot</a>
(目前的版本完全移植 Hubot 的功能，已開 <a href="https://github.com/github/hubot/issues/1138#issue-138031128" target="_blank" rel="noopener noreferrer">Issue</a> 詢問 Hubot 是否有興趣 merge 回去，在此之前先放在自己的 webbybot repo 裡)
移植的動機之一是為了了解整個聊天機器人框架，為後續可能的修改打基礎。
其二則是嘗試平常不常用到的 ES6 新特性。
過去 Coffeescript 和 <a href="http://www.typescriptlang.org/" target="_blank" rel="noopener noreferrer">Typescript</a> 等最終編譯成 Javascript 執行的語言，都走在 Javascript 之前，提供了許多語法上的新特性。但在 2015 年 Javascript 開始的新發佈規劃 (一年一版) 下，ES6 (ES2015) 已將 Coffescript 眾多特性都收編了。且現在透過 <a href="http://babeljs.io/" target="_blank" rel="noopener noreferrer">Babel</a> 可以將 ES6 編譯成現有的 Javascript 直譯器能讀懂的語法。在這樣的趨勢下，過去開發者想為這些新特性多學一套語言的誘因就不再存在了。
移植過程中採用的作法與遇到了一些坑，在此一一列出來。
<strong>1<!-- -->.<!-- --> 不用 grunt gulp, 直接使用 npm script</strong>
在 package.json 裡可以直接在 "script" 屬性中定義一些要執行的腳本，例如 webbybot 透過 "npm run build" 來將 ES6 轉換成 Javascript 直譯器能讀懂的語法。用 “npm run lint" 來做 style check。
<strong>2<!-- -->.<!-- --> 不用 webpack, 直接使用 babel</strong>
移植之初決定使用 webpack 的 babel loader 來轉換 ES6，但這是一連串從「錯誤中學習」的開始。 webpack 支援使用 require 命令載入各種檔案，而且 webpack 在轉換的過程中會將檔案打包成一份。但後端程式其實不太需要打包，而且 Hubot 作為一個框架，執行後從外部讀取 Plugin 是非常重要的功能。 使用 webpack 時，它會將程式中出現的 require 都視為它的 require，而嘗試從打包好的檔案中找到我們需要的外部 plugin，結果是徒勞的。當我們換用 npm script 直接呼叫 babel-cli 來打包，原來使用 webpack 時出現的諸多問題也都一併解決了。
<strong>3<!-- -->.<!-- --> 該不該 return</strong>
在移植的過程中常用到的工具是 <a href="http://coffeescript.org/" target="_blank" rel="noopener noreferrer">Coffeescript</a> 官網的 "Try Coffeescript" 分頁。可以即時將 Coffeescript 結果轉換成 Javascript。 但是真的把程式碼貼上去會發現， Coffeescript 所轉出來的 Javascript 所有的函式都會回傳值。需要手工一個個確認。
<strong>4<!-- -->.<!-- --> test cases</strong>
Hubot 本身有很完整的單元測試。所以每移植一支程式碼時，只要一併移植對應的單元測試，就可以捉對拿來直接測試。單元測試移植時出現最多該不該 return 的問題。
<strong>5<!-- -->.<!-- --> class and super</strong>
Hubot 使用了很多 Coffeescript 的 Class 語法。Class 與 super 的用法在 <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Classes" target="_blank" rel="noopener noreferrer">MDN</a> 上可以找到相關教學。
<strong>6<!-- -->.<!-- --> Default + Rest + Spread</strong>
Hubot 程式碼裡常常會出現諸如 reply (strings...) 的語法。Coffeescript 裡的 "strings..." 可以對應到 ES6 的 "...strings"（... 放置位置剛好相反）。
"...strings" 代表的是一個陣列。在程式中有時要展開有時不用，其實頗令人苦惱。<strong>7<!-- -->.<!-- --> 使用 for..of 替換 for.. in 迴圈</strong>
碰到 for..in 迴圈有幾種解法，最不會出錯的是將 Array iteration 改寫成 forEach。但是用 forEach ˇ的話無法在執行中使用 break/return 跳出是其缺點。其二是在 for..in 迴圈裡加入 hasOwnProperty 確認不會跑到無關的 function。
在 Webbybot 的第二版中已使用 ES6 支援的 <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for...of" target="_blank" rel="noopener noreferrer">for..of 迴圈</a> 來取代 forEach 和 for..in 迴圈。由於 for..of 迴圈只支援 iteratable ，不支援一般 Object，所以碰到要對 Object 跑迴圈時可以在 Object 外包一層 Object.keys，例如 `for (let item of Object.keys (TargetObj)) {...}
<strong>8<!-- -->.<!-- --> 使用 Object.assign 替換 Extend</strong></p><p>要擴展一個物件的功能不用再用 lodash 或是自己寫 extend 函式，直接用 <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign" target="_blank" rel="noopener noreferrer">Object.assign</a> 吧。</p><p>以上是移植過程中碰上的問題。感謝同事 Ray Lin 一起幫忙完成這次的移植。</p><p>現在 Webbybot (Hubot ES6 port) 整套都可以用 Javascript 寫了，歡迎試用或上 Patch 喔。</p><p></p>]]></content>
        <category label="javascript" term="javascript"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[人生如棋？或其實人生更像俄羅斯方塊]]></title>
        <id>https://blog.gasolin.idv.tw/life/rubic</id>
        <link href="https://blog.gasolin.idv.tw/life/rubic"/>
        <updated>2016-02-08T11:38:34.000Z</updated>
        <summary type="html"><![CDATA[前陣子在 Medium 上看到 Tor Bair 寫的 Your Life is Tetris, Stop playing it like Chess, 談到作者認為俄羅斯方塊比起棋局更接近人生。]]></summary>
        <content type="html"><![CDATA[<p>前陣子在 Medium 上看到<a href="https://medium.com/@TorBair" target="_blank" rel="noopener noreferrer"> Tor Bair</a> 寫的 <a href="https://medium.com/life-learning/your-life-is-tetris-stop-playing-it-like-chess-4baac6b2750d#.uhonynsf7" target="_blank" rel="noopener noreferrer">Your Life is Tetris, Stop playing it like Chess</a>, 談到作者認為俄羅斯方塊比起棋局更接近人生。</p><p>棋局是種非贏即輸的零和遊戲，而俄羅斯方塊則是不斷重複，幾乎不可能獲得最終勝利的遊戲。</p><p>作者的論點如下:</p><p>1<!-- -->.<!-- --> 人生中你唯一的對手是你自己</p><p>真實的人生遊戲是內化的，而不是靠向外找尋對手或打敗大魔王來獲取積分。 </p><p>2<!-- -->.<!-- --> 人生中，事情不會變得更難，只會變得更快 </p><p>3<!-- -->.<!-- --> 人生中，你無法控制接下來會發生什麼</p><p>你只知道下一個拿到的方塊是什麼，你只能活在當下，試著組織起最好的結果。</p><p>4<!-- -->.<!-- --> 人生中，沒有人告訴你什麼時候你贏了</p><p>不是為了贏而遊戲，而是為了樂趣而遊戲。</p><p>"人生如俄羅斯方塊"，實在是很有趣的人生觀阿！</p>]]></content>
        <category label="life" term="life"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[2015完食的書]]></title>
        <id>https://blog.gasolin.idv.tw/life/2015-reading-summary</id>
        <link href="https://blog.gasolin.idv.tw/life/2015-reading-summary"/>
        <updated>2016-01-03T16:49:00.000Z</updated>
        <summary type="html"><![CDATA[2013，2014年都曬過書架，今年繼續獻曝。（今年能紀錄的共讀 115 本，23539頁），63本是電子書（54%），比例首次超過實體書。不過這也許是因為更多原本線上的小說也出了實體書，讓我也得以紀錄下來的關係？]]></summary>
        <content type="html"><![CDATA[<p><a href="/life/2013-reading-summary">2013</a>，<a href="/life/2014-reading-summary">2014</a>年都曬過書架，今年繼續獻曝。（今年能紀錄的共讀 115 本，23539 頁），63 本是電子書（54%），比例首次超過實體書。不過這也許是因為更多原本線上的小說也出了實體書，讓我也得以紀錄下來的關係？  </p><p>來曬一下今年看過的書，順便從中推薦些好書（由近至遠）  </p><p></p><p>今年的開始似乎是從 Remote Work (中國譯做 重來 2) 開始，看看知名團隊如何遠端工作還蠻新鮮的。  </p><p><a href="http://www.anobii.com/books/%E5%9C%98%E9%9A%8A%E4%B9%8B%E7%BE%8E/9789862763834/01bec6368eddaffedb/" target="_blank" rel="noopener noreferrer">團隊之美</a><br>
<!-- -->讓我觸動最深的一句話是：「好工具的關鍵不是說不再需要人們，而是讓人們更快樂。」  </p><p><a href="http://www.anobii.com/books/%E7%9F%BD%E8%B0%B7%E4%B9%8B%E7%81%AB/011bbad6661a3c2a05/" target="_blank" rel="noopener noreferrer">矽谷之火</a><br>
<!-- -->全本在 kindle 上看完的矽谷歷史書，  </p><p>「西部人認為自己是一往無前的牛仔，失敗對於他們來說，不過是一種更快速的獲取經驗的途徑罷了。」  </p><p>看那些媒體沒告訴我們的個人電腦史，看那些湮沒在時間中，對個人電腦發展留下貢獻的人們。相當精彩  </p><p>之後看的 <a href="http://www.anobii.com/books/%E9%BB%91%E5%AE%A2%E5%88%97%E5%82%B3/9789862764633/01e878decc7781a7d8/" target="_blank" rel="noopener noreferrer">黑客列傳</a> 也還可以，沒這本驚豔。  </p><p></p><p>食戟之靈<br>
<!-- -->無論是作者或繪者都超認真地構思與呈現符合每個選手風格的料理  </p><p><a href="http://www.anobii.com/books/%E8%90%AC%E6%9B%86%E5%8D%81%E4%BA%94%E5%B9%B4/9789578876019/0096082bd3cbecc848/" target="_blank" rel="noopener noreferrer">萬曆十五年</a><br>
<!-- -->禁得起時間考驗，已出版經年的書，讀來還是精彩  </p><p><a href="http://www.anobii.com/books/%E9%A0%82%E5%B0%96%E6%A5%AD%E5%8B%99%E5%93%A1%E9%83%BD%E5%9C%A8%E7%94%A8%E7%9A%843T%E7%AD%86%E8%A8%98%E8%A1%93/9789862352557/014c403d32d3210a10/" target="_blank" rel="noopener noreferrer">頂尖業務員都在用的 3T 筆記術</a>  </p><p>雖然標題聳動，但內容卻意外地紮實。  </p><p>書中講到業務要做好的兩個要件：<br>
<strong>思考</strong>：不斷思考「接下來該做什麼？怎麼做會比較好？」</p><p><strong>行動</strong>：採取確切行動。</p><p></p><p>和小朋友一起讀童書其實很有趣。當一本書翻多遍時，你可以從中找到許多觀察與講述的方法。</p><p></p><p>&nbsp;<a href="http://www.anobii.com/books/%E5%BE%9E0%E5%88%B01/9789862419533/01556708753fb327ce/" target="_blank" rel="noopener noreferrer">從 0 到 1</a>  </p><p>「今天的任務是找到獨一無二的方法創造新事物，不只讓未來變得不一樣，而且要更好，所以我們要從 0 到 1。最重要的第一步是自己獨立思考。唯有重新看待世界，像古人首次見到它那樣覺得新鮮古怪，我們才能重新創造，並將更好的未來留給後世。」  </p><p>我們已經漸漸實現了過去所想像的未來。現在需要的，是從過去的經驗中，尋找出我們對下個未來的想像。  </p><p><a href="http://www.anobii.com/books/%E5%85%88%E8%AE%93%E8%8B%B1%E9%9B%84%E6%95%91%E8%B2%93%E5%92%AA/9789868980266/01b4452dd6382b5ed6/" target="_blank" rel="noopener noreferrer">先讓英雄救貓咪</a>  </p><p>之前看電影類 yy 小說時反覆被提到的編劇聖經  </p><p>一個人的會議時間<br>
<!-- -->我還是頗愛看個人時間管理相關的書  </p><p></p><p><a href="http://www.anobii.com/books/%E5%83%B9%E5%80%BC%E4%B8%BB%E5%BC%B5%E5%B9%B4%E4%BB%A3/9789863980605/01a2edb53458fce6d8/" target="_blank" rel="noopener noreferrer">價值主張年代</a><br>
<!-- -->Business Canvas 作為經常被提及與使用的工具，這本書其實不太好讀  </p><p>今年應該會找日本作者寫的「圖解獲利世代」 看看。  </p><p><a href="http://www.anobii.com/books/%E5%A4%B1%E6%8E%A7/9787513300711/01de5511185a555c58/" target="_blank" rel="noopener noreferrer">失控</a>  </p><p>1980 年的大部頭舊書，把人與科技合在一起，當作一個有機生物體來觀察它的發展的想法值得思考。我們現在把手機，Siri 或運用網路的能力視為人的一部分，還能看到個體間更大的差異。  </p><p><a href="http://www.anobii.com/books/%E6%B2%B3%E5%9C%96%E6%B4%9B%E6%9B%B8%E5%89%8D%E5%82%B3/9789862727355/01e4d23f398bd4e8fe/" target="_blank" rel="noopener noreferrer">河圖洛書前傳</a><br>
<!-- -->提到中國上古文化裡其實是有數位基因的，不論真實性如何，就算當作小說看，這樣的立論也很有趣。  </p><p><a href="http://www.anobii.com/books/%E8%A8%88%E6%99%82%E5%99%A8%E8%AE%80%E6%9B%B8%E6%B3%95/9789866151651/017c544b43968941fe/" target="_blank" rel="noopener noreferrer">計時器讀書法</a><br>
<!-- -->15min 一段專注力的週期 + 3min 最後的跳躍。<br>
<!-- -->保持非整數時間，讓人有強迫繼續補完的動力，不強制休息時間，讓實行起來更不困難。<br>
<!-- -->都是高明的心理技巧。  </p><p>這本小書一看完，馬上將手機的倒數計時器設成 18 分鐘。  </p><p></p><p><a href="http://www.anobii.com/books/%E4%B8%8D%E8%B3%A3%E6%9D%B1%E8%A5%BF%EF%BC%8C%E8%B3%A3%E9%AB%94%E9%A9%97/9789862418505/01759dee9b65b0e846/" target="_blank" rel="noopener noreferrer">不賣東西，賣體驗</a><br>
<!-- -->「這名女性真正想要的並不是卡地亞 Tank Francaise 腕錶這項「商品」，她要的是在聖誕夜，男朋友陪她到銀座卡地亞總店，在裝潢華麗的店裡，接受女店員恭敬的服務，買下女店員用戴著白手套的手，從盒子裡取出的 Tank Francaise 腕錶的那份 ' 體驗 '。」  </p><p>光看這段就有顛覆三觀之效  </p><p><a href="http://www.anobii.com/books/%E7%82%BA%E4%BB%80%E9%BA%BC%E8%81%B0%E6%98%8E%E4%BA%BA%E9%83%BD%E7%94%A8%E6%96%B9%E6%A0%BC%E7%AD%86%E8%A8%98%E6%9C%AC%EF%BC%9F/9789861753805/017762dcc8455ff042/" target="_blank" rel="noopener noreferrer">為什麼聰明人都用方格筆記本？</a><br>
<!-- -->看了後腦波很弱地馬上去買了方格筆記本來用。目前使用尚稱順暢。  </p><p><a href="http://www.anobii.com/books/%E6%9C%89%E6%B2%92%E6%9C%89XXX%E7%9A%84%E5%85%AB%E5%8D%A6/9789869147644/01a90ff646c6a6798f/" target="_blank" rel="noopener noreferrer">有沒有 XXX 的八卦</a><br>
<!-- -->書名不正經，但內容出乎意料的充實  </p><p><a href="http://www.anobii.com/books/SCRUM/9789863207146/014dea631355a32031/" target="_blank" rel="noopener noreferrer">SCRUM&nbsp;</a><br>
<!-- -->將敏捷開發法用在各行各業。  </p><p>有人說過「所有的模型都是錯的，但有些比較好用 (All models are wrong; but some are useful)」，這本有詳細地講解目前科技圈最愛說自己有在用的 SCRUM 開發方法。  </p><p>小結：  </p><p>21 世紀，書也已經不是唯一獲取知識的方式。也許該綜合一下，若有方便的方法，也應該把看過的電影 / 按贊過的 Youtube 影片 / SlideShare 等也列一列。</p>]]></content>
        <category label="life" term="life"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Setup Firefox OS (Gaia) on Ubuntu 15.10]]></title>
        <id>https://blog.gasolin.idv.tw/mozilla/Setup-Firefox-OS-Gaia-on-Ubuntu-15-10</id>
        <link href="https://blog.gasolin.idv.tw/mozilla/Setup-Firefox-OS-Gaia-on-Ubuntu-15-10"/>
        <updated>2015-11-13T09:18:37.000Z</updated>
        <summary type="html"><![CDATA[I got my Dell XPS 13 (9343) for a while and decide to install Ubuntu 15.10 as duel boot.]]></summary>
        <content type="html"><![CDATA[<p>I got my Dell XPS 13 (9343) for a while and decide to install Ubuntu 15.10 as duel boot.</p><p>By following the <a href="http://hgdev.co/install-ubuntu-15-10-on-the-dell-xps-13-9343-2015-a-complete-guide/" target="_blank" rel="noopener noreferrer">guide</a> its pretty easy to get a Ubuntu environment.
To setup my daily develop environment, I take the <a href="https://github.com/gasolin/foxbox/blob/master/scripts/setup_ubuntu_14_04.sh" target="_blank" rel="noopener noreferrer">foxbox setup script</a> for 14.04 and everything works fine.</p><p>So for windows user who want develop FirefoxOS gaia with real device, I recommend you try <a href="https://github.com/gasolin/foxbox/" target="_blank" rel="noopener noreferrer">foxbox</a> first. If you have more commitment, install the Ubuntu. With duel boot you can keep windows and have a more developer friendly environment to develop connecting devices.</p>]]></content>
        <category label="FirefoxOS" term="FirefoxOS"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Quick Settings Enhancement Addon]]></title>
        <id>https://blog.gasolin.idv.tw/tools/Quick-Settings-Enhancement-Addon</id>
        <link href="https://blog.gasolin.idv.tw/tools/Quick-Settings-Enhancement-Addon"/>
        <updated>2015-10-15T07:47:04.000Z</updated>
        <summary type="html"><![CDATA[As the Firefox OS Settings Peer, I still feel its not efficient to toggle everything in Settings, because it needs too many steps such as: 1\. Open Settings app, 2\. Find proper item, which may located in sub panels, 3\. Do the action with that setting.]]></summary>
        <content type="html"><![CDATA[<p>As the Firefox OS Settings Peer, I still feel its not efficient to toggle everything in Settings, because it needs too many steps such as: 1<!-- -->.<!-- --> Open Settings app, 2<!-- -->.<!-- --> Find proper item, which may located in sub panels, 3<!-- -->.<!-- --> Do the action with that setting.</p><p>During hackthon in Taipei last month, Yifan and I made the Quick  Settings Enhancement Addon, and now its available on marketplace (within  the :debug mode).</p><p>How it looks like?</p><p></p><p>The  addon add plenty of Settings switch(NFC, Internet Sharing,  Lock Orientation, Battery Saving Mode, Geolocation, Enable USB Storage),  Settings shortcut (Developer panel configs), Power menu shortcut  (Silence Incomming Calls) and.....the <strong>Flashlight</strong> to quick settings menu!</p><p>We  also found it will take a lot of estate of your utility tray, so FYR  we'd propose a <code>at most 2 clicks</code> mockup to handle those quick settings.</p><p></p><p>The codebase is at <a href="https://github.com/gasolin/fxos-quick-settings" target="_blank" rel="noopener noreferrer">https://github.com/gasolin/<wbr>fxos-quick-settings</a>
Welcome to contribute.</p>]]></content>
        <category label="FirefoxOS" term="FirefoxOS"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[FoxBox 1.0, 讓你在一個小時內不痛安裝 Firefox OS 開發環境的設定工具]]></title>
        <id>https://blog.gasolin.idv.tw/mozilla/FoxBox-1-0-install-Firefox-OS-devtool-within-1hr</id>
        <link href="https://blog.gasolin.idv.tw/mozilla/FoxBox-1-0-install-Firefox-OS-devtool-within-1hr"/>
        <updated>2015-08-24T07:36:58.000Z</updated>
        <summary type="html"><![CDATA[Here she is!!]]></summary>
        <content type="html"><![CDATA[<p><a href="https://www.flickr.com/photos/28289659@N02/10351341274/in/photolist-gLHk8h-6APwhj-4YvKGJ-ihTTs-qZVwX-fuUaX-4ASwRM-9oMyXk-dSR5cF-48JtWV-4vdwk-jjtzT-gGH6oD-6bKC3Y-3Q3qEf-ca5nA-oX9UA-5Ru4vz-5QspRU-oX9UD-WjG4s-4XyTBp-cvqpf-6zQq15-yyNQz-neBzbT-JUMsA-xXPgM-64z6MY-7iQZE6-8qAQD-evarx-5pnwJx-b8G1-8FXLE7-9g9Cz-5AdgA8-9pWBQW-9emKCP-8xYpgz-6dfyXp-9zmfZR-PsAt-tDXdo-HLxuZ-8xYpdZ-8y2qLq-6BmmRm-5aKDea-2cxh9L" target="_blank" rel="noopener noreferrer" title="Here she is!!"><img loading="lazy" src="https://farm8.staticflickr.com/7323/10351341274_ded5f4d043.jpg" alt="Here she is!!" class="img_ev3q"></a><script charset="utf-8" src="//embedr.flickr.com/assets/client-code.js"></script></p><p>要開始開發 Firefox OS 的 Web 端（Gaia），並不像開發一般網站一樣那麼容易。在開始改網頁之前，通常要把相關的<a href="https://developer.mozilla.org/en-US/Firefox_OS/Building_and_installing_Firefox_OS" target="_blank" rel="noopener noreferrer">開發文件</a>讀一遍 / 試一遍，才能順利把開發環境設定好。
而把環境設定好可能已經花了半天時間，這時原本想要改程式的精力也所剩不多了。</p><p>去年有感於此，花了些時間整合了一套快速設定 Firefox OS 開發環境的工具「<a href="https://github.com/gasolin/foxbox" target="_blank" rel="noopener noreferrer">FoxBox」</a>，透過 <a href="https://www.virtualbox.org/" target="_blank" rel="noopener noreferrer">Virtualbox</a> 虛擬機與  <a href="https://www.vagrantup.com/" target="_blank" rel="noopener noreferrer">vagrant</a> 自動化工具來達成自動部署 Gaia 的開發環境。最近把 <a href="https://github.com/gasolin/foxbox" target="_blank" rel="noopener noreferrer">FoxBox</a> 基礎作業系統版本升級了一下（使用 Ubuntu 14.04LTS），在 Macbook 或 Ubuntu 桌面電腦上，只需用一個小時左右的時間，就可以自動安裝好整套開發環境。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="vagrant-vm-的優點">Vagrant<!-- -->&nbsp;<!-- -->+ VM 的優點<a href="#vagrant-vm-的優點" class="hash-link" aria-label="Direct link to vagrant-vm-的優點" title="Direct link to vagrant-vm-的優點">​</a></h3><p>使用 Vagrant 搭配虛擬機（VMWare 或免費的 Virtualbox）的好處多多，其一是簡化了開發環境的需求，由於主流的作業系統（Windows，Mac，Ubuntu/RedHat）都支援虛擬機，透過在虛擬機上使用單一的作業系統，可以大幅簡化安裝指令。
其二則是自動化安裝，透過 Vagrantfile 指定要執行的指令 （放在 scripts 資料夾下），最後跑出來的結果只有安裝成功一種。如果失敗了表示自動安裝的指令沒寫好，初級開發者不用在環境安裝時就強迫得學太多細節。
其三是開發環境隔離，命令都跑在 VM 中，在之後開發或升級的過程中出現任何問題，隨時都可以重新建立一個乾淨的開發環境。</p><p>使用 <a href="https://github.com/gasolin/foxbox" target="_blank" rel="noopener noreferrer">FoxBox</a> 這套開發環境設定工具，當其他人碰到問題時，也可以更容易地重現問題。</p><p>透過 Vagrant 設定，<a href="https://github.com/gasolin/foxbox" target="_blank" rel="noopener noreferrer">FoxBox</a> 提供實體機與虛擬機共享檔案夾，並支援 USB 實機偵錯。</p><p>雖然開發環境隔離，但是<a href="https://github.com/gasolin/foxbox" target="_blank" rel="noopener noreferrer"> FoxBox</a> 預設的設定即提供實體機與虛擬機共享檔案夾。裝好開發環境後，你依然可以使用目前作業系統上自己習慣的編輯器來修改程式碼，然後在 VM 中執行命令。</p><p><a href="https://github.com/gasolin/foxbox" target="_blank" rel="noopener noreferrer">FoxBox</a> 預設也將 USB port 串接到 VM 中，所以在 VM 中也可以直接接收到實機的偵錯訊息 。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="設定的流程">設定的流程<a href="#設定的流程" class="hash-link" aria-label="Direct link to 設定的流程" title="Direct link to 設定的流程">​</a></h3><p>連上網路，在主機上執行以下命令</p><blockquote><p>$ git clone <a href="https://github.com/gasolin/foxbox.git" target="_blank" rel="noopener noreferrer">https://github.com/gasolin/foxbox.git</a>
$ cd foxbox
$ ./configure.sh
除了開始時需要指定網路介面卡，並輸入主機的密碼（用來和虛擬機共享檔案夾）外，其中大部分的流程都是自動化的。</p></blockquote><p>當 VM 跑起來後，登入 VM（帳號 / 密碼為 vagrant/vagrant）並執行以下命令：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">&gt; $ gaia_init.sh</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; $ cd gaia</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; $ make`</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>即可順利編譯好 Firefox OS 的 Web 端（Gaia）程式碼囉！</p>]]></content>
        <category label="FirefoxOS" term="FirefoxOS"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[JSDoc generator in Gaia]]></title>
        <id>https://blog.gasolin.idv.tw/mozilla/JSDoc-generator-in-Gaia</id>
        <link href="https://blog.gasolin.idv.tw/mozilla/JSDoc-generator-in-Gaia"/>
        <updated>2015-06-08T02:47:26.000Z</updated>
        <summary type="html"><![CDATA[Last week I've post on dev-gaia to notice the change of JSDoc generator.]]></summary>
        <content type="html"><![CDATA[<iframe allowfullscreen="" frameborder="0" height="333" mozallowfullscreen="" msallowfullscreen="" oallowfullscreen="" src="https://www.flickr.com/photos/martino_/9737982315/in/photolist-fQvGSP-amDaFg-amG2rb-59b4Yy-5vWMzf-f8qaks-hxt2tZ-9vy7L8-hD4KYt-edj5U8-4GZkRV-edj3BF-oKVYK7-edpEGS-edjc8T-f8brp4-dm5RTi-7SGqv8-8cxsHY-991Tu5-hAXRh8-fgMMhj-jjR181-4EySgF-fwa9zL-cAtxiU-7HKgV-9VMUi1-h4tqKg-ej3JDk-azMMwP-8p6YBM-akKnga-91AQhf-2j7XBh-pGxPMD-bTBf44-mSJdMU-ixg1hh-jd1NvW-fvUZYz-fvUXbP-7kpHpC-91xGz8-91AQ7b-hD3SUB-tf8mBc-gYsCxY-j7WsYW-ixg9AZ/player/" webkitallowfullscreen="" width="500"></iframe><p>Last week I've <a href="https://groups.google.com/forum/#!topic/mozilla.dev.gaia/UI1uL7ukedo" target="_blank" rel="noopener noreferrer">post</a> on dev-gaia to notice the change of JSDoc generator.</p><p>Now gaia's jsdoc generator takes standard  jsdoc config format from each app's jsdoc.json file. And app owner could  customize its look and feel if they prefer to do so.
<a href="http://usejsdoc.org/about-configuring-jsdoc.html" target="_blank" rel="noopener noreferrer">http://usejsdoc.org/about-<wbr>configuring-jsdoc.html</a></p><p>Here's the working jsdoc for Firefox OS settings app <a href="http://gasolin.github.io/gaia/settings/" target="_blank" rel="noopener noreferrer">http://gasolin.github.io/gaia/settings/ .</a></p><p></p><p>The trick is done by <a href="http://gulpjs.com/" target="_blank" rel="noopener noreferrer">gulp</a> and shell commands, which can be apply on any other projects. Here's how I did it.</p><p>First of all is install required packages</p><blockquote><p>$ npm install gulp gulp-shell jsdoc --save-dev
Then open <code>gulpfile.js</code> and add following scripts:</p></blockquote><blockquote><p>var gulp = require('gulp');
var shell = require('gulp-shell');</p><p>gulp.task('jsdoc', shell.task(<!-- -->[
<!-- -->&nbsp;<!-- --> './node_modules/jsdoc/jsdoc.js -c jsdoc.json'
]<!-- -->));
(It's an simplified version because gaia contains 20+ web apps in it, so I add some tree-walking code to create bunch of gulp tasks. But basically its the same)
The simplified version is now available for reuse in <a href="https://github.com/webapplate/webapplate/blob/master/gulpfile.js" target="_blank" rel="noopener noreferrer">webapplate</a>.</p></blockquote><p>Bonus section:</p><p>Here's how I upload jsdoc (<a href="http://gasolin.github.io/gaia/settings/" target="_blank" rel="noopener noreferrer">http://gasolin.github.io/gaia/settings/</a> , <a href="http://gasolin.github.io/gaia/system/" target="_blank" rel="noopener noreferrer">http://gasolin.github.io/gaia/system/</a>) to github gh pages.</p><p>Add another section in gulpfile.js with following script</p><blockquote><p>var gulp = require('gulp');
var ghPages = require('gulp-gh-pages');</p><p>...</p><p>gulp.task('github', <!-- -->['jsdoc']<!-- -->, function() {
<!-- -->&nbsp;<!-- --> return gulp.src('./docs/*<em>/</em>')
<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- --> .pipe(ghPages());
});
Run <code>gulp github</code> command and the build tool will generate jsdoc and upload to github page automatically.</p></blockquote>]]></content>
        <category label="FirefoxOS" term="FirefoxOS"/>
        <category label="webframework" term="webframework"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Javascript，征服世界是可能的嗎？]]></title>
        <id>https://blog.gasolin.idv.tw/code/Javascript-conquer-the-world</id>
        <link href="https://blog.gasolin.idv.tw/code/Javascript-conquer-the-world"/>
        <updated>2015-06-01T01:59:00.000Z</updated>
        <summary type="html"><![CDATA[幾週前在 Modern Web 2015 分享了以「Javascript，征服世界是可能的嗎？」為主題的演講。]]></summary>
        <content type="html"><![CDATA[<iframe allowfullscreen="" frameborder="0" height="333" mozallowfullscreen="" msallowfullscreen="" oallowfullscreen="" src="https://www.flickr.com/photos/45105801@N00/3155765131/in/photolist-5NS82D-ndXzjY-4tx43p-7D9kWt-7R6Xja-rGcPhd-jDuDgs-qi74Jg-6dyo33-9gMi93-8ysTVT-cJsDz1-6GqHmM-4eM4Lx-5TNATX-hPumrP-mJmtqo-Dy7Vj-ifw27L-cSWwrN-5FA8cS-5kCHWk-oewDty-6VrrnL-aGMKQ6-6cCum8-fqcxCM-nDV5Uf-gRPYTf-oVKnsH-8sm4i-7DQd1m-tMFF6-oc7Mkp-r1tzm5-98tKJC-3izzBF-bZgYwW-tkjuP-rfPw3d-pCKTDs-cSWw6j-aePnVP-8rFCc5-4NEf9t-ctbu61-c3F1uh-cVGi8E-9weFPo-c2sJ3U/player/" webkitallowfullscreen="" width="500"></iframe><p>幾週前在 Modern Web 2015 分享了以「Javascript，征服世界是可能的嗎？」為主題的演講。  </p><p>演講主題靈感來自於 <a href="https://medium.com/@slsoftworks/javascript-world-domination-af9ca2ee5070" target="_blank" rel="noopener noreferrer">The JavaScript World Domination</a> 一文。  </p><p>原本想用編年史的形式表現，一直發展到演講的前幾天，才演變成最終使用的形式。  </p><iframe src="//www.slideshare.net/slideshow/embed_code/key/4B9FXZPp09tJpN" width="595" height="485" frameborder="0" marginwidth="0" marginheight="0" scrolling="no"> </iframe><p></p><p>公布講題後，一些人先跑來問我 JS 是不是真的可能征服世界。<br>
<!-- -->我能理解大家想要知道最終的答案迫切。但其實大多數時候，聽別人的預測，還是不準確的比率更高。  </p><p>就我而言，了解別人推論的過程，與他所引用的資料，會影響我對他預測結果的信賴度。哪些資訊是我所不知道的（秘密），哪些是我知道但沒有意識到與推斷目標關聯性的。從推敲的過程中，我可以學到一些新東西，也可以產生一些新想法。這樣的過程比偷看答案有趣地多。  </p><p>這份投影片裡面分享了四個 JS 征服世界的秘密，你是否已經知道？我的觀察跟你的觀察一致嗎？有沒有什麼其他你觀察到的秘密想分享哩？  </p><p></p>]]></content>
        <category label="webapp" term="webapp"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Dogfooding FxOS 2.2 one more month]]></title>
        <id>https://blog.gasolin.idv.tw/tools/Dogfooding-FxOS-2-2-one-more-month</id>
        <link href="https://blog.gasolin.idv.tw/tools/Dogfooding-FxOS-2-2-one-more-month"/>
        <updated>2015-03-11T03:24:32.000Z</updated>
        <summary type="html"><![CDATA[I've finished another iteration of dogfooding with Firefox OS 2.2\. This is the version by far I'm pretty enjoy to use in daily base, without a backup Android phone.]]></summary>
        <content type="html"><![CDATA[<iframe allowfullscreen="" frameborder="0" height="333" mozallowfullscreen="" msallowfullscreen="" oallowfullscreen="" src="https://www.flickr.com/photos/brian_ford/496522609/player/" webkitallowfullscreen="" width="500"></iframe><p>I've finished another iteration of dogfooding with Firefox OS 2.2<!-- -->.<!-- --> This is the version by far I'm pretty enjoy to use in daily base, without a backup Android phone.</p><p>Since my main usage of smart phone is browsing news and web sites, the new Browser frame serves me well.</p><p>The edge swiping is still awesome. Swipe left to right or vice versa from the off screen is more efficient than task manager.</p><p>In task manager, a small <code>close</code> button in bottom left of each card, make a more intuitive way to clean a web app.</p><p>Some web app made the dogfood more easier.</p><ul><li><p><a href="https://marketplace.firefox.com/app/feedspider?src=search" target="_blank" rel="noopener noreferrer">FeedSpider</a>: The news feed via feedly</p></li><li><p>Social</p></li><li><p>Facebook and Twitter: Browse their web site, then add them on Homescreen*   Map</p></li><li><p>Google Map:<!-- -->&nbsp;<!-- -->  Browse the web site, then add it on Homescreen*   Note taking
The last thing I want to have is the bookmark sync.</p></li></ul><p>Since the dogfooding experience is so positive, I'll challenge with dogfooding nightly build in next month.</p>]]></content>
        <category label="FirefoxOS" term="FirefoxOS"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Future proved Javascript and CSS]]></title>
        <id>https://blog.gasolin.idv.tw/devtools/Future-proved-Javascript-and-CSS</id>
        <link href="https://blog.gasolin.idv.tw/devtools/Future-proved-Javascript-and-CSS"/>
        <updated>2015-02-28T17:42:32.000Z</updated>
        <summary type="html"><![CDATA[This time, its different. The transpilers are build-time polyfills that fill the gap of current browser/server implementation and the newest JS/CSS specs.]]></summary>
        <content type="html"><![CDATA[<iframe allowfullscreen="" frameborder="0" height="440" mozallowfullscreen="" msallowfullscreen="" oallowfullscreen="" src="https://www.flickr.com/photos/ikimuled/16354509187/in/pool-backtothefuture/player/" webkitallowfullscreen="" width="500"></iframe><p><a href="https://babeljs.io/" target="_blank" rel="noopener noreferrer">This time, its different</a>. The transpilers are build-time polyfills that fill the gap of current browser/server implementation and the newest JS/CSS specs.</p><p>Transpilers trans-compile Javascript and CSS to current workable version, so developers could be more productive with JS/CSS latest features and transpilers would translate them into current supported version of code.</p><p>From my opinion the most useful es6 feature is <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Arrow_functions" target="_blank" rel="noopener noreferrer">arrow functions</a> (=<!-- -->&gt;<!-- -->) which comes from coffeescript. This syntax sugar bind the this value automatically, so developer wont forgot the binding anymore.</p><p>The original code is</p><div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">function</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  ‘use strict’</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token dom variable" style="color:#36acaa">document</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">addEventListener</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">‘DocumentLocalized’</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     </span><span class="token comment" style="color:#999988;font-style:italic">// App.init();</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">bind</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>We can use arrow function to replace <code>function() {}.bind(this)</code> to <code>() =&amp;gt; {}</code></p><div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">function</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  ‘use strict’</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token dom variable" style="color:#36acaa">document</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">addEventListener</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">‘DocumentLocalized’</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     </span><span class="token comment" style="color:#999988;font-style:italic">// App.init();</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Currently the arrow functions <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Arrow_functions#Browser_compatibility" target="_blank" rel="noopener noreferrer">only default enabled on Firefox</a>. So developer could not use this directly on their project. With <a href="https://babeljs.io/" target="_blank" rel="noopener noreferrer">babel</a> javascript transpiler the js could be translated to current workable version automatically.</p><div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">function</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  ‘use strict’</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token dom variable" style="color:#36acaa">document</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">addEventListener</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">‘DocumentLocalized’</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     </span><span class="token comment" style="color:#999988;font-style:italic">// App.init();</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>The transpiler will know the content does not need 'this' reference and skip the binding. Note the Javascript transpiler still stick into <a href="http://vanilla-js.com/" target="_blank" rel="noopener noreferrer">vanilla javascript</a>. It does not invent new syntax, but it make new specs could be used or experiment in current environment.</p><p>From CSS perspective, <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/Using_CSS_variables" target="_blank" rel="noopener noreferrer">CSS variables</a> brings variables into CSS. Pre-define some color and use everywhere on project is possible.</p><p>The origin style is</p><div class="language-css codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-css codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token selector" style="color:#00009f">a</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token property" style="color:#36acaa">color</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token hexcode color">#847AD1</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token selector" style="color:#00009f">pre</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token property" style="color:#36acaa">padding</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">10</span><span class="token unit">px</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>It's frustrated when the stylesheets expand larger and we need to change the new color or size everywhere.</p><p>We can use CSS variables to predefine the changeable stuff into pseudo ':root' element.</p><div class="language-css codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-css codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token selector pseudo-class" style="color:#00009f">:root</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token property" style="color:#36acaa">–maincolor</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token hexcode color">#847AD1</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token property" style="color:#36acaa">–size</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">10</span><span class="token unit">px</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token selector" style="color:#00009f">a</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token property" style="color:#36acaa">color</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">var</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">–maincolor</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token selector" style="color:#00009f">pre</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token property" style="color:#36acaa">padding</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">var</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">–size</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Looks good. But the same situation occurred. Currently the CSS variables <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/Using_CSS_variables#Browser_compatibility" target="_blank" rel="noopener noreferrer">only support on Firefox</a>. So developer could not use this directly on their project. With <a href="http://www.myth.io/" target="_blank" rel="noopener noreferrer">myth</a> CSS transpiler the CSS could be translated to current workable version automatically.</p><div class="language-css codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-css codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token selector" style="color:#00009f">a</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token property" style="color:#36acaa">color</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token hexcode color">#847AD1</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token selector" style="color:#00009f">pre</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token property" style="color:#36acaa">padding</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">10</span><span class="token unit">px</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Note the CSS transpiler still stick into CSS specs. It does not invent new syntaxes like LESS or SASS does. It just make new CSS specs could be used or experiment in current environment.</p><p>Besides the feature polyfill, running transpiler before deploy also help developer catch out the error since transpiler will traverse the source and parsing syntaxes. Transpiler will bark you when any error in your source.</p><p>You may wonder setup an environment with above JS/CSS transpiler seems take some time. <a href="https://github.com/webapplate/webapplate" target="_blank" rel="noopener noreferrer">webapplate</a> 2.3.0 already integrated with <a href="https://babeljs.io/" target="_blank" rel="noopener noreferrer">babel</a>&nbsp;<!-- --> and<!-- -->&nbsp;<a href="http://www.myth.io/" target="_blank" rel="noopener noreferrer">myth</a> grunt tasks to auto transpile your JS/CSS code to current workable version. <a href="https://github.com/webapplate/webapplate" target="_blank" rel="noopener noreferrer">webapplate</a> jshint/githook also support <a href="https://github.com/webapplate/webapplate/blob/master/.jshintrc#L17" target="_blank" rel="noopener noreferrer">es6 syntax</a> validation (yes the .jshintrc is exactly borrowed from gaia project), so your project is future proved and keep maintainable.</p>]]></content>
        <category label="webapp" term="webapp"/>
        <category label="FirefoxOS" term="FirefoxOS"/>
        <category label="webframework" term="webframework"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[用 IFTTT 做自動生活紀錄 (LifeLog)]]></title>
        <id>https://blog.gasolin.idv.tw/life/LifeLog-via-IFTTT</id>
        <link href="https://blog.gasolin.idv.tw/life/LifeLog-via-IFTTT"/>
        <updated>2015-02-28T10:03:29.000Z</updated>
        <summary type="html"><![CDATA[我會想要把看過的書籍、電影，喜歡的Youtube影片，貼過的文章等記錄下來，之後可以方便回顧。過去要這麼做，少不了得手工紀錄，但手動紀錄其實是相當沒效率的。]]></summary>
        <content type="html"><![CDATA[<p></p><p>我會想要把看過的書籍、電影，喜歡的 Youtube 影片，貼過的文章等記錄下來，之後可以方便回顧。過去要這麼做，少不了得手工紀錄，但手動紀錄其實是相當沒效率的。</p><p>過去幾年裡，我使用 Google 日曆紀錄簡單的一行日記，使用 Anobii 紀錄讀過的書與心得，使用豆瓣電影紀錄看過的影片，使用 Facebook/Google+、Blogger 等分享連結與寫文章。最近我的做法仍然沒有改變，但會利用 IFTTT 來自動將我更新的書、影片、分享過的連結等自動紀錄到我的 Google 日曆中。</p><p><a href="https://ifttt.com/" target="_blank" rel="noopener noreferrer">IFTTT</a> 是一個幫你連結各種不同網路服務的自動化工具，包括 Google Calendar、Facebook、Evernote、RSS 等各種服務。其運作方式是先指定一些需要的配方（Receipe）。</p><p></p><p>IFTTT 會定時追蹤你使用的一些服務的狀況。當你的配方中包含的服務的內容改變時（如 Blogger 上有更新的文章），IFTTT 可以自動將結果添加到你的另一個服務中（如加入至日曆）。</p><p>以我自己為例，要將 Blogger 上的文章更新到我的日曆，只需先找出我的 Blogger RSS <a href="http://blog.gasolin.idv.tw/feeds/posts/default" target="_blank" rel="noopener noreferrer">http://blog.gasolin.idv.tw/feeds/posts/default</a>，然後建立「RSS -<!-- -->&gt;<!-- --> Google 日曆」的配方即可。Anobii 或豆瓣的做法也類似。</p><p><a href="http://3.bp.blogspot.com/-W4Kk4j8DGro/VPGOmgGFA_I/AAAAAAAAD3Y/JwxVHmIirn0/s1600/%E8%9E%A2%E5%B9%95%E5%BF%AB%E7%85%A7%2B2015-02-28%2B%E4%B8%8B%E5%8D%885.39.44.png" target="_blank" rel="noopener noreferrer"><img loading="lazy" src="http://3.bp.blogspot.com/-W4Kk4j8DGro/VPGOmgGFA_I/AAAAAAAAD3Y/JwxVHmIirn0/s1600/%E8%9E%A2%E5%B9%95%E5%BF%AB%E7%85%A7%2B2015-02-28%2B%E4%B8%8B%E5%8D%885.39.44.png" class="img_ev3q">&nbsp;</a>
<!-- -->&nbsp;<!-- -->另一類則是從社群網站將文章加到日曆，也是建立簡單的規則即可做到。</p><p><a href="http://4.bp.blogspot.com/-2k7zRZ9OJsk/VPGOm-tiSOI/AAAAAAAAD3k/C-9ZnXfp-M0/s1600/%E8%9E%A2%E5%B9%95%E5%BF%AB%E7%85%A7%2B2015-02-28%2B%E4%B8%8B%E5%8D%885.38.57.png" target="_blank" rel="noopener noreferrer"><img loading="lazy" src="http://4.bp.blogspot.com/-2k7zRZ9OJsk/VPGOm-tiSOI/AAAAAAAAD3k/C-9ZnXfp-M0/s1600/%E8%9E%A2%E5%B9%95%E5%BF%AB%E7%85%A7%2B2015-02-28%2B%E4%B8%8B%E5%8D%885.38.57.png" class="img_ev3q"></a> </p><p>我的生活紀錄 (LifeLog) 現在能自動記錄的資料有：</p><ul><li>Facebook 貼文</li><li>Blogger 貼文</li><li>Anobii 書籍</li><li>豆瓣書籍 / 音樂更新</li><li>Youtube 設為喜歡的影片</li></ul><p>Update at 2016/12/19</p><ul><li>Twitter 貼文</li><li>Todoist 完成的事項</li></ul><p>如果你有其他自動生活紀錄 (LifeLog) 的想法，也歡迎與我分享。</p>]]></content>
        <category label="zen" term="zen"/>
        <category label="life" term="life"/>
        <category label="ifttt" term="ifttt"/>
        <category label="automation" term="automation"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Single line of style to bring (keypart of) f.lux on FirefoxOS]]></title>
        <id>https://blog.gasolin.idv.tw/mozilla/Single-line-of-style-to-bring-keypart-of-f-lux-on-FirefoxOS</id>
        <link href="https://blog.gasolin.idv.tw/mozilla/Single-line-of-style-to-bring-keypart-of-f-lux-on-FirefoxOS"/>
        <updated>2015-02-24T07:34:23.000Z</updated>
        <summary type="html"><![CDATA[Claim: this exercise is for experiment, not for product.]]></summary>
        <content type="html"><![CDATA[<p>Claim: this exercise is for experiment, not for product.</p><p></p><p>According to <a href="http://en.wikipedia.org/wiki/F.lux" target="_blank" rel="noopener noreferrer">wikipedia</a>, <strong>f.lux</strong> adjusts a computer display's <a href="http://en.wikipedia.org/wiki/Color_temperature" target="_blank" rel="noopener noreferrer" title="Color temperature">color temperature</a> according to its location and time of day. I always use it on my Mac to make my eyes more comfortable at night.</p><p>So, the topic is about if we can bring that experience on Firefox OS.
Adjust display's color temperature generally is a system specific issue. But actually it can be categorized as an CSS trick if we like to <a href="https://gist.github.com/contra/254e1a5a07da830d6051" target="_blank" rel="noopener noreferrer">make it on web</a> (a gist to mimic the f.lux effect).</p><p>To quick experiment if it doable or not, the validation steps are:</p><p>1<!-- -->.<!-- --> open the <a href="https://developer.mozilla.org/en-US/docs/Tools/WebIDE" target="_blank" rel="noopener noreferrer">WebIDE</a> on <a href="https://www.mozilla.org/en-US/firefox/developer/" target="_blank" rel="noopener noreferrer">Firefox Developer Edition</a>
2<!-- -->.<!-- --> download and open emulator (I choose v2.2) on WebIDE.
3<!-- -->.<!-- --> To debug system app, choose <code>System</code> from top left selector in WebIDE.
4<!-- -->.<!-- --> once connected,<!-- -->&nbsp;<!-- --> select the <code>html</code> tag and add style
<code>**filter: brightness(0.8) sepia(0.9);**</code> into the element. </p><p></p><p>The live view changed to f.lux like color temperature.</p><p></p><p>So it works!</p><p>To make it persistent on real device, edit <code>[gaia/apps/system/style/system/system.css](https://github.com/mozilla-b2g/gaia/blob/master/apps/system/style/system/system.css#L5)</code>, add above style into <code>html</code> tag. Run <code>make reset-gaia</code> then you have the style applied on device.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="whats-next">What's Next<a href="#whats-next" class="hash-link" aria-label="Direct link to What's Next" title="Direct link to What's Next">​</a></h3><p>The above experiment will change your device's color temperature permanently, which is not what f.lux do. To make it as option, you can add an option in settings <!-- -->&gt;<!-- --> developer panel and add a observer in system to dynamically add such style into system html tag.</p><p>If you feel the strong desire to have such feature happen on Firefox OS device, fire a bug on <a href="http://bugzilla.mozilla.org/" target="_blank" rel="noopener noreferrer">bugzilla</a>.</p>]]></content>
        <category label="FirefoxOS" term="FirefoxOS"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[隱私與 Hololens]]></title>
        <id>https://blog.gasolin.idv.tw/vr/privacy-Hololens</id>
        <link href="https://blog.gasolin.idv.tw/vr/privacy-Hololens"/>
        <updated>2015-02-17T07:52:23.000Z</updated>
        <summary type="html"><![CDATA[近期最激動人心的新科技當屬Hololens。]]></summary>
        <content type="html"><![CDATA[<iframe allowfullscreen="" class="YOUTUBE-iframe-video" data-thumbnail-src="https://ytimg.googleusercontent.com/vi/aThCr0PsyuA/0.jpg" frameborder="0" height="266" src="http://www.youtube.com/embed/aThCr0PsyuA?feature=player_embedded" width="320"></iframe><p>近期最激動人心的新科技當屬 Hololens。</p><p>Kinect 動態捕捉 + AR 增強現實 + VR 虛擬現實，將這些令人讚嘆的系統縮小綑綁成一個頭戴裝置。這樣的技術與願景，可以說甚至超越了上個世紀我們對 21 世紀的想像。</p><p>如果價格與電腦相去不遠，實在令人難以拒絕這樣的裝備。</p><p>然而也不禁反省，有天當技術變成生活的一部分，人們可能會選擇自願放棄一部分隱私，以換取享受科技與網路帶來的便利。當使用的人多了，就形成了一股社會壓力，不用也不成。</p><p>「天地萬物﹐朕賜給你的才是你的﹐<em>朕不給</em>﹐你不能搶。」，你看到的，都變成某些公司或團體想讓你看的；你沒看到的，可能是某些公司 / 政府要求屏蔽下來不讓你看的。</p>]]></content>
        <category label="design" term="design"/>
        <category label="gadget" term="gadget"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[OddWerx 與 ROMO]]></title>
        <id>https://blog.gasolin.idv.tw/iot/OddWerx-ROMO</id>
        <link href="https://blog.gasolin.idv.tw/iot/OddWerx-ROMO"/>
        <updated>2015-02-17T07:52:19.000Z</updated>
        <summary type="html"><![CDATA[我們先來看兩段影片，兩個產品都是為手機加裝底座，讓手機變成可移動，可和人互動的機器人。]]></summary>
        <content type="html"><![CDATA[<p>我們先來看兩段影片，兩個產品都是為手機加裝底座，讓手機變成可移動，可和人互動的機器人。</p><p>OddWerx </p><iframe allowfullscreen="" class="YOUTUBE-iframe-video" data-thumbnail-src="https://ytimg.googleusercontent.com/vi/bJ6vzyOG-7o/0.jpg" frameborder="0" height="266" src="http://www.youtube.com/embed/bJ6vzyOG-7o?feature=player_embedded" width="320"></iframe><p>OddWerx 在 <a href="https://www.kickstarter.com/projects/ologic/oddwerx-autonomous-smartphone-robots" target="_blank" rel="noopener noreferrer">2012/4</a> 於 kickstarter 上募款失敗。</p><p>ROMO </p><iframe allowfullscreen="" class="YOUTUBE-iframe-video" data-thumbnail-src="https://ytimg.googleusercontent.com/vi/UAu7eu7e82Q/0.jpg" frameborder="0" height="266" src="http://www.youtube.com/embed/UAu7eu7e82Q?feature=player_embedded" width="320"></iframe><p>ROMO 在 <a href="https://www.kickstarter.com/projects/peterseid/romo-the-smartphone-robot" target="_blank" rel="noopener noreferrer">2011/11</a>，<a href="https://www.kickstarter.com/projects/peterseid/romo-the-smartphone-robot-for-everyone" target="_blank" rel="noopener noreferrer">2012/11</a>兩次上 Kickstarter 募款都成功。</p><p>也許是算上包裝設計等成本，ROMO (170) 比起 OddWerx (99) 貴上不少。
即使 OddWerx 和 ROMO 提供的實際功能其實差不多，比較兩個「產品」，一個是需要動手組裝的套件，一個是買來即可用的玩具。</p><p>兩個專案的成功與否，是因為在眾籌網站上出沒的大眾還是偏好看起來立即可用的產品，還是因為在 OddWerx 之前 ROMO 已經出現了，比起來沒什麼新鮮感？</p>]]></content>
        <category label="design" term="design"/>
        <category label="gadget" term="gadget"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[手工作玩偶]]></title>
        <id>https://blog.gasolin.idv.tw/make/handcraft-toy</id>
        <link href="https://blog.gasolin.idv.tw/make/handcraft-toy"/>
        <updated>2015-02-17T07:52:02.000Z</updated>
        <summary type="html"><![CDATA[前陣子感到應該用一些方法來驗證現在數位與實體世界的距離是否已經越來越近。而且桌上也缺一些裝飾品，於是從 cubeecraft 下載了多摩君的剪紙，直接用印表機印出A4大小的紙來。]]></summary>
        <content type="html"><![CDATA[<p></p><p>前陣子感到應該用一些方法來驗證現在數位與實體世界的距離是否已經越來越近。而且桌上也缺一些裝飾品，於是從 <a href="http://www.cubeecraft.com/cubee/domo-kun" target="_blank" rel="noopener noreferrer">cubeecraft</a> 下載了多摩君的剪紙，直接用印表機印出 A4 大小的紙來。</p><p>和 Designer 同事借了剪刀與美工刀後，照著紙上的指示割了起來。</p><p></p><p>多摩君的構成很簡單，基本就是一個紙盒。白色的地方是要割開的洞，將黑色區塊嵌進去後，不需要膠水就可以組裝成成立體的玩偶。</p><p></p><p>用中午休息不到 20 分鐘的時間，多摩君完成啦！ </p><p></p><p>&nbsp;<!-- -->完成後有了點信心，改天繼續挑戰了難度大一點的<a href="http://www.cubeecraft.com/cubee/phoenix-wright-p" target="_blank" rel="noopener noreferrer">成步堂君</a>。</p><p></p><p>&nbsp;<!-- -->在勞作過程中，發現剪紙時還是美工刀好用。這次的成步堂君剪開來還蠻多配件的。</p><p><a href="http://3.bp.blogspot.com/-Qofq3k1kiCE/VOLqrRbjbNI/AAAAAAAAD1s/FEE_tyLU4-c/s1600/2015-01-27%2B13.43.48.jpg" target="_blank" rel="noopener noreferrer"><img loading="lazy" src="http://3.bp.blogspot.com/-Qofq3k1kiCE/VOLqrRbjbNI/AAAAAAAAD1s/FEE_tyLU4-c/s1600/2015-01-27%2B13.43.48.jpg" class="img_ev3q"></a>
<!-- -->&nbsp;<!-- -->組裝好的樣子</p><p></p><p>&nbsp;<!-- -->最後來個疊疊樂</p><p></p><p>手工藝成本：</p><p>兩張 A4 紙。</p>]]></content>
        <category label="fun" term="fun"/>
        <category label="gadget" term="gadget"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[手作鋼鐵衣]]></title>
        <id>https://blog.gasolin.idv.tw/make/handcraft-ironman-suit</id>
        <link href="https://blog.gasolin.idv.tw/make/handcraft-ironman-suit"/>
        <updated>2015-02-17T07:51:37.000Z</updated>
        <summary type="html"><![CDATA[&nbsp;]]></summary>
        <content type="html"><![CDATA[<p></p><p>我相信現在數位與實體世界的距離已經越來越近，我觀察到某些例子，能讓我們常見的實體商品，透過數位方式加值，產生出相當不同的體驗。這邊舉 T-Shirt 為例。這是網上已經在銷售的商品。</p><iframe width="320" height="266" class="YOUTUBE-iframe-video" data-thumbnail-src="https://ytimg.googleusercontent.com/vi/PI_GSXXGh1I/0.jpg" src="http://www.youtube.com/embed/PI_GSXXGh1I?feature=player_embedded" frameborder="0"></iframe><p>其實整個想法很簡單。只是透過將手機放入胸前的袋子，就提供了旁觀者新穎的視覺體驗。在網上也能找到簡易的作法：</p><iframe width="320" height="266" class="YOUTUBE-iframe-video" data-thumbnail-src="https://ytimg.googleusercontent.com/vi/0EuVSiJP5hY/0.jpg" src="http://www.youtube.com/embed/0EuVSiJP5hY?feature=player_embedded" frameborder="0"></iframe><p>由於今年尾牙要求的 dress code 是 cosplay 電影動漫人物，於是我把腦筋動到鋼鐵衣上面。</p><p>1<!-- -->.<!-- --> 首先找一件不要的衣服（這件是 2011 年參加 Coscup 送的，穿到現在）
2<!-- -->.<!-- --> 在胸口適當的地方開個洞。</p><p><a href="http://4.bp.blogspot.com/-j9rieG8qJAI/VOLvWMYh7JI/AAAAAAAAD2g/H9DZhflwQYs/s1600/2015-02-13%2B17.41.49.jpg" target="_blank" rel="noopener noreferrer"><img loading="lazy" src="http://4.bp.blogspot.com/-j9rieG8qJAI/VOLvWMYh7JI/AAAAAAAAD2g/H9DZhflwQYs/s1600/2015-02-13%2B17.41.49.jpg" class="img_ev3q"></a>&nbsp;</p><p>3<!-- -->.<!-- --> 為了手機容易拿取，黏一個袋子進去（剛好最近常常看醫生，就拿藥袋頂上）。袋子對應胸口的地方也要開洞。</p><p></p><p>4<!-- -->.<!-- --> 下載 <a href="https://play.google.com/store/apps/details?id=com.digitaldudz.app" target="_blank" rel="noopener noreferrer">Digital Dudz</a> App， 選鋼鐵人裝扮</p><p>於是就完成有 Arc Reactor 的「We love Open」鋼鐵衣啦！</p><p></p><p></p>]]></content>
        <category label="design" term="design"/>
        <category label="fun" term="fun"/>
        <category label="gadget" term="gadget"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[React Native]]></title>
        <id>https://blog.gasolin.idv.tw/react-native/React-Native</id>
        <link href="https://blog.gasolin.idv.tw/react-native/React-Native"/>
        <updated>2015-02-04T15:55:33.000Z</updated>
        <summary type="html"><![CDATA[在看 Facebook 發表的 React Native 介紹的時候，講者提到為什麼現在 Web 沒辦法提供如他們做的 Paper App 一樣順暢的體驗，主要是三點：]]></summary>
        <content type="html"><![CDATA[<p></p><p>在看 Facebook 發表的 <a href="http://youtu.be/KVZ-P-ZI6W4?t=17m56s" target="_blank" rel="noopener noreferrer">React Native</a> 介紹的時候，講者提到為什麼現在 Web 沒辦法提供如他們做的 Paper App 一樣順暢的體驗，主要是三點：</p><ol><li>Parallelize work 平行處理
在 Web 上雖然有 web worker，但能做的事很有限。</li><li>Gesture Handling
在 Web 上沒有一個好的如何使用手勢操作的指引</li><li>Access to Native Capabilities
在 Web 上沒有辦法使用所有在原生平台上可取用的 API。</li></ol><p>於是 Facebook 發表了使用 React UI 來開發 iOS/Android App ，他們現在已用在了 Facebook Group App 上。React Native 不像 Cordova/Phonegap 用 WebView 來跑 HTML/JS/CSS，而是直接接上 Native UI widget。</p><p></p><p>雖然使用 JS 當 controller，但用 async 的方式和 Native UI 做互動。並且互動時是將 UI 各改動一次性完成（原本 React 的 Virtual DOM 特性），從而避免 JS 程式運行阻塞住 UI 而影響效能。</p><p>當然兩個平台的 Native UI 元件名稱或參數多有不同，所以不能像 Cordova/PhoneGap 那樣「寫一次，跨多個平台」 ，而是「學一次，跨多個平台」（Learn Once，Write anywhere）。</p><p>原始演講內容可以查看</p><iframe allowfullscreen="" frameborder="0" height="315" src="https://www.youtube.com/embed/KVZ-P-ZI6W4#t=17m56s" width="560"></iframe><p>OS: 開發者大會都要留一些爆點啊</p>]]></content>
        <category label="mobile" term="mobile"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Material Design（物質設計）是什麼？]]></title>
        <id>https://blog.gasolin.idv.tw/tools/what-is-material-design</id>
        <link href="https://blog.gasolin.idv.tw/tools/what-is-material-design"/>
        <updated>2015-01-13T15:08:13.000Z</updated>
        <summary type="html"><![CDATA[物質設計(Material Design)]]></summary>
        <content type="html"><![CDATA[<p></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="物質設計material-design">物質設計 (Material Design)<a href="#物質設計material-design" class="hash-link" aria-label="Direct link to 物質設計 (Material Design)" title="Direct link to 物質設計 (Material Design)">​</a></h3><p>「物質設計」有人翻作材質設計，但我很容易把「材質」聯想到 3D 遊戲的材質貼圖去，這跟 Material Design 所想要表達的意涵差了十萬八千里。而從相關的英文詞彙聯想，「Material Girl」或譯為拜金女孩或物質女孩，那種對於追求「摸的到的實際東西」有所迷戀的意涵，似乎與 「Material Design」的內在涵義更為貼近，所以我更願意稱之為「物質設計」。</p><p>註：官方後來定名為「實感設計」。 </p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="物質設計material-design是什麼">物質設計（Material Design）是什麼？<a href="#物質設計material-design是什麼" class="hash-link" aria-label="Direct link to 物質設計（Material Design）是什麼？" title="Direct link to 物質設計（Material Design）是什麼？">​</a></h3><p>簡而言之，<a href="http://www.google.com/design/spec/material-design/introduction.html" target="_blank" rel="noopener noreferrer">Material Design</a>（物質設計）是 Google 公佈的一套同時適用於 Android、iOS、Web 等各種平台，同時能適用於手機、平板、電視、電腦螢幕等不同裝置的跨平台 / 裝置的設計規則（仍需為各裝置設計，但鼓勵共用更多相同元素）。</p><p>讀者也可以透過觀看 Google I/O 2014 - Keynote（從 14:18 分開始，由 Matias Duarte 介紹 Material Design）<a href="https://www.youtube.com/watch?v=wtLJPvx7-ys" target="_blank" rel="noopener noreferrer">https://www.youtube.com/watch?v=wtLJPvx7-ys<!-- -->&nbsp;<!-- --> </a>可以得到對於 Material Design 最精巧的介紹。</p><p>我不是設計師，僅從開發者角度分享一些個人想法，如果還有興趣請繼續看下去。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="從擬物化扁平化到物質化的-app-設計">從擬物化、扁平化、到物質化的 App 設計<a href="#從擬物化扁平化到物質化的-app-設計" class="hash-link" aria-label="Direct link to 從擬物化、扁平化、到物質化的 App 設計" title="Direct link to 從擬物化、扁平化、到物質化的 App 設計">​</a></h3><p>自從 2007 年 iOS 重新發明手機之後，「擬物」化（Skeuomorphism）一直是 iOS App 的設計原則。「擬物」化的設計，讓新接觸「智慧手機」、「智慧平板」的使用者得以沿用過去實物的使用經驗，愉悅地使用新的數位化工具。</p><p>但是這幾年智慧手機 / 平板實在太成功，軟體 App 漸漸吞噬了實體世界的各種工具，造成原本「擬物」所參照的物品已紛紛變成老古董，要年輕人畫出電話的形狀，可能畫的卻是手機的模樣... 總而言之，許多擬物的參照物已經漸漸被時間淘汰了。</p><p>微軟的設計師們很早看出這個趨勢，在 2010 年推出的 Window Phone 中使用了極端「扁平」化（Flat）的設計風格。
經過幾年來的大膽嘗試，最後也由市占極高的 iOS/Android 定調了使用者界面「扁平」化的發展潮流。「扁平」化的設計，讓使用者得以減少在使用 App 過程中，辨識「擬物」化界面所產生的認知疲勞。</p><p>不管是「擬物」化或者「扁平」化，在每個平台的設計指南中，都明確指出設計的 App 要提供最佳的使用者經驗，必須要符合該平台的風格。iOS 還分別為手機與平板提供不同的設計指南，並指出手機與平板是不同的設備，App 設計必須要符合該設備的使用情境。</p><p>其實平台們的意思很簡單：現在開發者必需要對應每個平台，針對平台不同的風格提出相符的設計。對於同平台的不同裝置，也請分開處理。</p><p>於是現在開發者（或提出 Material Design 的 Google，別忘了他們得支援多少種平台與裝置）要面對的，是針對不同裝置、多重平台開發設計 App 時所需面對的各種問題。 </p><p><strong>「物質設計」（Material Design）就是 Google 整理出的新跨平台、跨裝置適用 (For every screen, and for all devices) 的設計指南</strong>。並將首先套用到 Android 的最新版本「L」上。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="物質化的-app-設計">物質化的 App 設計<a href="#物質化的-app-設計" class="hash-link" aria-label="Direct link to 物質化的 App 設計" title="Direct link to 物質化的 App 設計">​</a></h3><p>「物質設計」是以「扁平」化的 App 設計為基礎，加上紙質分層的概念（即以「Google Now」為代表的卡片式設計），整理出字體、色彩、圖標等設計模式，並加入佈局（Layout）、圖像，與動畫效果（effect）等設計模式。紙質分層與「動畫效果」產生出的設計模式，就我所知，是在之前的各種介面設計中所未特別強調的。</p><p>想進一步了解 Material Design 上的動畫效果，可由 Google I/O 2014 - Keynote（從 18.25 分開始，由 Matias Duarte 介紹 Material Design Animation）<a href="https://www.youtube.com/watch?v=wtLJPvx7-ys" target="_blank" rel="noopener noreferrer">https://www.youtube.com/watch?v=wtLJPvx7-ys<!-- -->&nbsp;<!-- --> </a>查看。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="物質設計material-design工具">物質設計（Material Design）工具<a href="#物質設計material-design工具" class="hash-link" aria-label="Direct link to 物質設計（Material Design）工具" title="Direct link to 物質設計（Material Design）工具">​</a></h3><p>看完這些大片的色彩、轉場、動畫效果，不知道身為開發者的你臉綠不綠，反正我綠了。 這樣該如何應用於 app 開發哩？整個開發成本還了得？</p><p>還好 Google 還提供了一些配套工具 (但卻不是出現在 Android L)。(未完待續)</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="參考資料">參考資料<a href="#參考資料" class="hash-link" aria-label="Direct link to 參考資料" title="Direct link to 參考資料">​</a></h3><ul><li>官網 <a href="http://www.google.com/design/spec/material-design/introduction.html" target="_blank" rel="noopener noreferrer">http://www.google.com/design/spec/material-design/introduction.html</a></li><li>Google I/O 2014 - Keynote (14:18) Matias Duarte 介紹 Materia Design <a href="https://www.youtube.com/watch?v=wtLJPvx7-ys" target="_blank" rel="noopener noreferrer">https://www.youtube.com/watch?v=wtLJPvx7-ys </a></li><li>中文翻譯 <a href="http://www.ui.cn/Material/index.html" target="_blank" rel="noopener noreferrer">http://www.ui.cn/Material/index.html</a></li></ul>]]></content>
        <category label="design" term="design"/>
        <category label="Android" term="Android"/>
        <category label="webframework" term="webframework"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Code Flower of Gaia - The firefox OS front end]]></title>
        <id>https://blog.gasolin.idv.tw/devtools/Code-Flower-of-Gaia-The-firefox-OS-front-end</id>
        <link href="https://blog.gasolin.idv.tw/devtools/Code-Flower-of-Gaia-The-firefox-OS-front-end"/>
        <updated>2015-01-07T05:16:51.000Z</updated>
        <summary type="html"><![CDATA[&nbsp;]]></summary>
        <content type="html"><![CDATA[<p></p><p>There are <a href="https://www.codefellows.org/blog/visualizing-the-history-of-node-js-via-git-commits" target="_blank" rel="noopener noreferrer">several source code visualization</a> tools available for choose. I've tried  <a href="https://code.google.com/p/codeswarm/" target="_blank" rel="noopener noreferrer">Code Swarm</a> long time ago and this time I'd like to try something that can be done on web directly. So, here's the <a href="http://gasolin.github.io/CodeFlower/" target="_blank" rel="noopener noreferrer">Gaia source code visulization</a> rendered by <a href="http://redotheweb.com/CodeFlower/" target="_blank" rel="noopener noreferrer">CodeFlower</a> via <a href="http://d3js.org/" target="_blank" rel="noopener noreferrer">D3.js</a>.</p><p>The prosperity of blossom denotes different</p><p></p><p>Orange is the settings app flower. The upperside are modulized setting panels. We can see good order of them. The downside crowds are things that not that modularized.</p><p></p><p>The purple sparkled flower is gaia web components. The main part is gaia-header, the top left part is gaia-grid.</p><p></p><p>The system app is a flower with a more concrete shape.</p><p></p><p>The calendar app (in yellow) looks like a pretty Dandelion.</p><p></p><p>&nbsp;<!-- -->What about others? go <a href="http://gasolin.github.io/CodeFlower/" target="_blank" rel="noopener noreferrer">Gaia source code visulization</a> and check by yourself. (The repo is a digest from 2015/1/7 master) </p><p>And you can make your own by forking <a href="https://github.com/fzaninotto/CodeFlower" target="_blank" rel="noopener noreferrer">CodeFlower</a> from github.</p>]]></content>
        <category label="FirefoxOS" term="FirefoxOS"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[2014完食的書]]></title>
        <id>https://blog.gasolin.idv.tw/life/2014-reading-summary</id>
        <link href="https://blog.gasolin.idv.tw/life/2014-reading-summary"/>
        <updated>2015-01-03T15:36:25.000Z</updated>
        <summary type="html"><![CDATA[2013年曬了一下書架，2014年過去了，終於今年沒讀破百本。（今年共讀 86 本，16052頁）也許是由於今年做了許多不甚成功的專案，佔用了不少時間，或是因為家中小朋友 1 + 1 的效應開始顯現。但其實也看了不少大部頭的書。值得注意的是看的86本中，電子版已佔了32本（38%）。]]></summary>
        <content type="html"><![CDATA[<p>2013 年<a href="/life/2013-reading-summary">曬了一下書架</a>，2014 年過去了，終於今年沒讀破百本。（今年共讀 86 本，16052 頁）也許是由於今年做了許多不甚成功的專案，佔用了不少時間，或是因為家中小朋友 1 + 1 的效應開始顯現。但其實也看了不少大部頭的書。值得注意的是看的 86 本中，電子版已佔了 32 本（38%）。</p><p>來曬一下今年看過的書，順便從中推薦些好書（由近至遠）</p><ul><li></li></ul><p>今年剛開始看了 Google/Apple 世紀大格鬥與「什麼都能賣！：貝佐斯如何締造亞馬遜傳奇」的 kindle 簡體版。瞭解各大巨頭間的糾葛與發跡史還蠻有意思的。</p><p>「超速習法」對於閱讀前的「待機」心理準備部分歸納的非常完備，後半實際閱讀時的方法相對表達地沒那麼清楚。</p><p>Kindle 上看完的「哲學家們都干了些什麼？」。透過一邊介紹有代表性哲學家的故事，將哲學起始到近代的哲學思想都點水過了一遍。對於我這樣的初學者來說還是很有幫助。</p><p></p><p>過年和元旦依舊是漫畫的領地，「銀之匙」實在是部很有趣的漫畫，身在台灣就能體驗日本的農校生活。</p><p>為了稍微瞭解 Android 底層開發以完成「<a href="https://leanpub.com/gaiafromabove" target="_blank" rel="noopener noreferrer">Beyond Web and FirefoxOS</a>」的撰寫，翻譯了「<a href="http://www.books.com.tw/products/0010632066" target="_blank" rel="noopener noreferrer">Android BSP 與系統移植開發</a>」一書。</p><p></p><p>在 kindle 上複習了一遍 yy 小說「冒牌大英雄」，另外也拜讀王伯達先生的新書「再見，世界工廠」，「生產才能創造踏實的經濟成長」等想法在年末看到時寒冰先生的「未來二十年，經濟大趨勢」中也有出現。</p><p>數位新時代</p><p>在過去十年裡，資訊的獲取方式發生了巨大的變化。可汗學院、維基百科、數以億計的部落格，多如牛毛的網站，只要你有興趣，就可以找到任何資訊，不論你在哪裡。學校的資訊媒介作用已經不再像過去那麼重要，培養孩子「發現資訊的願望」在現在更為重要。</p><p>再見世界工廠</p><p>這些年可以看到對岸的改變，應進一步認識與了解對岸與東南亞的週邊鄰國發展狀況</p><p></p><p></p><p>我對圖解與量化自我類的書一直沒什麼抵抗力。這本算言之有物，但一年過去了，實踐上還是差了點 /_\。</p><p><a href="http://www.anobii.com/books/%E7%B5%A6%E4%B8%AD%E5%AD%B8%E7%94%9F%E7%9A%84%E6%99%82%E9%96%93%E7%AE%A1%E7%90%86%E8%A1%93/9789862416983/01faa14757eb969216/" target="_blank" rel="noopener noreferrer">給中學生的時間管理術</a> </p><p>各種時間管理的入門概念，沒看過科維，GTD 的人從這邊入門也不錯</p><p>從年初開始看到年中才看完「Javascript Pattern」，作者很仔細地推導各種 Javascript 模式，相當有意思。</p><p>「遊戲化時代」 這本書的作者之前有在 coursera 開 MOOC 課程，雖然我沒上完，但可以感覺到課程內容比書中提到的更多元。這次終於讀完整本。</p><p><a href="http://3.bp.blogspot.com/-BXU3Zr6RgjA/VKojz9wgjPI/AAAAAAAADxo/U0x0vBRBczs/s1600/%E8%9E%A2%E5%B9%95%E5%BF%AB%E7%85%A7%2B2015-01-05%2B%E4%B8%8B%E5%8D%881.39.57.png" target="_blank" rel="noopener noreferrer"><img loading="lazy" src="http://3.bp.blogspot.com/-BXU3Zr6RgjA/VKojz9wgjPI/AAAAAAAADxo/U0x0vBRBczs/s1600/%E8%9E%A2%E5%B9%95%E5%BF%AB%E7%85%A7%2B2015-01-05%2B%E4%B8%8B%E5%8D%881.39.57.png" class="img_ev3q"></a>
郝明義先生的工作 DNA 三卷也拜讀完了，值得一觀。小米的「參與感」和 360「我的互聯網方法論」書雖然打廣告意味濃厚，但比起台灣的捧 CEO 類型商業書來，多了些實在的想法。</p><p>「一個人的經濟」 前半段講到日本即將面對的現況，不久也會出現在台灣。提早察覺到的趨勢，可以讓我做些什麼哩？</p><p>小旅行，繪本，工作，時間管理，哲學，趨勢。我的閱讀依然雜食。</p><p>PS: 感覺 Anobii 已經幾乎不更新，許多書已經不是輸入 ISBN 就可以自動出現，所以今年的書單裡還是有些漏書。也許看倌可以建議我將書架搬去哪好？</p>]]></content>
        <category label="life" term="life"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[移民效應，是自幹一套還是拿別人的 Open Source 來用？]]></title>
        <id>https://blog.gasolin.idv.tw/code/immigrant-effect-Open-Source</id>
        <link href="https://blog.gasolin.idv.tw/code/immigrant-effect-Open-Source"/>
        <updated>2014-12-15T02:21:12.000Z</updated>
        <summary type="html"><![CDATA[從 Marissa Mayer 與起死回生的雅虎 一文中，可以看到雅虎工程師對自家 CEO 的讚美。其中一點提到雅虎內部有很多系統設計是與外界完全不一樣的，直到新 CEO 上任才放下使用多年的YUI而擁抱其他Open Source團隊維護的專案。]]></summary>
        <content type="html"><![CDATA[<p>從 <a href="http://mmdays.com/2014/12/12/yahoo_comeback/" target="_blank" rel="noopener noreferrer">Marissa Mayer 與起死回生的雅虎</a> 一文中，可以看到雅虎工程師對自家 CEO 的讚美。其中一點提到雅虎內部有很多系統設計是與外界完全不一樣的，直到新 CEO 上任才放下使用多年的 YUI 而擁抱其他 Open Source 團隊維護的專案。</p><p>從樂觀的角度看：因為當初 Yahoo 工程師夠強（Douglas Crockford），覺得自己做的東西比別家的好，所以乾脆自己做。有這種「愛自幹」的精神，所以才會做出很多跟其他地方不一樣的東西，這是 feature。從反面看則是因為長期跟人家用的工具不一樣，所以沒辦法直接使用別人做的 Open source 工具，這也是 bug。</p><p>以前的 Yahoo「不擁抱其他 Open Source 團隊維護的專案」嗎？Yahoo 當然某種程度是支持 Open Source 的公司。就我所知，Yahoo 是間很早開始支援 <a href="http://hadoop.apache.org/" target="_blank" rel="noopener noreferrer">Hadoop</a> 開源專案的公司。Yahoo 使用 Hadoop，也延攬 Hadoop 開發者進公司，所以「不擁抱其他 Open Source 團隊維護的專案」這個論點也許是存在的。</p><p>我們來看看 Google。類似於 YUI，Google 自己也有一套 <a href="https://developers.google.com/closure/library/" target="_blank" rel="noopener noreferrer">Closure Library</a>，多數 Google 的產品都建構於其上，雖然開源，但外面專案會使用它的也少之又少。
而 Android 呢，<a href="https://source.android.com/" target="_blank" rel="noopener noreferrer">AOSP</a>專案裡也有不少只能在 Android 工具鏈中使用的工具，但從以前基於 Eclipse 的 Android 開發工具到最近釋出的 Android Studio 1.0 是基於 IntelliJ 的開發工具，部分的 Google 似乎較接受擁抱其他 Open Source 團隊維護的專案。</p><p>在寫下這兩段話的同時，我比較這兩家公司擁抱其他 Open Source 團隊維護的專案的原因，竟發現兩者改變的相同點在於「併購」。當 Google 併購 Android，就接受了 Android 團隊與他們提出的開發工具。當 Yahoo 開始大採購，許多新創團隊進入 Yahoo 大家庭的同時，也帶進各團隊使用的「其他 Open Source 團隊維護的專案」。也就是說，當新移民團隊進入這個團體時，帶來了改變。</p><p>比起大公司而言，新移民團隊在被併購前的資源有限，使用其他 Open Source 團隊維護的專案是很自然的事。團隊被併購後若需使用併購方的技術重新打造產品，將是相當痛苦的事情。因此在 Yahoo 大採購後許多原有規矩被改寫，恐怕背後也有這些新團隊帶來的影響。</p><p>用社會學可能可以解釋為什麼是團隊而不是個人？因為改變一直是困難的事。原有的團隊在過去磨合 / 開發的過程中已經凝聚出了一些共識。移民到新團體的過程中，新移民團隊需要參與和適應團體的一些運作方式，而團體則需接納和適應新移民團隊的一些習俗。</p><p>回來想想 Mozilla 也做了很多 Open Source 專案，但整套工具常常僅供自己相關的專案使用。
從自身找原因，自家工具的開源專案原本就是為了滿足自己的需求。當外部出現對這套工具的需求時，由於公司人力資源調配，優先要滿足的還是自身專案時程的需求。
當用到的 Open Source 專案在公司裡就有人可以諮詢，當然比去找其他 Open Source 團隊維護的專案來地可靠（？）。許多專案在這樣的思維下就使用自己寫的工具，當意識到的那天，已經回不去了。</p><p>若想避免現在的 feature 變成未來的 bug，在決定自幹專案工具前，先想一想（或 search 一下），也許結果會不一樣。</p>]]></content>
        <category label="Mozilla" term="Mozilla"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[使用 FLUX 架構的概念，漸進改善一般 Javascript 程式碼的組織方式]]></title>
        <id>https://blog.gasolin.idv.tw/code/apply-FLUX-arch-for-Javascript-code</id>
        <link href="https://blog.gasolin.idv.tw/code/apply-FLUX-arch-for-Javascript-code"/>
        <updated>2014-12-03T23:43:59.000Z</updated>
        <summary type="html"><![CDATA[前陣子 Facebook 推出一套名為 FLUX 的前端程式架構，期望能幫過去沒有條理，程式多了結構就亂得像一團麵條的 Javascript 程式寫法找到一個理想的組織方法。]]></summary>
        <content type="html"><![CDATA[<p>前陣子 Facebook 推出一套名為 <a href="http://fluxxor.com/what-is-flux.html" target="_blank" rel="noopener noreferrer">FLUX</a> 的前端程式架構，期望能幫過去沒有條理，程式多了結構就亂得像一團麵條的 Javascript 程式寫法找到一個理想的組織方法。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="flux-簡介">FLUX 簡介<a href="#flux-簡介" class="hash-link" aria-label="Direct link to FLUX 簡介" title="Direct link to FLUX 簡介">​</a></h3><blockquote><p>視圖（View）-<!-- -->&gt;<!-- --> 操作（Action）-<!-- -->&gt;<!-- --> 分配器（Dispatcher）-<!-- -->&gt;<!-- --> 資料處理器（Store）-<!-- -->&gt;<!-- --> 繪圖者（Renderer）-<!-- -->&gt;<!-- --> 視圖（View）
FLUX 的基本原理有別於常用的 MVC（Model/View/Controller）或 MVVM（Model/View/ViewModel）是在 M，Ｖ，C（VM）三者之間互相傳遞或修改資料，</p></blockquote><p></p><p>MVC (image from <a href="http://fluxxor.com/what-is-flux.html" target="_blank" rel="noopener noreferrer">fluxxer</a>)</p><p>FLUX 重新定義整個組織架構為<strong>單向</strong>的視圖（View）-<!-- -->&gt;<!-- --> 操作（Action）-<!-- -->&gt;<!-- --> 分配器（Dispatcher）-<!-- -->&gt;<!-- --> 資料處理器（Store）-<!-- -->&gt;<!-- --> 繪圖者（Renderer）-<!-- -->&gt;<!-- -->&nbsp;<!-- --> 視圖（View）的運作流程。</p><p></p><p>FLUX (image from <a href="http://fluxxor.com/what-is-flux.html" target="_blank" rel="noopener noreferrer">fluxxer</a>)</p><p>就我的理解，FLUX 的架構可以拆分為三個重點流程：</p><ul><li>跟視圖（View）有關的操作（Action），都透過事件註冊到分配器（Dispatcher）去。</li><li>分配器 （Dispatcher）負責將操作（Action）傳遞給需要的資料處理器（Store）。</li><li>資料處理器（Store）負責跟資料直接相關的操作。若資料處理器（Store）修改的結果需要反映到視圖（View）上，可以透過發送訊息通知給繪圖者（Renderer）處理。這邊講到了原本 FLUX 概念圖中沒有提到的繪圖者（Renderer）這個角色，在 Facebook 中他們是用 <a href="http://facebook.github.io/react/" target="_blank" rel="noopener noreferrer">ReactJS</a> 處理。</li></ul><p>瞭解其基本架構之後，我發現其實就算不用他們提供的函式庫，用 Javascript 內建的 addEventListener, handleEvent, customEvent 等方法，也可以利用前面所提的三個重點，漸進寫出符合 FLUX 精神的程式。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="目前的-js-組織方式">目前的 JS 組織方式<a href="#目前的-js-組織方式" class="hash-link" aria-label="Direct link to 目前的 JS 組織方式" title="Direct link to 目前的 JS 組織方式">​</a></h3><p>一個常見的 JS 檔案，一般的架構是</p><blockquote><p>var App = {<!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- --> init: function app_init() {
<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- --> // get view
<!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- --> this.view1 = document.getElementById('xxx1');
<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- --> this.view2 = document.getElementById('xxx2');
<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->
<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- --> // do stuff
<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- --> this.view1.addEventListener('click', function() {
<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- --> // do something
<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- --> });
<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- --> this.view2.addEventListener('keyup', function() {
<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- --> // do something
<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- --> });
<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- --> }
}; 若我們想要將視圖（View）的操作從 init 分離開來，大部分的人會這樣做</p></blockquote><blockquote><p>&nbsp;<!-- -->var App = {
<!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- --> init: function app_init() {
<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- --> // get view
<!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- --> this.view1 = document.getElementById('xxx1');
<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- --> this.view2 = document.getElementById('xxx2');
<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->
<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- --> // do stuff
<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- --> this.view1.addEventListener('click', <strong>this.clickView1</strong>);
<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- --> this.view2.addEventListener('keyup', <strong>this.keyupView2</strong>);
<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- --> },</p><p>&nbsp;<!-- --> <!-- -->&nbsp;<!-- --> <strong>clickView1</strong>: function app_clickView1() {
<!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- -->&nbsp;<!-- --> // do something
<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- --> },</p><p>&nbsp;<!-- --> <!-- -->&nbsp;<!-- --> <strong>keyupView2</strong>: function app_keyupView2() {
<!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- -->&nbsp;<!-- --> // do something
<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- --> }</p><p>};
如果在 clickView1 或 keyupView2 中要呼叫到 App 裡的參數或方法，那麼我們需要在 addEventListener 時使用 bind (this)</p></blockquote><blockquote><p>&nbsp;<!-- -->var App = {
<!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- --> init: function app_init() {
<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- --> // get view
<!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- --> this.view1 = document.getElementById('xxx1');
<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- --> this.view2 = document.getElementById('xxx2');
<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->
<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- --> // do stuff
<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- --> this.view1.addEventListener('click', this.clickView1<strong>.bind(this)</strong>);
<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- --> this.view2.addEventListener('keyup', this.keyupView2<strong>.bind(this)</strong>);
<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- --> },</p><p>&nbsp;<!-- --> <!-- -->&nbsp;<!-- --> clickView1: function app_clickView1() {
<!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- -->&nbsp;<!-- --> // do something
<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- --> },</p><p>&nbsp;<!-- --> <!-- -->&nbsp;<!-- --> keyupView2: function app_keyupView2() {
<!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- -->&nbsp;<!-- --> // do something
<!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- -->&nbsp;<!-- --> this.clickView1();
<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- --> }</p><p>};
大多數書籍的範例大概就停在這裡，沒有再進一步探討程式的組織架構了。即使是龐大的 Javascript 專案如 <a href="https://github.com/mozilla-b2g/gaia" target="_blank" rel="noopener noreferrer">Gaia</a>，不少部分的程式碼組織方式也是如此。在這種組織方式裡，若有很多的視圖（View）需要操作或修改，我們的程式碼就會開始亂起來。</p></blockquote><p>下面來試著將以上程式漸進改為 FLUX 架構。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="改進建議一將-handleevent-當作-dispatcher-來使用">改進建議一：將 handleEvent 當作 Dispatcher 來使用<a href="#改進建議一將-handleevent-當作-dispatcher-來使用" class="hash-link" aria-label="Direct link to 改進建議一：將 handleEvent 當作 Dispatcher 來使用" title="Direct link to 改進建議一：將 handleEvent 當作 Dispatcher 來使用">​</a></h3><blockquote><p>跟視圖（View）有關的操作（Action），都透過事件註冊到分配器（Dispatcher）去。<!-- -->&nbsp;<!-- -->（溫馨提示：IE 9 以上版本才有支援 handleEvent 方法，在之前版本上使用要加 polyfill）</p></blockquote><p>我們先來想想看視圖（View）跟操作（Action）在前端 Javascript 程式中分別代表著什麼。
視圖（View）很明顯，就是透過 getElementById 等方法，從 HTML 中取得代表對應節點（Node）的元素（element）。</p><p>若想要套用 FLUX 架構，我們可以將附加在各個元素（element）上的事件行為分離，將事件註冊到一個統一的地方（分配器），在這個地方對不同的事件進行操作。</p><p>&nbsp;<!-- -->Javascript 內建的分配器叫做 <a href="https://developer.mozilla.org/en-US/docs/Web/API/EventListener" target="_blank" rel="noopener noreferrer">handleEvent</a>，它可以拿來處理任何事件 Event，寫法如下。</p><blockquote><p>&nbsp;<!-- -->var App = {
<!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- --> init: function app_init() {
<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- --> // get view
<!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- --> this.view1 = document.getElementById('xxx1');
<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- --> this.view2 = document.getElementById('xxx2');
<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->
<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- --> // do stuff
<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- --> this.view1.addEventListener('click', <strong>this</strong>);
<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- --> this.view2.addEventListener('keyup', <strong>this</strong>);
<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- --> },</p><p>&nbsp;<!-- --> <!-- -->&nbsp;<!-- --> <strong>handleEvent</strong>: app_handleEvent(evt) {
<!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- -->&nbsp;<!-- --> switch (evt.type) {
<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- --> case 'click':
<!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- -->&nbsp;<!-- --> switch (evt.target) {
<!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- --> case this.view1:
<!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- --> this.clickView1();
<!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- --> break;
<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- --> }
<!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- --> break;
<!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- -->&nbsp;<!-- --> case 'keyup':
<!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- --> switch (evt.target) {
<!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- --> case this.view2:
<!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- --> this.keyupView2();
<!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- --> break; <!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- --> }
<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- --> }
<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- --> }, </p><p>&nbsp;<!-- --> <!-- -->&nbsp;<!-- --> clickView1: function app_clickView1() {
<!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- -->&nbsp;<!-- --> // do something
<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- --> },</p><p>&nbsp;<!-- --> <!-- -->&nbsp;<!-- --> keyupView2: function app_keyupView2() {
<!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- -->&nbsp;<!-- --> // do something
<!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- -->&nbsp;<!-- --> this.clickView1();
<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- --> }</p><p>}; 這麼做帶來的明顯好處是所有的呼叫都統一在 handleEvent 中，可以更容易地追查到。</p></blockquote><p>這麼寫也可以在 addEventListener/removeEventListener 時不用使用 bind (this)，而 bind (this) 經常有些 side effect 需要特別留意。</p><p>例如假使我們想要反註冊 view1 上的 click 方法，使用以下寫法</p><blockquote><p>&nbsp;<!-- -->this.view1.removeEventListener ('click', this.clickView1.bind (this)); 其實並沒有將第一個 event 移除。因為使用了 <strong>.bind(this) </strong>後，回傳的其實是一個新的 instance...。
正確的寫法是
<strong>this.bindClickView1</strong> = this.clickView1.bind (this)
this.view1.addEventListener ('click', this.bindClickView1);
...
this.view1.removeEventListener ('click', this.bindClickView1); 用 handleEvent 可以省點事，要反註冊時也傳入 this 即可。
this.view1.removeEventListener ('click', this);</p></blockquote><h3 class="anchor anchorWithStickyNavbar_LWe7" id="改進建議二將資料處理的部分分離使用自訂事件來改變-store-狀態">改進建議二：將資料處理的部分分離，使用自訂事件來改變 Store 狀態<a href="#改進建議二將資料處理的部分分離使用自訂事件來改變-store-狀態" class="hash-link" aria-label="Direct link to 改進建議二：將資料處理的部分分離，使用自訂事件來改變 Store 狀態" title="Direct link to 改進建議二：將資料處理的部分分離，使用自訂事件來改變 Store 狀態">​</a></h3><blockquote><p>分配器 （Dispatcher）負責將操作（Action）傳遞給需要的資料處理器（Store）
資料處理器（Store）負責跟資料直接相關的操作。在稍大的 Web App 中，我們可以另外定一個 Object 來處理資料相關的事宜。一般我們的寫法會是</p></blockquote><blockquote><p>// Store.js
function Store() {
<!-- -->&nbsp;<!-- --> this._data: 0;
};</p><p>Store.prototype = {
<!-- -->&nbsp;<!-- --> getSomething: function s_getSomething() {
<!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- --> return this._data;
<!-- -->&nbsp;<!-- --> },</p><p>&nbsp;<!-- --> doSomething: function s_doSomething() {
<!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- --> this._data<!-- -->&nbsp;<!-- -->+= 1;
<!-- -->&nbsp;<!-- --> },</p><p>&nbsp;<!-- --> setSomething: function s_setSomething(val) {
<!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- --> this._data = val;
<!-- -->&nbsp;<!-- --> }
};</p><p>// App.js
var App = {
<!-- -->&nbsp;<!-- --> this.store = new Store();
<!-- -->&nbsp;<!-- --> this.store.init();
<!-- -->&nbsp;<!-- --> this.store.getSomething();
<!-- -->&nbsp;<!-- --> this.store.doSomething();
<!-- -->&nbsp;<!-- --> this.store.setSomething (2);
}; 若想要套用 FLUX 架構，首先我們要避免從資料處理器（Store）外部直接改變資料處理器（Store）。我們可以透過在呼叫端使用 <a href="https://developer.mozilla.org/en-US/docs/Web/API/Window.dispatchEvent" target="_blank" rel="noopener noreferrer">window.DispatchEvent</a> 發送自訂事件（<a href="https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent" target="_blank" rel="noopener noreferrer">CustomEvent）</a>，並在資料處理器（Store）中接收自訂事件來做到。</p></blockquote><p>如此一來，資料處理器（Store）將只留下 get 方法來讓外部取得 Store 想提供的資料。</p><p>另外如果程式碼改善進入到下一個重點，在操作（Action）時應該不需要再呼叫 Store.getSomething 了，我們將資料處理器（Store）的 getSomething 方法留著給繪圖者（Renderer）使用 。</p><blockquote><p>// Store.js
function Store() {
<!-- -->&nbsp;<!-- --> this._data: 0;
};</p><p>Store.prototype = {
<!-- -->&nbsp;<!-- --> init: function s_init() {
<!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- -->&nbsp;<!-- --> <strong>window.addEventListener('store_do', this);</strong>
<strong>&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- --> window.addEventListener('store_set', this);</strong>
<!-- -->&nbsp;<!-- --> },</p><p>&nbsp;<!-- --> handleEvent: s_handleEvent(evt) {
<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- --> switch(evt.type) {
<!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- --> case 'store_do':
<!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- --> this.doSomething();
<!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- --> break;
<!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- --> case 'store_set':
<!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- --> this.setSomething(<strong>evt.detail.val</strong>);
<!-- -->&nbsp;<!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- -->&nbsp;<!-- --> break;
<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- --> }
<!-- -->&nbsp;<!-- --> },</p><p>&nbsp;<!-- --> getSomething: function s_getSomething() {
<!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- --> return this._data;
<!-- -->&nbsp;<!-- --> },</p><p>&nbsp;<!-- --> _doSomething: function s_doSomething() {
<!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- --> this._data<!-- -->&nbsp;<!-- -->+= 1;
<!-- -->&nbsp;<!-- --> },</p><p>&nbsp;<!-- --> _setSomething: function s_setSomething(val) {
<!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- --> this._data = val;
<!-- -->&nbsp;<!-- --> }
};</p><p>// App.js
var App = {
<!-- -->&nbsp;<!-- --> this.store = new Store();
<!-- -->&nbsp;<!-- --> this.store.init();
<!-- -->&nbsp;<!-- --> //this.store.getSomething();
<!-- -->&nbsp;<!-- --> <strong>window..dispatchEvent(new CustomEvent('store_do'));
<!-- -->&nbsp;<!-- --> **</strong>window..dispatchEvent(new CustomEvent('store_set',**
<strong>&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- --> {'detail':{'val':2}}
<!-- -->&nbsp;<!-- --> )); </strong>
}; 這麼做帶來的明顯好處是<strong>測試</strong>時可以簡單地將 Store 與 App 分開來測試，這對大型 App 是很重要的。 </p></blockquote><h3 class="anchor anchorWithStickyNavbar_LWe7" id="改進建議三讓-renderer-來處理視圖">改進建議三：讓 Renderer 來處理視圖<a href="#改進建議三讓-renderer-來處理視圖" class="hash-link" aria-label="Direct link to 改進建議三：讓 Renderer 來處理視圖" title="Direct link to 改進建議三：讓 Renderer 來處理視圖">​</a></h3><blockquote><p>若資料處理器（Store）修改的結果需要反映到視圖（View）上，可以透過發送訊息通知給繪圖者（Renderer）處理 &gt; //<!-- -->&nbsp;<!-- --> Renderer.js
var ClickRenderer = {
<!-- -->&nbsp;<!-- --> init: function s_init(element, Store) {
<!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- -->&nbsp;<!-- --> this.element = element;
<!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- -->&nbsp;<!-- --> this.store = Store;
<!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- -->&nbsp;<!-- --> <strong>window.addEventListener('render_view1', this);</strong>
<!-- -->&nbsp;<!-- --> },</p><p>&nbsp;<!-- --> handleEvent: s_handleEvent(evt) {
<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- --> switch(evt.type) {
<!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- --> case 'render_view1':
<!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- --> this.element.textConent = this.store.getSomething();
<!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- --> break;
<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- --> }
<!-- -->&nbsp;<!-- --> }};</p><p>// Store.js
function Store() {
<!-- -->&nbsp;<!-- --> this._data: 0;
};</p><p>Store.prototype = {
<!-- -->&nbsp;<!-- --> init: function s_init() {
<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- --> window.addEventListener('store_do', this);
<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- --> window.addEventListener('store_set', this);
<!-- -->&nbsp;<!-- --> },</p><p>&nbsp;<!-- --> handleEvent: s_handleEvent(evt) {
<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- --> switch(evt.type) {
<!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- --> case 'store_do':
<!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- --> this.doSomething();
<!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- --> break;
<!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- --> case 'store_set':
<!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- --> this.setSomething(evt.detail.val);
<!-- -->&nbsp;<!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- -->&nbsp;<!-- --> break;
<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- --> }
<!-- -->&nbsp;<!-- --> },</p><p>&nbsp;<!-- --> getSomething: function s_getSomething() {
<!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- --> return this._data;
<!-- -->&nbsp;<!-- --> },</p><p>&nbsp;<!-- --> _doSomething: function s_doSomething() {
<!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- --> this._data<!-- -->&nbsp;<!-- -->+= 1;
<!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- --> <strong>window..dispatchEvent(new CustomEvent('render_view1'));</strong>
<!-- -->&nbsp;<!-- --> },</p><p>&nbsp;<!-- --> _setSomething: function s_setSomething(val) {
<!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- --> this._data = val;
<!-- -->&nbsp;<!-- --> }
};</p><p>// App.js
var App = {
<!-- -->&nbsp;<!-- --> init: function a_init() {
<!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- --> // get view
<!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- --> this.view1 = document.getElementById('xxx1');
<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- --> this.view2 = document.getElementById('xxx2');
<!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- --> this.store = new Store();
<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- --> this.store.init();
<!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- --> <strong>ClickRenderer.init(this.view1, **</strong>this.store);**
<!-- -->&nbsp;<!-- --> },</p><p>&nbsp;<!-- -->
<!-- -->&nbsp;<!-- --> handleEvent: a_handleEvent(evt) {
<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- --> window..dispatchEvent(new CustomEvent('store_do'));
<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- --> //Store.setSomething(2)
<!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- --> window..dispatchEvent(new CustomEvent('store_set',
<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- --> {'detail':{'val':2}}
<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->&nbsp;<!-- --> ));
};
上段程式在 App 中註冊了 ClickRenderer，並傳入 Store 與 所需的 View 元件。所有的介面更新全交由 ClickRenderer 處理。</p></blockquote><p>（另一個方法是讓繪圖者（Renderer）監看資料處理器（Store）的狀態，然後去改變視圖（View））
<!-- -->&nbsp;<a href="http://fluxxor.com/documentation/store-watch-mixin.html" target="_blank" rel="noopener noreferrer">http://fluxxor.com/documentation/store-watch-mixin.html</a></p><h3></h3><h3 class="anchor anchorWithStickyNavbar_LWe7" id="總結">總結<a href="#總結" class="hash-link" aria-label="Direct link to 總結" title="Direct link to 總結">​</a></h3><p>整理完後，一般 javascript 套用 flux 架構的運作流程如下：</p><p></p><p>簡而言之，上面的各種建議是鼓勵大家多使用 Javascript 內建的 addEventListener, handleEvent, customEvent 等方法。透過大量使用 event，我們可以改善 Javascript 程式邏輯，資料，與介面元件之間的關聯程度。</p><p>將 FLUX 架構拆分為三個重點流程來理解或實踐的好處，是我們能漸進地遵循其中一些方法來改善我們現有的程式架構。</p><p>以上是我關於如何使用 FLUX 架構在一般 Javascript 組織方式的第三個版本，可能有些錯謬之處，還迎大家討論或給予建議。</p>]]></content>
        <category label="webapp" term="webapp"/>
        <category label="FirefoxOS" term="FirefoxOS"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[FoxBox and SummerOfCode14]]></title>
        <id>https://blog.gasolin.idv.tw/mozilla/FoxBox-and-SummerOfCode14</id>
        <link href="https://blog.gasolin.idv.tw/mozilla/FoxBox-and-SummerOfCode14"/>
        <updated>2014-03-19T06:05:26.000Z</updated>
        <summary type="html"><![CDATA[FoxBox is the project that intent to provide a battery included Firefox OS build environment.]]></summary>
        <content type="html"><![CDATA[<p><a href="http://github.com/gasolin/foxbox" target="_blank" rel="noopener noreferrer">FoxBox</a> is the project that intent to provide a battery included Firefox OS build environment. </p><p><a href="https://github-camo.global.ssl.fastly.net/5a75456bd1293c04434f8c8a2373748a25d5deaf/687474703a2f2f692e696d6775722e636f6d2f465945305045352e706e67" target="_blank" rel="noopener noreferrer"><img loading="lazy" src="https://github-camo.global.ssl.fastly.net/5a75456bd1293c04434f8c8a2373748a25d5deaf/687474703a2f2f692e696d6775722e636f6d2f465945305045352e706e67" class="img_ev3q"></a>
The goal of foxbox is to try any approach that make new user can do as less as possible to start the FirefoxOS development</p><p>Our first take is use <a href="http://www.vagrantup.com/downloads" target="_blank" rel="noopener noreferrer">vagrant</a> with <a href="https://www.virtualbox.org/wiki/Downloads" target="_blank" rel="noopener noreferrer">virtualbox</a> to make major platform users can try FirefoxOS dev in VM.</p><p>It will be great to setup the current version of foxbox in your desktop environment</p><p></p><p>And record obstacles you encountered here <a href="https://github.com/gasolin/foxbox/issues?state=open" target="_blank" rel="noopener noreferrer">https://github.com/gasolin/foxbox/issues?state=open</a>.
There are some issues (but not the limit) that might be worth to do in the future version of foxbox.</p><p>Note that you require a desktop with INTEL VT-x/AMD-V hardware virtualization support(Windows8 or Mac already enabled it), at least 4GB RAM and about 10~40GB disk space(for gaia or full B2G development).</p><p>FoxBox has been approved by the Google Summer of Code administrator <a href="http://wiki.mozilla.org/Community:SummerOfCode14" target="_blank" rel="noopener noreferrer">http://wiki.mozilla.org/Community:SummerOfCode14</a> , so its perfect time to step up, try FoxBox, fix issues that every others will encounter, save everybody's time and start make your own Firefox OS phone. </p><p>If you'd like to contribute FoxBox for <a href="http://www.google-melange.com/gsoc/homepage/google/gsoc2014" target="_blank" rel="noopener noreferrer">SummerOfCode14</a>. We expect you could find out the interesting topic you want to contribute or any other way that can better achieve FoxBox's goal.
<!-- -->&nbsp;</p>]]></content>
        <category label="mobile" term="mobile"/>
        <category label="Mozilla" term="Mozilla"/>
        <category label="FirefoxOS" term="FirefoxOS"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Android Wear 周邊]]></title>
        <id>https://blog.gasolin.idv.tw/android/Android-Wear-associates</id>
        <link href="https://blog.gasolin.idv.tw/android/Android-Wear-associates"/>
        <updated>2014-03-19T04:36:00.000Z</updated>
        <summary type="html"><![CDATA[Android Wear 不是作業系統, 基本上是拿來開發Android周邊所使用的協定。它是把原本需要拿出手機查訊息，變成透過 Notification API傳給手錶。透過 Google Now 手錶可以收到推播來的相關訊息或透過語音辨識來控制手機應用做事情。]]></summary>
        <content type="html"><![CDATA[<iframe allowfullscreen="" frameborder="0" height="315" src="//www.youtube.com/embed/1dQf0sANoDw" width="560"></iframe><p><a href="http://developer.android.com/wear/index.html" target="_blank" rel="noopener noreferrer">Android Wear</a> 不是作業系統，基本上是拿來開發 Android 周邊所使用的協定。它是把原本需要拿出手機查訊息，變成透過 Notification API 傳給手錶。透過 Google Now 手錶可以收到推播來的相關訊息或透過語音辨識來控制手機應用做事情。</p><p>因為 Android Wear + Google Now 帶來的便利性，Google 可以再進一步加強圍繞著 Play Service/Google Now 的生態圈。</p>]]></content>
        <category label="Android" term="Android"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[人生就像是遊戲，這篇就是你的攻略指南]]></title>
        <id>https://blog.gasolin.idv.tw/life/liferpg</id>
        <link href="https://blog.gasolin.idv.tw/life/liferpg"/>
        <updated>2014-02-17T16:23:51.000Z</updated>
        <summary type="html"><![CDATA[這篇文章的原文為 Life is a game. This is your strategy guide，作者為 Oliver Emberton，譯者為 gasolin。已獲得作者的翻譯許可。]]></summary>
        <content type="html"><![CDATA[<p><a href="https://oliveremberton.com/app/uploads/2014/02/Cover-shallow.png" target="_blank" rel="noopener noreferrer"><img loading="lazy" src="https://oliveremberton.com/app/uploads/2014/02/Cover-shallow.png" class="img_ev3q"></a> 這篇文章的原文為 <a href="http://oliveremberton.com/2014/life-is-a-game-this-is-your-strategy-guide/" target="_blank" rel="noopener noreferrer">Life is a game. This is your strategy guide</a>，作者為 Oliver Emberton，譯者為 <a href="http://www.gasolin.idv.tw" target="_blank" rel="noopener noreferrer">gasolin</a>。已獲得作者的翻譯許可。</p><p><a href="https://oliveremberton.com/app/uploads/2014/02/Cover-shallow.png" target="_blank" rel="noopener noreferrer"><img loading="lazy" src="https://oliveremberton.com/app/uploads/2014/02/Cover-shallow.png" class="img_ev3q"></a>(按下開始鍵)</p><p>真實的人生就像是遊戲，每個人都身在其中。 但遊戲過程可能會遇到困難，這篇文章就是你的人生攻略指南。</p><p><strong>基礎</strong></p><p>你可能還沒意識到，但真實的生活其實是場策略遊戲。雖然遊戲裡面還包含了許多有趣的小遊戲 -- 像是跳舞、開車、跑步、與愛愛 -- 但是遊戲勝利的關鍵，其實只在於如何善用你的資源。
最重要的是，成功的玩家將他們的時間用在正確的事情上。即使在遊戲的中後階段加入了「金錢」這個要素，但你應該優先考慮的，依然是關於如何運籌帷幄你的時間。</p><p><strong>童年</strong></p><p>人生遊戲開始於你被指派了一個隨機的角色與隨機的環境</p><p><a href="https://oliveremberton.com/app/uploads/2014/02/Select-your-character.png" target="_blank" rel="noopener noreferrer"><img loading="lazy" src="https://oliveremberton.com/app/uploads/2014/02/Select-your-character.png" class="img_ev3q"></a>(<del>選擇</del>你的角色)
遊戲的前 15 年左右只是新手導引任務。這部分的導覽實在做得不怎麼樣，而且還不提供跳過選項。</p><p><strong>青年階段</strong></p><p>作為一個年輕的玩家，你擁有許多時間與精力，但幾乎沒有經驗。你會發現大部份的東西 -- 像是最好的工作、最好的財產、最好的伙伴 -- 直到你取得之前都仍然未解鎖。
這個階段是可以快速升級你的技能的時機。在之後的階段裡，你再也不會那麼多時間與精力了。
為了好好地玩這場遊戲，你的首要任務是將你的時間作最好的分配。每件你做的事情都會影響你的狀態與技能:</p><p><a href="https://oliveremberton.com/app/uploads/2014/02/Drink-vs-code.png" target="_blank" rel="noopener noreferrer"><img loading="lazy" src="https://oliveremberton.com/app/uploads/2014/02/Drink-vs-code.png" class="img_ev3q"></a>(喝酒 - 健康 - 精力 - 金錢)<!-- -->&nbsp;<!-- -->
這聽起來很容易，但問題是你不總是知道該選擇做什麼事，而且你的身體不見得總是服從你的命令。這就來一一說明吧：</p><p><strong>如何讓身體服從你的命令</strong></p><p>許多玩家發現，當他們選擇做某個任務時 -- 例如「去健身房健身吧」-- 他們的身體完全忽略了這個命令。這並不是一個錯誤（bug）。其實，每個人身上都有一個隱藏的狀態欄，只是你無法直接看到它。這個狀態欄很可能長得像這樣：</p><p><a href="https://oliveremberton.com/app/uploads/2014/02/State.png" target="_blank" rel="noopener noreferrer"><img loading="lazy" src="https://oliveremberton.com/app/uploads/2014/02/State.png" class="img_ev3q"></a>（健康 精力 意志力)<!-- -->&nbsp;<!-- -->
如果你的某個狀態指數太低，你的身體將抗拒執行你的指令，直到你的需求已被滿足。試著在你又累又餓的時候讀書吧，你會發現你的注意力一直跑到臉書上。</p><p>在這些狀態中，你的意志力指數狀態是最重要的。<a href="http://en.wikipedia.org/wiki/Ego_depletion" target="_blank" rel="noopener noreferrer">每天起床後，意志力就會隨著時間降低</a>，在吃些東西後會回復少許，只有透過睡一晚好覺才會完全回復。當你的意志力指數很低的時候，
你只能做那些你身體想要做的任務。
生活中作出每個決定時，都會消耗意志力指數。對於那些你必須要作出不做比較吸引你的任務，而去做較不吸引你的任務的決定（例如不看電視而去健身）需要消耗大量的意志力。</p><p>這邊有許多技巧可以幫助你保持良好狀態： </p><p><strong>1<!-- -->.<!-- --> 保持良好的狀態. </strong>如果你覺得飢餓、疲憊、或感覺全無樂趣，你的意志力會崩潰。請確保你有持續地好好對待你自己。
<!-- -->&nbsp;<strong>2<!-- -->.<!-- --> 不要一天內消耗太多意志力. </strong>將你最困難的項目分作多天完成，並搭配一些沒那麼難的項目一起做。
<!-- -->&nbsp;<!-- -->&nbsp;<!-- -->** **
<strong>3<!-- -->.<!-- --> 每天先做最重要的事. </strong>這會讓其他的事情更困難一些，但這讓你最重要的項目更可能完成。</p><p><strong>4<!-- -->.<!-- --> 透過減少選項來減少消耗意志力.</strong> 如果你試著在可以連上臉書的電腦前工作，你需要更多的意志力來工作，因為你必須持續地選擇做困難的項目而不是選簡單的。消除這些分心的事吧。</p><p>玩這場遊戲的重要部分是平衡你的眾多任務的順序與你的身體狀態。別讓你自己進入隨波逐流的
自動導航模式，否則你什麼事都完不成。</p><p><strong>選擇正確的任務</strong></p><p>在正確的時間選擇正確的任務就是這遊戲的精髓。有些任務會影響你的狀態，例如</p><p><a href="https://oliveremberton.com/app/uploads/2014/02/Eating.png" target="_blank" rel="noopener noreferrer"><img loading="lazy" src="https://oliveremberton.com/app/uploads/2014/02/Eating.png" class="img_ev3q"></a>
（吃東西 + 精力 - 飢餓)
另外一些任務會影響你的技能:</p><p><a href="https://oliveremberton.com/app/uploads/2014/02/Rocking.png" target="_blank" rel="noopener noreferrer"><img loading="lazy" src="https://oliveremberton.com/app/uploads/2014/02/Rocking.png" class="img_ev3q"></a>(練搖滾 + 音樂性 + 臉部彩繪)
你需要花時間在那些保證你健康狀態的事情上 - 例如進食與睡眠 - 好讓你的意志力狀態維持高檔。然後你需要發展你尚未俱備的技能。一些技能比其他的技能更有價值。好的技能可以開啓整條升級道路，像是科技樹一樣：</p><p><a href="https://oliveremberton.com/app/uploads/2014/02/Skills.png" target="_blank" rel="noopener noreferrer"><img loading="lazy" src="https://oliveremberton.com/app/uploads/2014/02/Skills.png" class="img_ev3q"></a> (電腦技能 -<!-- -->&gt;<!-- --> 電影制作者，程式設計師，網頁設計師 -<!-- -->&gt;<!-- --> 臉書創辦人 -<!-- -->&gt;<!-- -->千萬富豪)</p><p>有些技能則是沒有發展性的死路：</p><p><a href="https://oliveremberton.com/app/uploads/2014/02/Dead-skills.png" target="_blank" rel="noopener noreferrer"><img loading="lazy" src="https://oliveremberton.com/app/uploads/2014/02/Dead-skills.png" class="img_ev3q"></a>(用膝蓋頂球)
<a href="http://oliveremberton.com/2013/how-to-succeed-when-you-have-no-special-skills/" target="_blank" rel="noopener noreferrer">結合多個技能是最有效的</a>。要把一個技能練滿是非常困難的 -- 事實上，通常是不可能的。但把一堆相關的技能練到似模似樣就簡單多了。例如：</p><p><a href="https://oliveremberton.com/app/uploads/2014/02/Entrepreneur.png" target="_blank" rel="noopener noreferrer"><img loading="lazy" src="https://oliveremberton.com/app/uploads/2014/02/Entrepreneur.png" class="img_ev3q"></a>(商業 + 自信 + 心理學 = 企業家)<a href="http://oliveremberton.com/2013/how-to-succeed-when-you-have-no-special-skills/" target="_blank" rel="noopener noreferrer"></a></p><p><a href="https://oliveremberton.com/app/uploads/2014/02/Ladies-magnet.png" target="_blank" rel="noopener noreferrer"><img loading="lazy" src="https://oliveremberton.com/app/uploads/2014/02/Ladies-magnet.png" class="img_ev3q"></a> (烹飪 + 跳舞<!-- -->&nbsp;<!-- -->+ 心理學 = 舞男)<a href="http://oliveremberton.com/2013/how-to-succeed-when-you-have-no-special-skills/" target="_blank" rel="noopener noreferrer"></a>
看到心理學如何讓你變得又富有又有魅力了吧？你應該學學這個（笑）。</p><p><strong>你在哪裡生活</strong></p><p>你所生活的環境會持續地影響你的狀態、技能，與你升級的機會。你可以在任何地方把遊戲玩地很好，但在一些地方，要把遊戲玩好卻更簡單。例如如果你是身在某些國家的女性玩家，有許多成就你都不能解鎖。任何玩家生在最佳環境的機會都基本上是零。所以搜索看看你的選擇吧，仔細思考是否要早點移動。環境是你的技能與狀態的一個乘數。在適合的環境中，你的表現會成倍增長。</p><p><strong>尋找伴侶</strong></p><p>「魅力」本身就是個複雜的小遊戲。但大部份伴生於你已經在玩的遊戲。如果你已處在很好的狀態並擁有很好的技能，那麼你已經具備不小的魅力了。一個疲憊、易怒、身無所長的玩家一點都不吸引人，而且可能不該嘗試尋找另一半。</p><p><a href="https://oliveremberton.com/app/uploads/2014/02/Marriage.png" target="_blank" rel="noopener noreferrer"><img loading="lazy" src="https://oliveremberton.com/app/uploads/2014/02/Marriage.png" class="img_ev3q"></a> (成就解鎖 快樂 +1 頭痛 x2)</p><p>在這個小遊戲的初期，不管是拒絕其他玩家，或是被其他玩家拒絕都很常見。這是正常的。但不幸地是大部份玩家不太會處理拒絕，這都會降低你的狀態。你需要消耗一些意志力以恢復遊戲，而意志力需要透過睡眠來回復，所以給點時間吧。</p><p>80% 要找到另一半的因素，通常歸結於如何讓自己變成最有魅力的自己 -- 就像人生遊戲的其他方面一樣 -- 意味著將你的時間放在正確的地方。如果你運動、社交、補充營養、發展自己的事業，你的魅力也會自動增加。剩下的 20% 則是讓自己出現在會遇到對的人的地方。</p><p><strong>錢、錢、錢</strong></p><p>&nbsp;<!-- -->遊戲的稍後階段中你需要管理一種叫做「金錢」的新資源。大多數玩家會發現遊戲的早期階段金錢通常會逐漸增加，但通常這只會造成更多問題，而不是更少。</p><p><a href="https://oliveremberton.com/app/uploads/2014/02/Money-2.png" target="_blank" rel="noopener noreferrer"><img loading="lazy" src="https://oliveremberton.com/app/uploads/2014/02/Money-2.png" class="img_ev3q"></a>
關於處理金錢最重要的規則是<em>「絕不借錢，除非借了錢能讓你賺更多回來」</em>。
<!-- -->&nbsp;<!-- -->例如，教育或房貸可能有價值（但得看狀況，並不一定）。借錢買鞋則不是。</p><p>根據你的財務目標，這邊有幾種策略可以參考： </p><ol><li><strong>不為錢煩惱. </strong>低壓力策略：只要量入為出，並未雨綢繆即可。在你可以存錢的階段時就盡量存錢吧，不然你會後悔的。** **</li><li><strong>小康</strong>. 審慎選擇一個職業與環境，準備經常轉職或升職。你需要大量投資在相關的技能上，這會花掉你許多時間。而且注意別因此操壞你的身體，不然你會提早掛掉的。</li><li><strong>Mega rich</strong>. <a href="http://oliveremberton.com/2013/how-to-become-an-entrepreneur/" target="_blank" rel="noopener noreferrer">開始自己的生意</a>.  為別人工作幾乎不可能變得富有。自己工作不會變得富有，擁有東西 – 資產 – 才會變得富有。資產會回報比投資時所花費的更多，而且你的公司是你可以從頭建立起的一個有力的資產。 結合你的回報變成更多的資產，最終它們讓你完全不需工作.</li></ol><p><strong>晚年階段</strong></p><p>在遊戲進行的過程中，你能選擇的也跟著改變。婚姻和孩子將減少你的時間和精力，而且在遊戲中引入了更多隨機元素（緊急換尿布任務！）這讓你更難以快速地發展你自己。
<!-- -->&nbsp;<!-- -->較年長的角色通常擁有更多的技能、資源，與經驗，能解鎖那些之前無法參與的大任務。例如「擁有一棟房子」，或「寫一本（好）小說」。</p><p><a href="https://oliveremberton.com/app/uploads/2014/02/Old.png" target="_blank" rel="noopener noreferrer"><img loading="lazy" src="https://oliveremberton.com/app/uploads/2014/02/Old.png" class="img_ev3q"></a> (聽力 -1 寬鬆的褲子 +10)<!-- -->&nbsp;<!-- -->
所有的玩家在大概 29000 天，或 80 年後死去。如果你的狀態和技能良好，你可能可以延長一點時間。但是並沒有作弊碼可以大幅延長遊戲時間。</p><p>在遊戲開始時，你沒有辦法控制你是誰或你在哪裡。在遊戲結束時，你依然無法在這時改變結局。你過去所下的那些決定，會絕大地形塑你最終結局的好壞。如果在你最後的人生中開心、健康、圓滿 -- 或不然 -- 你都無法再改變什麼。</p><p>這就是為什麼攻略很重要。 因為隨著時間我們大部份人都會瞭解人生遊戲到底怎麼玩，但這時我們已經浪費掉太多精華部分了。</p><p>現在你最好趕緊去玩人生遊戲吧。</p>]]></content>
        <category label="gamification" term="gamification"/>
        <category label="life" term="life"/>
        <category label="game" term="game"/>
        <category label="fun" term="fun"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Auto-configured FirefoxOS Build Environment in a VM]]></title>
        <id>https://blog.gasolin.idv.tw/devtools/Auto-configured-FirefoxOS-Build-Environment-in-a-VM</id>
        <link href="https://blog.gasolin.idv.tw/devtools/Auto-configured-FirefoxOS-Build-Environment-in-a-VM"/>
        <updated>2014-02-10T02:26:02.000Z</updated>
        <summary type="html"><![CDATA[I'm pleased to release first FoxBox version that may save a lot of time for people who wants to give FirefoxOS development a try.]]></summary>
        <content type="html"><![CDATA[<p>I'm pleased to release <a href="https://github.com/gasolin/foxbox/releases" target="_blank" rel="noopener noreferrer">first FoxBox version </a>that may save a lot of time for people who wants to give <a href="http://www.mozilla.org/firefox/os/" target="_blank" rel="noopener noreferrer">FirefoxOS</a> development a try.</p><p>For web developer who wants to contribute to gaia might meet a serious problem that they might have limit knowledge of *nix system. But to build gaia, the command line and make script is essential.</p><p>For developer who wants to contribute to B2G project, a bunch of <a href="https://developer.mozilla.org/en-US/Firefox_OS/Preparing_for_your_first_B2G_build" target="_blank" rel="noopener noreferrer">per-requisite</a> settings must be configured well before really digging into the code.</p><p>FoxBox could help (currently I mainly focus on) B2G/gaia developer quickly setup a working environment in VM.</p><p>Generally FoxBox 0.4 provide a <a href="http://www.vagrantup.com/" target="_blank" rel="noopener noreferrer">Vagrantfile</a> which automatically configure a VM  with bunch of tools you need for building FirefoxOS and gaia  development.</p><p>FoxBox have put a comprehend list of USB vendors, so any Android/FirefoxOS smartphone plugged can be identified.</p><p>With vagrant's NFS shared folder, developer can use their favorite editor to code.</p><p>FoxBox also bundled with a minimum GUI environment that enable you to  test FirefoxOS in VM. <a href="http://nightly.mozilla.org/" target="_blank" rel="noopener noreferrer">Firefox Nightly</a> will be pre-installed for you as  well!</p><p>Read <a href="http://github.com/gasolin/foxbox/blob/master/README.md" target="_blank" rel="noopener noreferrer">README</a> for more detail.</p><p>Happy Hacking!</p><p>Disclaim: Though I work for mozilla, <a href="http://github.com/gasolin/foxbox" target="_blank" rel="noopener noreferrer">FoxBox</a> is not an official project of Mozilla. Currently its just my side project create around Chinese New Year's holiday.</p>]]></content>
        <category label="FirefoxOS" term="FirefoxOS"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[手機，平板，還是電腦？找出手邊設備隱藏的冨樫病毒]]></title>
        <id>https://blog.gasolin.idv.tw/life/devices-procrastination</id>
        <link href="https://blog.gasolin.idv.tw/life/devices-procrastination"/>
        <updated>2014-01-26T15:15:46.000Z</updated>
        <summary type="html"><![CDATA[2013年過去，回顧過去幾年使用過不少設備。過去一年手頭上同時使用了Mac、Ubuntu、Firefox OS、Android、BlackBerry等系統的設備。Windows現在只有報稅時用到了。]]></summary>
        <content type="html"><![CDATA[<p>2013 年過去，回顧過去幾年使用過不少設備。過去一年手頭上同時使用了 Mac、Ubuntu、Firefox OS、Android、BlackBerry 等系統的設備。Windows 現在只有報稅時用到了。</p><p>到今年初，手上主要在使用的設備剩下了：</p><p>電腦：MacBook Air
閱讀器：Kindle Paper White
手機：多台切換中</p><p>因為工作性質，平常盯螢幕的時間太久了，因此在 9 月後買了功能更單純的 Kindle 閱讀器。</p><p>我的 Kindle 是登入<a href="http://amazon.cn/" target="_blank" rel="noopener noreferrer">Amazon.cn</a>帳號，因此可以購買些簡體版書籍或消化一些透過<a href="http://calibre-ebook.com/" target="_blank" rel="noopener noreferrer">Calibre</a>上傳的電子書。但另外一個很重要的用途， 是搭配 <a href="http://fivefilters.org/kindle-it/" target="_blank" rel="noopener noreferrer">Push to Kindle</a> 瀏覽器插件，將原本會在電腦 / 平板上閱讀的長文章只留下文章本體並轉寄到 Kindle 中稍後閱讀。</p><p>說到我主力使用設備其中最主要的改變，還是<strong>整年中有意識地少使用平板</strong>。</p><p>請不要誤會。我說的是「我」的情況。平板是非常適合接收、瀏覽訊息、遊戲的設備。比起 PC，大多數人需要的其實是平板。它在許多情況下是更有生產力的選擇。</p><p>但對我來說，前年陸續使用了幾種作業系統的平板。平板比起 PC 無論是攜帶性還是操作性都非常方便，讓我在這段期間內多吸收了不少資訊。相對地在電腦前的時間也變少了。</p><p>相對地在電腦前的時間也變少了這是好事，也是壞事。
對於我的影響主要是表現地像<a href="http://zh.wikipedia.org/wiki/%E5%86%A8%E6%A8%AB%E7%BE%A9%E5%8D%9A" target="_blank" rel="noopener noreferrer"><strong>冨</strong>樫病毒</a>來襲，手上做的專案數目直線減少了。偶而靈感來了的時候，由於手頭上沒有趁手的開發工具就錯過了。</p><p>當我意識到這個情況，嘗試將手邊的平板處理掉後，今年各種想法的達成率確實提升許多。</p><p>當然計劃總是趕不上變化，去年參與了 Firefox OS 平板 Demo 版和開發者版的開發，其實平板還是用了不少阿 XD</p>]]></content>
        <category label="mobile" term="mobile"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[UI Demos and reuse Gaia UI elements with Building Blocks]]></title>
        <id>https://blog.gasolin.idv.tw/mozilla/UI-Demos-and-reuse-Gaia-UI-elements-with-Building-Blocks</id>
        <link href="https://blog.gasolin.idv.tw/mozilla/UI-Demos-and-reuse-Gaia-UI-elements-with-Building-Blocks"/>
        <updated>2014-01-13T03:43:16.000Z</updated>
        <summary type="html"><![CDATA[&nbsp;]]></summary>
        <content type="html"><![CDATA[<p></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="list-of-ui-elements">List of UI elements<a href="#list-of-ui-elements" class="hash-link" aria-label="Direct link to List of UI elements" title="Direct link to List of UI elements">​</a></h2><p>Though what FirefoxOS encourage developers to develop for the (general) Web, but not for FirefoxOS only. There's still a portion of developers would prefer to start their very first mobile web app with FirefoxOS native look and feel.</p><p>From Feb 2013, I've made my first Firefox/OS marketplace webapp: <a href="https://marketplace.firefox.com/app/ui-demos" target="_blank" rel="noopener noreferrer">UI Demos</a> , which demonstrate FirefoxOS (gaia) UI Building-Blocks elements and provide correspondent code blocks for reference.
<!-- -->&nbsp;<!-- -->(The wrapper version of UI Demos is also available in <a href="https://play.google.com/store/apps/details?id=tw.idv.gasolin.ffosud" target="_blank" rel="noopener noreferrer">Android Play Store</a>)</p><p>Basically those FirefoxOS(gaia) UI Building-Blocks are a set of UI elements defined purely in CSS. So you can include correspondent styles and see your web changed to a 'mobile' looking.</p><p></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="custom-headers">Custom headers<a href="#custom-headers" class="hash-link" aria-label="Direct link to Custom headers" title="Direct link to Custom headers">​</a></h2><p>Since these UI are intended to serve the need of FirefoxOS(gaia) presence, they <strong>looks not well</strong> in other browser. (update: Include <code>cross_browser.css</code> if you want your webapp can run on other browsers.)</p><p>Recently FirefoxOS UI related developers starting a project called "<a href="https://github.com/buildingfirefoxos/Building-Blocks/" target="_blank" rel="noopener noreferrer">Building-Blocks</a>" to make developers outside of FirefoxOS (gaia) can reuse the same UI more easily.</p><p></p><p>&nbsp;<!-- -->
1<!-- -->.<!-- --> Currently you can git clone the code from git <code>https://github.com/buildingfirefoxos/Building-Blocks.git</code></p><p>2<!-- -->.<!-- --> I also register 'building-blocks' to bower list so my <a href="https://github.com/gasolin/webapplate" target="_blank" rel="noopener noreferrer">webapplate</a> project or <a href="http://yeoman.io/" target="_blank" rel="noopener noreferrer">yeoman</a> generators can reuse it with bower.
Use bower (need ran 'npm install -g bower' first) to install 'building-blocks' into your project is easy
$ bower install building-blocks</p><p>Or you can predefined required libraries in '<a href="https://github.com/gasolin/webapplate/blob/master/bower.json" target="_blank" rel="noopener noreferrer">bower.json</a>' file. then run 'bower install' directly.</p><p>For code and demos, please install <a href="https://marketplace.firefox.com/app/ui-demos" target="_blank" rel="noopener noreferrer">UI Demos</a> by your Desktop Firefox browser or FirefoxOS devices.</p><p></p><p>Reusable code samples</p>]]></content>
        <category label="FirefoxOS" term="FirefoxOS"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[百書完食的第四年]]></title>
        <id>https://blog.gasolin.idv.tw/life/2013-reading-summary</id>
        <link href="https://blog.gasolin.idv.tw/life/2013-reading-summary"/>
        <updated>2014-01-01T12:17:12.000Z</updated>
        <summary type="html"><![CDATA[2013要過去了，我一直使用Anobii來記錄我所讀過的書籍與簡單評論，至今也4年多了。回顧過去幾年，不含網路文章與網路小說，大概也都讀超過百多本（包含漫畫）。]]></summary>
        <content type="html"><![CDATA[<p>2013 要過去了，我一直使用<a href="http://www.anobii.com/gasolin/books" target="_blank" rel="noopener noreferrer">Anobii</a>來記錄我所讀過的書籍與簡單評論，至今也 4 年多了。回顧過去幾年，不含網路文章與網路小說，大概也都讀超過百多本（包含漫畫）。</p><ul><li>2013: 114 本 22533 頁</li><li>2012: 169 本 32466 頁</li><li>2011: 204 本 44237 頁</li><li>2010: 189 本 41606 頁</li></ul><p>曬一下今年讀完的書，順便從中推薦些好書（由近至遠）</p><p></p><p>我的主要書籍來源自<a href="http://webcat.tpml.edu.tw/" target="_blank" rel="noopener noreferrer">台北市圖書館</a>，輔以購書跟電子書。台北市圖書館實在是方便到不行，甚至支援甲地借，乙地還。又離家不遠，不善用實在說不過去。</p><p>近期另一個來源是 10 月入手的 Kindle Paperwhite，透過登入大陸 Amazon.cn 帳號，買了一些簡體書來看。「重說中國近代史」、「我是個算命先生」都很長知識。還在看的「哲學家們都幹了些什麼」更是極佳的作品。透過手機也用零碎時間看完一些如「賈伯斯傳」這種超大部頭的 Epub 電子書。
「響應式網頁設計」這本也相當推薦給網頁設計者。</p><p></p><p>「一句話配一張圖，再複雜都能說清楚」是「餐巾紙的背面」作者新書，也是經典之作。
王唯工先生的氣血系列作用理工的嚴謹實驗來驗證中醫氣、血、臟腑學說，也非常值得一看。</p><p></p><p></p><p>今年 Android Play Store、Readmoo 等網站也紛紛開張，因此透過各平台也選看了一些書。
由於選修了 MOOC 平台上的「Gamification」（遊戲化）課程，因此也看了「加入遊戲因子，解決各種問題」一書，相當新鮮。</p><p>「浪潮之顛」是想了解資訊科學歷史和關聯不可不讀的好書。江山代有科技公司出，IT 百年間的龍爭虎鬥與趨勢的轉移，連不諳科技的人都可以讀得津津有味。</p><p></p><p></p><p>這些是過年和元旦假期，轉換工作期間的精神「食」糧 XD</p><p>回顧可以發現我也蠻喜歡讀圖文書和手繪風格的作品，是拿來平衡日常生活吧？</p>]]></content>
        <category label="life" term="life"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[那些 2013 年發佈的 OS]]></title>
        <id>https://blog.gasolin.idv.tw/android/OS-release-in-2013</id>
        <link href="https://blog.gasolin.idv.tw/android/OS-release-in-2013"/>
        <updated>2013-10-29T04:20:37.000Z</updated>
        <summary type="html"><![CDATA[原來就預期今年會有很多OS出現，但沒想到有那麼多。]]></summary>
        <content type="html"><![CDATA[<p>原來就預期今年會有很多 OS 出現，但沒想到有那麼多。
來簡單整理一下列個表。如果有漏掉的，請路過的讀者幫忙提醒吧。</p><p>後面括號 (Mod) 表示是 Android 的衍生版本。月份是大概印象，與實際日期可能有出入。</p><p>這些 OS 其中當然有些只是拿來賺眼球，還沒有實際出貨計劃的 OS。
不過廠商群雄並起逐鹿的感覺，當可確認現在已進入後 PC 時代無疑。</p><p>3 月</p><p><a href="https://www.ouya.tv/" target="_blank" rel="noopener noreferrer">OUYA</a> (Mod)
遊戲機與自有市集</p><p><a href="http://www.smartisan.cn/" target="_blank" rel="noopener noreferrer">Smartisn OS</a> (錘子 OS, Mod) </p><p></p><p><a href="http://us.blackberry.com/software/smartphones/blackberry-10-os.html" target="_blank" rel="noopener noreferrer">BlackBerry 10 OS</a>
已出兩隻手機</p><p>5 月</p><p><a href="http://www.android.com/" target="_blank" rel="noopener noreferrer">Android</a> 4.3<!-- -->&nbsp;<!-- -->+ Google Services
各種跨版本可用的 Google 服務，扁平化與卡片式設計
現有設備升級，n 台新機</p><p><a href="http://www.google.com/intl/en/chrome/devices/" target="_blank" rel="noopener noreferrer">Chrome OS</a>
Pixel 筆電與 Chrome box</p><p>7 月 </p><p><a href="http://www.mozilla.org/en-US/firefox/os/" target="_blank" rel="noopener noreferrer">FirefoxOS</a> 1.0.1
ZTE open, TCL One touch Fire</p><p></p><p><a href="http://www.ubuntu.com/phone" target="_blank" rel="noopener noreferrer">Ubuntu Phone</a>
相似的概念性界面還有 for <a href="http://www.ubuntu.com/tablet" target="_blank" rel="noopener noreferrer">Tablet</a>, for <a href="http://www.ubuntu.com/phone/ubuntu-for-android" target="_blank" rel="noopener noreferrer">Android</a>, for <a href="http://www.ubuntu.com/tv" target="_blank" rel="noopener noreferrer">TV</a>...</p><p></p><p>9 月
<a href="http://www.cyanogenmod.org/" target="_blank" rel="noopener noreferrer">CyanogenMod</a>  (Mod)
宣布公司化</p><p></p><p></p><p><a href="http://www.apple.com/tw/ios/" target="_blank" rel="noopener noreferrer">iOS7</a>
iOS 五年來最大的改版</p><p>現有設備升級，iPhone 5s, 5c</p><p></p><p><a href="http://store.steampowered.com/livingroom/SteamOS/" target="_blank" rel="noopener noreferrer">SteamOS</a>
客廳與遊戲用 OS</p><p>10 月</p><p><a href="http://www.mozilla.org/en-US/firefox/os/" target="_blank" rel="noopener noreferrer">FirefoxOS</a> 1.1</p><iframe allowfullscreen="" frameborder="0" height="315" src="//www.youtube.com/embed/t_7sTP7IRn4" width="420"></iframe><p><a href="http://en.wikipedia.org/wiki/Aliyun_OS" target="_blank" rel="noopener noreferrer">Ali OS</a> (阿里 OS) 可<a href="http://www.qingcheng.com/index.aspx" target="_blank" rel="noopener noreferrer">定製手機</a></p><p>11 月</p><p><a href="https://www.tizen.org/" target="_blank" rel="noopener noreferrer">Tizen</a> <a href="http://mag.udn.com/mag/digital/storypage.jsp?f_MAIN_ID=320&amp;f_SUB_ID=2942&amp;f_ART_ID=482688" target="_blank" rel="noopener noreferrer">平板</a></p><p></p><p>Android 4.4 <a href="http://www.android.com/kitkat/index.html" target="_blank" rel="noopener noreferrer">KitKat</a></p>]]></content>
        <category label="Android" term="Android"/>
        <category label="FirefoxOS" term="FirefoxOS"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[人人能編程是可能的嗎？]]></title>
        <id>https://blog.gasolin.idv.tw/code/everyone-can-code</id>
        <link href="https://blog.gasolin.idv.tw/code/everyone-can-code"/>
        <updated>2013-10-26T08:28:23.000Z</updated>
        <summary type="html"><![CDATA[今年的Coscup活動中，我分享了一個開放的講題「人人能編程是可能的嗎？」。]]></summary>
        <content type="html"><![CDATA[<iframe allowfullscreen="" frameborder="0" height="470px" marginheight="0" marginwidth="0" scrolling="no" src="http://www.slideshare.net/slideshow/embed_code/14011182" width="490px"></iframe><p>今年的<a href="http://coscup.org/2012/zh-tw/program/" target="_blank" rel="noopener noreferrer">Coscup</a>活動中，我分享了一個開放的講題「人人能編程是可能的嗎？」。</p><p>在準備講題的過程中參考了很多資料、思考了很多的可能性，最後選擇以現在的方式和大家分享。</p><p>之所以會提出這個講題，其實是自己對我過往在各處分享各種不同講題、寫技術書籍、辦活動的總結。我發現不管我分享的主題為何，似乎這些活動彼此之間有一條驅動我這麼做的暗線存在。就我目前看到驅使我做這些事情的動力，可能是「讓人人能編程」這個願景。</p><p>「人人能編程是可能的嗎？」是個開放結局的問題，每個人都有自己的想法，覺得不可能實現或是有自己相信的可能實現。從講題被接受後，我也一直在尋找要怎麼將各種可能幫助我們達成「人人能編程」的各種可能性組織起來。
最後我歸納出可以用「人」、「程式」、「指令」、「機器」四個「從寫程式到在機器上執行」的過程中會遇到的必要元素間的距離來做判斷。用這四個元素間關係所組成的六個維度作為判斷框架，能協助我們判斷每個可能的實現在各個層面對「讓人人能編程」這件事。</p><p>從 PC 到筆電到智慧手機 / 平板這條線，改進的是「人與機器的距離」這個維度。</p><ul><li><a href="http://zhpy.blogspot.com/" target="_blank" rel="noopener noreferrer">周蟒</a>改進的是「人與程式的距離」這個維度。</li><li><a href="http://blockly-demo.appspot.com/blockly/demos/codetw/index.html" target="_blank" rel="noopener noreferrer">Blockly</a>改進的是「人與程式的距離」（積木化）、「程式與指令的距離」（輸出 Python, Javascript）、「指令與機器的距離」(網頁上直接執行)、「人與指令的距離」（開源且 Blockly 本身積木與輸出都很容易修改）、「人與機器的距離」（開網頁就能用）這些維度。</li></ul><p>因為演講時間有限，沒有辦法把每個想表達的想法都傳達出來，所以特別寫下此文，聊以記之。</p>]]></content>
        <category label="zhpy" term="zhpy"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[e化政府怎麼做？提供行動版網頁，而不是App]]></title>
        <id>https://blog.gasolin.idv.tw/life/egov-by-mobile-web</id>
        <link href="https://blog.gasolin.idv.tw/life/egov-by-mobile-web"/>
        <updated>2013-10-26T02:48:58.000Z</updated>
        <summary type="html"><![CDATA[台北市有個便民的服務叫 「1999台北市民當家熱線」，只要是跟公職部門有關的問題，如在公車上丟失東西、查詢號碼，甚至對公家機關服務不滿想投訴，只要拿起電話，撥「1999」，都會有人受理，找到適合的單位回覆，並追蹤處理狀況。一些透過「1999」反映的問題，還會轉化為上級單位的公文，正式行文要求負責單位回覆。]]></summary>
        <content type="html"><![CDATA[<p></p><p>台北市有個便民的服務叫 「<a href="http://onestop.taipei.gov.tw/" target="_blank" rel="noopener noreferrer">1999 台北市民當家熱線</a>」，只要是跟公職部門有關的問題，如在公車上丟失東西、查詢號碼，甚至對公家機關服務不滿想投訴，只要拿起電話，撥「1999」，都會有人受理，找到適合的單位回覆，並追蹤處理狀況。一些透過「1999」反映的問題，還會轉化為上級單位的公文，正式行文要求負責單位回覆。</p><p>原來在公車上丟了東西，要先查對應客運公司服務中心電話 / 網站，找到電話號碼或網址，才能到對應窗口反映問題；對公家機關服務不滿意想投訴，要先查對應機關的電話或網址，或找到上一級機構聯絡窗口，才能反映問題，而且還要擔心會不會被「吃案」。整個過程的「交易成本」實在太高，讓大多數市民望而怯步，只能在私下抱怨政府不力。</p><p>有了「1999」服務之後，這些「交易成本」被政府吸收，市民只要</p><p>1<!-- -->.<!-- --> 拿起電話
2<!-- -->.<!-- --> 反映自己關心的問題
3<!-- -->.<!-- --> 等待回覆</p><p>即可，簡直就是人肉版的「<a href="http://www.google.com/landing/now/" target="_blank" rel="noopener noreferrer">Google Now</a>」。</p><p>姑且不論弄這個服務所費幾何，又造成多少單位的額外負擔。至少就「便民」這結果而言，「1999」讓所有能夠打電話的市民，都有一個非常方便容易取得資訊、反映問題的管道。</p><p>這幾年政府單位開始大量產出各種 App。由於政府並沒有相應技術，因此這些 App 多為外包。然而這些 App 的下載量似乎都不怎麼樣。這是什麼原因哩？當然有很多可以抱怨的點，但如果要拿出一個大方向，我覺得一大部份原因也是「<strong>交易成本</strong>」的問題。</p><p>試想，一般民眾的日常生活中，政府單位的服務就像是自來水和電力一樣，除了停水停電外，不會特別意識到這些服務的重要性。當真的需要各單位的特定服務時，通常也只是非持續性的需求。</p><p>在這種使用情境下，該單位為了便民，提供了該單位的 App。
使用者要用到該單位的服務，「只要」上應用商店搜尋，下載該服務 App，開啓 App 後「就」可以使用了。</p><p>這樣的使用情境其實非常禁不起推敲：</p><p>1<!-- -->.<!-- --> 對於一年只使用幾次的服務，有需要先下載 App 才能使用嗎？更何況可能下載後打開 App，才發現裡面提供的服務都不是我想要的，整個「交易成本」很高。</p><p>2.<!-- -->&nbsp;<!-- --> 使用者使用的系統平台不同。政府資源有限，使用尚未提供對應 App 系統平台的市民，難道就是二等市民嗎？萬一提供了該系統平台 App，而該系統平台並未成功，負責發包的官員會不會哪天被追究圖利特定廠商？</p><p>簡而言之，對於使用頻率不高的服務，多數人還是寧願用行動裝置的瀏覽器直接連上機關的網頁查詢。於是這就牽扯到另一個問題：行動裝置連上政府網頁觀看的體驗不佳。</p><p>不少政府網頁還是上個 10 年的水準。大面積的圖片、Flash、塞滿整版面的資訊，完全沒考慮到使用行動設備瀏覽的體驗。根據今年的調查，<a href="http://iservice.libertytimes.com.tw/3c/news.php?no=10544&amp;type=5" target="_blank" rel="noopener noreferrer">台灣行動上網人口已經佔到全部上網人口的 4 成</a>，而台北市的佔比應該更高。來自由心證一下，應至少 5 成使用者試過用行動裝置連上政府網站，而政府網站卻不能回應這近半受眾的需求，使得政府網站的功用大打折扣。</p><p>政府開發一款熱門平台的 App，所達到的效果只是 854 萬（4 成上網人口，行動上網使用者） <em>&nbsp;<!-- --> 1/2（平台市佔率）</em> 應用商店到達率 (使用者搜尋到這款 App) * 應用安裝率 (不知乘起來有沒有 1/100？) ~= 4 萬 +，於是除非追加預算特地推廣 App，大多數政府 App 安裝數可能都小於這個數字...</p><p>與其如此，政府是否應顧好「便民」的根本，</p><p>1<!-- -->.<!-- --> 先提供基本款的「行動版網頁」，以服務逐年增加的使用行動設備 / 小螢幕的市民，
2<!-- -->.<!-- --> 並一併重新檢視原本桌面款網頁的機能，以提供更有效率的便民服務。
3<!-- -->.<!-- --> 對於使用頻率較高的政府服務，則可以透過「Open Data」，讓各平台開發者得以接取公開的 API 與資料，提供多樣性的服務。</p>]]></content>
        <category label="mobile" term="mobile"/>
        <category label="life" term="life"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[開放徽章(OpenBadges)的遊戲化經驗]]></title>
        <id>https://blog.gasolin.idv.tw/make/OpenBadges-gamification</id>
        <link href="https://blog.gasolin.idv.tw/make/OpenBadges-gamification"/>
        <updated>2013-09-30T02:56:15.000Z</updated>
        <summary type="html"><![CDATA[第一個中文世界的開放徽章]]></summary>
        <content type="html"><![CDATA[<p></p><p>第一個中文世界的開放徽章
「徽章」讓原本難以量化的能力，透過徽章的形式具現化。</p><p>我一直很留意遊戲化（Gamification）的應用。當越來多多事情變得可以測量之後，很自然的會想在生活中引入遊戲機制，以提高活動的參與度或樂趣。</p><p>最常見的遊戲化（Gamification）應用是 PBS（Point, Badge, Scoreboard）- 積分、徽章、排行榜。這些遊戲化元素在許多遊戲和社交網站中都會出現，如<a href="http://www.khanacademy.org/%E2%80%8E" target="_blank" rel="noopener noreferrer"> KhanAcademy</a> 或 <a href="http://www.codecademy.com/" target="_blank" rel="noopener noreferrer">CodeAcademy</a> 等近年湧現的線上學習網站。在站內學習時，每完成一道題目，就可以取得一定的分數；完成了一個學習單元？恭喜！你獲得了一個線上的徽章，可以把聯結展示給你的朋友或潛在僱主看。</p><p>但目前的遊戲化（Gamification）應用有個問題：我已在這平台 / 遊戲上投入了那麼多時間、精力，（可能還有金錢），一旦不用這平台 / 遊戲之後，那些我的豐功偉業都不見了。於是使用者 / 玩家會傾向停留在剛開始選擇的平台中，並減少嘗試其他家服務的意願。於是「Lock in」、大者恆大的現象就出現了。</p><p>也因此 Apple、Google 都仿效 XBox 推出自己的 Game Center，提供積分、徽章（成就）、玩家配對等功能，讓在同一個平台上的玩家更方便嘗試不同遊戲，並且保留遊戲的進度，期望能綁住使用者 / 玩家。</p><p>這個現象對遊戲或作業系統平台商而言也許是好事，但是如果把目標改成線上學習網站的話... 我是希望可以在更專門的網站學習不同的技能啦。
而且最好是不管線上或學習實際課程後，我都可以得到徽章 / 證書，這樣我可以把我收集到的成就展示給我的朋友或潛在僱主看。</p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="第一個中文世界的開放徽章">第一個中文世界的開放徽章<a href="#第一個中文世界的開放徽章" class="hash-link" aria-label="Direct link to 第一個中文世界的開放徽章" title="Direct link to 第一個中文世界的開放徽章">​</a></h4><p>Mozilla 嘗試在推動的 <a href="http://openbadges.org/" target="_blank" rel="noopener noreferrer">OpenBadges</a>（開放徽章）標準就是一個解決線上 / 線下，不同網站之間徽章 / 成就流通，鼓勵使用者多多嘗試的方案。</p><p>前幾週在我講授的 <a href="http://registrano.com/events/coscup-2013-hands-on-gasolin" target="_blank" rel="noopener noreferrer">COSCUP 課程</a> 上，發出了第一個（? 我想應該是吧）中文世界的<a href="http://badg.us/en-US/badges/badge/COSCUP-2013-Hands-on%EF%BC%9A%E4%B8%80%E5%B0%8F%E6%99%82%E7%B6%B2%E9%A0%81-App-%E9%9B%A2%E7%B7%9A%E5%84%B2%E5%AD%98%E5%B0%B1%E4%B8%8A%E6%89%8B" target="_blank" rel="noopener noreferrer">開放徽章</a>。</p><p></p><p>發放的流程是這樣的：</p><p>1<!-- -->.<!-- --> 學員聽完第一個小時課程，並已實際 Lab 操作一陣子，符合取得徽章的資格
2<!-- -->.<!-- --> 提供學員印出的徽章兌換券，上面的內容如下 </p><p></p><p>徽章兌換券
3<!-- -->.<!-- --> 學員直接使用智慧型手機掃描條碼，或前往 <a href="http://badg.us/" target="_blank" rel="noopener noreferrer">http://badg.us/</a> 網站輸入兌換碼。
4<!-- -->.<!-- --> 學員登入後可取得徽章</p><p></p><p></p><p>5<!-- -->.<!-- --> 取得的徽章可以直接分享給他的朋友或潛在僱主看，或導出到 <a href="http://backpack.openbadges.org/" target="_blank" rel="noopener noreferrer">徽章背包</a> (<a href="http://backpack.openbadges.org/" target="_blank" rel="noopener noreferrer">http://backpack.openbadges.org/</a>) 中備份。所有符合 OpenBadges 標準的徽章都可以備份到 <a href="http://backpack.openbadges.org/" target="_blank" rel="noopener noreferrer">徽章背包</a> 中。學員可以結合其他網站上取得徽章，將這些徽章整理成一個個收藏（Collection），有系統地分享給他的朋友或潛在僱主看。</p><p>透過這樣的方式，即使是實體的課程，也可以在線上留下印記！學員除了學到課程知識，也得到了一個可以永久保存的紀念章。</p><p>除了讓使用者願意多方嘗試之外，同時也讓一般人擁有發放徽章 / 證書的能力。從初步的使用經驗來看，開放徽章還有很多的可能性值得探索。</p>]]></content>
        <category label="gamification" term="gamification"/>
        <category label="Mozilla" term="Mozilla"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[如果想免費實習，就去參與Open Source活動吧]]></title>
        <id>https://blog.gasolin.idv.tw/code/free-practice-via-involving-opensource</id>
        <link href="https://blog.gasolin.idv.tw/code/free-practice-via-involving-opensource"/>
        <updated>2013-08-26T10:25:29.000Z</updated>
        <summary type="html"><![CDATA[大企業喜歡名校畢業生並不是沒有原因的。]]></summary>
        <content type="html"><![CDATA[<p>大企業喜歡名校畢業生並不是沒有原因的。</p><p>我們知道每個人都有自己的偏好，不太可能剛好喜歡每個要學習的科目。
成績優秀的學生不只是頭腦好，同時也有辦法控制自己的偏好，能同時把多種不同類型的科目都搞好。</p><p>可以把不見得那麼喜歡的工作也很好地執行，正是許多缺螺絲釘的大企業所需要的。</p><p>還好社會不是只有讀名校 -<!-- -->&gt;<!-- -->進大企業這一種出路。不少非名校畢業生在開始工作後，也逬發出驚人的能量，在職場上如魚得水。就我觀察屬於這類型的朋友，通常在做喜歡的事情時都具有非凡的熱情。</p><p>當你對一件事情有熱情，持續投入一萬個小時，你一定會有所專精。當社會剛好需要你的能力，又出的起價錢時，你就算有所成就了。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="找工作與經驗">找工作與經驗<a href="#找工作與經驗" class="hash-link" aria-label="Direct link to 找工作與經驗" title="Direct link to 找工作與經驗">​</a></h3><p>有所成就之前要有一步步踏實積累的過程。如果能找到適合的工作，那對實現目標肯定有幫助。而就人力銀行等機構放出的調查來看，要找到適合的工作不容易，而許多工作又要求先有經驗。</p><p>現在已經二十一世紀又過十多年了，網路從普及，社交化，到漸漸融入了日常生活。
累積經驗的過程已經不只是進企業實習一途。</p><p>我認識了一些在學業上可能不算頂尖，但在我眼中絕對算優秀的學生，
從他們的表現我認識到：對想找 ITC 資通軟體類工作的大學生來說，開始要工作時，「沒有經驗」只是個借口。</p><p>為什麼我說沒有經驗只是個借口？因為資通軟體類（甚至企劃，行銷類）累積經驗的機會實在是太多了。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="open-source-相關的實習機會">Open Source 相關的實習機會<a href="#open-source-相關的實習機會" class="hash-link" aria-label="Direct link to Open Source 相關的實習機會" title="Direct link to Open Source 相關的實習機會">​</a></h3><p>請試著猜猜以下問題的答案：</p><ul><li>去年有多少 APP 比賽？</li><li>去年中研院幾個月舉辦一次百人聚會？</li><li>估計台北每個月舉辦的免費聚會 / 演講數目光 2012 年，台灣至少有 3, 4 個 App 比賽，中研院幾乎每個月都有 Conference 聚會，台北每個月至少 10 個以上免費聚會 / 演講。幫忙聚會的籌備，招商，報名，會議當天的網路，動線，飲食，時間控制，算不算實習經驗？</li></ul><p>參加 App 比賽，需要企劃，設計，開發，美術，簡報，行銷等技巧，可不可以算實習經驗？
協助舉辦百人聚會算不算企劃，行銷類的實習經驗？</p><p>我說我沒有企劃，行銷背景，但我們辦的<!-- -->&nbsp;<a href="https://plus.google.com/+GTUGTaipei/posts" target="_blank" rel="noopener noreferrer">GTUG Taipei 專頁</a>&nbsp;<!-- -->有 28000 人追蹤，可不可以算實習經驗？</p><p>有志於進軟體公司的學生，那更沒有藉口了。<a href="http://www.github.com/" target="_blank" rel="noopener noreferrer">Github</a>, <a href="https://code.google.com/hosting/" target="_blank" rel="noopener noreferrer">GoogleCode</a> 上面有多少大大小小的開源專案，只要在家裡，就可以學到如何使用工作中一定會用上的 svn, git 等版本控制工具，並透過郵件列表，Issue Tracker 等與世界各地一流的工程師直接溝通。可不可以算實習經驗？</p><p>就我來看，這些當然不該算做實習經驗。因為你參與的不只是實習，而是真正有意義，實在的工作經歷。</p><p>我反對缺乏目的的進企業免費實習。但我贊成主動透過參與開源社群，邊貢獻社會邊學習。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="參與-open-source-活動的好處">參與 Open Source 活動的好處<a href="#參與-open-source-活動的好處" class="hash-link" aria-label="Direct link to 參與 Open Source 活動的好處" title="Direct link to 參與 Open Source 活動的好處">​</a></h3><p>用參與 Open Source 活動作為實習經歷有什麼好處呢？</p><ul><li><strong>透過 **</strong>參與活動時扮演不同類型角色 **，可以摸清楚自己的偏好與特長</li><li><strong>實習的成果公開，可以放在履歷上讓潛在雇主隨時 Reference</strong></li><li><strong>查看你的活動記錄，可以看出你的團隊合作技能</strong></li><li><strong>有參與過國外開源專案，你的英文程度至少在書面溝通上沒問題</strong></li><li><strong>「我有貢獻 python/android/mozilla 專案的經歷」，怎麼看都很威</strong></li><li><strong>和各型各色，但一樣具有熱情的人一起共事的經驗，將會影響你做事與看待事情的態度</strong>何況大型開源專案對貢獻程式碼的流程，與控管程式碼品質的嚴謹程度，遠高於一般台灣軟體公司。此外還有<strong>社會化</strong>的因素：<strong>你的程式碼所有人都看得到，不寫好一點好意思放出去？</strong></li></ul><p>因此參與開源專案對磨練自己寫程式的水準也很有幫助。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="如何將-open-source-活動貢獻加入經歷">如何將 Open Source 活動貢獻加入經歷<a href="#如何將-open-source-活動貢獻加入經歷" class="hash-link" aria-label="Direct link to 如何將 Open Source 活動貢獻加入經歷" title="Direct link to 如何將 Open Source 活動貢獻加入經歷">​</a></h3><p>透過<!-- -->&nbsp;<a href="https://www.ohloh.net/" target="_blank" rel="noopener noreferrer">Ohloh</a>&nbsp;<!-- -->或是<!-- -->&nbsp;<a href="http://careers.stackoverflow.com/" target="_blank" rel="noopener noreferrer">Careers 2.0</a>&nbsp;<!-- -->(by stackoverflow)<!-- -->&nbsp;<!-- -->，可以追蹤不同來源的開源軟體專案貢獻度。近年也可附上個人<a href="https://github.com/gasolin" target="_blank" rel="noopener noreferrer">Github 頁面</a>。</p><p>國外招聘網站如<!-- -->&nbsp;<a href="http://www.linkedin.com/" target="_blank" rel="noopener noreferrer">linkedin</a>，可以在「Projects」或「Experience」中加入 Open Source 的貢獻成果。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="參考資料">參考資料:<a href="#參考資料" class="hash-link" aria-label="Direct link to 參考資料:" title="Direct link to 參考資料:">​</a></h2><blockquote><p>"Whether or not somebody has contributed to open source is a good indicator of whether they're a good engineer"
-- <a href="http://news.cnet.com/8301-10797_3-57495099-235/forget-linkedin-companies-turn-to-github-to-find-tech-talent/" target="_blank" rel="noopener noreferrer">Companies turn to GitHub to find tech talent</a></p></blockquote><h3 class="anchor anchorWithStickyNavbar_LWe7" id="如何參與-open-source-活動">如何參與 Open Source 活動<a href="#如何參與-open-source-活動" class="hash-link" aria-label="Direct link to 如何參與 Open Source 活動" title="Direct link to 如何參與 Open Source 活動">​</a></h3><p>這樣聽起來還不錯，但以前我都不知道這些資訊，我可以從哪開始參與哩？
這邊列出一些很安全的選擇供參考：</p><p>1<!-- -->.<!-- --> 台灣每年固定的大型開源社群活動</p><ul><li><a href="http://osdc.tw/" target="_blank" rel="noopener noreferrer">OSDC.tw</a>&nbsp;</li><li></li></ul><p>2<!-- -->.<!-- --> 愛台灣：讓台灣公開資料更易使用</p><ul><li></li><li><a href="http://codefortomorrow.org/" target="_blank" rel="noopener noreferrer">Code for Tomorrow</a>&nbsp;</li></ul><p>3<!-- -->.<!-- --> 有組織地協助學生參與開源專案：台灣<a href="http://moztw.org/" target="_blank" rel="noopener noreferrer">MozTW</a>社群</p><ul><li>選擇想了解 / 參與的 Mozilla 專案 <a href="http://whatcanidoformozilla.org/" target="_blank" rel="noopener noreferrer">http://whatcanidoformozilla.org/</a></li><li>中文 moz 開發群組 <a href="https://groups.google.com/forum/?fromgroups#!forum/mozilla.dev.general.zh" target="_blank" rel="noopener noreferrer">mozilla.dev.general.zh</a></li></ul><p>4<!-- -->.<!-- --> 如果人在台北，對 Web 或 Mobile 相關技術有興趣，歡迎來<!-- -->&nbsp;<a href="http://www.taipei-gtug.org/" target="_blank" rel="noopener noreferrer">GTUG Taipei</a>&nbsp;<!-- -->聚聚。</p><p>其他我參加過，放心推薦的社群，可以依地域選擇參與</p><ul><li><a href="http://www.tossug.org/" target="_blank" rel="noopener noreferrer">TOSSUG</a>&nbsp;<!-- --> (北市)</li><li><a href="http://www.hackingthursday.org/" target="_blank" rel="noopener noreferrer">Hacking Thursday</a>&nbsp;<!-- -->(北市)<!-- -->&nbsp;</li><li><a href="http://kalug.linux.org.tw/" target="_blank" rel="noopener noreferrer">Kalug</a>&nbsp;<!-- -->(高雄)</li></ul><p>不用害羞，我們可以幫到你，為了將來有更棒的夥伴，為了能在台灣一起做更棒的事。</p><p>相關文章</p><ul><li><a href="http://sa.ylib.com/MagCont.aspx?Unit=columns&amp;id=2210" target="_blank" rel="noopener noreferrer">社交網路求職術</a> (by ping)</li></ul>]]></content>
        <category label="soft" term="soft"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[開始貢獻開源專案有多簡單？三件暑假都過了你可能還不知道的事]]></title>
        <id>https://blog.gasolin.idv.tw/code/OSS-in-summer</id>
        <link href="https://blog.gasolin.idv.tw/code/OSS-in-summer"/>
        <updated>2013-08-18T15:37:25.000Z</updated>
        <summary type="html"><![CDATA[暑假都快結束了，你的暑假夠充實嗎？參與開源專案，其實離身為學生的你沒那麼遠：（以下拿 Mozilla 跟 g0v 相關專案做範例，當然不止這兩家的開源專案，可以在 github, googlecode 等開源專案聚集地上找到有很多有趣的開源專案，選這兩家的原因是在台灣你一定找得到人問）]]></summary>
        <content type="html"><![CDATA[<p></p><p>暑假都快結束了，你的暑假夠充實嗎？參與開源專案，其實離身為學生的你沒那麼遠：（以下拿 Mozilla 跟 g0v 相關專案做範例，當然不止這兩家的開源專案，可以在 <a href="http://www.github.com/" target="_blank" rel="noopener noreferrer">github</a>, <a href="http://code.google.com/hosting/" target="_blank" rel="noopener noreferrer">googlecode</a> 等開源專案聚集地上找到有很多有趣的開源專案，選這兩家的原因是在台灣你一定找得到人問）</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="一-你不見得要懂英文-fluent-english-is-not-essential-criteria">一。你不見得要懂英文 Fluent English is not essential criteria<a href="#一-你不見得要懂英文-fluent-english-is-not-essential-criteria" class="hash-link" aria-label="Direct link to 一。你不見得要懂英文 Fluent English is not essential criteria" title="Direct link to 一。你不見得要懂英文 Fluent English is not essential criteria">​</a></h3><p>剛打出這點，我自己都覺得很扯，跟軟體扯上邊的事情不懂英文怎麼搞？但我發現這點還真的成立，因為現在身在台灣就有不少參與開源的機會，這是幾年前難以想像的：</p><ul><li>Mozilla 社群參與 <a href="http://mozilla.com.tw/community/" target="_blank" rel="noopener noreferrer">http://mozilla.com.tw/community/</a></li><li>零時政府 參與我們 <a href="http://g0v.tw/join.html" target="_blank" rel="noopener noreferrer">http://g0v.tw/join.html</a></li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="二-你不見得要會寫程式-coding-skill-is-not-essential-criteria">二。你不見得要會寫程式 Coding skill is not essential criteria<a href="#二-你不見得要會寫程式-coding-skill-is-not-essential-criteria" class="hash-link" aria-label="Direct link to 二。你不見得要會寫程式 Coding skill is not essential criteria" title="Direct link to 二。你不見得要會寫程式 Coding skill is not essential criteria">​</a></h3><p>如果你的英文還行，大型的開源專案需要各種人才的貢獻，諸如協助新使用者（Helping Users）、多使用並協助找錯誤（Quality Assurance）、協助推廣（Spread the word）、將軟體翻譯成中文（Localization）、改善文件（Documentation）等等，抽點時間出來，選擇自己能做的，就可以為其他人帶來幫助，也幫自己累積經驗。這不只是社會服務，你可以自行選擇參與自己愛用的、相信的開源專案。</p><ul><li><a href="https://www.mozilla.org/en-US/contribute/" target="_blank" rel="noopener noreferrer">https://www.mozilla.org/en-US/contribute/</a> (en)</li><li>我是如何參與黑客松<a href="http://hack.g0v.tw/g0vMOE/ciS8hEGw7iu" target="_blank" rel="noopener noreferrer">http://hack.g0v.tw/g0vMOE/ciS8hEGw7iu</a></li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="三-你不見得需要先有想法-idea-is-not-essential-criteria">三。你不見得需要先有想法 Idea is not essential criteria<a href="#三-你不見得需要先有想法-idea-is-not-essential-criteria" class="hash-link" aria-label="Direct link to 三。你不見得需要先有想法 Idea is not essential criteria" title="Direct link to 三。你不見得需要先有想法 Idea is not essential criteria">​</a></h3><p>對於會寫程式的人來說，大型專案會有非常多的現有問題需解決，並會為新人提供一些指引。如 Mozilla 提供了「what can i do」網頁，讓具備各種不同技能的開發者可以更快地參與能貢獻的專案。 </p><ul><li>what can i do <a href="http://www.whatcanidoformozilla.org/" target="_blank" rel="noopener noreferrer">http://www.whatcanidoformozilla.org/</a> (右上角可以切換語言) 例如熟悉 JavaScript 的開發者，可以參與 Firefox OS 使用者界面</li><li><a href="https://developer.mozilla.org/en-US/docs/Mozilla/Firefox_OS/Platform/Gaia" target="_blank" rel="noopener noreferrer">Gaia</a> 專案、Mozilla 網站開發、Firefox 界面等。</li></ul><p></p><p>熟悉 Java/Android，可以參與 <a href="https://wiki.mozilla.org/Mobile/Get_Involved" target="_blank" rel="noopener noreferrer">Firefox for Android</a> 版的開發等等。</p><p></p><p>有自己的想法想實做當然很好，但在還沒找到之前，不妨先參與看看中大型的專案，查看文件、瞭解文化、學習程式風格、開發流程、與其它開發者互動等學校裡沒教的事，絕對會是很難忘的暑期經驗。</p>]]></content>
        <category label="soft" term="soft"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[貢獻開源專案？從怪獸（Mozilla）與超人蓋亞（Gaia）開始吧]]></title>
        <id>https://blog.gasolin.idv.tw/code/contribute-open-source</id>
        <link href="https://blog.gasolin.idv.tw/code/contribute-open-source"/>
        <updated>2013-08-09T10:30:01.000Z</updated>
        <summary type="html"><![CDATA[上週在 Coscup 2013 演講的投影片，介紹為何要參與 Open Source專案，基本 Firefox OS架構，和 web 技術人如何運用自己的能力來參與 Gaia 專案開發。]]></summary>
        <content type="html"><![CDATA[<p></p><p>上週在 Coscup 2013 演講的投影片，介紹為何要參與 Open Source 專案，基本 Firefox OS 架構，和 web 技術人如何運用自己的能力來參與 Gaia 專案開發。</p><iframe allowfullscreen="" frameborder="0" height="356" marginheight="0" marginwidth="0" mozallowfullscreen="" scrolling="no" src="http://www.slideshare.net/slideshow/embed_code/24906537" width="100%"> </iframe><p><strong> <a href="http://www.slideshare.net/gasolin/steps-to-contribute-to-firefox-os-2" target="_blank" rel="noopener noreferrer" title="Steps to contribute to firefox os (gaia)">Steps to contribute to firefox os (gaia)</a>&nbsp;</strong></p><p>為這次演講花一個晚上做了一個簡單的 hack demo，在撥打電話時，馬總統會報出正在播的數字。</p><iframe allowfullscreen="" frameborder="0" height="315" src="//www.youtube.com/embed/EgxpzbgS_cY" width="420"></iframe><p>感謝馬總統跨刀演出。</p><p>聲音來自 Open Source 的 <a href="http://zhusee2.github.io/bumbler-to-speech/" target="_blank" rel="noopener noreferrer">Bumbler to speech</a> 專案。</p>]]></content>
        <category label="Mozilla" term="Mozilla"/>
        <category label="FirefoxOS" term="FirefoxOS"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to build your own 'repo' to Manage project with multiple git repositories]]></title>
        <id>https://blog.gasolin.idv.tw/devtools/How-to-build-your-own-repo-to-Manage-project-with-multiple-git-repositories</id>
        <link href="https://blog.gasolin.idv.tw/devtools/How-to-build-your-own-repo-to-Manage-project-with-multiple-git-repositories"/>
        <updated>2013-07-29T08:57:09.000Z</updated>
        <summary type="html"><![CDATA['repo' is a good tool to manage project with multiple git repositories. Its developed to serve the need to manage Android Open Source Project (AOSP), which counts on bunch of open source projects. Then the 'repo' tool is used for chromium and chromium OS (known as open source version of Chrome browser and Chrome OS). Now Mozilla Boot-to-Gecko (B2G, known as Firefox OS) also adpot the 'repo' tool to manage multiple git repositories.]]></summary>
        <content type="html"><![CDATA[<p></p><p>'<a href="http://source.android.com/source/developing.html" target="_blank" rel="noopener noreferrer">repo</a>' is a good tool to manage project with multiple git repositories. Its developed to serve the need to manage Android Open Source Project (AOSP), which counts on bunch of open source projects. Then the 'repo' tool is used for chromium and chromium OS (known as open source version of Chrome browser and Chrome OS). Now Mozilla Boot-to-Gecko (B2G, known as Firefox OS) also adpot the 'repo' tool to manage multiple git repositories.</p><p>For a short time of experiment, I find its pretty simple to setup your own 'repo' that can help you manage multiple git repositories. Here is my findings.</p><p>To install 'repo' command, you can refer to <a href="http://source.android.com/source/downloading.html#installing-repo" target="_blank" rel="noopener noreferrer">Installing repo</a>.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="make-your-own-repo">Make your own repo<a href="#make-your-own-repo" class="hash-link" aria-label="Direct link to Make your own repo" title="Direct link to Make your own repo">​</a></h2><p>All you have to do is:</p><p>1<!-- -->.<!-- --> setup an accessible git repository
2<!-- -->.<!-- --> Put a 'default.xml' file in it
3<!-- -->.<!-- --> Use 'repo init' command to access this<!-- -->&nbsp;<!-- --> git repository.</p><p>Done!</p><p>Here is the default.xml sample, there are three main tags:</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">&lt;div class="highlight"&gt;&gt; &lt;span class="cp"&gt;&amp;lt;?xml version="1.0" encoding="UTF-8"?&amp;gt;&lt;/span&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; &lt;span class="nt"&gt;&amp;lt;manifest&amp;gt;&lt;/span&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; &lt;span class="c"&gt;&amp;lt;!-- define hosts --&amp;gt;&lt;/span&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; &lt;span class="nt"&gt;&amp;lt;**remote**&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"b2g"&lt;/span&gt; &lt;span class="na"&gt;fetch=&lt;/span&gt;&lt;span class="s"&gt;"https://github.com/mozilla-b2g/"&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; &lt;span class="c"&gt;&amp;lt;!-- default settings  --&amp;gt;&lt;/span&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; &lt;span class="nt"&gt;&amp;lt;**default**&lt;/span&gt; &lt;span class="na"&gt;sync-j=&lt;/span&gt;&lt;span class="s"&gt;"4"&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt; &lt;span class="c"&gt;&lt;!-- projects --&gt;**project** remote="b2g" revision="refs/heads/master" name="gaia" path="."&lt;/manifest&gt;Look at the 'project' tag. It describes that we'd like to sync the 'gaia' repository's 'master' branch from remote 'b2g' host.</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="explaination">Explaination<a href="#explaination" class="hash-link" aria-label="Direct link to Explaination" title="Direct link to Explaination">​</a></h3><div class="language-html codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-html codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">?xml</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">version</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">1.0</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">encoding</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">UTF-8</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">manifest</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> ...</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">manifest</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>The 'default.xml' syntax is wrapped by 'manifest' tag.
It contains three parts of definition:</p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="hosts">Hosts<a href="#hosts" class="hash-link" aria-label="Direct link to Hosts" title="Direct link to Hosts">​</a></h4><div class="language-html codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-html codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">remote</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">name</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">b2g</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">fetch</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">https://github.com/mozilla-b2g/</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag punctuation" style="color:#393A34">/&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>remote' tag is used to define the hosts that we'd like to use in projects.
Note that it's not the actual git URL, but where the git hosted on.We can specify the actual git URL in 'project' tag.</p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="projects">Projects<a href="#projects" class="hash-link" aria-label="Direct link to Projects" title="Direct link to Projects">​</a></h4><div class="language-html codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-html codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">project</span><span class="token tag" style="color:#00009f"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">  </span><span class="token tag attr-name" style="color:#00a4db">remote</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">b2g</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">  </span><span class="token tag attr-name" style="color:#00a4db">revision</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">refs/heads/master</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">  </span><span class="token tag attr-name" style="color:#00a4db">name</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">gaia</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">  </span><span class="token tag attr-name" style="color:#00a4db">path</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">.</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag punctuation" style="color:#393A34">/&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>The file describes that we'll like to sync the 'gaia' repository's 'master' branch from remote 'b2g' host.</p><p>The 'revision' path is defined within the original .git folder. To switch to branch like "v1.0.1", we could change<!-- -->&nbsp;<!-- --> "refs/heads/master" to "refs/heads/v1.0.1".</p><p>It's almost the same as we have to do with git command.</p><p>By the way, default.xml itself is in a git repository, so you can specify versions by branch or whatever you like.</p><p>Defaults <code>&lt;default sync-j="4" /&gt;</code></p><p>In default tag we can specify the default values in project tag. ex: revisions, default repositories..., etc.
'sync-j' means with this setting, 'repo' command will download 4 resources at the same time.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="the-usage">The usage<a href="#the-usage" class="hash-link" aria-label="Direct link to The usage" title="Direct link to The usage">​</a></h2><p>Create a folder, switch in it, and run the following command:</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">&gt; $ repo init -u https://&amp;lt;your own git URL&amp;gt;.gitThen, fetch the resources with command</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; $ repo syncTo fetch a branch, run command</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; $ repo init -u https://&amp;lt;your own git URL&amp;gt;.git **-b** &amp;lt;branch&amp;gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Read <a href="http://source.android.com/source/developing.html#git-and-repo-cheatsheet" target="_blank" rel="noopener noreferrer">Git and repo cheatsheet</a> for more details about how git and repo tool work together. <!-- -->&nbsp;<!-- --> </p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="sample">Sample<a href="#sample" class="hash-link" aria-label="Direct link to Sample" title="Direct link to Sample">​</a></h2><p>Here is a working sample that able you to sync Mozilla Gaia repositorie, and automatically put vendor customization folder into its 'distribution/' sub-folder to ease the customization work. </p><p></p><p>Update at 7/29:</p><p>A workable process elaboration in slide format <a href="http://gasolin.github.io/gaia-repo/" target="_blank" rel="noopener noreferrer">http://gasolin.github.io/gaia-repo/ </a></p>]]></content>
        <category label="repo" term="repo"/>
        <category label="git" term="git"/>
        <category label="Android" term="Android"/>
        <category label="FirefoxOS" term="FirefoxOS"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[幫 Bugzilla 換個新佈景]]></title>
        <id>https://blog.gasolin.idv.tw/devtools/Bugzilla-theme</id>
        <link href="https://blog.gasolin.idv.tw/devtools/Bugzilla-theme"/>
        <updated>2013-06-30T12:44:21.000Z</updated>
        <summary type="html"><![CDATA[新的 Bugzilla 樣式]]></summary>
        <content type="html"><![CDATA[<p></p><p>新的 Bugzilla 樣式</p><p>在來 Mozilla 之前我用得比較多的是 <a href="http://www.redmine.org/" target="_blank" rel="noopener noreferrer">Redmine</a> 或 <a href="http://trac.edgewall.org/" target="_blank" rel="noopener noreferrer">Trac</a> 等問題追蹤系統，到了 Mozilla 之後才比較常接觸 <a href="http://bugzilla.mozilla.org/" target="_blank" rel="noopener noreferrer">Bugzilla</a>。</p><p>目前大部份 Mozilla 的開源軟體都使用 <a href="http://bugzilla.mozilla.org/" target="_blank" rel="noopener noreferrer">Bugzilla</a>  來追蹤 issues。所有開發者間針對 issues 的討論、審查、版本間的同步，各種開發相關的資訊都圍繞著這個系統進行，所以要貢獻 Mozilla 相關軟體開發專案，<a href="http://bugzilla.mozilla.org/" target="_blank" rel="noopener noreferrer">Bugzilla</a> 是必定造訪的中轉站。</p><p><a href="http://bugzilla.mozilla.org/" target="_blank" rel="noopener noreferrer">Bugzilla</a> 是貨真價實源自上個世紀的古董網站。<a href="http://en.wikipedia.org/wiki/Bugzilla" target="_blank" rel="noopener noreferrer">Wikipedia</a> 的資料寫著，第一版 Bugzilla 發表於 1998 年，使用 Tcl 語言撰寫。Bugzilla 2.0 則改使用 Perl 語言撰寫。原因是比起 Tcl，當時 Perl 語言更普遍，改成使用 Perl 語言可以吸引更多自願協助改進的開發者。</p><p>這麼老牌的開源軟體當然有很多歷史遺留問題，我們先來看目前版本的模樣</p><p></p><p>一般預設的 Bugzilla 樣式</p><p>咳咳... 只能說，過去的審美觀跟現在已經不太一樣了。</p><p>還好，Bugzilla 的開發者有意識到這個問題，登入帳號後，點選畫面右上角的 preference（設定） ，把 Bugzilla's general appearance (skin) 改成 'Mozilla'，選擇 Submit Changes（儲存）後，就可以看到新版界面。</p><p></p><p>調整設定</p><p>新的界面與 <a href="http://www.mozilla.com/" target="_blank" rel="noopener noreferrer">Mozilla 官方網站</a> 風格一致，界面新潮許多。</p><p></p><p>新版界面</p><p></p><p>對於每天使用的工具，做得更好看一點，真的可以增加使用的樂趣哩。</p><p>註：<a href="http://www.redmine.org/" target="_blank" rel="noopener noreferrer">Redmine</a> 或 <a href="http://trac.edgewall.org/" target="_blank" rel="noopener noreferrer">Trac</a> 剛好都發表於 2006 年，就像 git 與 mercurial 都剛好發表於 2005 年一樣巧。</p>]]></content>
        <category label="Mozilla" term="Mozilla"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[(Firefox) WebApp自動偵測與安裝腳本]]></title>
        <id>https://blog.gasolin.idv.tw/mozilla/script-Firefox-WebApp-autodetect-and-install</id>
        <link href="https://blog.gasolin.idv.tw/mozilla/script-Firefox-WebApp-autodetect-and-install"/>
        <updated>2013-05-13T15:53:49.000Z</updated>
        <summary type="html"><![CDATA[這陣子在了解如何開發webapp，其實基本流程很簡單。]]></summary>
        <content type="html"><![CDATA[<p>這陣子在了解如何開發 webapp，其實基本流程很簡單。
要把網頁變成 webapp，最基本的動作就是<a href="https://marketplace.firefox.com/developers/docs/quick_start" target="_blank" rel="noopener noreferrer">照著說明</a>寫個 manifest.webapp 檔案，放到網站的根目錄，然後在 web server 的設定加入對應的 MIME type 即可。用 Github Page 放網站的話，最後的 MIME 設定他們都幫我們弄好了。</p><p>使用者在電腦上透過 Firefox 安裝 webapp 後，就會多出一個對應的應用程式圖示，開啓這個 WebApp 時不會出現瀏覽器框，感覺就像真的應用程式。在 Android 上透過 Firefox for Android (測試版) 安裝 webapp 後，在桌面上則會多出一個 bookmark 捷徑。</p><p></p><p>圖：在 Mac 桌面上打開 2 個 webapp，不特別講也分不出來是 Web 還是 App 吧</p><p>我在測試的時候，發現寫好了 webapp 之後，使用者連到網頁時並不會自動詢問使用者是否要安裝 webapp。於是寫了以下腳本。</p><p>在 Body 標簽中引用以下腳本，即可自動偵測使用者是否可安裝 webapp (現在只有 Firefox Aurora 和 Firefox OS 支援 webapp API)</p><blockquote><p>&lt;<!-- -->script type="text/javascript"<!-- -->&gt;<!-- -->
//check if app is installed
if( navigator.mozApps != undefined ){var app_stat = navigator.mozApps.getSelf();
app_stat.onsuccess = function() {
<!-- -->&nbsp;<!-- --> if (app_stat.result) {
<!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- --> //instsalled
<!-- -->&nbsp;<!-- --> } else {
<!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- --> // not installed
<!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- --> var manifestUrl = location.href.substring(0, location.href.lastIndexOf('/'))+'/manifest.webapp';
<!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- --> var app_install = navigator.mozApps.install(manifestUrl);
<!-- -->&nbsp;<!-- --> }};
app_stat.onerror = function() {
<!-- -->&nbsp;<!-- --> alert('Error checking installation status: '+ this.error.message);
};
}
<!-- -->&lt;<!-- -->/script<!-- -->&gt;<!-- -->&nbsp;<!-- -->原始碼包含在<a href="https://github.com/gasolin/webapplate/blob/master/public/js/app_installer.js" target="_blank" rel="noopener noreferrer"> webapplate</a> 專案中。</p></blockquote><p> 透過</p><blockquote><p>location.href.substring (0, location.href.lastIndexOf ('/'))+'/manifest.webapp';
可以自動取得目前的 IP 或網址。</p></blockquote>]]></content>
        <category label="FirefoxOS" term="FirefoxOS"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Android書範例更新放到Github]]></title>
        <id>https://blog.gasolin.idv.tw/android/Android-book-samples-on-Github</id>
        <link href="https://blog.gasolin.idv.tw/android/Android-book-samples-on-Github"/>
        <updated>2013-05-12T08:40:43.000Z</updated>
        <summary type="html"><![CDATA[離上一版Android書的更新已經過一年多了，終於在最近改版的工作告一段落。]]></summary>
        <content type="html"><![CDATA[<p>離上一版 Android 書的更新已經過一年多了，終於在最近改版的工作告一段落。
再過一陣子，就可以看到新版本上市了。</p><p>這次的所有範例改放到 <a href="https://github.com/gasolin/androidbmi5th/" target="_blank" rel="noopener noreferrer">Github</a> 上。可以前往 <a href="https://github.com/gasolin/androidbmi5th/" target="_blank" rel="noopener noreferrer">https://github.com/gasolin/androidbmi5th/</a> 下載。</p><p>Github 使用 <a href="http://git-scm.com/" target="_blank" rel="noopener noreferrer">git</a> 作為版本控制系統，並提供很方便使用的網頁介面。</p><p>例如我使用分支 (branch) 來管理不同章節的範例程式碼。要在 github 上查看不同章節的程式碼，只要點選 Github 左上角的分枝選單，選取對應的章節，即可查看範例程式碼。</p><p></p><p>選取對應的章節，查看範例程式碼</p><p>此外，也可以透過左上角的「zip」按鈕，下載對應的章節範例程式碼。</p><p>若想透過 git 命令下載，可以使用如</p><blockquote><p>git clone <a href="https://github.com/gasolin/androidbmi5th.git" target="_blank" rel="noopener noreferrer">https://github.com/gasolin/androidbmi5th.git</a> -b CH36 CH36
命令來取得對應章節的範例程式碼。</p></blockquote><p>本書提供的範例無授權問題，可自由用於各種場合。 若對範例有疑問，可以直接在 github 專案的 <a href="https://github.com/gasolin/androidbmi5th/issues" target="_blank" rel="noopener noreferrer">Issues</a> 中提問。 </p><p>從更新的範例中可以看到，第五版本終於做到全書只有「一個」 BMI 範例（包含配對的測試範例）。圍繞著設計 BMI 應用程式的過程，介紹各種 Android 系統的運作與常用功能。我覺得新的改版對第一次入門的讀者來說，學習的過程應該更有樂趣。</p>]]></content>
        <category label="Android" term="Android"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Firefox OS Overview簡報]]></title>
        <id>https://blog.gasolin.idv.tw/mozilla/slide-Firefox-OS-Overview</id>
        <link href="https://blog.gasolin.idv.tw/mozilla/slide-Firefox-OS-Overview"/>
        <updated>2013-03-28T08:47:18.000Z</updated>
        <summary type="html"><![CDATA[話說到職1個多月了，每天都在學習，用從來沒想過的技術去解決各種問題的感覺實在很不錯。]]></summary>
        <content type="html"><![CDATA[<iframe allowfullscreen="" frameborder="0" height="356" marginheight="0" marginwidth="0" mozallowfullscreen="" scrolling="no" src="http://www.slideshare.net/slideshow/embed_code/17792569" width="427"> </iframe><p>話說到職 1 個多月了，每天都在學習，用從來沒想過的技術去解決各種問題的感覺實在很不錯。</p><p>昨天剛好有機會到成大計中，和修課的同學介紹 Firefox OS。也剛好把過去幾個月來對 Firefox OS 的了解做了一次整理。</p><p>在 1 小時的簡報之後，還接著 2 小時的上機實作課程。</p><p>上機課程中我做了一個<a href="https://github.com/gasolin/fxosbmi/tree/gh-pages" target="_blank" rel="noopener noreferrer">看來很眼熟的範例</a>，搭配 Github 實際拿來教學的效果也很不錯。</p><p></p><p>同天西班牙剛好也有個<a href="http://www.mozilla-hispano.org/firefox-os-app-days-valladolid/" target="_blank" rel="noopener noreferrer">App Days</a>活動，用整天更深入介紹 Firefox OS，簡報也可以下載。</p><p>Firefox OS 整個系統運作可以到 <a href="http://www.mozilla-hispano.org/archivos/docs/fxosappdaysvall/arquitectura.pdf" target="_blank" rel="noopener noreferrer">http://www.mozilla-hispano.org/archivos/docs/fxosappdaysvall/arquitectura.pdf</a> 查看。(工商服務一下，Firefox 已經內建 PDF viewer，網頁上直接開 PDF 不用先下載)</p><p>WebAPI 簡報 <a href="http://www.mozilla-hispano.org/archivos/docs/fxosappdaysvall/webapis.pdf" target="_blank" rel="noopener noreferrer">http://www.mozilla-hispano.org/archivos/docs/fxosappdaysvall/webapis.pdf</a></p>]]></content>
        <category label="FirefoxOS" term="FirefoxOS"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[The Web is the Platform - Firefox OS 動手玩]]></title>
        <id>https://blog.gasolin.idv.tw/mozilla/The-Web-is-the-Platform-Firefox-OS</id>
        <link href="https://blog.gasolin.idv.tw/mozilla/The-Web-is-the-Platform-Firefox-OS"/>
        <updated>2013-03-04T15:32:50.000Z</updated>
        <summary type="html"><![CDATA[(不知道為什麼影片解析度要用360p這麼低)]]></summary>
        <content type="html"><![CDATA[<iframe allowfullscreen="" frameborder="0" height="315" src="http://www.youtube.com/embed/-9vktI70iHc" width="560"></iframe>(不知道為什麼影片解析度要用360p這麼低)<p>Mozilla Co. 的 VP of Products Jay sullivan 來展示「Firefox OS」目前的版本，
其中桌面有個「everything.me」功能，除了可以用來裝 Web App 外，
因為 Web 的特性，所以不用像其他平台需要先安裝好再試用 App，而可以直接點選開始使用 App (Web)。
把 web 變成不需安裝、反安裝，隨查隨用的一次性 app 的概念還蠻有趣的。</p>]]></content>
        <category label="FirefoxOS" term="FirefoxOS"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[下一站, Mozilla, Firefox OS]]></title>
        <id>https://blog.gasolin.idv.tw/devtools/next-stop-Mozilla-Firefox-OS</id>
        <link href="https://blog.gasolin.idv.tw/devtools/next-stop-Mozilla-Firefox-OS"/>
        <updated>2013-02-19T08:26:28.000Z</updated>
        <summary type="html"><![CDATA[一直以來，在業餘時間裡我做了不少 Mobile App，寫了本Android開發書籍，參與並研究了一些 Web 框架和服務。前年開始也直接將Play!、Django等Web框架，和Android開發的經驗應用在工作上。]]></summary>
        <content type="html"><![CDATA[<p>一直以來，在業餘時間裡我做了不少 Mobile App，寫了本 Android 開發書籍，參與並研究了一些 Web 框架和服務。前年開始也直接將<a href="http://www.playframework.com/" target="_blank" rel="noopener noreferrer">Play!</a>、<a href="https://www.djangoproject.com/" target="_blank" rel="noopener noreferrer">Django</a>等 Web 框架，和 Android 開發的經驗應用在工作上。</p><p>我相信整合 Web 與 Mobile，以雲為基礎建設，讓連網設備 / 使用者得以跨平台在各種終端使用的應用，會是接下來技術的趨勢。</p><p>在主持<a href="http://www.taipei-gtug.org/" target="_blank" rel="noopener noreferrer">GTUG Taipei 活動</a>的兩年時間裡，跟著學了很多新東西，從中我也發現，現在已經有許多企業級或跟 Mobile App 開發相關的技術，都可以歸類到 Web 技術範疇了：</p><ul><li>越來越多人使用 JSON 來取代 XML</li><li>各種 RPC 紛紛改成使用 RESTFUL API*   non-rel, 適應雲端架構的<a href="http://www.mongodb.org/" target="_blank" rel="noopener noreferrer">MongoDB</a>也可直接將資料儲存成 JSON 格式</li><li>Web Server 端可以使用 <a href="http://nodejs.org/" target="_blank" rel="noopener noreferrer">node.js</a> 寫，透過 Event callback 形式的呼叫，可以得到很好的效能</li><li>可以使用<a href="http://www.phonegap.com/" target="_blank" rel="noopener noreferrer">PhoneGap</a>/<a href="http://cordova.apache.org/" target="_blank" rel="noopener noreferrer">Cordova</a>來封裝成各行動平台的 App</li><li>最近名字<a href="http://www.businessinsider.com/microsoft-eyes-appcelerator-acquisition-2013-2" target="_blank" rel="noopener noreferrer">跟 Microsoft 連在一起</a>的 <a href="http://www.appcelerator.com/" target="_blank" rel="noopener noreferrer">Titanium</a> 也可以用網頁技術生成各行動平台的 App</li></ul><p>因此當我知道 Firefox OS 在台灣有開發團隊時，
我告訴自己：這是個可以待在台灣，同時又有可能改變世界的機會。</p><p>我很幸運，待的<a href="http://www.104.com.tw/jobbank/custjob/index.php?r=job&amp;j=493f47704d4b445b36373f6831593b220414f487049714326262626223e402b2a735j57" target="_blank" rel="noopener noreferrer">前公司</a>環境與同事也非常好，可以推薦給大家。
當然，也歡迎大家來和我<a href="http://www.104.com.tw/jobbank/custjob/index.php?r=cust&amp;j=5e604325345c3e673c423b1d1d1d1d5f2443a363189j01&amp;jobsource=n104bank1" target="_blank" rel="noopener noreferrer">作伙伴</a>。</p><p>接下來我的分享應該會多出不少 Firefox OS 相關的心得，敬請期待。</p>]]></content>
        <category label="FirefoxOS" term="FirefoxOS"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Android 側邊滑動選單效果 (Side Menu Drawer)]]></title>
        <id>https://blog.gasolin.idv.tw/android/Android-Side-Menu-Drawer</id>
        <link href="https://blog.gasolin.idv.tw/android/Android-Side-Menu-Drawer"/>
        <updated>2013-01-23T02:45:42.000Z</updated>
        <summary type="html"><![CDATA[幾周前在GTUG Taipei活動，聽了David Wu分享的"A Deep Dive into Android Open Source Project"演講，回來後對Slide Menu效果很感興趣，也在gPaper改版時使用到這個技巧。]]></summary>
        <content type="html"><![CDATA[<p></p><p>幾周前在 GTUG Taipei 活動，聽了 David Wu 分享的 "A Deep Dive into Android Open Source Project" 演講，回來後對 Slide Menu 效果很感興趣，也在<a href="/tools/App-gpaper-2-0">gPaper 改版</a>時使用到這個技巧。</p><iframe allowfullscreen="" frameborder="0" height="315" src="http://www.youtube.com/embed/gwB8xkTckKc" width="560"></iframe><p>後來我選擇使用的是 Simple Side Drawer 這個 Library
<a href="https://github.com/adamrocker/simple-side-drawer" target="_blank" rel="noopener noreferrer">https://github.com/adamrocker/simple-side-drawer</a></p><p>Simple Side Drawer 的好處是只要把它提供的 jar 檔放到專案中，就可以搭配如<a href="http://actionbarsherlock.com/" target="_blank" rel="noopener noreferrer">ActionBarSherlock</a>等函式庫一起使用。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="使用simple-side-drawer">使用 Simple Side Drawer<a href="#使用simple-side-drawer" class="hash-link" aria-label="Direct link to 使用 Simple Side Drawer" title="Direct link to 使用 Simple Side Drawer">​</a></h3><p>使用時首先是下載 jar 檔放進專案的 lib 目錄中並匯入。</p><p>接著需要在 onCreate 中初始化: </p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">&gt; protected void onCreate (Bundle data) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; &amp;nbsp;&amp;nbsp; ....</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;       mSlidingMenu = new SimpleSideDrawer(this);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;       mSlidingMenu.setBehindContentView(R.layout.behind_menu);`&lt;/pre&gt;&lt;pre&gt;`&amp;nbsp;`&lt;/pre&gt;&lt;pre&gt;`}`&lt;/pre&gt;&lt;pre&gt;`之後在程式裡的任何地方，都可以透過呼叫:`&lt;/pre&gt;&lt;pre&gt;`&amp;nbsp;`&lt;/pre&gt;&gt; &lt;pre&gt;`&lt;code&gt;mSlidingMenu.toggleDrawer();`&amp;nbsp;&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;`</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>來控制側邊欄的開關。下面以常見的點選 App 圖示來控制側邊滑動選單做例子，來介紹側邊滑動選單可以如何整合到 App 中。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="透過點選app圖示控制側邊滑動選單"><code>透過點選App圖示控制側邊滑動選單</code><a href="#透過點選app圖示控制側邊滑動選單" class="hash-link" aria-label="Direct link to 透過點選app圖示控制側邊滑動選單" title="Direct link to 透過點選app圖示控制側邊滑動選單">​</a></h3><p></p><p>將 Side Menu Drawer 設定好之後，並不會有按了 App 圖示就開啟側邊選單的效果，需要一些程式碼來控制。</p><p>在程式中的 onCreate 或 onResume 裡加入控制碼，強制顯示 App 圖示旁的小箭頭，作為側邊滑動選單的視覺參照，讓使用者注意到 App 圖示點選了還有功能：</p><blockquote><p>ActionBar actionBar = this.getSupportActionBar();
actionBar.setDisplayHomeAsUpEnabled(true);</p></blockquote><p>在 onOptionsItemSelected 的判斷裡，加入點選 App 圖示時的動作：</p><blockquote><p>case android.R.id.home:
<!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- --> mSlidingMenu.toggleDrawer();
<!-- -->&nbsp;<!-- --> <!-- -->&nbsp;<!-- --> return true;</p></blockquote><p>這樣點選 App 圖示後，就會出現開關側邊滑動選單的效果。</p>]]></content>
        <category label="Android" term="Android"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[[App] gpaper 2.0，加入邊欄設計]]></title>
        <id>https://blog.gasolin.idv.tw/tools/App-gpaper-2-0</id>
        <link href="https://blog.gasolin.idv.tw/tools/App-gpaper-2-0"/>
        <updated>2013-01-22T04:48:04.000Z</updated>
        <summary type="html"><![CDATA[前年為了慶祝小朋友出生，寫了gPaper (原名gTracingPaper) 這個描圖App。]]></summary>
        <content type="html"><![CDATA[<p></p><p>前年為了慶祝小朋友出生，寫了<a href="https://play.google.com/store/apps/details?id=tw.idv.gasolin.android.gpaper" target="_blank" rel="noopener noreferrer">gPaper </a>(原名 gTracingPaper) 這個描圖 App。</p><p><a href="https://play.google.com/store/apps/details?id=tw.idv.gasolin.android.gpaper" target="_blank" rel="noopener noreferrer">gPaper</a>的特色是除了基本的白板、黑板或任意顏色的畫板可供塗鴉之外，還可以匯入圖片或照片當作底圖來照著描繪。</p><p>畫好後的圖片可以單獨儲存，或是將底圖一同輸出 (如上圖效果)。</p><p>這次改版將諸多原本在子選單裡的功能都放到如同 G+、FB 的側邊滑動功能選單裡，主界面變得清爽多了，操作時也減少了一次點選步驟。</p><p></p><p>gpaper App 可以直接從 Play Store 下載。</p><p></p>]]></content>
        <category label="Android" term="Android"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[[App] 台灣當季蔬果]]></title>
        <id>https://blog.gasolin.idv.tw/tools/App-Taiwan-fruit</id>
        <link href="https://blog.gasolin.idv.tw/tools/App-Taiwan-fruit"/>
        <updated>2013-01-19T02:13:34.000Z</updated>
        <summary type="html"><![CDATA[取得台灣當季蔬果App]]></summary>
        <content type="html"><![CDATA[<p></p><p></p><p>最近老婆為了讓家裡的小朋友吃得更健康，從圖書館借了一本叫做「<a href="http://www.books.com.tw/exep/assp.php/gasolin/exep/prod/booksfile.php?item=0010535135" target="_blank" rel="noopener noreferrer">吃當季盛產，最好！</a>」的書。有天，她請我幫忙掃描書後面的當季食材列表出來，以便去市場買蔬菜水果時可以隨時參考。</p><p>掃描時我一邊看著就來了興趣。不少人都可以隨口講出幾件台灣產的蔬菜水果，但是再進一步討論甚麼時候是 "當時"、"當令" 蔬果，可能連老一輩人也不一定答得出來。</p><p>於是搜尋了一些網路資料，發現農糧署有提供一些資料，但頗為凌亂，於是寫了些腳本，將台灣產的蔬菜水果分月份整理出來，貼上 Facebook 與朋友分享。</p><p>在整理之前，是我太少去買蔬果吧，我不曉得台灣產的水果中，其實只有「香蕉」才是一年四季皆有出產的水果。而平常聽到的「空心菜」、「火龍果」等蔬果，在官方資料中是叫做「蕹菜」、「仙蜜果」這類聞所未聞的名字。</p><p>最後我將這些不常見的叫法替換成慣用的蔬果名稱，補上一些來自維基百科的圖片，用 <a href="http://cordova.apache.org/" target="_blank" rel="noopener noreferrer">Cordova</a> + <a href="http://jquerymobile.com/" target="_blank" rel="noopener noreferrer">JQuery Mobile</a> 將整理好的結果包成了 Android APP，放到 Play Store 上讓大家方便參考。開啟 App 的時候會自動列出當月的食材，除了可以按月查詢之外，也可以查詢四季皆出產的蔬果。</p><p>台灣當季蔬果 App 可以直接從 Play Store 下載。
<a href="https://play.google.com/store/apps/details?id=tw.idv.gasolin.seasonfood" target="_blank" rel="noopener noreferrer"><img loading="lazy" src="https://developer.android.com/images/brand/zh-cn_generic_rgb_wo_45.png" alt="Get it on Google Play" class="img_ev3q"></a></p>]]></content>
        <category label="Android" term="Android"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[被下架 - 台北捷運地圖]]></title>
        <id>https://blog.gasolin.idv.tw/android/taipei-map-taked-down</id>
        <link href="https://blog.gasolin.idv.tw/android/taipei-map-taked-down"/>
        <updated>2013-01-12T09:41:51.000Z</updated>
        <summary type="html"><![CDATA[2013/1/10早上收到Play Store來信，台北捷運地圖App被下架了，原因是Alleged copyright  infringement（也就是侵權）。對這結果就法律而言我沒甚麼好抗議的，畢竟這個App確實利用了捷運公司所提供的地圖。]]></summary>
        <content type="html"><![CDATA[<p><a href="http://2.bp.blogspot.com/-D6LbWZEZDjA/UPEvzewJxxI/AAAAAAAAC8c/YZyYqFNlS_0/s1600/Screenshot_2013-01-12-17-31-06.png" target="_blank" rel="noopener noreferrer"><img loading="lazy" src="http://2.bp.blogspot.com/-D6LbWZEZDjA/UPEvzewJxxI/AAAAAAAAC8c/YZyYqFNlS_0/s320/Screenshot_2013-01-12-17-31-06.png" class="img_ev3q"></a>
2013/1/10 早上收到 Play Store 來信，<a href="https://play.google.com/store/apps/details?id=com.gasolin.android.metro.taipei" target="_blank" rel="noopener noreferrer">台北捷運地圖</a>App 被下架了，原因是 Alleged copyright  infringement（也就是侵權）。對這結果就法律而言我沒甚麼好抗議的，畢竟這個 App 確實利用了捷運公司所提供的地圖。</p><p>但即使這個 App 是在政府意識到 App 對民眾的價值前，為方便民眾查詢，提供純公益性質 (有清楚標示版權與來源，無廣告，純便民) 的 App，也會因依法行事被台北捷運局舉報。不分善意惡意直接一棒下去，實在是會讓想在政府動起來前先做些什麼的人心灰意冷。</p><p>我一直為自己利用業餘時間，能用自己的技術做公益 (Open Source、App)，並從中得到樂趣與技術的精進感到自豪。</p><p>這些年，這 App 累積了 26 萬人次下載，12 萬實裝次數，也至少有為社會做了點貢獻。</p><p>PS: 做台北捷運地圖時，我也順手做了一個<a href="https://play.google.com/store/apps/details?id=com.gasolin.android.metro.kaoshiung" target="_blank" rel="noopener noreferrer">高捷版</a>的，現在因為北捷運局的好心督促，我決定幡然悔悟，用更高的道德和法律標準做事情，先自我審查下架了。</p><p>Update 2013/1/12: 今天有點時間，我想還是再多聲明一下</p><p>1<!-- -->.<!-- --> 使用到版權物就是侵權
2<!-- -->.<!-- --> 公益不是侵權的正當理由
3.<!-- -->&nbsp;<!-- -->這個 App 已經達到它的階段使命，在沒有好工具的時候得自己做一個，而現在 Market 上已經有不少可用的地圖 App，不差這個了。我不會多花時間重做地圖再上架，或作其他處理。</p><p>就我粗淺的想法來看，如果有人拿我出版的紙書轉成 PDF 讓人四處免費下載，想必我不會舒服。但是我卻很歡迎大家把<a href="http://code.google.com/p/androidbmi/wiki/DiveIntoAndroid" target="_blank" rel="noopener noreferrer">電子書版</a>網址分享出去（<a href="http://code.google.com/p/androidbmi/wiki/DiveIntoAndroid" target="_blank" rel="noopener noreferrer">電子書版</a>網址上有加創用 CC，聲明不歡迎商業使用或轉載，只歡迎連結分享。），因為可以幫到一些人入門 Android。而等他們有能力時，可能還會去買一本書，或把這個有用的資源分享給別人。</p><p>當初會做這個捷運 App，一方面是方便自己，方便別人；另一方面對捷運公司而言，如果有人免費印刷捷運地圖送給旅人，讓大眾可以隨時查找附近捷運站與目的地站點，提昇搭乘率，可以讓公司賺更多錢又省下推廣成本。</p><p>如果人家對此不稀罕，那也不用貼人家的冷屁股。</p><p>Update 2013/1/11: 因為網站也下架了，來為這 App 做一下回顧好了</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="下載">下載<a href="#下載" class="hash-link" aria-label="Direct link to 下載" title="Direct link to 下載">​</a></h3><p>&nbsp;<!-- -->26 萬人次下載，12 萬實裝次數</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="評價">評價<a href="#評價" class="hash-link" aria-label="Direct link to 評價" title="Direct link to 評價">​</a></h3><p>五星評價 383
四星評價 471
三星評價 76
三星評價 20
一星評價 32</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="評論">評論<a href="#評論" class="hash-link" aria-label="Direct link to 評論" title="Direct link to 評論">​</a></h3><p>看評論非常有趣，一些人覺得沒價值的東西，在另一堆人眼中卻十分實用。</p><p>五星評論</p><p>2012
11/23 非常實用 沒有廣告，沒有其他複雜的功能，打開快速不會造成手機的負擔，其實 app 像這樣簡單就很好用
10/26 以後出門忘記捷運坐到哪一站，有了這程式都不怕！
10/23 超簡潔 很簡單明瞭，很小巧不到 1Mb，完全不必特殊受權。好！
10/2 為了新的捷運路線下載 只要能正常使用就好了。沒有任何權限真是好！
1/12 把其他複雜的下拉選站名，路線規劃的 app 刪掉了，其實我只要這樣一張捷運圖就好.
<!-- -->&nbsp;<!-- -->1/6 非常實用 簡單的東西有時候是最好用的東西
2011
10/14 好用 對不是住台北的民眾是非常方便明瞭的
<!-- -->&nbsp;<!-- -->8/16 很方便 一張地圖正是我的需求～ 單點放大也很好用
1/31 正好符合我需求，一張圖就好，簡簡單單
2010
10/10 好方便啊！簡單又直覺的設計！ </p><p>一星評論
2013
1/8 只是一張圖 好歹也整合一下出口及票價吧，只是張圖的話自己下載不就好了，說好用的人要求會不會太低了？
2012
12/15 就一張圖？
4/23 根本不用做成程式 只要放張圖就好了。
2011
2/10 無聊的東西，只是張照片
1/29 一張捷運路線圖罷了
2010
10/31 縮放功能很不方便，只有一張地圖要幹嘛 </p><p>被檢舉資訊（隱去人名）</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">AutoDetectedBrowser: Google Chrome</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">AutoDetectedOS: Windows XP</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">IIILanguage: zh-Hant</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">IssueType: lr_dmca</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Language: zh-Hant</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">agree1: checked</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">agree: checked</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">android_app_developer_1: gasolin</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">android_app_name_1: 台北捷運地圖 Taipei Metro Map</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">android_app_url_1:[https://play.google.com/store/apps/details?id=com.gasolin.droid.metrotaipei&amp;feature=search_result#?t=W251bGwsMSwxLDEsImNvbS5nYXNvbGluLmFuZHJvaWQubWV0cm8udGFpcGVpIl0](https://play.google.com/store/apps/details?id=com.gasolin.android.metro.taipei&amp;amp;feature=search_result#?t=W251bGwsMSwxLDEsImNvbS5nYXNvbGluLmFuZHJvaWQubWV0cm8udGFpcGVpIl0)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">companyname: 台北大眾捷運股份有限公司</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">country_residence: TW</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">description_of_copyrighted_work: 「台北捷運地圖 Taipei Metro Map」未經本公司授權許可，逕自使用本公司之路線圖。</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">location_of_copyrighted_work: 「台北捷運地圖 Taipei Metro Map」這支APP內容直接使用本公司之路線圖。</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">represented_copyright_holder: 楊xx</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">signature: 許xx&amp;nbsp;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">signature_date_day: 14</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">signature_date_month: 12</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">signature_date_year: 2012</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content>
        <category label="Android" term="Android"/>
        <category label="Life" term="Life"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[個人工具箱2011]]></title>
        <id>https://blog.gasolin.idv.tw/tools/tooling-in-2011</id>
        <link href="https://blog.gasolin.idv.tw/tools/tooling-in-2011"/>
        <updated>2013-01-02T08:59:11.000Z</updated>
        <summary type="html"><![CDATA[先記錄下來手邊使用的工具，才有機會從繁雜中歸納出簡單的使用規則。]]></summary>
        <content type="html"><![CDATA[<p>先記錄下來手邊使用的工具，才有機會從繁雜中歸納出簡單的使用規則。</p><p>整理一下目前最常用的設備與應用</p><p>主要裝備</p><ul><li>Mac Book Pro 13"</li><li>Android 平板</li><li>Android 手機</li></ul><p><strong>Mac</strong></p><p>軟體選擇方面，主要著眼點是開源、跨平台（Windows、Mac）</p><p>生活</p><ul><li>個人網路硬碟：<strong><a href="http://www.dropbox.com/" target="_blank" rel="noopener noreferrer">Dropbox</a></strong></li><li>個人記帳：<a href="http://buddi.digitalcave.ca/" target="_blank" rel="noopener noreferrer">Buddi</a></li><li>主要瀏覽器：<a href="http://www.google.com/chrome" target="_blank" rel="noopener noreferrer">Chrome</a> （Firefox 備用）</li><li>高度檢視：<a href="http://www.tiddlywiki.com/" target="_blank" rel="noopener noreferrer">Tiddlywiki</a> + GTDTiddlyWiki 模版</li></ul><p>常用插件：</p><ul><li>1-Up for Google+，把 Google + 中的 + 1 按鈕換成加命菇，並播放加命音效</li><li>Android SDK Reference Search，在網址列中輸入 "ad 關鍵字" 就可以搜尋 Android 官網的參考文件</li><li>Awesome Screenshot: Capture <!-- -->&amp;<!-- --> Annotate，抓網站圖片</li><li>goo.gl URL Shortener，縮短網址</li><li>Google +1 按鈕，看到感興趣的網頁，可直接記錄或分享到 Google+</li><li>Google Track Me，記錄上網狀態，可在 Google Analytics 查看個人上網狀態</li></ul><p>網站工具</p><ul><li>主要社交網站：<strong><a href="http://gplus.to/gasolin" target="_blank" rel="noopener noreferrer">Google+</a></strong>、<strong><a href="http://www.facebook.com/" target="_blank" rel="noopener noreferrer">Facebook</a></strong></li><li><strong><a href="https://mail.google.com/tasks/canvas?pli=1" target="_blank" rel="noopener noreferrer">Google Tasks</a>、</strong><a href="http://trello.com/" target="_blank" rel="noopener noreferrer">Trello</a></li><li><strong><a href="http://www.google.com/calendar" target="_blank" rel="noopener noreferrer">Google 日曆</a></strong></li><li><strong><a href="http://mail.google.com/" target="_blank" rel="noopener noreferrer">GMail</a></strong></li><li><a href="http://www.anobii.com/" target="_blank" rel="noopener noreferrer">Anobii</a> 看書記錄</li><li><a href="http://www.douban.com/" target="_blank" rel="noopener noreferrer">豆瓣</a> 看電影記錄</li><li>家庭記帳：<a href="https://docs.google.com/previewtemplate?id=0AvP15xt5RG5edEpqSnlBZll3dldyX2lYY0o3X0lmenc&amp;mode=public" target="_blank" rel="noopener noreferrer">家計本本</a></li><li>長文蒐集：<a href="http://www.instapaper.com/" target="_blank" rel="noopener noreferrer">Instapaper</a></li><li>個人網站：使用<a href="http://code.google.com/intl/en/appengine/" target="_blank" rel="noopener noreferrer">Google App Engine</a>架設，改版容易</li><li>個人書籤網站：Google App Engine，常重複造訪的網站就那幾個，自己用 JQuery Mobile 寫一個分類書籤列表，在各種設備上都可以使用。在移動設備上的瀏覽器都不需用到書籤功能，當然也不需同步書籤了。</li><li>個人履歷：個人網站、Linkedin</li></ul><p>記事</p><ul><li><a href="http://sourceforge.net/projects/smultron/" target="_blank" rel="noopener noreferrer"><strike>Smultron</strike></a>&nbsp;<a href="https://github.com/b4winckler/macvim/downloads" target="_blank" rel="noopener noreferrer">mvim</a>（Windows 用 Notepad++）</li><li><strong><a href="http://www.evernote.com/" target="_blank" rel="noopener noreferrer">Evernote</a></strong></li></ul><p>設計</p><ul><li>心智圖：<strong><a href="http://www.xmind.net/" target="_blank" rel="noopener noreferrer">XMind</a></strong>（FreeMind 備用）</li><li>圖表：<a href="http://www.omnigroup.com/applications/omnigraffle" target="_blank" rel="noopener noreferrer">OmniGraffle</a></li><li>Mockup：<a href="http://www.balsamiq.com/products/mockups" target="_blank" rel="noopener noreferrer">Balsmiq Mockups</a></li><li>UML：<a href="http://astah.net/editions/community" target="_blank" rel="noopener noreferrer">Astah Community</a></li><li>StoryLine：<a href="http://gimcrackd.com/etc/src/" target="_blank" rel="noopener noreferrer">Twine</a></li></ul><p>Office</p><ul><li>簡報：KeyNote (PowerPoint、Google 文件、LibreOffice)</li><li>文書：Page (Word、Google 文件、LibreOffice)</li><li>試算表：Google 文件</li></ul><p>開發</p><ul><li>開發環境：Eclipse+ADT</li><li>版本控制：hg、svn、git</li><li>持續集成：Jenkins</li></ul><p>娛樂</p><ul><li>影片 VLC Player + Perian codecs + Flip4Mac WMV codec</li></ul><p>Android 平板</p><p>主要取代電腦拿來看網站、Google Reader、GMail、Youtube、影片、電子書、漫畫等</p><ul><li>主要瀏覽器：Firefox</li></ul><p>Firefox 在 10" 平板上表現很好，還內建將網頁儲存成 PDF 功能</p><ul><li>個人書籤網站</li><li>Google 地圖</li><li>GMail</li><li><strong><a href="https://market.android.com/details?id=tw.idv.gasolin.android.gfolder" target="_blank" rel="noopener noreferrer">gFolder</a></strong>、Dropbox，用 gFolder 主要是可以從 Dropbox 下載任一檔案到 Android 的指定資料夾下</li><li><a href="https://market.android.com/details?id=tw.idv.gasolin.android.gpaper" target="_blank" rel="noopener noreferrer">gPaper</a>，畫完後可以寄到自己信箱，選用這個主要是吃自己的狗食</li><li>AttachEmail Pro，存附檔、加附檔到 GMail</li><li><strike>Google Reader</strike> (新版無加星號文章列表)</li><li>Youtube</li><li>Google 日曆</li><li><strong>Evernote</strong></li><li><strong>Mindjet</strong>，心智圖軟體，修改完用 gFolder 傳上 Dropbox，在電腦上可以用 XMind 或 FreeMind 來開</li><li><a href="https://market.android.com/details?id=com.clov4r.android.nil" target="_blank" rel="noopener noreferrer">MoboPlayer</a>，不用轉檔就可以看 RMVB 等格式影片</li><li><a href="https://market.android.com/details?id=com.cerience.reader.app" target="_blank" rel="noopener noreferrer">Repligo</a>，PDF 閱讀器</li><li>自製 Epub 閱讀器（吃自己的狗食）</li><li></li><li><a href="https://market.android.com/details?id=org.swiftp" target="_blank" rel="noopener noreferrer">SwiFTP</a>，FTP Server</li><li></li><li><strike>ComicBricks</strike>&nbsp;[布卡漫畫](https://play.google.com/store/apps/details?id=cn.ibuka.hw.ui)</li></ul><p>Android 手機</p><p>主要用來增加辦事效率，或用零散時間看電子書。
換了 4.3" 大螢幕後，拿來看 Google + 或 Facebook 的機率提高了</p><ul><li><p>主要瀏覽器：Chrome (內建瀏覽器備用)</p></li><li><p>GMail</p></li><li><p>Google 地圖</p></li><li><p>Google Reader</p></li><li><p>Blogger</p></li><li><p>內建相機</p></li><li><p>內建時鐘</p></li><li><p><a href="https://market.android.com/details?id=com.gasolin.android.anobiit" target="_blank" rel="noopener noreferrer">Anobiit</a>，記錄看書狀況</p></li><li><p><strong>gFolder</strong>、Dropbox</p></li><li><p></p></li><li><p>Mindjet</p></li><li><p><a href="https://market.android.com/details?id=org.openintents.safe" target="_blank" rel="noopener noreferrer">OI Safe</a>，記錄密碼，備份用 gFolder 存到 Dropbox</p></li><li><p>Repligo</p></li><li><p>自製 Epub 閱讀器</p></li><li><p><a href="https://market.android.com/details?id=com.wsl.noom" target="_blank" rel="noopener noreferrer">Noom</a>，整合健康管理工具</p></li><li><p>SwiFTP</p></li><li><p>台北捷運地圖</p></li><li><p>Google+</p></li><li><p>Facebook
*<!-- -->&nbsp;<!-- -->布卡漫畫</p></li></ul>]]></content>
        <category label="life" term="life"/>
        <category label="tool" term="tool"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Firefox OS模擬器試玩]]></title>
        <id>https://blog.gasolin.idv.tw/mozilla/Firefox-OS-emulator</id>
        <link href="https://blog.gasolin.idv.tw/mozilla/Firefox-OS-emulator"/>
        <updated>2012-11-13T13:00:47.000Z</updated>
        <summary type="html"><![CDATA[Firefox OS是Mozilla基金會的新產品，將行動裝置與瀏覽器做更緊密地結合。]]></summary>
        <content type="html"><![CDATA[<p>Firefox OS 是 Mozilla 基金會的新產品，將行動裝置與瀏覽器做更緊密地結合。
號稱只要會寫 Web App，就能開發 Firefox OS App。</p><p>下午剛好看到<a href="http://playpcesor.blogspot.com/2012/11/firefox-os-firefox.html" target="_blank" rel="noopener noreferrer">介紹文章</a>，裡面提到有提供跨平台能執行的模擬器，就決定動手來試裝看看。</p><p><strong>開發環境設定</strong></p><p>1<!-- -->.<!-- --> 安裝 FIrefox 15 + 版本
2<!-- -->.<!-- --> 前往<!-- -->&nbsp;<a href="http://people.mozilla.org/~myk/r2d2b2g/" target="_blank" rel="noopener noreferrer">http://people.mozilla.org/~myk/r2d2b2g/</a> 下載並安裝對應版本插件
3<!-- -->.<!-- --> 裝完可以透過 選單 <!-- -->&gt;<!-- --> 工具 <!-- -->&gt;<!-- --> 網頁開發者 <!-- -->&gt;<!-- --> Firefox OS Simulator 開啟類似 Chrome 的開發者頁面</p><p></p><p>4<!-- -->.<!-- --> 按下左側 Simulator 項目，將執行狀態變成 Running 狀態。等一陣子即可在另一個視窗上看到 Firefox Simulator</p><p><strong>導覽</strong></p><p></p><p>畫面上往右拉可以看到 App 列表。裡面已經附上不少 APP 了。包含行事曆、鬧鐘、Email、音樂、影片播放器、計算機、PDF 閱讀器、地圖、等等。這些都是用 WEB 相關技術寫的（酷！）。</p><p></p><p>當然瀏覽器附的是 Firefox。Android 的 Application 號稱 "All Applications are equal"，亦即連官方應用也是用一樣的 Application API 寫成。不知在 Firefox OS 上，Firefox Browser App 本身算不算 Web App，開發者能不能簡單地為 Firefox 改頭換面寫一個瀏覽器 App?</p><p></p><p>由螢幕頂端往下拉可以看到通知欄，下方有快速設定工具列，感覺還不錯。</p><p></p><p>在首頁往左拉是一堆預載的網頁服務書籤（或是說... 網頁應用程式），點了 Facebook 圖示後半天沒載入畫面，看來還有些待改善之處。</p><p></p><p>整體看來完成度頗高。在可見的未來裡，學會了網頁技術，什麼都能做阿。</p><p><strong>必須面對的問題：如何保護程式碼？</strong></p><p>比起那些網頁版桌面項目，Firefox OS 更有實用價值。但是對開發者來說，使用 Web App 開發雖容易，但也容易遇到如 Web OS 遇到的相同問題：「如何保護我的離線 Web App 的程式碼？」</p><p>在 Web OS 上，開發者可以找到 App 的目錄，解開來裡面自然是不需編譯的 HTML 等資源，有心人可以拿來參考或簡單修改後再發佈。這也是 Web OS 開發者開發意願不高的原因之一。</p><p>雖然許多開發者並不在乎把原始碼攤開在陽光下，但大廠或部分開發者對此總是有所顧慮。
也許未來幾年持續連線的行動網路會便宜地和自來水一樣，到時那些把程式邏輯隱藏在伺服器端的「連網型 Web App」可能是個答案。</p><p>參考資料</p><ul><li></li><li><a href="https://wiki.mozilla.org/Gaia/Hacking" target="_blank" rel="noopener noreferrer">Hacking Gaia</a>&nbsp;<!-- -->(Gaia 是 Firefox OS 前端 App 運行環境的代號)</li><li></li></ul>]]></content>
        <category label="FirefoxOS" term="FirefoxOS"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Blocklyduino is ready for use]]></title>
        <id>https://blog.gasolin.idv.tw/tools/Blocklyduino-is-ready-for-use</id>
        <link href="https://blog.gasolin.idv.tw/tools/Blocklyduino-is-ready-for-use"/>
        <updated>2012-11-12T15:14:12.000Z</updated>
        <summary type="html"><![CDATA[After a month of sprint, BlocklyDuino is open sourced and hosted on GitHub.]]></summary>
        <content type="html"><![CDATA[<p></p><p>After a month of sprint, BlocklyDuino is open sourced and hosted on <a href="https://github.com/gasolin/BlocklyDuino" target="_blank" rel="noopener noreferrer">GitHub</a>.</p><p>Now it bounds more blocks and have some valid features:</p><ol><li>Programming Arduino with visually drag and drop code blocks.</li><li>Generate fully compatible arduino source code.</li><li>Interacive Arduino board with 10+ predefined Grove sensor blocks.</li><li>Load different on-site examples with url parameters. </li></ol><p>When you click the 'Arduino' tab, the mouse will auto-focused to the code area, that means you can use keyboard to select then copy the source to Arduino IDE.</p><p></p><p>And now it even support procedures (functions).</p><p></p><p><a href="https://plus.google.com/b/111979846292233941175/111979846292233941175" target="_blank" rel="noopener noreferrer">BlocklyDuino Google+ page</a>&nbsp;<!-- -->has been created and will update more frequently then here for new features.</p>]]></content>
        <category label="Blockly" term="Blockly"/>
        <category label="BlocklyDuino" term="BlocklyDuino"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[進Play Store首頁熱門應用心得：主題圖片、宣傳圖片之必要]]></title>
        <id>https://blog.gasolin.idv.tw/android/Play-Store-front-page</id>
        <link href="https://blog.gasolin.idv.tw/android/Play-Store-front-page"/>
        <updated>2012-10-23T14:37:18.000Z</updated>
        <summary type="html"><![CDATA[前陣子（10月初）托台北捷運東門站開通的福，我將過去寫的台北捷運地圖App更新上東門站後，在一週時間內，使用者就成長了數萬人，也因此上了Play Store首頁熱門應用區，就排在Rivio的Bad Piggies旁邊。]]></summary>
        <content type="html"><![CDATA[<p></p><p>前陣子（10 月初）托台北捷運東門站開通的福，我將過去寫的<a href="https://play.google.com/store/apps/details?id=com.gasolin.android.metro.taipei" target="_blank" rel="noopener noreferrer">台北捷運地圖</a>App 更新上東門站後，在一週時間內，使用者就成長了數萬人，也因此上了<a href="https://play.google.com/store" target="_blank" rel="noopener noreferrer">Play Store 首頁</a>熱門應用區，就排在 Rivio 的 Bad Piggies 旁邊。</p><p></p><p><a href="https://play.google.com/store/apps/details?id=com.gasolin.android.metro.taipei" target="_blank" rel="noopener noreferrer">台北捷運地圖</a>App 功能單純到不行。一進入 App，就給你一張每次做捷運時牆上都會貼的捷運路線圖。你可以在地圖上用兩隻指頭，或用一隻指頭長按即可縮放觀看地圖。放大後可以繼續用指頭拖拉至想查詢的位置。</p><p>這個 App 在前幾次的更新中已經使用了 Android 4.0 版的介面，相容手機與平板。</p><p></p><p>其實這次的改版中，就程式本身而言，並沒有做什麼調整，因此能進首頁熱門推薦的原因，可以排除與功能面更新的關連。</p><p>我總結了這次更新能上熱門應用區最大的原因，應該是與 Play Store 的機制有關。</p><p><strong>主題圖片、宣傳圖片之必要</strong></p><p></p><p>要上（台灣）熱門推薦的元素如下</p><ul><li>日均下載超過 1500~3000 次</li><li>提供 180*120 宣傳圖片</li><li>提供 1024*500 主題圖片</li><li>提供 512*512<!-- -->&nbsp;<!-- -->高解析度應用程式圖示</li></ul><p>第一點其實我也很驚訝，原來熱門下載的門檻並不算太高，只要單日數千人次下載就有成為熱門應用的可能。</p><p>後面幾點則是許多個人開發者沒特別留意的。注意到了嗎？在首頁上的圖示和實際程式圖示並不相同。首頁上顯示的是另外上傳的高解析度應用程式圖示。</p><p>過去 Android Market 還不是那麼規範的時候，開發完程式丟上去就是了。現在 Android Market 上的程式已經超過 70 萬支，要讓使用者找到你的程式，只有多花一些心力，提供消費者更多易於辨識的資訊囉。</p><p>除了<a href="https://play.google.com/store/apps/details?id=com.gasolin.android.metro.taipei" target="_blank" rel="noopener noreferrer">台北捷運地圖</a>App 之外，也請試試看<a href="https://play.google.com/store/apps/developer?id=gasolin" target="_blank" rel="noopener noreferrer">我的其他 App</a>。</p><p>推薦大家試試<!-- -->&nbsp;<a href="https://play.google.com/store/apps/details?id=tw.idv.gasolin.android.gpaper#?t=W251bGwsMSwxLDIxMiwidHcuaWR2Lmdhc29saW4uYW5kcm9pZC5ncGFwZXIiXQ.." target="_blank" rel="noopener noreferrer">gPaper</a>&nbsp;<!-- -->隨手畫或條碼<a href="https://play.google.com/store/apps/details?id=tw.idv.gasolin.android.inventorycounter#?t=W251bGwsMSwxLDIxMiwidHcuaWR2Lmdhc29saW4uYW5kcm9pZC5pbnZlbnRvcnljb3VudGVyIl0." target="_blank" rel="noopener noreferrer">盤點機</a>，都已經更新至 Android<!-- -->&nbsp;<!-- -->4.0 介面。</p>]]></content>
        <category label="Android" term="Android"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Blockly + Arduino + Grove = Blocklyduino (pre-alpha)]]></title>
        <id>https://blog.gasolin.idv.tw/tools/Blockly-Arduino-Grove-Blocklyduino-pre-alpha</id>
        <link href="https://blog.gasolin.idv.tw/tools/Blockly-Arduino-Grove-Blocklyduino-pre-alpha"/>
        <updated>2012-10-06T14:19:30.000Z</updated>
        <summary type="html"><![CDATA[Direct link to&nbsp;Blocklyduino&nbsp;//www.gasolin.idv.tw/public/blockly/demos/blocklyduino/index.html]]></summary>
        <content type="html"><![CDATA[<p>Direct link to<!-- -->&nbsp;<a href="http://www.gasolin.idv.tw/public/blockly/demos/blocklyduino/index.html" target="_blank" rel="noopener noreferrer">Blocklyduino</a>&nbsp;<!-- -->:<!-- -->&nbsp;<a href="http://www.gasolin.idv.tw/public/blockly/demos/blocklyduino/index.html" target="_blank" rel="noopener noreferrer">http://www.gasolin.idv.tw/public/blockly/demos/blocklyduino/index.html</a></p><p><a href="http://code.google.com/p/blockly/" target="_blank" rel="noopener noreferrer">Blockly</a>&nbsp;<!-- -->is a web-based, graphical programming editor. Users can drag blocks together to build an application.<!-- -->&nbsp;</p><p><a href="http://www.arduino.cc/" target="_blank" rel="noopener noreferrer">Arduino</a> is an electronics prototyping platform based on flexible, easy-to-use hardware and software.</p><p><a href="http://www.seeedstudio.com/wiki/index.php?title=GROVE_-_Starter_Bundle_V1.0b#LED_Twig" target="_blank" rel="noopener noreferrer">Grove</a> "GROVE_-_Starter_Bundle_V1.0b#LED_Twig"<!-- -->&nbsp;<!-- -->is a modular, safe and easy to use group of items that allow you to minimise the effort required to get started with microcontroller-based experimentation and learning.</p><p>With recent blockly update, we can make image blocks in blockly, and its pretty easy to make blocks with <a href="http://blockly-demo.appspot.com/blockly/demos/blockfactory/index.html" target="_blank" rel="noopener noreferrer">blockfactory</a>. I feel it's natural<!-- -->&nbsp;<!-- -->to see the real hardware image while program the arduino firmware.<!-- -->&nbsp;<!-- -->So here is my experimental attempt called<!-- -->&nbsp;<a href="http://www.gasolin.idv.tw/public/blockly/demos/blocklyduino/index.html" target="_blank" rel="noopener noreferrer">Blocklyduino</a>.</p><p>Besides the basic arduino language functions, I choose<!-- -->&nbsp;<a href="http://www.seeedstudio.com/wiki/index.php?title=GROVE_-_Starter_Bundle_V1.0b#LED_Twig" target="_blank" rel="noopener noreferrer" title="GROVE_-_Starter_Bundle_V1.0b#LED_Twig">Grove</a>&nbsp;<!-- -->blocks to make<!-- -->&nbsp;<a href="http://www.gasolin.idv.tw/public/blockly/demos/blocklyduino/index.html" target="_blank" rel="noopener noreferrer">Blocklyduino<!-- -->&nbsp;</a>fit for non-electronic/wiring-experience people.</p><p>Here's the very early version of examples written by <a href="http://www.gasolin.idv.tw/public/blockly/demos/blocklyduino/index.html" target="_blank" rel="noopener noreferrer">Blocklyduino</a>. which should generate the same code that is correspondent to examples on<!-- -->&nbsp;<!-- -->grove wiki.</p><p></p><p></p><p>image from grove wiki</p><p></p><p>code written by<!-- -->&nbsp;<a href="http://www.gasolin.idv.tw/public/blockly/demos/blocklyduino/index.html" target="_blank" rel="noopener noreferrer">Blocklyduino</a>
<a href="http://www.seeedstudio.com/wiki/Project_Three_%E2%80%93_Analog_Input_v1.0b" target="_blank" rel="noopener noreferrer">Analog Input example</a></p><p></p><p>image from grove wiki</p><p></p><p>code<!-- -->&nbsp;<!-- -->written<!-- -->&nbsp;<!-- -->by<!-- -->&nbsp;<a href="http://www.gasolin.idv.tw/public/blockly/demos/blocklyduino/index.html" target="_blank" rel="noopener noreferrer">Blocklyduino</a></p><p></p><p>will output the arduino<!-- -->&nbsp;<!-- -->source</p><p>code with setup/loop blocks as usual arduino<!-- -->&nbsp;<!-- --> source<!-- -->&nbsp;<!-- -->code.</p><p>To upload those code to the real hardware and see how it works, you need to get a standard Arduino Uno/Duemilanove board, and a set of <a href="http://www.seeedstudio.com/wiki/index.php?title=GROVE_-_Starter_Bundle_V1.0b#LED_Twig" target="_blank" rel="noopener noreferrer" title="GROVE_-_Starter_Bundle_V1.0b#LED_Twig">Grove starter-kit</a>&nbsp;<!-- -->(optional for grove blocks).</p><p>Currently<!-- -->&nbsp;<!-- -->Support:<!-- -->&nbsp;<!-- --> (10/6 updated)</p><ul><li><p>arduino functions:</p></li><li><p>compact Digital/Analog Read/Write syntax</p></li><li><p>auto setup pinMode</p></li><li><p>delay and map</p></li><li><p>block</p></li><li><p>Grove blocks: LED, Potentiometer, Tilt switch, </p></li></ul><p>Currently Lack of:</p><ul><li>Variables support</li><li>Have to copy-n-paste source to arduino IDE to upload to board</li></ul>]]></content>
        <category label="Arduino" term="Arduino"/>
        <category label="Blockly" term="Blockly"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[3 分鐘學會用 firebug 除錯]]></title>
        <id>https://blog.gasolin.idv.tw/devtools/debug-with-firebug</id>
        <link href="https://blog.gasolin.idv.tw/devtools/debug-with-firebug"/>
        <updated>2012-08-10T10:00:32.000Z</updated>
        <summary type="html"><![CDATA[firebug 是 firefox 的一個插件.]]></summary>
        <content type="html"><![CDATA[<p>firebug 是 firefox 的一個插件.
可以說是當前用來 debug javascript 程式的最佳選擇.
firebug 還提供了一些好用的函式可以讓您的測試更順暢.</p><p><a href="http://www.digitalmediaminute.com/screencast/firebug-js/" target="_blank" rel="noopener noreferrer">這段影片</a> 展示了 firebug 提供的一些好用的函式.</p><p>廢話不多說，馬上來看看吧:</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="印出一般訊息--consolelog">印出一般訊息 : console.log<a href="#印出一般訊息--consolelog" class="hash-link" aria-label="Direct link to 印出一般訊息 : console.log" title="Direct link to 印出一般訊息 : console.log">​</a></h2><p>就像許多程式語言中的 'print' 語句，firebug 提供的 console.log 語句可以直接印出變數值.
例如</p><blockquote><p>console.log (變數);</p></blockquote><p>或者印出包含變數的敘述</p><blockquote><p>console.log ("敘述: % d"% 變數);</p></blockquote><h2 class="anchor anchorWithStickyNavbar_LWe7" id="印出具有提示圖示的訊息-consoleinfoconsolewarnconsoleerror">印出具有提示圖示的訊息 console.info/console.warn/console.error<a href="#印出具有提示圖示的訊息-consoleinfoconsolewarnconsoleerror" class="hash-link" aria-label="Direct link to 印出具有提示圖示的訊息 console.info/console.warn/console.error" title="Direct link to 印出具有提示圖示的訊息 console.info/console.warn/console.error">​</a></h2><p>與印出一般訊息 (console.log) 使用的方式完全相同，console.info/console.warn/console.error 只是會在訊息前加上相應圖示</p><blockquote><p>console.info (a) 提示圖示
console.warn (b) 警示圖示
console.error (c) 錯誤圖示</p></blockquote><h2 class="anchor anchorWithStickyNavbar_LWe7" id="使用除錯介面-debugger">使用除錯介面 debugger<a href="#使用除錯介面-debugger" class="hash-link" aria-label="Direct link to 使用除錯介面 debugger" title="Direct link to 使用除錯介面 debugger">​</a></h2><p>只要在想要除錯的地方前加上一行加上 debugger 語句</p><blockquote><p>debugger;
.....</p></blockquote><p>執行時就會彈出一個互動式的除錯介面.
除錯介面提供了單步執行等功能，並即時取得當前各相關變數的狀態.
也可以看到迴圈每次執行後改變的值</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="計算花費時間-consoletimeconsoletimeend">計算花費時間 console.time/console.timeEnd<a href="#計算花費時間-consoletimeconsoletimeend" class="hash-link" aria-label="Direct link to 計算花費時間 console.time/console.timeEnd" title="Direct link to 計算花費時間 console.time/console.timeEnd">​</a></h2><p>對於 AJAX 程式來說有些動作會花費較多的時間，使用</p><blockquote><p>console.time ("跑")
.....
console.timeEnd ("跑")</p></blockquote><p>將要測試的程式段包起來，執行時就會印出該段程式所花費的執行時間</p>]]></content>
        <category label="javascript" term="javascript"/>
        <category label="firebug" term="firebug"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[OpenStack是什麼？]]></title>
        <id>https://blog.gasolin.idv.tw/devtools/what-is-OpenStack</id>
        <link href="https://blog.gasolin.idv.tw/devtools/what-is-OpenStack"/>
        <updated>2012-07-18T09:23:55.000Z</updated>
        <summary type="html"><![CDATA[在智慧型手機與平板領域，蘋果和所有的智慧型手機與平板供應商競爭，大部分的供應商只能依靠Android系統作為反擊的基礎。]]></summary>
        <content type="html"><![CDATA[<p>在智慧型手機與平板領域，蘋果和所有的智慧型手機與平板供應商競爭，大部分的供應商只能依靠 Android 系統作為反擊的基礎。</p><p>在 IT 系統領域，亞馬遜正在跟所有的 IT 系統供應商競爭，而大部分的 IT 系統供應商能依靠的是 OpenStack。</p><p>OpenStack 專案的初衷是提供類似亞馬遜的 ECS (Elastic Computing Service) 和 S3 (Simple Storage Service) 開放源始碼實現，讓一般企業也能建置私有網路服務。</p><p>若企業本身或 IT 系統供應商規模夠大的話，使用 OpenStack 自建資料中心，就能享受到彈性雲端運算所帶來的好處。</p><p><a href="http://wired.tw/2012/04/11/openstack-1/index.html" target="_blank" rel="noopener noreferrer">改變世界的免費雲端軟體：OpenStack 幕後創造祕辛（上）</a><a href="http://wired.tw/2012/04/12/openstack-2/index.html" target="_blank" rel="noopener noreferrer">（下）</a></p><p>重點：</p><p>1<!-- -->.<!-- --> OpenStack 開源以前叫 NASA Nebula
2<!-- -->.<!-- --> 後來由 Rackspace 和 NASA 合作開發
3<!-- -->.<!-- --> 以 Apache 授權發佈</p><p>關鍵人 Chris C. Kemp (NASA), Rick Clark, Jim Curry (Rackspace), Vivek Kundra（美國第一個資訊長），是他們讓這個專案成真並以開源發佈。</p><p>Swift 是 OpenStack 裡類似 S3 (Simple Storage Service) 的開放源始碼實現</p><ul><li></li><li><a href="http://os.51cto.com/art/201207/347656_1.htm" target="_blank" rel="noopener noreferrer">Swift 架構詳解</a>
安裝</li></ul><p>1<!-- -->.<!-- --> <a href="http://devstack.org/" target="_blank" rel="noopener noreferrer">DevStack</a>
2<!-- -->.<!-- --> <a href="http://code.google.com/p/onestack/" target="_blank" rel="noopener noreferrer">OneStack</a></p>]]></content>
        <category label="OpenStack" term="OpenStack"/>
        <category label="python" term="python"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[好隱喻：自架伺服器或上雲端？]]></title>
        <id>https://blog.gasolin.idv.tw/service/selfhost-or-cloud</id>
        <link href="https://blog.gasolin.idv.tw/service/selfhost-or-cloud"/>
        <updated>2012-05-24T01:34:13.000Z</updated>
        <summary type="html"><![CDATA[台灣雲端計算的迷思與挑戰]]></summary>
        <content type="html"><![CDATA[<iframe allowfullscreen="" frameborder="0" height="315" src="http://www.youtube.com/embed/ncXIC5QWRjM" width="560"></iframe>台灣雲端計算的迷思與挑戰<p>從其他地方聽到過關於 "決定要自架伺服器或上雲端" 的隱喻，是將 "使用雲端" 與 "自架伺服器"，比做 "使用自來水" 與 "自己到河邊打水 / 抽地下水" 的差別。</p><p>雖然也有很清楚的區別，但還少了一點什麼。</p><p>「你覺得把一大筆錢存在銀行比較安穩，還是把一大筆錢放在家裡比較安穩？」</p><p>政委在這場演講裡提到的隱喻，應該是我目前所聽到最具說服力的隱喻。</p><p>同場加映：要上雲端，先換腦袋</p><iframe allowfullscreen="" frameborder="0" height="315" src="http://www.youtube.com/embed/92AClPNP_gY" width="560"></iframe>]]></content>
        <category label="cloud" term="cloud"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[微軟, Google發佈類Dropbox雲端硬碟的影響]]></title>
        <id>https://blog.gasolin.idv.tw/android/MS-Google-Dropbox</id>
        <link href="https://blog.gasolin.idv.tw/android/MS-Google-Dropbox"/>
        <updated>2012-04-25T02:27:03.000Z</updated>
        <summary type="html"><![CDATA[Dropbox提供用一般資料夾的方式存取資料, 資料夾會自動同步到雲端]]></summary>
        <content type="html"><![CDATA[<p>Dropbox 提供用一般資料夾的方式存取資料，資料夾會自動同步到雲端</p><p>現在微軟，Google 都將原有的 SkyDrive, Google Docs 升級，支援類似 Dropbox 這功能</p><p>使用微軟，Google 的雲端硬碟比起Ｄropbox 來有以下好處：</p><ul><li>Windows Live 帳號登入，降低了雲端硬碟的入門門檻</li><li>微軟，Google 的雲端硬碟仍支援線上版的 Word, Powerpoint, Excel 等原有功能. Google Docs 甚至支援上傳圖檔 / PDF 的文字辨識</li><li>可預期兩家的雲端硬碟將會像 Mac, iPhone 預載 iCloud 一樣整合進 Windows/Windows Phone 或 Android 下一代系統中</li></ul><p>在這兩家進入了雲端硬碟服務領域後，已經拉高雲端硬碟服務的競爭門檻。開發者可以開始考慮，該如何應用他們提供的服務，來開發更便利使用者的應用.</p><p>參考資料</p><ul><li><a href="http://dropbox.com/" target="_blank" rel="noopener noreferrer">http://dropbox.com</a> 基本 2GB, 支援 Mac/Win/Linux/Blackberry/Android/iPad/iPhone/Windows Phone</li><li><a href="https://skydrive.live.com/" target="_blank" rel="noopener noreferrer">https://skydrive.live.com/</a> 基本 7GB, 原使用者可免費升 25GB, 支援 Mac/Win/iPad/iPhone/Windows Phone</li><li><a href="https://drive.google.com/" target="_blank" rel="noopener noreferrer">https://drive.google.com</a>基本 5GB, 每年 300 塊升 25GB, 支援 Mac/Win/Android/iPad/iPhone</li><li></li><li></li><li></li></ul>]]></content>
        <category label="Android" term="Android"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[設定ICS模擬器顯示軟體鍵盤]]></title>
        <id>https://blog.gasolin.idv.tw/android/simulate-soft-keyboard-in-ICS</id>
        <link href="https://blog.gasolin.idv.tw/android/simulate-soft-keyboard-in-ICS"/>
        <updated>2012-04-08T07:46:38.000Z</updated>
        <summary type="html"><![CDATA[自從Android 3.x發佈後，Android 虛擬機器由於要完整模擬硬體指令，因此在電腦上跑得極慢，慢到去年Google舉辦的Taiwan Android Developer Lab會場上，講者拿「模擬器慢」這理由當作送平板的梗來用。]]></summary>
        <content type="html"><![CDATA[<p>自從 Android 3.x 發佈後，Android 虛擬機器由於要完整模擬硬體指令，因此在電腦上跑得極慢，慢到去年 Google 舉辦的 Taiwan Android Developer Lab 會場上，講者拿「模擬器慢」這理由當作送平板的梗來用。</p><p>最近隨著 Android SDK Tools r17 的發佈，「Android SDK Manager」裡面多了一個 Intel 貢獻的「Intel Hardware Accelerated Execution Manager」套件，下載這個套件後，可以自動讓使用 Intel CPU 的機種用全速跑 Android 4.x 虛擬機器。安裝前後虛擬機器執行時的速度，確實有極大的差異（從不堪用變成可用）。</p><p>於是有人開始認真使用 ICS（Android 4.x）虛擬機器了，一試才發現一些問題：怎麼跑 BMI 範例時，書上說會彈出軟體鍵盤，但我在 ICS 虛擬機器上跑，卻沒有彈出來？</p><p>原因是 ICS 虛擬機器的預設設定改變了。因為只有當系統不提供硬體鍵盤時，畫面上才會彈出軟體鍵盤。而目前版本的 ICS 虛擬機器的預設設定為「有硬體鍵盤」。由於系統認定你的虛擬機器已經配有硬體鍵盤可用，因此在按下對應欄位時，畫面上當然不會再彈出軟體鍵盤。</p><p>要在虛擬機器中顯示軟體鍵盤，只要在設定虛擬機器時，在「Hardware」欄位加入「Keyboard Support」，並將值設為「no」即可（代表建立的虛擬機器不含硬體鍵盤）。</p><p></p><p>啟動後再開啟 BMI 範例程式，點選欄位時就會看到軟體鍵盤了。</p><p></p>]]></content>
        <category label="Android" term="Android"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[2011年個人總結]]></title>
        <id>https://blog.gasolin.idv.tw/life/2011-summary</id>
        <link href="https://blog.gasolin.idv.tw/life/2011-summary"/>
        <updated>2012-02-24T05:11:46.000Z</updated>
        <summary type="html"><![CDATA[Java夜未眠一書裡，蔡學鏞說過：把工作、學習，和娛樂結合在一起，時間就會是別人的三倍。]]></summary>
        <content type="html"><![CDATA[<p>Java 夜未眠一書裡，蔡學鏞說過：把工作、學習，和娛樂結合在一起，時間就會是別人的三倍。</p><p>只要找到了逻辑支点，没有什么问题不能解决。</p><p>2011 年完成的事不算少，除了把個人終身大事解決了之外，因為一些原因，我接過了 Ericsk 主持的 Taipei GTUG 的棒子，負責規劃並舉辦了整年的 GTUG 活動 (25 場聚會 + 3~4 場合辦活動 + 1 場 Hackthon)，在過程中認識了不少人，受到許多人的幫助，同時也增強或新學到了關於辦活動、新技術等諸多的經驗與樂趣。</p><p>從高中玩社團起就陸續協辦過一些活動，雖然說「近廟的懂拜神」，多多少少已有些相關經驗，過去也沒少看管理、組織、行銷等書籍，但總的來說社交或團隊能力是我原本不十分在行的一環。幸好受到小 Q、Jehuen、Ted、Shaka 等朋友的幫助，2011 年陸續與 TOSSUG、Cloud TW、Google 行動推廣部等單位合作，或策劃或協辦了數場百人聚會，和諸多講者聯繫、討論聚會分享內容，或是更新 Taipei GTUG 網站、社群網站等，豐富了我下班後的生活。
在工作中，今年也帶領數人的團隊完成了數個專案，過程中訓練新同事、與同事溝通 / 合作、與長官溝通和彙報、與公司各部門或公司外窗口的溝通，都多虧了過去透過書本學習、社群實踐中累積的經驗，讓我即使在公司眼中是新手上路卻能順利上手。</p><p>2011 年也是個人數據化更徹底的一年，我記了整年的帳、整年的<a href="http://life.gasolin.idv.tw/2011/07/google.html" target="_blank" rel="noopener noreferrer">成功日記</a>，透過<a href="http://www.anobii.com/gasolin/books" target="_blank" rel="noopener noreferrer">Anobii</a>統計共看了 203 本書，總計 42193 頁；透過<a href="http://movie.douban.com/" target="_blank" rel="noopener noreferrer">豆瓣</a>統計共看了 31 部電影；</p><p>申請了個人的網域 (gasolin.idv.tw)，開通了<a href="http://gplus.to/gasolin" target="_blank" rel="noopener noreferrer">Google+</a>，上傳了第一個 Youtube 影片，貼了 67+18 篇博文；改版了一本書，發佈<a href="https://market.android.com/developer?pub=gasolin" target="_blank" rel="noopener noreferrer">5 款 App</a>，寫了 6 期雜誌專欄 + 為電子報<a href="http://www.ithome.com.tw/itadm/article.php?c=70581&amp;s=7" target="_blank" rel="noopener noreferrer">推薦了一本書</a>（數位記憶革命），做了 11 場公開演講，09 年累積至今透過 Yahoo 公益捐助了共 25 個<a href="http://tw.charity.yahoo.com/donator.html?yuid=Z2Fzb2xpbmtpbW8jOGQ-" target="_blank" rel="noopener noreferrer">公益專案</a></p><p>前美國教育部長 Richard Riley 說：我們必須教導現在的學生，畢業後投入目前還不存在的工作，使用根本還沒發明的科技，解決我們從未想像過的問題。段話對學生們還是未來式，但是在產業劇變的今天，對在業界的我們已是現在進行式。</p><p>我也準備好繼續和對技術有熱忱的朋友們一起，透過活動，結合工作、學習，和娛樂，用網路 / 資訊技術改善生活、擴大影響力，讓身邊的人與環境一起變得更好。</p>]]></content>
        <category label="life" term="life"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[升級build.xml]]></title>
        <id>https://blog.gasolin.idv.tw/android/upgrade-build-xml</id>
        <link href="https://blog.gasolin.idv.tw/android/upgrade-build-xml"/>
        <updated>2012-02-10T07:39:24.000Z</updated>
        <summary type="html"><![CDATA[用ant來編譯Android專案的開發者，在2011/10月中升到r14之後版本的開發工具之後，ant檔案的格式又被修改了。]]></summary>
        <content type="html"><![CDATA[<p>用 ant 來編譯 Android 專案的開發者，在 2011/10 月中升到 r14 之後版本的開發工具之後，ant 檔案的格式又被修改了。</p><p>要升級到新版的 build.xml，記得先把原來的 build.xml 檔案備份，</p><p>$ mv build.xml oldbuild.xml</p><p>再跑一下命令行</p><p>$ android update project --path .</p><p>以更新相關檔案。</p><p>若有參考到相關的 library project 的話，在各 library project 中執行</p><p>$ android update lib-project --path .</p><p>開啟新的 build.xml 並加入自用的相關設定後，最後再執行</p><p>$ ant clean release</p><p>看看有沒有問題。如果沒有問題的話，就恭喜你順利升級囉。</p>]]></content>
        <category label="Android" term="Android"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[gFolder: 把dropbox當手機外接硬碟]]></title>
        <id>https://blog.gasolin.idv.tw/tools/App-gFolder</id>
        <link href="https://blog.gasolin.idv.tw/tools/App-gFolder"/>
        <updated>2011-11-16T02:14:56.000Z</updated>
        <summary type="html"><![CDATA[官方的 Dropbox app可以讓使用者將Dropbox中的檔案存到手機sd卡的dropbox資料夾中，但如果想要將書放到sd卡的books資料夾、音樂放到music資料夾...對於這樣的需求，]]></summary>
        <content type="html"><![CDATA[<p></p><p>官方的 Dropbox app 可以讓使用者將 Dropbox 中的檔案存到手機 sd 卡的 dropbox 資料夾中，但如果想要將書放到 sd 卡的 books 資料夾、音樂放到 music 資料夾... 對於這樣的需求，
使用官方 Dropbox app 就沒辦法辦到了。</p><p>gFolder 可以將 SD 卡中任一目錄下的任一檔案放到 Dropbox 上的任一目錄下，
也可以將 Dropbox 任一目錄下的任一檔案放到 SD 卡的任一目錄下。</p><p>主要介面類似 FTP 程式，只要點選檔案，即可將檔案傳送到 Dropbox 或 sd 卡中。
當有網路的時候，使用 gFolder 起來，就像是在手機上直接插上了一個外接硬碟一樣。</p><p>當使用者跳出程式，下一次再啟動時，gFolder 也會記錄上一次 sd 卡和 Dropbox 的所在目錄，
可以隨時回到上次的操作狀態。</p><p>gFolder 同時支援平板和手機，並先使用 Android 4.0 的統一使用者介面，在手機上也有和平板一樣的使用者介面。</p><p>下載網址:<!-- -->&nbsp;<a href="https://market.android.com/details?id=tw.idv.gasolin.android.gfolder" target="_blank" rel="noopener noreferrer">https://market.android.com/details?id=tw.idv.gasolin.android.gfolder</a>
QRCode:</p><p></p>]]></content>
        <category label="Android" term="Android"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Android 4.0發佈]]></title>
        <id>https://blog.gasolin.idv.tw/android/Android-4-0-publish</id>
        <link href="https://blog.gasolin.idv.tw/android/Android-4-0-publish"/>
        <updated>2011-10-19T09:38:33.000Z</updated>
        <summary type="html"><![CDATA[Android 4.0 (IceCream Sandwich)如期推出了  這次的改進比較多是在軟體層面，套用Apple的OSX Lion廣告詞：]]></summary>
        <content type="html"><![CDATA[<p><a href="http://developer.android.com/sdk/images/4.0/face-unlock.png" target="_blank" rel="noopener noreferrer"><img loading="lazy" src="http://developer.android.com/sdk/images/4.0/face-unlock.png" class="img_ev3q"></a>
Android 4.0 (IceCream Sandwich) 如期推出了  這次的改進比較多是在軟體層面，套用 Apple 的 OSX Lion 廣告詞：</p><blockquote><p>ICS 擁有超過 250 種全新功能，
包括臉部解鎖、連續語音辨識、全景照片與影像特效、5 倍瀏覽器速度、流量監測...
ICS 把 Android 推向下一個紀元</p></blockquote><p>Android 4.0 比較重要的新功能已列在 <a href="http://developer.android.com/sdk/android-4.0-highlights.html" target="_blank" rel="noopener noreferrer">http://developer.android.com/sdk/android-4.0-highlights.html</a></p><iframe allowfullscreen="" frameborder="0" height="360" src="http://www.youtube.com/embed/-F_ke3rxopc" width="640"></iframe><p>對一般 App 開發者來說，OS 部分的改進如 Holo Theme 系統佈景主題、Fragment API 等都是 3.x 已經有的，現在套用到手機上。新的連續語音辨識、影像處理 API 等軟體功能，和 Android Beam、Wi-Fi Direct 等通訊技術可以玩出一些新花樣。</p><p>開發工具部分則是開始支援 WebCam（Windows/Linux only）、新的初次使用設定精靈（Welcome Wizard）、比較好用的 Layout 編輯器、還有整合了<a href="http://android-ui-utils.googlecode.com/hg/asset-studio/dist/index.html" target="_blank" rel="noopener noreferrer">Android Asset Studio</a>製作圖示（Icon）的功能。</p><p>整體來看這次推出的功能雖然很多，但在系統整體架構上並沒有多做改變，開發工具也做了些改進，讓開發者更容易使用。比較糟糕的一點是模擬器延續了 Android 3.x 版的不良傳統，為了完全模擬 ARM 的指令，而使得模擬器執行相當龜速。要測試 Android 3.x 版以上的系統時，還是得買實機來跑才比較準。</p><p>順便公告一下：因為基本的東西都沒有改變，大家可以放心使用「<a href="http://www.books.com.tw/exep/assp.php/gasolin/exep/prod/booksfile.php?item=0010513881" target="_blank" rel="noopener noreferrer">Google! Android 手機應用程式設計入門</a>」來學習開發相容各種 Android 版本的應用程式，本書不會因 Android 4.0 再改版。</p>]]></content>
        <category label="Android" term="Android"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[程式屍]]></title>
        <id>https://blog.gasolin.idv.tw/code/dev-zombie</id>
        <link href="https://blog.gasolin.idv.tw/code/dev-zombie"/>
        <updated>2011-10-19T09:34:39.000Z</updated>
        <summary type="html"><![CDATA[程式屍常常待在他天然的巢穴裡，駝背坐在顯示器淡淡的光線中，在文字編輯器中輸入著複雜的標點字元組合。有時候，這個膽小的傢伙會離開他的窩，四處尋找咖啡或比薩。很快的，他就會回到安全的地方，繼續在鍵盤上做他一直在做的事]]></summary>
        <content type="html"><![CDATA[<blockquote><p>程式屍常常待在他天然的巢穴裡，駝背坐在顯示器淡淡的光線中，在文字編輯器中輸入著複雜的標點字元組合。有時候，這個膽小的傢伙會離開他的窩，四處尋找咖啡或比薩。很快的，他就會回到安全的地方，繼續在鍵盤上做他一直在做的事
-- 編程創藝</p></blockquote>]]></content>
        <category label="fun" term="fun"/>
        <category label="digest" term="digest"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[技術]]></title>
        <id>https://blog.gasolin.idv.tw/code/tech</id>
        <link href="https://blog.gasolin.idv.tw/code/tech"/>
        <updated>2011-08-27T15:52:33.000Z</updated>
        <summary type="html"><![CDATA[大部份的技術可以被分為兩大類，一個是使用者真正想要的並且會主動尋求的，而另一種只是為了解決某些問題而推出的基本解決方案。&nbsp;> 後者經常流於行銷噱頭而最終引不起消費者實際購買的興趣。]]></summary>
        <content type="html"><![CDATA[<blockquote><p>大部份的技術可以被分為兩大類，一個是使用者真正想要的並且會主動尋求的，而另一種只是為了解決某些問題而推出的基本解決方案。<!-- -->&nbsp;<!-- -->&gt; 後者經常流於行銷噱頭而最終引不起消費者實際購買的興趣。</p></blockquote>]]></content>
        <category label="coding" term="coding"/>
        <category label="digest" term="digest"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[使用Jenkins持續集成與發佈Android應用程式]]></title>
        <id>https://blog.gasolin.idv.tw/code/Jenkins-ci-deploy-Android</id>
        <link href="https://blog.gasolin.idv.tw/code/Jenkins-ci-deploy-Android"/>
        <updated>2011-08-27T04:00:56.000Z</updated>
        <summary type="html"><![CDATA[這是上週在Coscup 2011活動中演講的主題與投影片。&nbsp;]]></summary>
        <content type="html"><![CDATA[<p>這是上週在<a href="http://coscup.org/2011/zh-tw/" target="_blank" rel="noopener noreferrer">Coscup 2011</a>活動中演講的主題與投影片。<!-- -->&nbsp;<!-- --> </p><p>介紹：</p><p>Jenkins (<a href="http://jenkins-ci.org/" target="_blank" rel="noopener noreferrer">http://jenkins-ci.org/</a>) 是個廣為使用的持續集成（Continue Integration）框架，可以協助軟體工程師統合處理各種圍繞著「寫程式」之外的程式開發工作（如版本控制、環境設定、編譯、測試、發佈）。<!-- -->&nbsp;<!-- --> </p><p>在這個議程中將和大家分享實際使用 Jenkins 持續集成與發佈 Android App，讓管理多應用程式變得更容易的經驗。  </p><p><strong><a href="http://www.slideshare.net/gasolin/android-jenkins" target="_blank" rel="noopener noreferrer" title="Android + jenkins">Android + jenkins</a></strong> </p><iframe frameborder="0" height="355" marginheight="0" marginwidth="0" scrolling="no" src="http://www.slideshare.net/slideshow/embed_code/8944298" width="425"></iframe><p>View more <a href="http://www.slideshare.net/" target="_blank" rel="noopener noreferrer">presentations</a> from <a href="http://www.slideshare.net/gasolin" target="_blank" rel="noopener noreferrer">gasolin</a></p>]]></content>
        <category label="Android" term="Android"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[AppInventor+愛無赦?（台客舞App開發心得）]]></title>
        <id>https://blog.gasolin.idv.tw/devtools/AppInventor-dev-thought</id>
        <link href="https://blog.gasolin.idv.tw/devtools/AppInventor-dev-thought"/>
        <updated>2011-08-21T14:12:17.000Z</updated>
        <summary type="html"><![CDATA[AppInventor&nbsp;是GoogleLab中一個有趣的工具，可以讓一般人簡單地透過像堆積木的方式寫出一個Android App。（剛好Make雜誌也出了AppInventor報導）]]></summary>
        <content type="html"><![CDATA[<p><a href="http://appinventor.googlelabs.com/" target="_blank" rel="noopener noreferrer">AppInventor</a>&nbsp;<!-- -->是 GoogleLab 中一個有趣的工具，可以讓一般人簡單地透過像堆積木的方式寫出一個 Android App。（剛好<a href="http://www.makezine.com.tw/2011/08/16/%E6%B7%BA%E8%AB%87%E6%96%87%E5%AD%97%E5%BC%8F%E8%88%87%E5%9C%96%E5%BD%A2%E5%8C%96%E7%A8%8B%E5%BC%8F%E9%96%8B%E7%99%BC%E4%BB%8B%E9%9D%A2%E4%B8%8A%E7%AF%87-%E4%BB%A5google-app-inventor%E7%82%BA/?utm_source=rss&amp;utm_medium=rss&amp;utm_campaign=%25e6%25b7%25ba%25e8%25ab%2587%25e6%2596%2587%25e5%25ad%2597%25e5%25bc%258f%25e8%2588%2587%25e5%259c%2596%25e5%25bd%25a2%25e5%258c%2596%25e7%25a8%258b%25e5%25bc%258f%25e9%2596%258b%25e7%2599%25bc%25e4%25bb%258b%25e9%259d%25a2%25e4%25b8%258a%25e7%25af%2587-%25e4%25bb%25a5google-app-inventor%25e7%2582%25ba" target="_blank" rel="noopener noreferrer">Make 雜誌也出了 AppInventor 報導</a>）  </p><p>這週三 Taipei GTUG 舉辦了<a href="http://www.taipei-gtug.org/meetings/meeting2011/20110817" target="_blank" rel="noopener noreferrer">AppInventor<!-- -->&nbsp;<!-- -->Bootcamp</a>， 由我先簡單介紹如何安裝與使用 AppInventor 後， 再將時間交給大家，創作具備台灣特色，或能展現台灣特色與風格的 App。  首先當然是拿大家熟悉的 BMI，重現在 AppInventor 上  </p><p></p><p>  接著則是介紹程式積木部分，程式積木部分做到了原 BMI 程式大部分的功能。 可以看到用拖拉積木的方式寫一個轉換數值程式，是蠻厚工的一件事。  （剛剛要截圖才發現這部份原始碼被覆蓋掉了 Orz，等影片轉出來再把錄到的畫面嵌在這）  接著活動就進入 Hacking 模式。今天不少人都在問：用 AppInventor 寫好的 App 要怎麼轉換成程式碼？答案是目前沒有這樣的功能，也許年底<a href="http://androidcommunity.com/google-app-inventor-discontinued-will-become-open-source-instead-20110809/" target="_blank" rel="noopener noreferrer">AppInventor<!-- -->&nbsp;<!-- -->Open Source</a>了之後，會有好心人寫出來吧...    昨晚 Hack 的成果，是「台客舞 App」。  台客舞 App 簡介：  看過 jolin 的<a href="http://www.youtube.com/watch?v=KMqfVNnDSD0" target="_blank" rel="noopener noreferrer">愛無赦 MV</a>嗎？ </p><object width="425" height="344"><param name="movie" value="http://www.youtube.com/v/KMqfVNnDSD0"><param name="allowFullScreen" value="true"><param name="allowscriptaccess" value="always"><embed src="http://www.youtube.com/v/T04fKsD56LU&amp;hl=zh_TW&amp;fs=1" type="application/x-shockwave-flash" allowscriptaccess="always" allowfullscreen="true" width="425" height="344"></object><p>裡面的電音舞曲和掌心燈是不是很搶眼而讓人一見難忘呢？  </p><p><a href="http://4.bp.blogspot.com/-BgbN_T0_EAQ/TkzCzakF4aI/AAAAAAAACEE/sGsWTkKf9KU/s1600/%25E8%259E%25A2%25E5%25B9%2595%25E5%25BF%25AB%25E7%2585%25A7+2011-08-18+%25E4%25B8%258B%25E5%258D%25883.18.48.png" target="_blank" rel="noopener noreferrer"><img loading="lazy" src="http://4.bp.blogspot.com/-BgbN_T0_EAQ/TkzCzakF4aI/AAAAAAAACEE/sGsWTkKf9KU/s320/%25E8%259E%25A2%25E5%25B9%2595%25E5%25BF%25AB%25E7%2585%25A7+2011-08-18+%25E4%25B8%258B%25E5%258D%25883.18.48.png" class="img_ev3q"></a> </p><p>這個 AppInventor 作品結合了電音舞曲播放和掌心燈的功能， 只要你擁有 Android 手機，就可以隨時跳一首台客舞曲～   夠台味吧 XD  這個程式很簡單，主體是兩個按鈕和一個聲音檔案。  </p><p></p><p>聲音檔案的部份，AppInventor 目前只接受小於 2MB 的檔案，因此先用<a href="http://audacity.sourceforge.net/" target="_blank" rel="noopener noreferrer">Audacity</a>工具裁減了一小段轉成 MP3 檔，然後加入這個專案中。  另外兩個按鈕，一個「播放」（Play）按鈕放在最上頭，按了之後即開始播放音樂。再按一次後就停止。  另一個按鈕則是佔用大部分的螢幕，並將底色改為和背景同樣的黑色， 在按下後會變換成白色，以模擬掌心燈的開、關狀態。 </p><p></p><p>有興趣看現場 DEMO 的人，可以參加<a href="http://registrano.com/events/61c494" target="_blank" rel="noopener noreferrer">(Coscup BoF) Appinventor Hack <!-- -->&amp;<!-- -->amp; Show</a>&nbsp;<!-- -->活動（希望有人願意拿著現場秀一段台客舞 XD）。  程式可以到<a href="http://showinventor.appspot.com/main/gallery" target="_blank" rel="noopener noreferrer">http://showinventor.appspot.com/main/gallery</a>下載，供大家娛樂一下。 （Android Market 就算了吧）</p>]]></content>
        <category label="GTUG" term="GTUG"/>
        <category label="Android" term="Android"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Android 3.x與手機?]]></title>
        <id>https://blog.gasolin.idv.tw/android/Android-3-x-and-phone</id>
        <link href="https://blog.gasolin.idv.tw/android/Android-3-x-and-phone"/>
        <updated>2011-08-12T13:16:11.000Z</updated>
        <summary type="html"><![CDATA[因為有一些人對Android 3與手機的關聯無法搭上線，在這邊記錄一些FAQ：]]></summary>
        <content type="html"><![CDATA[<p>因為有一些人對 Android 3 與手機的關聯無法搭上線，在這邊記錄一些 FAQ：</p><blockquote><p>1<!-- -->.<!-- --> 手機應該和 android 3 無關吧！小弟還特別到官網讀了正式文件，確認 android 3 是給平板電腦用的，android 2 才是給手機用的，後續或許會整合，但那是以後的事了不是嗎？
Android 3 是 Android 最新版號，而且向下相容多數 API。用 Android 3.2 SDK 來開發 2.x 版本（手機）的應用程式完全沒有問題。</p></blockquote><p>第四版主要使用 3.x 的 SDK，只有要使用手機的虛擬機器時，才使用 2.x SDK 提供的虛擬機器（因為 3.x SDK 中只附了平板虛擬機器，沒有附手機版的虛擬機器）。採用本書寫法的話，程式在平板和手機上都能正常運行。您可以拿您手邊現有的任一開發中 App 來測、或等拿到書的時候照著試試，看看是不是確實能在 3.x SDK 上開發手機應用程式。</p><blockquote><p>2<!-- -->.<!-- --> 本書既然叫 Android 3，卻沒有講平板用的 fragment API？首先，這是一本入門書。這本書內容和其他同類書籍不同，關注的是跨版本的基礎知識（所以書名叫「入門」）。封面說明的部份有寫，想傳達的是用這本入門，就算是更新的版本拿來一樣適用。在寫現在版本時想的是善用開發工具、與市面上主流版本相容，而非關注新功能。</p></blockquote><p>而現在平板在 Android 系統中的市佔率 1.2%，要撐起書市還不到時機（個人意見）。一般入門的開發者（本書的預設讀者群）會專為了 1.2% 的使用者而開發？我認為不會。</p><p>有些開發基礎，而又看過我的書的人，應該知道我一貫建議去官方網站查這些進階的 API，而不是苦苦等中文書。</p><p>平板的 fragment API（將畫面分隔的 API）有兩種版本，一種是向後相容版，可以跑在 Android 2.x 機種上。另一種是原生版，只能跑在 3.x Tablet 上。根據我個人的評估，這兩種 API 還會有某種程度的改動，除非是專為了平板而開發，不然學習 fragment API 還不是時候（也許等到 Ice Cream Sandwich?）</p><p>3<!-- -->.<!-- --> 看第四版的目錄好像沒有講到 Android 3 的特性？</p><p>其實各種新東西講了不少，但都已經整合在各個章節中，融入了整個學習過程裡。</p><p>在主要開發手機應用程式的情況下， 2.x 和 3.x 還有什麼差別哩？3.x 版為了平板做很多事情，若是還繼續用 2.x SDK 開發，程式放到 Tablet 上會有些 "不太 Native" 的感覺，如選單會出現在平板的下方，而不是如其他內建應用程式顯示 Action Bar 在上方。</p><p>比起專為平板設計一份程式碼，在 Android 上要解決這些問題較容易。本入門書第四版的目標是「寫一次，就能在手機、平板、Google TV 等設備上執行」。</p><p>因此我是以這樣的想法，以手機為主，在維持本書架構的開發過程中，加入更多實際經驗與技巧，來協助 Android 應用程式開發的入門者或剛接觸平板等機種的開發者。第四版除了圖片重新擷取之外，內容大概有 30~40% 的改動。新版加入了一些新章節，介紹了選單、關連選單、App Widget（桌面小工具）與平板相容設定。還加上了 AsyncTask、Admob 等章節，在主要使用者為手機的情形下，也能讓平板的使用者得到不錯的使用經驗。</p><p>「雖然平板等機種的數量少，但如果不麻煩的話，還是盡可能支援吧？」如果您贊同這樣的想法，那看這本書可以得到您想要的。</p><p>不必懷疑，<a href="http://www.books.com.tw/exep/assp.php/gasolin/exep/prod/booksfile.php?item=0010513881" target="_blank" rel="noopener noreferrer">這是我的誠意之作</a>。</p><p>PS: 本書歷版以來都追求和市面其他書籍不同，不求全，只追求初學者透過本書能確實理解 Android 應用程式開發，並能投入實用。我一直以支持入門者的想法來改版或寫作。除非是 spam，不然大可不必揣測我會隨意砍誰的回覆。</p>]]></content>
        <category label="Android" term="Android"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[樂手與程序員]]></title>
        <id>https://blog.gasolin.idv.tw/code/樂手與程序員</id>
        <link href="https://blog.gasolin.idv.tw/code/樂手與程序員"/>
        <updated>2011-07-31T07:56:36.000Z</updated>
        <summary type="html"><![CDATA[想要找一份穩定安逸工作的音樂人成不了音樂家。音樂這行很殘酷，壓根也不可能安逸。能成為專業樂手的人都想成名。一名樂手要不就努力想成名，要不就根本別踏進這一行。&nbsp;> 經常有人問我為什麼很多優秀的樂手同時又是很棒的軟體開發工程師。]]></summary>
        <content type="html"><![CDATA[<blockquote><p>想要找一份穩定安逸工作的音樂人成不了音樂家。音樂這行很殘酷，壓根也不可能安逸。能成為專業樂手的人都想成名。一名樂手要不就努力想成名，要不就根本別踏進這一行。<!-- -->&nbsp;<!-- -->&gt; 經常有人問我為什麼很多優秀的樂手同時又是很棒的軟體開發工程師。
這絕對不是因為這兩種職業使用一樣的腦部功能，也不是因為他們都是追求細節和創造力的工作，而是因為一個渴望成功的人肯定要比那些只是單純完成工作的人更有可能成功。<!-- -->&nbsp;<!-- -->&gt; 即使我們不能成為 Linus Torvalds 那樣的人，但確定高目標至少可以讓我們不再平凡。<!-- -->&nbsp;<!-- -->&gt; -- Chad Fowler , The passionate Programmer</p></blockquote>]]></content>
        <category label="coding" term="coding"/>
        <category label="digest" term="digest"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[AttachEmail: 從SD卡中加檔案到Email附件]]></title>
        <id>https://blog.gasolin.idv.tw/tools/App-AttachEmail</id>
        <link href="https://blog.gasolin.idv.tw/tools/App-AttachEmail"/>
        <updated>2011-07-10T09:35:58.000Z</updated>
        <summary type="html"><![CDATA[(不知道為什麼系統沒直接提供這功能)]]></summary>
        <content type="html"><![CDATA[<p>(不知道為什麼系統沒直接提供這功能)</p><p>昨晚上花了幾個鐘頭做了一版出來。功能非常單一：主要就是從檔案列表裡選擇任一檔案，而所有檔案左側都會有一個迴紋針符號，
只要點選項目，就可以把檔案當做 Email 附件，這樣以後 SD 卡就不用拔來拔去了。</p><p>大家有需要可以到 Android Market 搜尋 AttachEmail 下載。</p><p>Update 2011/7/10:</p><p>新版本的<a href="https://market.android.com/details?id=com.gasolin.android.attachemail" target="_blank" rel="noopener noreferrer">AttachEmail</a>&nbsp;<!-- -->(<!-- -->&gt;<!-- -->1.5.2) 除了可以選擇任意附檔之外，還可以從 GMail 儲存任意附檔到 SD 卡中。
<a href="https://market.android.com/details?id=com.gasolin.android.attachemail" target="_blank" rel="noopener noreferrer">AttachEmail Pro</a>版本還支援直接從 GMail 附加檔案，同時可以設定在 AttachEmail 中預設顯示的目錄，讓「處理 Email 附檔」這件事變得更方便。</p>]]></content>
        <category label="Android" term="Android"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[對Google關掉台灣Android Market付費App下載的觀察]]></title>
        <id>https://blog.gasolin.idv.tw/android/Google-shutdown-Android-Market-pay-App</id>
        <link href="https://blog.gasolin.idv.tw/android/Google-shutdown-Android-Market-pay-App"/>
        <updated>2011-07-03T03:10:06.000Z</updated>
        <summary type="html"><![CDATA[圖片來源]]></summary>
        <content type="html"><![CDATA[<p></p><p></p><p>今天 Google Android Market 關掉台灣付費 App 下載的新聞動靜不小，也有一些相關的討論出來。但不管<a href="http://ysl-paradise.blogspot.com/2011/06/app.html" target="_blank" rel="noopener noreferrer">法規合不合理</a>，明顯政府短期內都不太可能修法。</p><p><strong>影響的 App 類型</strong></p><p>在談這個事件的影響之前，我們可以先界定「退費」（refund）機制的影響範圍。在允許 48 小時，24 小時，15 分鐘，或是 7 天無條件退費的爭議上，有最大影響的是那些「用過即丟」的 App（如早期 iPhone 上的 iFart 模擬放屁聲程式）和遊戲、內容 App。</p><p>對於高品質的應用程式等原本就用不太到退費機制的 App 來說，影響不大。但這次 Google 關掉了台灣使用者付費機制，對這些原本用不到退費機制的 App 也造成了影響。</p><p>「用過即丟」的 App 價格很便宜，一杯珍奶的價格（$0.99，接近 30 元台幣）可以讓下載的使用者開心幾分鐘。有數天無條件鑑賞期存在的話，大多數的使用者肯定會在這期間退掉。這確實可以減少使用者覺得「被詐騙」的感覺。因此在這樣的法律下，這類 App 將沒有生存空間。</p><p>遊戲 App 方面，大多數移動遊戲的遊玩時間都不長，模式也較簡單。在不耐玩的情況下，允許的退貨時間長短，對這類 App 的盈利結果也會有很大的影響。</p><p>這幾年內容 App（如 App 電子書）的消費方式都跟著數位音樂走，但數位內容和數位音樂的消費方式還是有些不同。我們會重複地聽音樂，但很少會重複地看同樣的內容。對這類 App 來說，退貨規則是 48 小時，24 小時，15 分鐘，或是 7 天，就成為很關鍵的問題了。</p><p><strong>影響</strong></p><p>我們了解了受影響 App 的範圍，那麼在現行狀況下，我們可以觀察看看政府和 Google 兩方的舉措，會對台灣 Android 應用程式市場造成的影響。</p><p>消費者</p><p>1<!-- -->.<!-- --> Google 把 Android Market 台灣的付費關掉了，除了無法再看到付費 App 之外，消費者之前買過的 App 都無法下載，傷害了消費者對 Android Market 的信心。有一就有可能有二。之後就算再開啟 Market 付費功能，消費者在消費前也要再多想想，是不是哪天這種鳥事又再來一次。</p><p>update: 已購買過的程式還是可以透過 Web 版的 Android Market 再下載。</p><p>其他市集業者</p><p>2<!-- -->.<!-- --> 在 Apple、Google 都得照辦的新聞出來，面對大無畏的政府，中華、遠傳等電信商自有的市集是否也得儘快跟進，否則政府也會將鐵腕轉向這些大電信商，用同樣的標準來要求，用 100 萬連續開罰？</p><ul><li></li></ul><p>開發者</p><p>3<!-- -->.<!-- --> 市場是否還存在？開發者是否還願意開發付費版的台灣專用 App？</p><p>4<!-- -->.<!-- --> 若 Android Market 再開放，但要在台灣販售得遵守台灣 7 天鑑賞期的法規，國外開發者是否願意勾選在台灣開賣他的付費應用程式？</p><p>政府</p><p>5<!-- -->.<!-- --> 台灣政府的反應，為什麼是台北市出面要求和罰金？</p><p>update:<!-- -->&nbsp;<!-- -->消保官是行政院指派，隸屬地方政府管轄。因為 Google 公司登記在台北市，所以由台北市管轄。</p><p>相關連結</p><ul><li></li><li></li><li></li></ul>]]></content>
        <category label="Android" term="Android"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Taipei GTUG活動簡介]]></title>
        <id>https://blog.gasolin.idv.tw/life/Taipei-GTUG-intro</id>
        <link href="https://blog.gasolin.idv.tw/life/Taipei-GTUG-intro"/>
        <updated>2011-06-03T01:37:42.000Z</updated>
        <summary type="html"><![CDATA[今年初接了Taipei GTUG活動的Organizer，開始更頻繁地和開發者們相處，並學習如何組織各式對開發者有幫助的活動。]]></summary>
        <content type="html"><![CDATA[<p>今年初接了<a href="http://www.taipei-gtug.org" target="_blank" rel="noopener noreferrer">Taipei GTUG</a>活動的 Organizer，開始更頻繁地和開發者們相處，並學習如何組織各式<a href="https://sites.google.com/a/taipei-gtug.org/www/meetings/meeting2011" target="_blank" rel="noopener noreferrer">對開發者有幫助的活動</a>。</p><p><a href="http://www.taipei-gtug.org/" target="_blank" rel="noopener noreferrer">台北 GTUG (Taipei GTUG)</a>組織的全名是「Taipei Google Technique User Group」，為非 Google 官方的組織。GTUG 主要參與者是開發者（developer），討論 Google 相關技術議題 (Web, Mobile)，在<a href="http://www.gtugs.org/" target="_blank" rel="noopener noreferrer">全世界</a>都有類似的組織。隔週三晚間 7:30 聚會，每個月盡量安排一場 Android（Mobile）相關主題，和一場 Web（Chrome, App Engine...）相關主題。所有活動會公告在網站和各種社群網站（<a href="http://twitter.com/#%21/Taipei_GTUG" target="_blank" rel="noopener noreferrer">Twitter</a>, <a href="http://www.plurk.com/Taipei_GTUG" target="_blank" rel="noopener noreferrer">Plurk</a>, <a href="http://www.facebook.com/Taipei.GTUG" target="_blank" rel="noopener noreferrer">Facebook</a>）上。</p><p>在五月<a href="http://www.taipei-gtug.org/events/20110511" target="_blank" rel="noopener noreferrer">Google IO Extended 同樂會活動</a>開始時，我有製作一個 Taipei GTUG 活動的簡介（英文）來和與會者 (和全世界) 介紹 Taipei GTUG 活動。在昨天<a href="http://www.taipei-gtug.org/events/mobile-ad-practice-2011" target="_blank" rel="noopener noreferrer">Android 應用盈利模式及成功案例</a>活動中，我再將這份活動簡介更新一番，以中文來介紹我們的台北 GTUG，並鼓勵大家來參與<a href="http://www.google.com/moderator/?hl=zh-TW#16/e=8d4fd" target="_blank" rel="noopener noreferrer">Google IO 2011 影片分享讀書會</a>活動。</p><p>在北部的開發者們，對 Google 相關技術有興趣的話，都歡迎查看時間，前來 Taipei GTUG 和其他開發者聊聊喔：)</p><p><strong><a href="http://www.slideshare.net/gasolin/taipei-gtug-opening" target="_blank" rel="noopener noreferrer" title="Taipei gtug opening">Taipei gtug opening</a></strong> </p><iframe src="http://www.slideshare.net/slideshow/embed_code/8179794" width="425" height="355" frameborder="0" marginwidth="0" marginheight="0" scrolling="no"></iframe><p>View more <a href="http://www.slideshare.net/" target="_blank" rel="noopener noreferrer">presentations</a> from <a href="http://www.slideshare.net/gasolin" target="_blank" rel="noopener noreferrer">gasolin</a></p>]]></content>
        <category label="GTUG" term="GTUG"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[[投影片]Google IO 2011回顧 (Android部分)]]></title>
        <id>https://blog.gasolin.idv.tw/android/slide-Google-IO-2011-Android-review</id>
        <link href="https://blog.gasolin.idv.tw/android/slide-Google-IO-2011-Android-review"/>
        <updated>2011-05-30T01:06:07.000Z</updated>
        <summary type="html"><![CDATA[今年的 Google IO議程中有太多好東西，但是每個議程都是一個鐘頭，對大多數人來說也是個負擔。]]></summary>
        <content type="html"><![CDATA[<p>今年的 <a href="http://www.google.com/events/io/2011/sessions.html" target="_blank" rel="noopener noreferrer">Google IO</a>議程中有太多好東西，但是每個議程都是一個鐘頭，對大多數人來說也是個負擔。</p><p>上週六在癮科技主辦的<a href="http://chinese.engadget.com/2011/05/28/x-android-android/" target="_blank" rel="noopener noreferrer">非手機 Android 聚會</a>上分享了「Google IO 2011 回顧」(Android) 投影片。從 Google IO 2011 活動中找出一些我已經看過的有趣內容，在 30 分鐘之內分享給大家。</p><p>同時也在會場公開了接下來會在<a href="http://www.taipei-gtug.org/" target="_blank" rel="noopener noreferrer">Taipei-GTUG</a>舉辦的「<a href="http://www.google.com/moderator/?hl=zh-TW#16/e=8d4fd" target="_blank" rel="noopener noreferrer">Google IO 2011 演講分享讀書會（系列）</a>」活動。</p><p>讀書會的目的是希望發起由參加者認領一至數個 Google IO 中的演講，再用 5~1­0 分鐘和大家分享精華，讓參與的人可以用更短的時間綜合了解 Goo­gle IO 的內容。</p><p>歡迎有興趣一起學習的人報名參與喔 :)</p><p><strong><a href="http://www.slideshare.net/gasolin/io2011-recap-20110528" target="_blank" rel="noopener noreferrer" title="Io2011 recap 20110528">Io2011 recap 20110528</a></strong></p><object id="__sse8145303" width="425" height="355"><param name="movie" value="http://static.slidesharecdn.com/swf/ssplayer2.swf?doc=io2011recap20110528-110529194942-phpapp01&amp;stripped_title=io2011-recap-20110528&amp;userName=gasolin"><param name="allowFullScreen" value="true"><param name="allowScriptAccess" value="always"><embed name="__sse8145303" src="http://static.slidesharecdn.com/swf/ssplayer2.swf?doc=io2011recap20110528-110529194942-phpapp01&amp;stripped_title=io2011-recap-20110528&amp;userName=gasolin" type="application/x-shockwave-flash" allowscriptaccess="always" allowfullscreen="true" width="425" height="355"></object><p>View more <a href="http://www.slideshare.net/" target="_blank" rel="noopener noreferrer">presentations</a> from <a href="http://www.slideshare.net/gasolin" target="_blank" rel="noopener noreferrer">gasolin</a>.</p>]]></content>
        <category label="Android" term="Android"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[HoneyComb Highlights]]></title>
        <id>https://blog.gasolin.idv.tw/android/HoneyComb-Highlights</id>
        <link href="https://blog.gasolin.idv.tw/android/HoneyComb-Highlights"/>
        <updated>2011-05-15T04:14:23.000Z</updated>
        <summary type="html"><![CDATA[在Google I/O 2011大會上，Romain Guy作了「HoneyComb Highlight」演講，把大多數HoneyComb版的新功能都講到了。]]></summary>
        <content type="html"><![CDATA[<p>在 Google I/O 2011 大會上，Romain Guy 作了「HoneyComb Highlight」演講，把大多數 HoneyComb 版的新功能都講到了。</p><p>投影片</p><p><strong><a href="http://www.slideshare.net/romainguy/google-io-2011-android-honeycomb-highlights" target="_blank" rel="noopener noreferrer" title="Google I/O 2011, Android Honeycomb Highlights">Google I/O 2011, Android Honeycomb Highlights</a></strong> </p><iframe src="http://www.slideshare.net/slideshow/embed_code/7945793" width="425" height="355" frameborder="0" marginwidth="0" marginheight="0" scrolling="no"></iframe><p>View more <a href="http://www.slideshare.net/" target="_blank" rel="noopener noreferrer">presentations</a> from <a href="http://www.slideshare.net/romainguy" target="_blank" rel="noopener noreferrer">Romain Guy</a></p><p>錄影</p><iframe width="480" height="300" src="http://www.youtube.com/embed/sTx-5CGDvM8" frameborder="0"></iframe>]]></content>
        <category label="Android" term="Android"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[正面迎擊，看 Google I/O 2011 Day1 Keynote 感想]]></title>
        <id>https://blog.gasolin.idv.tw/android/Google-I-O-2011-Day1-Keynote-note</id>
        <link href="https://blog.gasolin.idv.tw/android/Google-I-O-2011-Day1-Keynote-note"/>
        <updated>2011-05-11T01:08:22.000Z</updated>
        <summary type="html"><![CDATA[看完這次的Android I/O Keynote(咦，好像名字不是這個)，]]></summary>
        <content type="html"><![CDATA[<p>看完這次的<a href="http://www.google.com/events/io/2011/index-live.html" target="_blank" rel="noopener noreferrer">Android I/O Keynote</a>(咦，好像名字不是這個)，
Android Market 平台除了已推出的應用程式（App）、書籍（Book）之外，現在將提供使用者影片租賃（Movie Rental）、<a href="http://music.google.com/about" target="_blank" rel="noopener noreferrer">音樂 (Music)</a>這兩種線上服務。</p><p>同時 Google TV 也將接入 Android Market。這些努力將對手尚未在 iOS 平台上開通的服務一次補足，同時 Android 開發者也首次有了可以向 iOS 開發者說嘴的優勢（可以開發 App for TV）。</p><p>更重要的宣告是<a href="http://developer.android.com/intl/zh-TW/sdk/android-3.1.html" target="_blank" rel="noopener noreferrer">Android 3.1</a>和<a href="http://developer.android.com/sdk/android-2.3.4.html" target="_blank" rel="noopener noreferrer">Android 2.3.4</a>的推出，全力支援 iOS 碰都不碰的<a href="http://developer.android.com/reference/android/hardware/usb/package-summary.html" target="_blank" rel="noopener noreferrer">USB 相關技術</a>。</p><p>首先是支援<a href="http://developer.android.com/reference/android/hardware/usb/UsbDevice.html" target="_blank" rel="noopener noreferrer">USB Host</a>，讓數位相機可以直接接到平板上，把照片傳進平板。</p><p>再來是支援<a href="http://developer.android.com/reference/android/hardware/usb/UsbAccessory.html" target="_blank" rel="noopener noreferrer">USB Accesories</a> API，讓周邊設備可以直接透過 USB 與 Android 設備連線，與 Android 設備中的應用程式互動。當 Android 設備透過 USB 接上周邊時，會自動列出支援的 App 或是 App 的下載連結。</p><p>接著 Android@Home Framework 則是在 USB、網路等周邊的基礎上切入智慧家電領域。</p><p>Google 的三螢一雲已經成形，而 Google 的三螢一雲不僅只侷限在手機、PC、電視、Web 上而已，Google 的三螢一雲具備著更通用的涵義：<strong>移動、定點、家庭、雲端</strong>。</p><p>對開發者而言，可以用同個系統開發 App for Mobile（手機、行動裝置）、App for Tablet（平板）、App for TV（電視）、App for Accesory（周邊）、App for Home（家庭），學習 Android 系統的吸引力無疑大大地增加。</p><p>看到這次 Android 3.1 的發佈，我第一次有 Android OS 開始追上了 iOS 的感覺。面對這樣的正面迎擊，其他廠商該要擁抱它呢？還是也不落人後地端出什麼好料呢？Google I/O 才剛開始，後續值得期待。</p>]]></content>
        <category label="Android" term="Android"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[程式設計工藝]]></title>
        <id>https://blog.gasolin.idv.tw/code/dev-art</id>
        <link href="https://blog.gasolin.idv.tw/code/dev-art"/>
        <updated>2011-04-25T05:29:19.000Z</updated>
        <summary type="html"><![CDATA[我傾向於將程式設計看做是一種工藝--它需要技巧、手藝、訓練和經驗。]]></summary>
        <content type="html"><![CDATA[<blockquote><p>我傾向於將程式設計看做是一種工藝 -- 它需要技巧、手藝、訓練和經驗。
它的產品具有一定的功能，並且很漂亮。
程式設計還含有藝術元素，它是一個創造性的過程。
與這種藝術性結合在一起的，還有對工具和技術的掌握 -- 這些是工匠所具備的特徵。
-- 編程創藝</p></blockquote>]]></content>
        <category label="coding" term="coding"/>
        <category label="digest" term="digest"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Virtualenv 簡單入門]]></title>
        <id>https://blog.gasolin.idv.tw/devtools/Virtualenv-guide</id>
        <link href="https://blog.gasolin.idv.tw/devtools/Virtualenv-guide"/>
        <updated>2011-03-26T12:57:12.000Z</updated>
        <summary type="html"><![CDATA[功用]]></summary>
        <content type="html"><![CDATA[<p><strong>功用</strong></p><p>使用 <a href="http://pypi.python.org/pypi/virtualenv" target="_blank" rel="noopener noreferrer">Virtualenv</a> 可以讓你預先建立一個虛擬環境，在虛擬環境中開發 Python 程式，可以保持 Python path 乾淨，並減少因為機器上需要同時支援不同版本函式庫，造成各函式庫彼此之間相依性的困擾。</p><p>而且使用虛擬環境後，到時要將環境轉移到別台機器上，也減少很多設定上的問題。</p><p><strong>安裝</strong></p><blockquote><p>$ easy_install virtualenv
<strong>設定環境</strong></p></blockquote><blockquote><p>$ virtualenv --no-site-packages <!-- -->[dev_place]<!-- -->
即建立一個名為 <!-- -->[dev_place]<!-- --> 的資料夾（中括號裡的名稱自行填寫取代）。</p></blockquote><p><strong>切換到虛擬環境</strong></p><p>進入 <!-- -->[dev_place]<!-- --> 目錄，輸入命令：</p><blockquote><p>$ source bin/activate
若看到路徑提示前多了個（<!-- -->[dev_place]<!-- -->）符號，即表示已經進入了虛擬環境。</p></blockquote><p>這時我們可以使用預設提供的 easy_install 工具安裝要使用的函式庫、或是安裝各種 Python 程式。</p><p>安裝的函式庫會被放到 <!-- -->[dev_place]<!-- -->/lib/Python<!-- -->[版本]<!-- -->/site-packages/ 目錄中，跟一般的 Python 函式庫配置方式相似。</p><p><strong>離開虛擬環境</strong></p><p>要離開虛擬環境，只需輸入命令：</p><blockquote><p>$ deactivate
即可回到預設的命令行狀態。</p></blockquote><p><strong>其他操作</strong></p><p>如果你的電腦上有裝多個 Python 版本，在下 virtualenv 命令時加上「--python=python<!-- -->[版本]<!-- --> 」當作參數，例如建立 2.6 版的虛擬環境命令為</p><blockquote><p>$ virtualenv --no-site-packages <!-- -->[dev_place]<!-- --> --python=python2.6
也可以建立出不同版本的 Python 虛擬環境，讓你可以更容易地在多個 Python 版本間做測試。</p></blockquote><p>其他使用方法可以輸入「virtualenv --help」參考印出的說明。</p><p><strong>Python3</strong></p><p>目前 virtualenv 官方還不支援 Python 3.x, 但是有開發中版本可用，可使用 Mercural 下載來安裝</p><blockquote><h1>hg clone <a href="https://bitbucket.org/brandon/virtualenv3" target="_blank" rel="noopener noreferrer">https://bitbucket.org/brandon/virtualenv3</a></h1><h1>cd virtualenv3</h1><h1>python3 setup.py install</h1></blockquote>]]></content>
        <category label="python" term="python"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[理解Open ID]]></title>
        <id>https://blog.gasolin.idv.tw/service/理解Open-ID</id>
        <link href="https://blog.gasolin.idv.tw/service/理解Open-ID"/>
        <updated>2011-03-08T02:12:33.000Z</updated>
        <summary type="html"><![CDATA[Open ID簡而言之，就是在瀏覽到某個網站時，不用在這個網站先註冊帳號，]]></summary>
        <content type="html"><![CDATA[<p>Open ID 簡而言之，就是在瀏覽到某個網站時，不用在這個網站先註冊帳號，
只要透過 OpenID 機制用自己現成的 Yahoo、Google 等大網站的帳號登入，
就可以開始使用這個網站所提供的個人化服務。而且自己 Yahoo、Google 等帳號的密碼也不會透露給這個網站知道。讓使用者可以更放心嘗試各種新的網站應用服務。</p><p>在使用者登入這個網站後，這個網站還是可以在自己的資料庫中記錄關於這個使用者的各種訊息。</p><p>對應到現實世界的例子，就好比我們只要持有台灣護照，到日本、加拿大遊玩時免填簽證，就可以進入該國家。只要在該國海關前出示護照，表明我們是來自台灣的遊客，海關確認護照後即准予通行，於是我們就可以進入他們的國家。</p><p>回到網路的世界，舉 Google 為例，我們也可以查看 Google 提供的各種外部網站 (外國) 接取 Google 帳號 (Google 護照) 來登入的方式</p><p>Third-party web sites and applications can now let visitors sign in using their Google user accounts.</p><p></p><p>Facebook Connect 也是使用類似的機制，提供外部網站可以使用 Facebook 帳號登入，有五億潛在使用者 (Facebook 國民) 可以更容易地使用這個網站 (外國) 提供的應用服務.
<a href="http://www.facebook.com/help/?page=730" target="_blank" rel="noopener noreferrer">http://www.facebook.com/help/?page=730</a></p><p></p>]]></content>
        <category label="webframework" term="webframework"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Android 3.0公布]]></title>
        <id>https://blog.gasolin.idv.tw/android/Android-3-0-publish</id>
        <link href="https://blog.gasolin.idv.tw/android/Android-3-0-publish"/>
        <updated>2011-02-09T02:15:22.000Z</updated>
        <summary type="html"><![CDATA[Android平板快出了，Google在許多不同場合宣告了這個消息。]]></summary>
        <content type="html"><![CDATA[<p>Android 平板快出了，Google 在許多不同場合宣告了這個消息。</p><iframe title="YouTube video player" width="640" height="390" src="http://www.youtube.com/embed/RfJuigJebRg" frameborder="0"></iframe><p>Android 3.0 (HoneyComb) 引入了部件 (Fragment) 的概念，讓同一個畫面中可以顯示多個區塊 (在同一個 Activity 中包含多個 mini-Activity)。區塊與區塊之間可以做各式互動。要達成直、橫顯示時不同的平版配置方式，只需巧妙地搭配從 Android 1.6 版引入的多重 Layout 和 Android 3.0 版引入的 Fragment 功能。<a href="http://android-developers.blogspot.com/2011/02/android-30-fragments-api.html" target="_blank" rel="noopener noreferrer">Google Blog 上的文章</a>介紹了實際使用的方法。</p><p>同時 Android 3.0 平板的「桌面」功能更強大了，各式新型桌面 Widget 開發也將成為另一個新的亮點。</p><p>製造商們面對 iPad 龐大的壓力，勢必對 Android 平板趨之若騖。現在要問的是，開發者們準備好隨之起舞了嗎？</p>]]></content>
        <category label="Android" term="Android"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[白象禮物交換]]></title>
        <id>https://blog.gasolin.idv.tw/code/white-elephant</id>
        <link href="https://blog.gasolin.idv.tw/code/white-elephant"/>
        <updated>2010-12-24T04:58:12.000Z</updated>
        <summary type="html"><![CDATA[白象禮物的交換派對，所謂的白象禮物, 指的是家中不論新舊, 只要是完好可用的東西, 用禮物袋裝一裝或包裝精美後就可以帶去派對與人交換. 當然一人限量一份禮物。]]></summary>
        <content type="html"><![CDATA[<blockquote><p>白象禮物的交換派對，所謂的白象禮物，指的是家中不論新舊，只要是完好可用的東西，用禮物袋裝一裝或包裝精美後就可以帶去派對與人交換。當然一人限量一份禮物。</p><p>交換規則:
每個人抽一張號碼牌，依序選擇一份禮物。每樣禮物必須當場拆開，每樣禮物只能被轉手換人兩次。也就是說，輪到我時，我可以任選我前面的人已拆封的禮物 (假設這個禮物是第一次轉手換人); 但我後面的人也可以選擇我的禮物，而成為這份禮的最後擁有者，因為這次的轉手換人是限制的第二次。倘使你的禮物被選走了，你可以馬上再選一份未開封的禮物，或其他人已拆封的禮物.
聖誕節到了同事們要交換禮物。剛開始是想抽籤有點麻煩，於是用 Python 寫了個簡單的 Script 來滿足抽籤的需求：</p></blockquote><blockquote><blockquote><blockquote><blockquote><p>import random
order = <!-- -->["alice", "betty", "cindy", "deby"]<!-- -->
random.shuffle(order)
order
<!-- -->['deby', 'cindy', 'alice', 'betty']<!-- -->
random.shuffle(order)
order
<!-- -->['alice', 'cindy', 'deby', 'betty']<!-- -->這麼一來每次執行 random.shuffle (order) 都可以亂數得到一個順序囉。</p></blockquote></blockquote></blockquote></blockquote><p>不過一旦當活動牽扯到人的話，還是靠真的抽籤比較有趣阿！</p>]]></content>
        <category label="python" term="python"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[App Inventor 開放]]></title>
        <id>https://blog.gasolin.idv.tw/devtools/App-Inventor-in-public</id>
        <link href="https://blog.gasolin.idv.tw/devtools/App-Inventor-in-public"/>
        <updated>2010-12-24T04:50:28.000Z</updated>
        <summary type="html"><![CDATA[當某人發明一套神奇的新程式產生工具，聲稱可以大幅提昇效率。這時有人就會出來說：「應該要先學會如何手動進行，然後才用這個神奇的工具來節省時間。」]]></summary>
        <content type="html"><![CDATA[<blockquote><p>當某人發明一套神奇的新程式產生工具，聲稱可以大幅提昇效率。這時有人就會出來說：「應該要先學會如何手動進行，然後才用這個神奇的工具來節省時間。」</p><p>程式產生工具假裝將某些東西抽象化，這和其他所有抽象機制一樣都有漏洞，而唯一能適當處理漏洞的方法，就是弄懂該抽像原理以及所隱藏的東西。所以抽象機制雖然替我們節省了工作的時間，不過，學習的時間是無法省的。
-- <a href="http://www.books.com.tw/exep/assp.php/gasolin/exep/prod/booksfile.php?item=0010467041" target="_blank" rel="noopener noreferrer">約耳趣談軟體</a>
Google 提出的 Android 拖拉放程式設計工具 <a href="http://appinventor.googlelabs.com/about/" target="_blank" rel="noopener noreferrer">App Inventor</a> 已經開放使用了。目前版本還有<a href="http://appinventor.googlelabs.com/learn/userfaq.html" target="_blank" rel="noopener noreferrer">諸多限制</a>，例如做出來的 Apk 無法上傳到 Android Market、無法直接用模擬器而非實機測試等，但已可以作為簡單的程式教學工具。</p></blockquote><p>Android 2.3 版發佈之後，開發工具裡的使用者介面設計工具已經有所進展（但還是很陽春），參照 App Inventor 的開發經驗，明年再來看官方開發工具的時後，也許可以再提昇一些水準。</p>]]></content>
        <category label="Android" term="Android"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Android 2.3 Google 應用程式的改進]]></title>
        <id>https://blog.gasolin.idv.tw/android/Android-2-3-Google-App-Improvements</id>
        <link href="https://blog.gasolin.idv.tw/android/Android-2-3-Google-App-Improvements"/>
        <updated>2010-12-18T14:56:18.000Z</updated>
        <summary type="html"><![CDATA[Android 2.3 除了這些系統層面的改進外，Google 出的應用程式也多有修改，而且都已經放上 Android Market 供舊版本也能直接使用。這次各種應用程式的更新目標都是更貼近桌面端的使用經驗。幸好Google有「Release Early, Release Often」的哲學，我們才不必等到手機商出了新Firmware後才能享受到這些應用程式更新的好處。]]></summary>
        <content type="html"><![CDATA[<p>Android 2.3 除了這些系統層面的改進外，Google 出的應用程式也多有修改，而且都已經放上 Android Market 供舊版本也能直接使用。這次各種應用程式的更新目標都是更貼近桌面端的使用經驗。幸好 Google 有「Release Early, Release Often」的哲學，我們才不必等到手機商出了新 Firmware 後才能享受到這些應用程式更新的好處。</p><p>1<!-- -->.<!-- --> <strong>Android Market 更新了</strong>，能查看版本更新、查看相關的應用程式、支援平板，並修改了一些使用條款，現在退款時限從 48 小時退化到只剩 15 分鐘。當然，還有台灣的 使用者可以買 App，開發者可以賣 App。</p><object width="640" height="385"><param name="movie" value="http://www.youtube.com/v/S41bPVQJgyY?fs=1&amp;hl=zh_TW"><param name="allowFullScreen" value="true"><param name="allowscriptaccess" value="always"><embed src="http://www.youtube.com/v/S41bPVQJgyY?fs=1&amp;hl=zh_TW" type="application/x-shockwave-flash" allowscriptaccess="always" allowfullscreen="true" width="640" height="385"></object><p>2<!-- -->.<!-- --> <strong><a href="http://googlemobile.blogspot.com/2010/12/youtube-21-app-now-available-on-android.html" target="_blank" rel="noopener noreferrer">YouTube 更新了</a></strong>。</p><object width="640" height="385"><param name="movie" value="http://www.youtube.com/v/6AAFF9PN-WU?fs=1&amp;hl=zh_TW"><param name="allowFullScreen" value="true"><param name="allowscriptaccess" value="always"><embed src="http://www.youtube.com/v/6AAFF9PN-WU?fs=1&amp;hl=zh_TW" type="application/x-shockwave-flash" allowscriptaccess="always" allowfullscreen="true" width="640" height="385"></object><p>3<!-- -->.<!-- --> <strong><a href="http://googlemobile.blogspot.com/2010/12/gmail-for-android-better-priority-inbox.html" target="_blank" rel="noopener noreferrer">Gmail 更新了</a></strong>，加入 Priority Box 支援</p><object width="640" height="385"><param name="movie" value="http://www.youtube.com/v/Ztasj8_gTpI?fs=1&amp;hl=zh_TW"><param name="allowFullScreen" value="true"><param name="allowscriptaccess" value="always"><embed src="http://www.youtube.com/v/Ztasj8_gTpI?fs=1&amp;hl=zh_TW" type="application/x-shockwave-flash" allowscriptaccess="always" allowfullscreen="true" width="640" height="385"></object><p>4<!-- -->.<!-- --> <strong><a href="http://googlemobile.blogspot.com/2010/11/personally-yours-on-go-personalized.html" target="_blank" rel="noopener noreferrer">Google Maps 更新了</a></strong>，可以為地點打分數。還有斜角 3D 顯示。</p><object width="640" height="385"><param name="movie" value="http://www.youtube.com/v/TAh4yiCzgKw?fs=1&amp;hl=zh_TW"><param name="allowFullScreen" value="true"><param name="allowscriptaccess" value="always"><embed src="http://www.youtube.com/v/TAh4yiCzgKw?fs=1&amp;hl=zh_TW" type="application/x-shockwave-flash" allowscriptaccess="always" allowfullscreen="true" width="640" height="385"></object><p>5<!-- -->.<!-- --> <strong><a href="http://googlemobile.blogspot.com/2010/11/create-and-edit-your-google-docs-on-the.html" target="_blank" rel="noopener noreferrer">Google Docs 更新了</a></strong>，支援手機線上編輯</p><object width="640" height="385"><param name="movie" value="http://www.youtube.com/v/eAr5VoYdVBo?fs=1&amp;hl=zh_TW"><param name="allowFullScreen" value="true"><param name="allowscriptaccess" value="always"><embed src="http://www.youtube.com/v/eAr5VoYdVBo?fs=1&amp;hl=zh_TW" type="application/x-shockwave-flash" allowscriptaccess="always" allowfullscreen="true" width="640" height="385"></object>]]></content>
        <category label="Android" term="Android"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Android 2.3 釋出]]></title>
        <id>https://blog.gasolin.idv.tw/android/Android-2-3-publish</id>
        <link href="https://blog.gasolin.idv.tw/android/Android-2-3-publish"/>
        <updated>2010-12-13T01:39:19.000Z</updated>
        <summary type="html"><![CDATA[上週 Google 釋出了 Android 2.3 版 SDK 與開發工具，2.3版新增了SIP協定以支援網路語音通訊;支援更多種感測器(sensor)，並支援了"xlarge"(7吋+)大小的螢幕，讓 Android 系統適用於更多種類的設備。]]></summary>
        <content type="html"><![CDATA[<object width="640" height="385"><param name="movie" value="http://www.youtube.com/v/Jx3pdWBlZ34?fs=1&amp;hl=zh_TW"><param name="allowFullScreen" value="true"><param name="allowscriptaccess" value="always"><embed src="http://www.youtube.com/v/Jx3pdWBlZ34?fs=1&amp;hl=zh_TW" type="application/x-shockwave-flash" allowscriptaccess="always" allowfullscreen="true" width="640" height="385"></object><p>上週 Google 釋出了 Android 2.3 版 SDK 與開發工具，2.3 版新增了 SIP 協定以支援網路語音通訊；支援更多種感測器 (sensor)，並支援了 "xlarge"(7 吋 +) 大小的螢幕，讓 Android 系統適用於更多種類的設備。</p><p>開發工具的部分也做了許多更新，在 AVD Manager 的畫面裡，各種函式庫又區分地更細了，而且第一次加入除了 Google 之外的 Third Party API (Samsung Galaxy)。對用的到的開發者來說這是一個進步，也顯示了 Android OS 確實不只是 Google 一家在玩而已，而是背後有<a href="http://www.openhandsetalliance.com/" target="_blank" rel="noopener noreferrer">OHA</a>聯盟廠商的支援。從工程師的角度來看這個安裝工具也越來越正規化（與版本不直接相關的功能都可以拆成不同安裝包）了。但對新手來說卻是越來越不清楚第一次安裝時應該選些什麼來裝。
相信如果 ADT 的開發哲學沒有改變的話，這個安裝開發工具過程變得越來越複雜的趨勢會一直持續下去。</p><p>大部分開發工具的修改對使用 Eclipse+ADT 的開發者來講沒什麼明顯差別，影響比較大的卻是使用命令行來編譯程式的開發者。原本在 tools 資料夾下的命令都轉到 platform-tools 資料夾下，而且編譯 release 版本時預設會使用 <a href="http://proguard.sourceforge.net/" target="_blank" rel="noopener noreferrer">proguard</a> 來預做程式碼混淆的動作，省下開發者不少功夫。對原本就在使用命令行工具來編譯程式的開發者來說，需要一些修改才能順利編譯。</p>]]></content>
        <category label="Android" term="Android"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Mercurial 介紹簡報]]></title>
        <id>https://blog.gasolin.idv.tw/devtools/Mercurial-slide</id>
        <link href="https://blog.gasolin.idv.tw/devtools/Mercurial-slide"/>
        <updated>2010-12-04T06:55:31.000Z</updated>
        <summary type="html"><![CDATA[今天在 TWJUG 做的 Mercurial 簡報]]></summary>
        <content type="html"><![CDATA[<iframe src="https://docs.google.com/present/embed?id=ajkxs9k6pqxr_1104fbg5nwc6" frameborder="0" width="410" height="342"></iframe><p>今天在 TWJUG 做的 Mercurial 簡報</p>]]></content>
        <category label="hg" term="hg"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[提問的智慧App電子書]]></title>
        <id>https://blog.gasolin.idv.tw/tools/how-to-ask-questions-App</id>
        <link href="https://blog.gasolin.idv.tw/tools/how-to-ask-questions-App"/>
        <updated>2010-11-03T12:56:25.000Z</updated>
        <summary type="html"><![CDATA[「提問的智慧(How To Ask Questions The Smart Way)」是由知名黑客 Eric S. Raymond 所撰寫，被廣泛轉錄，可以很容易地透過Google搜尋到。]]></summary>
        <content type="html"><![CDATA[<p>「提問的智慧 (How To Ask Questions The Smart Way)」是由知名黑客 Eric S. Raymond 所撰寫，被廣泛轉錄，可以很容易地透過 Google 搜尋到。</p><p>花了一整天把 Eric S. Raymond 的 ' 提問的智慧 ' 中文版修訂到和<a href="http://www.catb.org/~esr/faqs/smart-questions.html" target="_blank" rel="noopener noreferrer">原文</a>一樣的 3.6 版 (<a href="http://mis.ndhu.edu.tw/docu/question.htm" target="_blank" rel="noopener noreferrer">上一版</a>正體中文是 2001 年 D.H.Grand 翻譯的)，翻譯的過程中也參考了<a href="http://www.beiww.com/doc/oss/smart-questions.html" target="_blank" rel="noopener noreferrer">簡體中文版</a>的翻譯。</p><p>先做成 Android App, <strike>等有空再來弄個網站放內文以供連結吧...</strike> 網站版文件也<a href="http://code.google.com/p/smartquestions/wiki/Disclaimer" target="_blank" rel="noopener noreferrer">已放到 GoogleCode</a>。</p><p></p><p></p>]]></content>
        <category label="Android" term="Android"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[從過去遙望未來]]></title>
        <id>https://blog.gasolin.idv.tw/digest/vision-from-the-past</id>
        <link href="https://blog.gasolin.idv.tw/digest/vision-from-the-past"/>
        <updated>2010-11-01T00:45:47.000Z</updated>
        <summary type="html"><![CDATA[但這是 Internet 對我們未來生活真正的影響嗎？我覺得不是。]]></summary>
        <content type="html"><![CDATA[<blockquote><p>但這是 Internet 對我們未來生活真正的影響嗎？我覺得不是。
如果我們著眼於大眾，就會發現真正大的影響還沒有開始。</p><p>如果 Internet 的意義確如 Bill Gates 說的 "Information at your fingertips" (彈指間立得訊息)，我們就該進一步追問大眾平日最多的「訊息行為」是什麼？</p><p>想想看，普通老百姓最常見的「訊息行為」是不是「買東西」和「看電視看報紙」呢？這裡我們才看到一個新技術與生活型態的未來。
-- 詹宏志，E 時代，1999</p></blockquote>]]></content>
        <category label="fun" term="fun"/>
        <category label="digest" term="digest"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[改善力和重構]]></title>
        <id>https://blog.gasolin.idv.tw/code/improve-refactor</id>
        <link href="https://blog.gasolin.idv.tw/code/improve-refactor"/>
        <updated>2010-10-30T01:32:43.000Z</updated>
        <summary type="html"><![CDATA[豐田採取的是剔除每次到生產線場所發現的浪費，再重新調整佈署的生產方式。]]></summary>
        <content type="html"><![CDATA[<blockquote><p>豐田採取的是剔除每次到生產線場所發現的浪費，再重新調整佈署的生產方式。
剔除浪費使流程更順暢之後，再回到現場去看，又會發現不同的浪費之處。每去一次就設立新的標準以避免浪費，這就是豐田的「改善」方式。</p><p>「浪費會以不同的形態出現。浪費是會進化的。」一旦剔除了浪費之處，它就會以不同的形態再度出現。豐田採行的就是將進化的浪費再次摘除的作法。不斷重複這種過程，就會創造出更好的環境，這就是豐田的「改善」方式。
--<a href="http://www.books.com.tw/exep/assp.php/gasolin/exep/prod/booksfile.php?item=0010348197" target="_blank" rel="noopener noreferrer">規劃力</a>
寫程式時做「重構」的目的，和在生產線上做「改善」的目標，不也是一致的嗎？</p></blockquote>]]></content>
        <category label="coding" term="coding"/>
        <category label="digest" term="digest"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[選戰也進入移動世代]]></title>
        <id>https://blog.gasolin.idv.tw/life/election-in-app</id>
        <link href="https://blog.gasolin.idv.tw/life/election-in-app"/>
        <updated>2010-10-11T13:26:49.000Z</updated>
        <summary type="html"><![CDATA[繼前幾天在 Android Market 上看到某五都候選人的 App，]]></summary>
        <content type="html"><![CDATA[<p>繼前幾天在 Android Market 上看到某五都候選人的 App，
裡面除了候選人簡介、官網新聞、還有參選地的一些吃喝地點分享等等，還算實用。</p><p>在著實被這種宣傳方式驚訝了一番之後，昨日取用某日隨手拿到的一位市議員參選人的面紙宣傳品時，又有了意外發現。</p><p>這份宣傳品不同的地方是，面紙袋背面印有 QRCode（！），還一併附上了候選人的 Gmail 信箱（！！），更精采的是用手機掃瞄 QRCode 進去後，連到的不是理所當然的候選人個人首頁，而是該候選人的 Facebook（！！！），連進去可以看到一些該候選人跑基層的照片和個人感想。</p><p>民國到了 100 年，基層選舉也正在進化，明天還是很美好阿。</p><p>PS: 為了避免政治口水，請別在此問我是哪幾位候選人，也請不要在這邊吵支持誰的問題。我支持全民最大黨 :D</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[DropBox & SparkleShare]]></title>
        <id>https://blog.gasolin.idv.tw/tools/DropBox-SparkleShare</id>
        <link href="https://blog.gasolin.idv.tw/tools/DropBox-SparkleShare"/>
        <updated>2010-09-28T02:19:27.000Z</updated>
        <summary type="html"><![CDATA[http://linuxtoy.org/archives/sparkleshare-beta.html]]></summary>
        <content type="html"><![CDATA[<p></p><p><a href="http://www.dropbox.com/referrals/NTExNTc4ODk5" target="_blank" rel="noopener noreferrer">DropBox</a>是種結合了本地和雲端，能改變使用者習慣的重要技術。</p><p><a href="http://www.dropbox.com/referrals/NTExNTc4ODk5" target="_blank" rel="noopener noreferrer">DropBox</a>讓使用者可以用原本的形式來處理檔案和文件，只要在各種作業系統上安裝<a href="http://www.dropbox.com/referrals/NTg3MDc3Njk" target="_blank" rel="noopener noreferrer">DropBox</a>提供的軟體，登入<a href="http://www.dropbox.com/referrals/NTg3MDc3Njk" target="_blank" rel="noopener noreferrer">DropBox</a>帳號後即會在本地建立一個資料夾。
這個資料夾中的所有檔案都會自動同步到<a href="http://www.dropbox.com/referrals/NTExNTc4ODk5" target="_blank" rel="noopener noreferrer">DropBox</a>伺服器。如果你有多台設備 (電腦，iPad, 智慧手機)，並都登入了同一帳號，那麼當資料夾中的任一檔案被更新後，其他台設備很快就也能接收到這些檔案的更新。<a href="http://www.dropbox.com/referrals/NTExNTc4ODk5" target="_blank" rel="noopener noreferrer">DropBox</a>真正做到了隨處可得。</p><p>很方便的是，不管是對檔案、文件夾改名，或是刪除檔案都難不倒它。如果在其中一台刪除了檔案，其他台的檔案也會一併被刪除。為了解決客戶對誤操作的擔憂，<a href="http://www.dropbox.com/referrals/NTg3MDc3Njk" target="_blank" rel="noopener noreferrer">DropBox</a>還提供了類似蘋果電腦上的時光回溯 (Time Machine) 功能 (技術上基本就是將檔案操作結合版本控制系統)，若是做了誤操作，可以登入到<a href="http://www.dropbox.com/referrals/NTg3MDc3Njk" target="_blank" rel="noopener noreferrer">DropBox</a>網站上將上次的誤操作回復到之前狀態，真是非常安心。</p><p>另外，放在<a href="http://www.dropbox.com/referrals/NTExNTc4ODk5" target="_blank" rel="noopener noreferrer">DropBox</a>檔案夾下的檔案，除了可以像以前的作法用網芳分享給在同個網域下的朋友外，還可以直接將一個資料夾分享給其他同樣有<a href="http://www.dropbox.com/referrals/NTExNTc4ODk5" target="_blank" rel="noopener noreferrer">DropBox</a>帳號的朋友，真正是天涯若彼鄰。</p><p><a href="http://sparkleshare.org/" target="_blank" rel="noopener noreferrer">SparkleShare </a>則是它的 open source 替代品，後端使用 GIT 版本控制系統。</p><p>PS: 大家看了我上面的介紹，可以知道我真的很愛這種東西。因為研究所時我也花過一段時間研究，並發過一篇一樣為解決多台設備間資料同步問題的 paper，而人家真的做出來了 :D</p>]]></content>
        <category label="hg" term="hg"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[分散式版本控制的合作模式]]></title>
        <id>https://blog.gasolin.idv.tw/devtools/corp-with-distributed-version-control-system</id>
        <link href="https://blog.gasolin.idv.tw/devtools/corp-with-distributed-version-control-system"/>
        <updated>2010-09-11T00:47:24.000Z</updated>
        <summary type="html"><![CDATA[傳統的版本控制系統(Version Control System, VCS)只有一台單一的版本庫（repository），所有的版本控制都必須經由這台版本庫主機才能管理。新一代的分散式版本控制系統(Distributed Version Control System, DVCS)如 git, Mercurial 則每份抓下來的 code 都可起到等同於版本庫的作用，使得在離線時做版本控制，並能容易地合併回主版本庫的工作模式成為可能。]]></summary>
        <content type="html"><![CDATA[<p>傳統的版本控制系統 (Version Control System, VCS) 只有一台單一的版本庫（repository），所有的版本控制都必須經由這台版本庫主機才能管理。新一代的分散式版本控制系統 (Distributed Version Control System, DVCS) 如 git, Mercurial 則每份抓下來的 code 都可起到等同於版本庫的作用，使得在離線時做版本控制，並能容易地合併回主版本庫的工作模式成為可能。</p><p>因為分散的特性，也衍生出各種可能的合作模式。
git 有 <a href="http://nvie.com/git-model" target="_blank" rel="noopener noreferrer">A successful Git branching model</a>，Mercurial 有 <a href="http://stevelosh.com/blog/2010/02/mercurial-workflows-branch-as-needed/" target="_blank" rel="noopener noreferrer">Workflows: Branch As Needed</a>, <a href="http://stevelosh.com/blog/2010/05/mercurial-workflows-stable-default/" target="_blank" rel="noopener noreferrer">Stable &amp; Default</a>, <a href="http://stevelosh.com/blog/2010/06/mercurial-workflows-translation-branches/" target="_blank" rel="noopener noreferrer">Translation Branches</a> 等方式。</p><p>實際上該採用哪種方式比較好？先看看其他人怎麼做，從中選擇，或是加點創意，找出適合自己團隊使用的方法吧。</p>]]></content>
        <category label="hg" term="hg"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Mercurial, 分支與合併很簡單]]></title>
        <id>https://blog.gasolin.idv.tw/devtools/Mercurial-easy-branch-merge</id>
        <link href="https://blog.gasolin.idv.tw/devtools/Mercurial-easy-branch-merge"/>
        <updated>2010-09-11T00:27:20.000Z</updated>
        <summary type="html"><![CDATA[Mercurial(Hg) 一直是我很愛用的版本控制工具。以前自己最常用的用途是拿來取代 svn，單純享受單機/離線使用版本控制系統開發的樂趣。]]></summary>
        <content type="html"><![CDATA[<p><a href="http://mercurial.selenic.com/" target="_blank" rel="noopener noreferrer">Mercurial(Hg)</a> 一直是我很愛用的版本控制工具。以前自己最常用的用途是拿來取代 <a href="http://subversion.tigris.org/" target="_blank" rel="noopener noreferrer">svn</a>，單純享受單機 / 離線使用版本控制系統開發的樂趣。</p><p>要單機使用版本控制系統開發，照著<a href="http://inet6.blogspot.com/2007/04/mercurial-mozilla.html" target="_blank" rel="noopener noreferrer">水銀分散式版本控制系統的使用概念</a>做就行了。</p><p>最近看了<a href="http://hginit.com/top/" target="_blank" rel="noopener noreferrer">Hg init</a>和<a href="http://progit.org/book/zh/" target="_blank" rel="noopener noreferrer">ProGit</a>兩份分別講 Hg 和 Git 分散式版本控制的書，裡面都相當推崇「分支 (Branch) 開發」的概念。
所謂「分支開發」，就是將主幹 (trunk) 保持在穩定可運作的版本（雖然本來就該這麼做），在開發任何新功能時都另建新分支 (branch)，開發到一段落之後再合併回主幹。能支援這樣的開發模式，是因為 Hg 或 Git 這些分散式版本控制系統做開分支、合併等動作的額外開銷都很低。</p><p>那麼要實際使用時該怎麼做呢？</p><p><strong>開分支</strong></p><p>我有一個名為「ZAKU」（薩克）的目錄，主幹版本代號為 3, 現在要實作一個將綠色變成紅色的功能，這時我們可以建立一個新分支來繼續開發這個新功能。分支命令的格式為：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">&gt; $ hg branch [branch name]</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>因此要建立一個名為「red」的分支，可以使用以下命令：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">&gt; $ hg branch red</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; marked working directory as branch red</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>這麼一來，之後 commit 的 code 都會進入「red」這個分支了。</p><p><strong>查看狀態</strong></p><p>在 commit 進一些 code 之後（版本代號到 13），輸入「hg branchs」命令可以列出所有版本</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">&gt; $ hg branches</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; default                       3:e2287f9031a1 (inactive)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; red                           13:e590de4b0dc9</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><strong>切換分支</strong></p><p>在開發新功能的同時，也可能會碰上整個專案共通的 bug，以前老派的作法是再 check out 一份主幹的程式碼，然後兩邊修正，現在有了 hg, 只要先暫時切換回主幹，把 bug 修正了再合併回分支（或到時一次把分支合併回主幹）。</p><p>要切換回主幹，輸入「hg update default」即可。</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">&gt; $ hg up default</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; 4 files 已更新, 0 files 已合併, 3 files 已移除, 0 files unresolved</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><strong>合併</strong></p><p>當我們把「red」分支中的新功能做好後，可以很容易地將這些修改合併回主幹。</p><p>首先，用上面的方法切換回主幹，然後輸入「hg merge red」，即可將「red」分支中的修改加進主幹。</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">&gt; $ hg merge red</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; 5 files 已更新, 0 files 已合併, 0 files 已移除, 0 files unresolved</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; (branch merge, don't forget to commit)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>合併命令的格式為</p><blockquote><p>hg merge <!-- -->[branch name]<!-- -->
合併完後確認沒問題，就將程式碼再 commit 進版本庫吧！</p></blockquote><p>如果只想 push 某 branch 的修改到版本庫，可以使用</p><blockquote><p>hg push --rev <!-- -->[version]<!-- -->
命令，這樣只會將與指定版本相關的修改上傳到版本庫。</p></blockquote><p><strong>One more thing</strong></p><p>同樣的方法，我們可以再建立一個分支「horn」來開發長角的功能，然後再將「horn」分支合併回主幹。</p><p>別忘了 hg 還有提供一個離線網頁瀏覽功能，輸入「hg serve -p 5000」，在瀏覽器上輸入「http://localhost:5000」就能看到類似 gitweb 的版本控制訊息網頁。點選左側的「graph」標籤，可以用視覺化的方式看到之前所有分支合併的圖形記錄囉！</p><p>學會分支與合併後，你的開發效率會不會也變成三倍速哩？</p><p>參考資料: </p><ul><li></li></ul>]]></content>
        <category label="hg" term="hg"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[[Mercurial]多來源更新]]></title>
        <id>https://blog.gasolin.idv.tw/devtools/Mercurial-update-from-multi-source</id>
        <link href="https://blog.gasolin.idv.tw/devtools/Mercurial-update-from-multi-source"/>
        <updated>2010-09-08T03:00:29.000Z</updated>
        <summary type="html"><![CDATA[在做完「hg clone」（就如同從 Server 端 Check Out 程式碼）後，除了可以對原 Server 做「hg pull」以更新程式碼之外，也可以多加別台 Server 進列表。]]></summary>
        <content type="html"><![CDATA[<p>在做完「hg clone」（就如同從 Server 端 Check Out 程式碼）後，除了可以對原 Server 做「hg pull」以更新程式碼之外，也可以多加別台 Server 進列表。</p><p>如原來從 Alice 處「hg clone」下來原始碼，而現在也想要從 Bob 處直接取得他的更新，可以使用</p><blockquote><p>$ hg pull <!-- -->[bob server]<!-- -->命令。</p></blockquote><p>另一個好方法是可以在 .hg/hgrc 中定義額外的 Server 別名 (alias)。</p><p>例如原來的 .hg/hgrc 長這樣:</p><blockquote><p>[paths]<!-- -->
default = <!-- -->[Alice Server]<!-- -->/<!-- -->[project]<!-- -->
我們在其後加入 Bob Server 的別名如下:
<!-- -->[paths]<!-- -->
default = <!-- -->[Alice Server]<!-- -->/<!-- -->[project]<!-- -->
bob = <!-- -->[Bob server]<!-- -->/<!-- -->[project]<!-- -->
儲存後，要再從 Bob 處直接取得他的更新，可以使用
$ hg pull bob
命令來直接取得 bob 的原始碼。分散式版本控制是不是很方便呢 :)</p></blockquote>]]></content>
        <category label="hg" term="hg"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[投影展示Android手機畫面]]></title>
        <id>https://blog.gasolin.idv.tw/android/projecting-Android-screen</id>
        <link href="https://blog.gasolin.idv.tw/android/projecting-Android-screen"/>
        <updated>2010-07-27T08:04:53.000Z</updated>
        <summary type="html"><![CDATA[去年寫過一篇Demo Android Phone through your PC/MAC，介紹「DroidEx.jar」這個可以透過電腦螢幕展示Android手機畫面的工具。]]></summary>
        <content type="html"><![CDATA[<p><a href="http://www.adakoda.com/adakoda/android/asm/ASM2_00_Win.png" target="_blank" rel="noopener noreferrer"><img loading="lazy" src="http://www.adakoda.com/adakoda/android/asm/ASM2_00_Win.png" class="img_ev3q"></a>
去年寫過一篇<a href="http://inet6.blogspot.com/2009/02/demo-your-android-phone-through-your.html" target="_blank" rel="noopener noreferrer">Demo Android Phone through your PC/MAC</a>，介紹「DroidEx.jar」這個可以透過電腦螢幕展示 Android 手機畫面的工具。</p><p>這次要介紹的是 <a href="http://www.adakoda.com/adakoda/android/asm/" target="_blank" rel="noopener noreferrer">Android Screen Monitor</a> 這個同類型的工具。</p><p><a href="http://www.adakoda.com/adakoda/android/asm/" target="_blank" rel="noopener noreferrer">Android Screen Monitor</a> 跨平台，從網頁下載之後，先將手機連上電腦，接著只要輸入</p><blockquote><p>java - jar asm.jar
即可於螢幕顯示手機畫面，相當方便喔。</p></blockquote>]]></content>
        <category label="Android" term="Android"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[書不像書的時代]]></title>
        <id>https://blog.gasolin.idv.tw/digest/book-not-like-book-era</id>
        <link href="https://blog.gasolin.idv.tw/digest/book-not-like-book-era"/>
        <updated>2010-06-16T02:49:39.000Z</updated>
        <summary type="html"><![CDATA[紙本書變電子書是很小的事，書變得不像書，才是嚴重的事。-- 紙本書變電子書是很小的事——詹宏志談數位元出版時代]]></summary>
        <content type="html"><![CDATA[<blockquote><p>紙本書變電子書是很小的事，書變得不像書，才是嚴重的事。-- <a href="http://www.facebook.com/note.php?note_id=434741171281&amp;id=194807678300&amp;ref=mf" target="_blank" rel="noopener noreferrer">紙本書變電子書是很小的事 —— 詹宏志談數位元出版時代</a></p></blockquote><blockquote><p>假如電子書指的是，一個在特殊的閱讀設備上面呈現我們今天在紙本書上所看到的內容和形式的書，
那我會說，電子書正在解決過去的問題而沒有解決未來的問題。
使用互聯網這件事都佔用了你很大一部分的時間，這個形式連電子書都沒有辦法解決。所以電子書是在解決過去的問題。
取得知識的方式如果已經變了，出版還沒變的話，就會慢慢變得不相干。
出版者要解決今天的出版困境，他必須到未來的學習者取得知識的地方去做出版，不能繼續使用現在出版的形式，使自己愈來愈跟這個社會不相干。
舉個例子，現在全世界最好的百科全書極可能還是大英百科全書，可是最好有什麼用？它現在跟我們大部分年輕人是不相干的。
而我也不覺得現在的年輕人用的是維基百科，真正改變他的行為的是搜索引擎。
他是先丟出一個要查的東西，如果維基百科在前三條，就點進去，還沒到維基百科，這個事情就已經決定了。
當資訊量愈大的時候，導語和評論的價值就愈高。
因為你真的沒辦法判斷，問題不在於沒有而在於太多了，多到你不知道誰好。
在我看來未來編輯的工作會很不一樣，會加倍重要。
一個社會創作生產量愈大總的來講是好事，你可能會嫌他有很多不好的東西，但是數量跟好東西是有關聯性的。
披沙揀金的結果，有這麼大量的垃圾，也會有某一個比例的含金量。
容易發表的創作，其實是使得很多可能的創作都會跑出來的重要原因。
去瞭解你的朋友，現在的年輕人，取得資訊的行為是怎麼一回事，你可以從那裏看出，有什麼東西是你可以做。
你怎麼可以忍受看那麼多東西才找到那麼一點點好東西，應該有人幫我做這個事，對不對？
應該有各種有判斷能力的人來幫我做這個事，而我會選擇每次判斷都深得我心的編輯來追隨，編輯也會有他的訴求、專長、分工。
我們擋掉了很多不要浪費出版資源的東西；可同時，說不定也擋掉了對社會有衝擊的新創作。</p></blockquote>]]></content>
        <category label="digest" term="digest"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[如何讓應用程式直接安裝到SD卡執行（2.2）]]></title>
        <id>https://blog.gasolin.idv.tw/android/app-run-in-sd-2-2</id>
        <link href="https://blog.gasolin.idv.tw/android/app-run-in-sd-2-2"/>
        <updated>2010-05-21T15:28:37.000Z</updated>
        <summary type="html"><![CDATA[Android 2.2 中新增了應用程式直接安裝到SD卡執行 (不少人稱這個功能作 App2SD)，]]></summary>
        <content type="html"><![CDATA[<p>Android 2.2 中新增了應用程式直接安裝到 SD 卡執行 (不少人稱這個功能作 App2SD)，
要使用這個功能只要在目前程式中做幾個設定：</p><p>1<!-- -->.<!-- --> 專案的 Project Build Target 版本設定為 2.2 (API 8)
2<!-- -->.<!-- --> 修改 AndroidManifest 清單</p><p><strong>設定 Project Build Target 版本</strong></p><p>在 Eclipse 專案列表中按右鍵，選取 properties 選項，會彈出設定視窗。
在上面選擇左側的 Android 標籤，在右側 Build 欄位勾選「Android 2.2」選項（沒有這選項的請參考 <a href="http://code.google.com/p/androidbmi/wiki/ManageSDK" target="_blank" rel="noopener noreferrer">管理 SDK</a> 來升級 SDK），如此一來編譯時才能認得我們接下來在 AndroidManifest 清單中所做的設定。</p><p><strong>修改 AndroidManifest 清單</strong></p><p>在 manifest 標籤中加入一個「android:installLocation」屬性，實際程式碼如下</p><blockquote><p>&lt;<!-- -->manifest xmlns:android="<a href="http://schemas.android.com/apk/res/android%22" target="_blank" rel="noopener noreferrer">http://schemas.android.com/apk/res/android"</a>&gt;<!-- -->
package="com.demo.org"
android:versionName="1.0" android:versionCode="1"
<strong>android:installLocation="preferExternal"</strong>
<!-- -->&gt;<!-- -->
....
<strong>說明</strong></p></blockquote><blockquote><p>android:installLocation="preferExternal"
清單中加入以上宣告後，編譯好的程式仍然可以適用於較低版本的機器，只有在程式安裝到 Android 2.2 版之後的系統上，系統才會自動將這個程式安裝到 SD 卡中。</p></blockquote><p>安裝到 SD 卡中時程式會預作一次加密，讓只有安裝本程式的機器能存取這個程式，避免了程式可能會輕易被盜拷的疑慮。</p><p>沒有用到 Service、桌面小工具（Widget）、或動態桌布（Live Wallpaper）功能的程式比較適合儲存到 SD 卡，例如遊戲或 BMI 等小程式。</p><p>因為當機器使用 USB 和電腦連線，將 SD 卡掛載成磁碟機時，這些儲存在 SD 卡中執行的程式將會被中斷。</p><p>其他提示請參考 Android<!-- -->&nbsp;<a href="http://developer.android.com/guide/appendix/install-location.html" target="_blank" rel="noopener noreferrer">官方文件</a>。</p>]]></content>
        <category label="Android" term="Android"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Android 2.2，完全版的Android就應該長這樣]]></title>
        <id>https://blog.gasolin.idv.tw/android/Android-2-2-as-it-should-be</id>
        <link href="https://blog.gasolin.idv.tw/android/Android-2-2-as-it-should-be"/>
        <updated>2010-05-21T14:57:52.000Z</updated>
        <summary type="html"><![CDATA[現在在Google I/O 2010 會場看現場發表會。Froyo 真的是非常高完成度的版本，除了機器OS本身之外，還支援了許多對開發者、對使用者都有利的特性：]]></summary>
        <content type="html"><![CDATA[<object height="385" width="640"><param name="movie" value="http://www.youtube.com/v/yAZYSVr2Bhc&amp;color1=0xb1b1b1&amp;color2=0xd0d0d0&amp;hl=en_US&amp;feature=player_embedded&amp;fs=1"><param name="allowFullScreen" value="true"><param name="allowScriptAccess" value="always"><embed src="http://www.youtube.com/v/yAZYSVr2Bhc&amp;color1=0xb1b1b1&amp;color2=0xd0d0d0&amp;hl=en_US&amp;feature=player_embedded&amp;fs=1" type="application/x-shockwave-flash" allowfullscreen="true" allowscriptaccess="always" width="640" height="385"></object><p>現在在 Google I/O 2010 會場看現場發表會。Froyo 真的是非常高完成度的版本，除了機器 OS 本身之外，還支援了許多對開發者、對使用者都有利的特性：</p><p>開發者：</p><ul><li><p>新版開發工具支援 Library Project，意思是同時開發試用版 / 正式版時，終於可以共用多數程式碼和資源檔，而不用完全開兩個專案出來</p></li><li><p>支援 Data Backup API，表示任何應用程式都可以使用 Android Cloud 將程式中的資料記錄到雲端上，換到任何其他台手機上都可以備份回來。</p></li><li><p>允許遠端控制機器</p></li><li><p>多種模式的 Mobile AdSense</p></li><li><p>應用程式可以直接安裝到 SD 卡，得以在 Android 上實現大型遊戲等應用</p></li><li><p>Google TV 上也能裝 Android 應用程式。這表示什麼？表示開發 Android 平台遊戲就能打進電視遊戲市場！使用者</p></li><li><p>應用程式 / 網頁都有 2~3 倍以上的執行速度</p></li><li><p>應用程式能從 SD 卡中執行</p></li><li><p>在網頁版 Market 上點選安裝，在機器上即能自動下載</p></li><li><p>語音辨識功能、桌面搜尋功能更強大</p></li><li><p>有新版本應用程式可以自動從 Market 更新</p></li><li><p>搭載 Froyo 的設備能直接變成行動 AP (tethering) 開發者們又很有事情可以做了 :)</p></li></ul>]]></content>
        <category label="Android" term="Android"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[自動偵測螢幕大小和解析度]]></title>
        <id>https://blog.gasolin.idv.tw/android/detech-screen-size-and-resolution</id>
        <link href="https://blog.gasolin.idv.tw/android/detech-screen-size-and-resolution"/>
        <updated>2010-04-14T01:15:18.000Z</updated>
        <summary type="html"><![CDATA[在 Android 機器上，螢幕的解析度可以用「螢幕大小」和「螢幕點距」兩個參數來表示。]]></summary>
        <content type="html"><![CDATA[<p>在 Android 機器上，螢幕的解析度可以用「螢幕大小」和「螢幕點距」兩個參數來表示。</p><p><strong>一般的方法</strong></p><p>在 Android 1.6 版以後，可以使用<!-- -->&nbsp;<!-- -->config.screenLayout<!-- -->&nbsp;<!-- -->語句來判斷螢幕大小</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">&gt; Configuration config = getResources().getConfiguration();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; if((config.screenLayout&amp;amp;Configuration.SCREENLAYOUT_SIZE_MASK) == Configuration.SCREENLAYOUT_SIZE_NORMAL){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>UPDATE 2010/4/14: sam 說 「config = new Configuration ()」只會回傳預設的 Configuration, 而非當前的 Configuration. 找了一下最好是使用 getResources ().getConfiguration ()</p><p>支援的參數與代碼如下</p><ul><li>Configuration.SCREENLAYOUT_SIZE_UNDEFINED 0</li><li>Configuration.SCREENLAYOUT_SIZE_SMALL 1</li><li>Configuration.SCREENLAYOUT_SIZE_NORMAL 2</li><li>Configuration.SCREENLAYOUT_SIZE_LARGE 3
要檢查點距，可以使用 DisplayMetrics 語句來判斷螢幕點距</li></ul><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">&gt; DisplayMetrics dm = new DisplayMetrics();&amp;nbsp;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; getWindowManager().getDefaultDisplay().getMetrics(dm);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; if((dm.densityDpi == dm.DENSITY_HIGH)){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; 支援的參數與代碼如下</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><ul><li>DENSITY_HIGH 240 (dpi)</li><li>DENSITY_MEDIUM 160</li><li>DENSITY_LOW 120</li><li>DENSITY_DEFAULT 160
<strong>相容 1.5 以下機型</strong></li></ul><p>根據<a href="http://developer.android.com/resources/dashboard/platform-versions.html" target="_blank" rel="noopener noreferrer">Android 版本使用圖表</a>，2010 年 1 月時 Android 1.5 市佔率還是接近 1/3，但是這 1/3 的機器上並無法使用上面的 API。</p><p></p><p>在 1.5 版上，其實仍然可以用 density 語句來判斷螢幕點距比率</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">&gt; DisplayMetrics dm = new DisplayMetrics();&amp;nbsp;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; getWindowManager().getDefaultDisplay().getMetrics(dm);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; if((dm.density &amp;gt;= 1.5)){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>density 的值 1 代表一般點距，1.5 代表高點距，0.75 代表低點距。要偵測市面上所有的機器是否是高解析度機型，只要運用以上方法，就可以自動偵測出螢幕大小和點距囉。</p>]]></content>
        <category label="Android" term="Android"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[无知者的安全]]></title>
        <id>https://blog.gasolin.idv.tw/digest/safety-notknow</id>
        <link href="https://blog.gasolin.idv.tw/digest/safety-notknow"/>
        <updated>2010-04-12T23:48:03.000Z</updated>
        <summary type="html"><![CDATA[买书时，你不只是为那本书付费，也是在为那些有可能被退回和销毁的书付费]]></summary>
        <content type="html"><![CDATA[<blockquote><p>买书时，你不只是为那本书付费，也是在为那些有可能被退回和销毁的书付费
无论出版商做不做电子书，他们所拥有的内容的数字版已经存在于网上了。有的是通过扫描＋文字识别技术制作的，而大部分热门书则是网友合力誊抄的。
尽管 DRM 的初衷在于保护老板们的权利，防止完美的数字拷贝被非法传播，但实际上它对于盗版毫无作用。每一个人们需要的数字媒体文件都会有人免费供应，不管是通过破解 DRM，还是拷贝未受 DRM 保护的文件，还是从未受保护的类比拷贝重新合成一份数字版本。DRM 唯一的作用就是令合法消费数字媒体的用户感到郁闷，同时遏制了方兴未艾的数字发行市场。
为数字媒体文件设置 DRM 是一种在数学、技术和智力上都已经破产的做法。它完全达不到其防止盗版的目的，倒是会带来相当多的负面效果：限制消费者对其通过合法渠道购买的内容所拥有的合法权利，并动辄以民事惩罚或刑事起诉相威胁。
按照成本和需求定价是好的，但这个成本和需求应该是你所卖的实际产品的成本和需求，而不是以另外一种成本和需求完全不一样的产品为基准！</p><p>这种做法是不合逻辑的，这不是在卖电子书，而是在确保电子书的销售不影响精装本纸书的销量。
--from <a href="http://apple4.us/2010/04/future-reading-siracusa-ebook.html" target="_blank" rel="noopener noreferrer">[阅读的未来] 电子书的前世今生（上）</a>, <a href="http://apple4.us/2010/04/future-reading-siracusa-ebook-2.html" target="_blank" rel="noopener noreferrer">下</a></p></blockquote>]]></content>
        <category label="digest" term="digest"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[自由軟體授權]]></title>
        <id>https://blog.gasolin.idv.tw/devtools/OOS-license</id>
        <link href="https://blog.gasolin.idv.tw/devtools/OOS-license"/>
        <updated>2010-03-25T06:25:06.000Z</updated>
        <summary type="html"><![CDATA[自由軟體授權方式一直是讓許多工程師很困擾的事，OSSF 有提供 License Wizard（授權精靈）這個網頁工具，可以很直觀的查看大家所關心的項目，例如再次散布程式時是否必須提供原始碼等。]]></summary>
        <content type="html"><![CDATA[<p>自由軟體授權方式一直是讓許多工程師很困擾的事，OSSF 有提供 <a href="http://swan.iis.sinica.edu.tw/LicenseWizard/index.htm" target="_blank" rel="noopener noreferrer">License Wizard</a>（授權精靈）這個網頁工具，可以很直觀的查看大家所關心的項目，例如再次散布程式時是否必須提供原始碼等。</p><p>另外有一個類似的是創用 CC (Creative Commons) 也提供了相似的<a href="http://creativecommons.org.tw/static/choose/license/licwiz" target="_blank" rel="noopener noreferrer">創用 CC 授權精靈</a>，在發表文章 / 圖片 / 影音到網路上時可以使用。</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Android 免費+廣告營利模式]]></title>
        <id>https://blog.gasolin.idv.tw/android/Android-freemium</id>
        <link href="https://blog.gasolin.idv.tw/android/Android-freemium"/>
        <updated>2010-03-02T09:19:36.000Z</updated>
        <summary type="html"><![CDATA[一篇經驗分享文章，分享 Android 上使用 AdMob 廣告營利的經驗與注意事項]]></summary>
        <content type="html"><![CDATA[<p>一篇經驗分享文章，分享 Android 上使用 AdMob 廣告營利的經驗與注意事項
<a href="http://www.programmer.com.cn/2038/" target="_blank" rel="noopener noreferrer">2010 世界杯，我的 Android 之旅</a> 蠻不錯的</p><p>另一篇<a href="http://www.programmer.com.cn/2047/" target="_blank" rel="noopener noreferrer">移动应用排名与开发者的机会</a>亦有可觀</p>]]></content>
        <category label="Android" term="Android"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[TAT桌面]]></title>
        <id>https://blog.gasolin.idv.tw/android/TAT-desktop</id>
        <link href="https://blog.gasolin.idv.tw/android/TAT-desktop"/>
        <updated>2010-02-21T15:06:18.000Z</updated>
        <summary type="html"><![CDATA[每天使用的桌面需不需要這麼絢麗哩？]]></summary>
        <content type="html"><![CDATA[<p>每天使用的桌面需不需要這麼絢麗哩？</p><object width="425" height="344"><param name="movie" value="http://www.youtube.com/v/bOGmnnGpoqg&amp;hl=zh_TW&amp;fs=1&amp;"><param name="allowFullScreen" value="true"><param name="allowscriptaccess" value="always"><embed src="http://www.youtube.com/v/bOGmnnGpoqg&amp;hl=zh_TW&amp;fs=1&amp;" type="application/x-shockwave-flash" allowscriptaccess="always" allowfullscreen="true" width="425" height="344"></object>]]></content>
        <category label="Android" term="Android"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Demo Android Phone through your PC/MAC]]></title>
        <id>https://blog.gasolin.idv.tw/tools/Demo-Android-Phone-through-your-PC-MAC</id>
        <link href="https://blog.gasolin.idv.tw/tools/Demo-Android-Phone-through-your-PC-MAC"/>
        <updated>2010-02-06T15:22:18.000Z</updated>
        <summary type="html"><![CDATA[Situation:]]></summary>
        <content type="html"><![CDATA[<p></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="situation">Situation:<a href="#situation" class="hash-link" aria-label="Direct link to Situation:" title="Direct link to Situation:">​</a></h2><p>I have to demo my Android Phone screen but I don't have a device projector.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="solution">Solution:<a href="#solution" class="hash-link" aria-label="Direct link to Solution:" title="Direct link to Solution:">​</a></h2><p>Prerequisite:</p><p>Download <a href="http://groups.google.com/group/cw-android/web/DroidEx.jar" target="_blank" rel="noopener noreferrer">DroidEx.jar</a></p><p>Do:</p><p>1<!-- -->.<!-- --> Connect Phone to your PC/MAC
2<!-- -->.<!-- --> Open Eclipse
3<!-- -->.<!-- --> Enter your android_sdk/tool folder, and type the following command:</p><blockquote><p>$ java -cp DroidEx.jar:lib/ddmlib.jar com.commonsware.droidex.DroidEx</p></blockquote><p>Done!</p><p>Ref:</p><ul><li></li><li><a href="http://groups.google.com/group/cw-android/browse_thread/thread/d37cac83a2e2476b" target="_blank" rel="noopener noreferrer">http://groups.google.com/group/cw-android/browse_thread/thread/d37cac83a2e2476b</a>
Another similar tool: <a href="http://www.adakoda.com/adakoda/android/asm/" target="_blank" rel="noopener noreferrer">Android Screen Monitor</a></li></ul>]]></content>
        <category label="Android" term="Android"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[GoogleCode & Mercurial 版本控制介紹]]></title>
        <id>https://blog.gasolin.idv.tw/devtools/GoogleCode-Mercurial</id>
        <link href="https://blog.gasolin.idv.tw/devtools/GoogleCode-Mercurial"/>
        <updated>2010-02-03T12:57:16.000Z</updated>
        <summary type="html"><![CDATA[今天在台北 GTUG 講「GoogleCode & Mercurial 版本控制介紹」。]]></summary>
        <content type="html"><![CDATA[<p>今天在<a href="http://www.taipei-gtug.org/" target="_blank" rel="noopener noreferrer">台北 GTUG</a> 講「GoogleCode &amp; Mercurial 版本控制介紹」。</p><iframe src="http://docs.google.com/present/embed?id=ajkxs9k6pqxr_10304swnqvgs" frameborder="0" width="410" height="342"></iframe>]]></content>
        <category label="hg" term="hg"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[分散式版本控制系統大亂鬥]]></title>
        <id>https://blog.gasolin.idv.tw/devtools/brawl-distributed-version-control-system</id>
        <link href="https://blog.gasolin.idv.tw/devtools/brawl-distributed-version-control-system"/>
        <updated>2010-01-20T02:49:29.000Z</updated>
        <summary type="html"><![CDATA[讀到 DVCS Round-Up: One System to Rule Them All?&nbsp;記錄一下。（還有Part II、Part III）這麼長的文章在一般狀況下實在沒什麼耐心看下去。還好 Mac 上的 Text-To-Speech 功能做的非常好用，把預設的語速調快，並設定快速鍵(我設成 Command+~)後，讀一篇長文其實花不了幾分鐘。]]></summary>
        <content type="html"><![CDATA[<p>讀到 <a href="http://ldn.linuxfoundation.org/article/dvcs-round-one-system-rule-them-all-part-1" target="_blank" rel="noopener noreferrer">DVCS Round-Up: One System to Rule Them All?</a>&nbsp;<!-- -->記錄一下。（還有<a href="http://ldn.linuxfoundation.org/article/dvcs-roundup-one-system-rule-them-all-part-2" target="_blank" rel="noopener noreferrer">Part II</a>、<a href="http://ldn.linuxfoundation.org/article/dvcs-round-one-system-rule-them-all-part-3" target="_blank" rel="noopener noreferrer">Part III</a>）這麼長的文章在一般狀況下實在沒什麼耐心看下去。還好 Mac 上的 Text-To-Speech 功能做的非常好用，把預設的語速調快，並設定快速鍵 (我設成 Command+~) 後，讀一篇長文其實花不了幾分鐘。</p><p>現在最常用的版本控制系統應該是 svn、hg、git 三種。
svn (Subversion)、hg (Mercurial) 是自己平時會使用的版本控制系統，由於 hg 跟 svn 的命令幾乎相同，轉換時的學習曲線相當平緩，都是相當方便的工具。<a href="http://code.google.com/hosting/" target="_blank" rel="noopener noreferrer">google code</a> 剛好也是支援這兩種。git 則是開發 linux 系統時的常用的工具。</p>]]></content>
        <category label="hg" term="hg"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[甜點師父]]></title>
        <id>https://blog.gasolin.idv.tw/android/desert-maker</id>
        <link href="https://blog.gasolin.idv.tw/android/desert-maker"/>
        <updated>2010-01-11T08:10:21.000Z</updated>
        <summary type="html"><![CDATA[蛋糕賣完賣焦糖布丁，書一年改了三版，真是太瘋狂啦！]]></summary>
        <content type="html"><![CDATA[<p><a href="http://1.bp.blogspot.com/_2xGPUuRo1sg/S0rVvu9eF2I/AAAAAAAABS4/LqOW5m0ghFk/s1600-h/image.jpeg" target="_blank" rel="noopener noreferrer"><img loading="lazy" src="http://1.bp.blogspot.com/_2xGPUuRo1sg/S0rVvu9eF2I/AAAAAAAABS4/LqOW5m0ghFk/s320/image.jpeg" class="img_ev3q"></a>
蛋糕賣完賣焦糖布丁，書一年改了三版，真是太瘋狂啦！</p><p>當初寫作這本書的目標，就是成為學習 Android 基礎的第一本入門書，我想我有做到最好。對我來說，每個讀者當下拿到書可能只會看一遍。如果看到的內容與新版 Android 有所差距，雖然可以很容易歸因於<!-- -->&nbsp;<!-- -->Android 改版太快，但我覺得作者也應該負上責任。</p><p>Android 自 1.6 版後，引入了新的 SDK 工具架構，讓整個版本升級更容易。同時因為升級容易，Android 的改版也變得更快速（現在幾乎是一個月出一個新版本），這讓寫作入門書的挑戰變得更大。這次針對 Android 1.6、2.0 之後所引進開發工具新架構的大改版，讓新讀者入門時更順暢、也讓舊讀者能順利熟悉新版 Android 環境，並有足夠知識去使用各種 2.x 版的後續版本更新。</p><p>這個版本加入 SDK 開發工具介紹，說明 Android 各版本與開發工具之間的關係；解釋了多種解析度機種的區別與開發 / 測試方式。同時因為書籍範例的完成度很高了，也將各章的範例操作完全獨立開來，每章都附有可直接對照進度的程式碼，更易於新手入門時對照學習。</p><p>期望在新的一年裡，可以騰出手來，好好研究一些進階的技術，繼續與大家分享。</p>]]></content>
        <category label="Android" term="Android"/>
        <category label="Life" term="Life"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Nexus One 操作影片]]></title>
        <id>https://blog.gasolin.idv.tw/android/Nexus-One-handson</id>
        <link href="https://blog.gasolin.idv.tw/android/Nexus-One-handson"/>
        <updated>2010-01-06T03:06:33.000Z</updated>
        <summary type="html"><![CDATA[看起來確實很順暢]]></summary>
        <content type="html"><![CDATA[<object width="425" height="344"><param name="movie" value="http://www.youtube.com/v/1CJFdG-MARw&amp;hl=zh_TW&amp;fs=1"><param name="allowFullScreen" value="true"><param name="allowscriptaccess" value="always"><embed src="http://www.youtube.com/v/1CJFdG-MARw&amp;hl=zh_TW&amp;fs=1" type="application/x-shockwave-flash" allowscriptaccess="always" allowfullscreen="true" width="425" height="344"></object><p>看起來確實很順暢</p><p>還有支援 Flash 10 的影片</p><object width="425" height="344"><param name="movie" value="http://www.youtube.com/v/vlWOocHwcLo&amp;hl=zh_TW&amp;fs=1"><param name="allowFullScreen" value="true"><param name="allowscriptaccess" value="always"><embed src="http://www.youtube.com/v/vlWOocHwcLo&amp;hl=zh_TW&amp;fs=1" type="application/x-shockwave-flash" allowscriptaccess="always" allowfullscreen="true" width="425" height="344"></object>]]></content>
        <category label="Android" term="Android"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Chrome OS 公開原始碼]]></title>
        <id>https://blog.gasolin.idv.tw/tools/Chrome-OS-OSS</id>
        <link href="https://blog.gasolin.idv.tw/tools/Chrome-OS-OSS"/>
        <updated>2009-11-26T03:27:23.000Z</updated>
        <summary type="html"><![CDATA[雖然有一堆文件或介紹影片，但再怎麼口沫橫飛，還是不如看上一段 Chrome OS 實際操作影片來的直覺。]]></summary>
        <content type="html"><![CDATA[<object width="425" height="344"><param name="movie" value="http://www.youtube.com/v/ANMrzw7JFzA=zh_TW&amp;fs=1"><param name="allowFullScreen" value="true"><param name="allowscriptaccess" value="always"><embed src="http://www.youtube.com/v/ANMrzw7JFzA=zh_TW&amp;fs=1" type="application/x-shockwave-flash" allowscriptaccess="always" allowfullscreen="true" width="425" height="344"></object><p>雖然有一堆文件或介紹影片，但再怎麼口沫橫飛，還是不如看上一段 Chrome OS 實際操作影片來的直覺。</p><p>總而言之，對專業工作者（繪圖、Coding、玩家）來說，Chrome OS 並不是理想的系統，但看 DEMO 對一般使用來說，上網聊天種菜儘管夠用了。</p><p>我看到 Chrome OS 的幾個重點在</p><ul><li>Thin Client</li><li>2 partitions for the root file system</li><li>Web Apps + Local Media Player <strong>Thin Client</strong></li></ul><p>Chrome OS 真的把所有 OS 中常見的東西都拿掉了。桌面基本上就是個 Chrome 瀏覽器。但也可以切換桌面，切換桌面就是切換帶有不同頁籤的 Chrome 瀏覽器。
<img loading="lazy" src="http://sites.google.com/a/chromium.org/dev/_/rsrc/1258650210340/chromium-os/chromiumos-design-docs/software-architecture/overviewpng" class="img_ev3q"></p><p><strong>2 partitions for the root file system</strong></p><p>2 個可置換的 root file system 是高階嵌入式系統中常見的配置，有了這樣的備援方式，OS 基本上就很難更新失敗，更新失敗了也可以救回來。</p><p><strong>Web Apps + Local Media Player</strong></p><p>除了閉著眼都猜的到的 Google Gmail/Doc 之外，也內建了 Notes/Tasks Panel。玩遊戲靠 Flash，播 SD 卡 / 線上的 MP3 / 影片則可以呼叫系統提供的播放工具。有 Local Media Player 至少沒連網路時也不會太糟。</p><p>對了，登入時一定得用 Google 帳號密碼，登入後使用各種 Google 服務時就不用再登入一次。這種作法有沒必要，可能得再深入點實際使用過才知道。如果我是詐騙集團，現在就趕緊來釋出一版 Chrome OS 下載版，相信可以偷到很多 Gmail 帳號；)</p><p>如果要寫 Chrome OS 上層的應用程式，只能用 HTML5、Javascript、Flash 這些工具，來撰寫網站或是 Chrome Extension。
<img loading="lazy" src="http://sites.google.com/a/chromium.org/dev/_/rsrc/1258650212610/chromium-os/chromiumos-design-docs/software-architecture/chromepng" class="img_ev3q"></p><p><a href="http://sites.google.com/a/chromium.org/dev/chromium-os/chromiumos-design-docs" target="_blank" rel="noopener noreferrer">Chromium</a> 是 Chrome OS 跟 Chrome 的開源專案。</p><p>目前唯一在這個 OS 上開發程式的方式，是透過類似 Firefox Extension 的瀏覽器外掛套件方式達成。</p><p>一些連結實在是不太好找，順便列在此:</p><ul><li></li><li></li></ul>]]></content>
        <category label="chromeos" term="chromeos"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Android 集市大亂鬥]]></title>
        <id>https://blog.gasolin.idv.tw/android/Android-markets-war</id>
        <link href="https://blog.gasolin.idv.tw/android/Android-markets-war"/>
        <updated>2009-11-20T14:53:39.000Z</updated>
        <summary type="html"><![CDATA[是什麼 Market 並不太重要。使用者在哪裡，開發者就在哪裡。]]></summary>
        <content type="html"><![CDATA[<blockquote><p>是什麼 Market 並不太重要。使用者在哪裡，開發者就在哪裡。
談到 Android Market，非北美 / 西歐的開發者都有很多意見，主要焦點都集中在能不能放付費軟體上。這點對各 Android 集市皆然。前陣子開始整理了一個<a href="http://code.google.com/p/androidbmi/wiki/ShanzaiMarket" target="_blank" rel="noopener noreferrer">已公開的各家 Market 一覽表</a>。開發者把應用軟體寫出來了，該選擇放在哪些 Market 上頭呢？</p></blockquote><h2 class="anchor anchorWithStickyNavbar_LWe7" id="寫應用軟體的目的">寫應用軟體的目的<a href="#寫應用軟體的目的" class="hash-link" aria-label="Direct link to 寫應用軟體的目的" title="Direct link to 寫應用軟體的目的">​</a></h2><p>開發者開發免費應用程式無非是為了以下幾種目的：</p><ol><li><p>自己要使用</p></li><li><p>增加經驗值 (練功)</p></li><li><p>提高名聲 / 打知名度</p></li><li><p>靠廣告賺錢</p></li><li><p>靠付費版賺錢  </p></li></ol><p>在此暫時不分析付費軟體的部份，因為目前還沒有任何一家提供。</p><p>這篇只就免費軟體來談。免費軟體該發佈到哪些 Market 上頭呢？</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="殘酷的答案">殘酷的答案<a href="#殘酷的答案" class="hash-link" aria-label="Direct link to 殘酷的答案" title="Direct link to 殘酷的答案">​</a></h2><p>老實說寫了免費軟體，經過思考之後，我只會丟到 Android Market。</p><p>理由如下:</p><p>以前面寫應用軟體的目的來分析：</p><ul><li><p>自己要使用目前手邊還沒有不預裝 Android Market 的機子。對其他 Market 的需求並不大。</p></li><li><p>增加經驗值 (練功) 放到哪個 Market 上一樣都是練功。Android Market 背後有 G 社備援，提供網頁管理介面、使用者評論等等，雖然不完美，但至少可以和使用者取得互動。目前大部分其他的 Market 並無提供同級的網頁管理介面。有的 Market 還得自己四處申請、填寫一堆文件、截圖，各 Market 審核後還有可能會退你件，弄得跟到奴隸銀行求職一樣。寫免費軟體的開發者難道是為了得到這樣的經驗值？</p></li><li><p>提高名聲 / 打知名度</p></li></ul><p>發佈到各家 Market 的下載量，可能還沒有 Android Market 上的 1/100（這是經過美化 n 倍後的數據，請原諒我就是這麼直）</p><ul><li>靠廣告賺錢參考上一點，發到各論壇去，下載數可能也會比在一些 Market 上高。要勤勞到處貼我建議去貼論壇或 PTT。</li></ul><p>以上四點都是 False Impact 的，各 Market 集市的擁有者們看了可能會很沮喪。但其實你們只剩下一個吸引開發者將程式放到自己 Market 的方式：</p><ul><li>靠付費版賺錢各家集市算盤打的精，想拿免費軟體開路，吸引使用者造訪的司馬昭之心再明顯不過。除了電信商推的 Market 之外，其他的 Market 要取得開發者 / 開發商青睞，自動奉上免費軟體更難。開發者不可能永遠靠佛心來支撐，沒飯吃還是會餓死的。國內哪個 Market 先能收費，對是否能帶動免費軟體進來，衝高軟體數量還是很關鍵的。</li></ul><p>至於國內最後哪些個 Market 會繼續存活，其實只要比較兩件事：</p><p>1<!-- -->.<!-- --> 人潮
2<!-- -->.<!-- --> 哪個 Market 能放付費軟體</p><p>我相信沒有回報，只有付出的關係是無法長久的。</p><p>只要誰先推出拆帳合理的付費機制，相信開發者還是會趨之若騖。</p><p>眾家 Market：加油，好嗎？</p>]]></content>
        <category label="Android" term="Android"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[支援不同解析度的 Android Market]]></title>
        <id>https://blog.gasolin.idv.tw/android/multi-resolution-Android-Market</id>
        <link href="https://blog.gasolin.idv.tw/android/multi-resolution-Android-Market"/>
        <updated>2009-11-18T01:34:36.000Z</updated>
        <summary type="html"><![CDATA[本來市面上 Android 相關機種一律都是 480*320 解析度，]]></summary>
        <content type="html"><![CDATA[<p>本來市面上 Android 相關機種一律都是 480<em>320 解析度，
在 <a href="http://developer.android.com/intl/en/sdk/android-1.6.html" target="_blank" rel="noopener noreferrer">Android 1.6</a> 發佈後，也正式發售支援了其他使用不同解析度的機種，例如 QVGA (320</em>240) 或 WVGA (800*480)。</p><p>當然在不同的解析度下，畫面顯示上多少有些不同。
為了避免使用者裝到不適合解析度的程式而引發使用上的混亂，Android 1.6 在 AndroidManifest 清單中引入了「supports-screens」宣告。</p><p>一般來說要支援各種解析度，可以在編譯前先將編譯 Target 選為 1.6（專案名 &gt; 右鍵 &gt; Properties&gt;Android&gt;Android 1.6），並在 AndroidManifest 清單中加入如下設定：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"> [supports-screens </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     android:largeScreens="true" </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     android:normalScreens="true" </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     android:smallScreens="true" </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     android:anyDensity="false"/]</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>「normalScreens」代表的是一般解析度（如 G1, Hero），「smallScreens」代表的是較低解析度（如 Tatoo）。</p><p>現在將程式發佈到 Android Market 時若沒做以上設定，你寫的程式將不會顯示在 QVGA/WVGA 機器的 Market 中。</p><p>那麼其他使用奇怪解析度的設備哩？（例如最近發表的某台 WQVGA 機器...）反正上面也沒有 Android Market, 就留給打算支援這些設備的開發者多傷一份腦筋啦.</p><p>PS: 將 Target 設為 1.6 跟在 AndroidManifest 清單中設定 minSdkVersion 最低相容版本並不衝突，只要 minSdkVersion 維持不變，低於 1.6 版的機器還是可以使用你的程式。</p><p>update: 事實上「smallScreens」代表的是小螢幕，「normalScreens」是一般螢幕，「largeScreens」當然是大螢幕。一般三者的分界點大概在 3 吋跟 4 吋。所以 Tattoo (2.8") 被歸在「smallScreens」範疇。</p>]]></content>
        <category label="Android" term="Android"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[網路模擬器大亂鬥]]></title>
        <id>https://blog.gasolin.idv.tw/devtools/brawl-network-simulator</id>
        <link href="https://blog.gasolin.idv.tw/devtools/brawl-network-simulator"/>
        <updated>2009-11-10T07:34:50.000Z</updated>
        <summary type="html"><![CDATA[網路模擬界的 M01-like 開箱文 A Survey of Network Simulation Tools: Current Status and Future Developments]]></summary>
        <content type="html"><![CDATA[<p>網路模擬界的 M01-like 開箱文 <a href="http://www.cs.wustl.edu/~jain/cse567-08/ftp/simtools/index.html" target="_blank" rel="noopener noreferrer">A Survey of Network Simulation Tools: Current Status and Future Developments</a></p><p></p>]]></content>
        <category label="NS2" term="NS2"/>
        <category label="NS3" term="NS3"/>
        <category label="OMNET++" term="OMNET++"/>
        <category label="network" term="network"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[簡體版出版]]></title>
        <id>https://blog.gasolin.idv.tw/android/cn-book-publish</id>
        <link href="https://blog.gasolin.idv.tw/android/cn-book-publish"/>
        <updated>2009-11-06T17:34:37.000Z</updated>
        <summary type="html"><![CDATA[More about Google Android开发入门指南]]></summary>
        <content type="html"><![CDATA[<p></p><p>終於簡體版也出版了。</p><p>對應的是繁體的第二版（Android 1.5）。定價 45 RMB，換算回來還不到 200 NT，真是便宜呀。</p><p>希望大陸的朋友們也會喜歡囉 :)</p>]]></content>
        <category label="Android" term="Android"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Eclair (Android 2.0) 發佈]]></title>
        <id>https://blog.gasolin.idv.tw/android/Eclair-Android-2-0-publish</id>
        <link href="https://blog.gasolin.idv.tw/android/Eclair-Android-2-0-publish"/>
        <updated>2009-10-27T22:17:49.000Z</updated>
        <summary type="html"><![CDATA[想不到才過了一個月，Android 2.0 這麼快就出來了。]]></summary>
        <content type="html"><![CDATA[<object width="425" height="344"><param name="movie" value="http://www.youtube.com/v/opZ69P-0Jbc&amp;color1=0xb1b1b1&amp;color2=0xcfcfcf&amp;hl=en&amp;feature=player_embedded&amp;fs=1"><param name="allowFullScreen" value="true"><param name="allowScriptAccess" value="always"><embed src="http://www.youtube.com/v/opZ69P-0Jbc&amp;color1=0xb1b1b1&amp;color2=0xcfcfcf&amp;hl=en&amp;feature=player_embedded&amp;fs=1" type="application/x-shockwave-flash" allowfullscreen="true" allowscriptaccess="always" width="425" height="344"></object><p>想不到才過了一個月，Android 2.0 這麼快就出來了。
對開發者來說，主要的變化是開放了原本的一些 internal API，包含 Bluetooth、多點（至多 3 點）觸控 (MotionEvent)、AccountManager、Sync Adapter、Dock（底座）、並強化相機 API、瀏覽器支援 HTML5、支援更多種解析度機器... 等。</p><p>除了大家期待已久的藍芽與多點觸控，開放 AccountManager、Sync Adapter、Dock 這些 API 表示 Android 系統已經準備好讓開發者們能創造與 Google 以外的網路服務、與其他設備更加緊密結合的應用程式。真是很期待開發者們能怎麼運用這個強大的系統 :)</p>]]></content>
        <category label="Android" term="Android"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[OCR 應用]]></title>
        <id>https://blog.gasolin.idv.tw/tools/OCR-application</id>
        <link href="https://blog.gasolin.idv.tw/tools/OCR-application"/>
        <updated>2009-09-22T08:26:43.000Z</updated>
        <summary type="html"><![CDATA[WordSnap OCR]]></summary>
        <content type="html"><![CDATA[<object width="425" height="344"><param name="movie" value="http://www.youtube.com/v/-73jqb0EMA4&amp;hl==zh_TW&amp;fs=1"><param name="allowFullScreen" value="true"><param name="allowscriptaccess" value="always"><embed src="http://www.youtube.com/v/-73jqb0EMA4&amp;hl==zh_TW&amp;fs=1" type="application/x-shockwave-flash" allowscriptaccess="always" allowfullscreen="true" width="425" height="344"></object><p></p><object width="425" height="344"><param name="movie" value="http://www.youtube.com/v/1gj0GWWaSOg&amp;hl==zh_TW&amp;fs=1"><param name="allowFullScreen" value="true"><param name="allowscriptaccess" value="always"><embed src="http://www.youtube.com/v/1gj0GWWaSOg&amp;hl==zh_TW&amp;fs=1" type="application/x-shockwave-flash" allowscriptaccess="always" allowfullscreen="true" width="425" height="344"></object><p></p>]]></content>
        <category label="Android" term="Android"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Donut (Android 1.6) 發佈]]></title>
        <id>https://blog.gasolin.idv.tw/android/Donut-Android-1-6-publish</id>
        <link href="https://blog.gasolin.idv.tw/android/Donut-Android-1-6-publish"/>
        <updated>2009-09-16T06:16:23.000Z</updated>
        <summary type="html"><![CDATA[Donut (Android 1.6) 發佈了，補完了 Android 1.x 應該有的功能，支援更多的機器。]]></summary>
        <content type="html"><![CDATA[<p><a href="http://developer.android.com/" target="_blank" rel="noopener noreferrer">Donut (Android 1.6) 發佈了</a>，補完了 Android 1.x 應該有的功能，支援更多的機器。</p><object width="425" height="344"><param name="movie" value="http://www.youtube.com/v/MBRFkLKRwFw&amp;color1=0x3a3a3a&amp;color2=0x999999&amp;hl=en&amp;feature=player_embedded&amp;fs=1"><param name="allowFullScreen" value="true"><param name="allowScriptAccess" value="always"><embed src="http://www.youtube.com/v/MBRFkLKRwFw&amp;color1=0x3a3a3a&amp;color2=0x999999&amp;hl=en&amp;feature=player_embedded&amp;fs=1" type="application/x-shockwave-flash" allowfullscreen="true" allowscriptaccess="always" width="425" height="344"></object><p>隨著 Eclipse 3.5、Android 1.6 跟 ADT 0.9.3 推出，到底值不值得再次改版<a href="http://www.books.com.tw/exep/assp.php/gasolin/exep/prod/booksfile.php?item=0010442861" target="_blank" rel="noopener noreferrer">我寫的入門書</a>呢？</p><p>如我在第二版序中所言的，Android 改版相當快，所有進階的內容很有可能變動，唯有<a href="http://developer.android.com/intl/de/sdk/api_diff/4/changes.html" target="_blank" rel="noopener noreferrer">基本入門所需的知識並沒有改變太多</a>。
因此沒有意外的話，應該會等到 Android 2.0 之後才考慮再改版。</p><p>1.6 新版本相關的新內容將先加在<a href="http://androidbmi.googlecode.com/" target="_blank" rel="noopener noreferrer">電子書版</a>中。</p>]]></content>
        <category label="Android" term="Android"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[樣板表示法]]></title>
        <id>https://blog.gasolin.idv.tw/python/template</id>
        <link href="https://blog.gasolin.idv.tw/python/template"/>
        <updated>2009-09-06T06:28:46.000Z</updated>
        <summary type="html"><![CDATA[在做講解投影片時自然而然寫出]]></summary>
        <content type="html"><![CDATA[<p>在做講解投影片時自然而然寫出</p><blockquote><p>import package</p><p>public class ${Name} extends Activity{
...
public void onCreate(...){
...
setContentView(${layout})
}
}</p></blockquote><p>這樣的 python Template 表示法，抽象化有時確實有助於理解。</p>]]></content>
        <category label="Python" term="Python"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[打鼓]]></title>
        <id>https://blog.gasolin.idv.tw/make/drum</id>
        <link href="https://blog.gasolin.idv.tw/make/drum"/>
        <updated>2009-09-04T09:06:13.000Z</updated>
        <content type="html"><![CDATA[<object width="425" height="344"><param name="movie" value="http://www.youtube.com/v/ON1cxNU0K8w&amp;hl=zh_TW&amp;fs=1&amp;"><param name="allowFullScreen" value="true"><param name="allowscriptaccess" value="always"><embed src="http://www.youtube.com/v/ON1cxNU0K8w&amp;hl=zh_TW&amp;fs=1&amp;" type="application/x-shockwave-flash" allowscriptaccess="always" allowfullscreen="true" width="425" height="344"></object><object width="425" height="344"><param name="movie" value="http://www.youtube.com/v/51xPnN91mmM&amp;hl=zh_TW&amp;fs=1&amp;"><param name="allowFullScreen" value="true"><param name="allowscriptaccess" value="always"><embed src="http://www.youtube.com/v/51xPnN91mmM&amp;hl=zh_TW&amp;fs=1&amp;" type="application/x-shockwave-flash" allowscriptaccess="always" allowfullscreen="true" width="425" height="344"></object><object width="560" height="340"><param name="movie" value="http://www.youtube.com/v/UsnJbIgl_qc&amp;hl=zh_TW&amp;fs=1&amp;"><param name="allowFullScreen" value="true"><param name="allowscriptaccess" value="always"><embed src="http://www.youtube.com/v/UsnJbIgl_qc&amp;hl=zh_TW&amp;fs=1&amp;" type="application/x-shockwave-flash" allowscriptaccess="always" allowfullscreen="true" width="560" height="340"></object>]]></content>
        <category label="fun" term="fun"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Market]]></title>
        <id>https://blog.gasolin.idv.tw/android/Market</id>
        <link href="https://blog.gasolin.idv.tw/android/Market"/>
        <updated>2009-09-03T23:10:01.000Z</updated>
        <summary type="html"><![CDATA[新版的 Market 介面改了不少, 看起來是有往好的方向走]]></summary>
        <content type="html"><![CDATA[<p>新版的 Market 介面改了不少，看起來是有往好的方向走</p><object width="425" height="344"><param name="movie" value="http://www.youtube.com/v/8ma9Xh67Eyo&amp;color1=0x3a3a3a&amp;color2=0x999999&amp;hl=en&amp;feature=player_embedded&amp;fs=1"><param name="allowFullScreen" value="true"><param name="allowScriptAccess" value="always"><embed src="http://www.youtube.com/v/8ma9Xh67Eyo&amp;color1=0x3a3a3a&amp;color2=0x999999&amp;hl=en&amp;feature=player_embedded&amp;fs=1" type="application/x-shockwave-flash" allowfullscreen="true" allowscriptaccess="always" width="425" height="344"></object>]]></content>
        <category label="Android" term="Android"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[麵包師父]]></title>
        <id>https://blog.gasolin.idv.tw/android/bread-maker</id>
        <link href="https://blog.gasolin.idv.tw/android/bread-maker"/>
        <updated>2009-09-03T07:02:25.000Z</updated>
        <summary type="html"><![CDATA[看到第二版書的封面，就知這是筆者轉職成為麵包師父後的第一作（誤）]]></summary>
        <content type="html"><![CDATA[<p></p><p>看到第二版書的封面，就知這是筆者轉職成為麵包師父後的第一作（誤）</p><p>「Google！Android 手機應用程式設計入門 2ed」 這本書主要是為了因為想開發 Android 而學 Java 的人寫的。
最適合的讀者是有其他語言開發經驗，但對 Java 還不太熟悉的讀者。</p><p>本書第二版上市時間跟前一版只差了 5 個月，主要是因應 Android 1.5 版釋出，
加上 Android 開發工具 ADT 大改版到 0.9 而大量改寫，
修正許多前一版的 Bug 跟範例程式碼，把整個學習流程弄的更順暢，
並加入新章節、新圖例 (超過 60 張)、實用小技巧。
（當然出版社肯讓我這麼短時間就改版，也是因為賣得還算不錯啦）</p><p>買過本書第一版的您不見得需要買第二版，但是本書第二版當然更適合拿來介紹給其他想入門 Android 的朋友。</p><p>用杯子蛋糕（CupCake）當封面是我的惡趣味，以配合 Android 目前版本的代號，希望能在賞玩本書時帶來樂趣。</p><p></p>]]></content>
        <category label="Android" term="Android"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Cool Interactive]]></title>
        <id>https://blog.gasolin.idv.tw/tools/Cool-Interactive</id>
        <link href="https://blog.gasolin.idv.tw/tools/Cool-Interactive"/>
        <updated>2009-09-01T06:58:42.000Z</updated>
        <content type="html"><![CDATA[<object width="425" height="344"><param name="movie" value="http://www.youtube.com/v/mUdDhWfpqxg=zh_TW&amp;fs=1"><param name="allowFullScreen" value="true"><param name="allowscriptaccess" value="always"><embed src="http://www.youtube.com/v/mUdDhWfpqxg=zh_TW&amp;fs=1" type="application/x-shockwave-flash" allowscriptaccess="always" allowfullscreen="true" width="425" height="344"></object><object width="425" height="344"><param name="movie" value="http://www.youtube.com/v/0H1zrLZwPjQ=zh_TW&amp;fs=1"><param name="allowFullScreen" value="true"><param name="allowscriptaccess" value="always"><embed src="http://www.youtube.com/v/0H1zrLZwPjQ=zh_TW&amp;fs=1" type="application/x-shockwave-flash" allowscriptaccess="always" allowfullscreen="true" width="425" height="344"></object>]]></content>
        <category label="fun" term="fun"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[NoCheatCalls（NCC）可疑電話通報]]></title>
        <id>https://blog.gasolin.idv.tw/tools/NoCheatCalls</id>
        <link href="https://blog.gasolin.idv.tw/tools/NoCheatCalls"/>
        <updated>2009-08-28T10:37:46.000Z</updated>
        <summary type="html"><![CDATA[寫了篇文章介紹前段時間寫的防詐騙公益程式。]]></summary>
        <content type="html"><![CDATA[<p></p><p><a href="http://android.cool3c.com/article/11595" target="_blank" rel="noopener noreferrer">寫了篇文章</a>介紹前段時間寫的防詐騙公益程式。</p>]]></content>
        <category label="Android" term="Android"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[擴增實境]]></title>
        <id>https://blog.gasolin.idv.tw/vr/extend-reality</id>
        <link href="https://blog.gasolin.idv.tw/vr/extend-reality"/>
        <updated>2009-08-20T07:52:07.000Z</updated>
        <summary type="html"><![CDATA[Local Reality Browser 是一個擴增實境的應用。透過相機鏡頭，同時展示現實景色與相應的數位資訊。同時像瀏覽器一樣，讓開發者可以在 Android 手機上面自行加入自己的擴增實境網頁（這個軟體稱這些頁面為「圖層」Layer）。]]></summary>
        <content type="html"><![CDATA[<object width="425" height="344"><param name="movie" value="http://www.youtube.com/v/b64_16K2e08=zh_TW&amp;fs=1"><param name="allowFullScreen" value="true"><param name="allowscriptaccess" value="always"><embed src="http://www.youtube.com/v/b64_16K2e08=zh_TW&amp;fs=1" type="application/x-shockwave-flash" allowscriptaccess="always" allowfullscreen="true" width="425" height="344"></object><p><a href="http://www.cyrket.com/package/com.sprx.layar" target="_blank" rel="noopener noreferrer">Local Reality Browser</a> 是一個擴增實境的應用。透過相機鏡頭，同時展示現實景色與相應的數位資訊。同時像瀏覽器一樣，讓開發者可以在 Android 手機上面自行加入自己的擴增實境網頁（這個軟體稱這些頁面為「圖層」Layer）。</p><object width="425" height="344"><param name="movie" value="http://www.youtube.com/v/zVouwYAKqFk=zh_TW&amp;fs=1"><param name="allowFullScreen" value="true"><param name="allowscriptaccess" value="always"><embed src="http://www.youtube.com/v/zVouwYAKqFk=zh_TW&amp;fs=1" type="application/x-shockwave-flash" allowscriptaccess="always" allowfullscreen="true" width="425" height="344"></object><p>微軟的擴增實境</p><object width="425" height="344"><param name="movie" value="http://www.youtube.com/v/qb3AzXEB1Kg=zh_TW&amp;fs=1"><param name="allowFullScreen" value="true"><param name="allowscriptaccess" value="always"><embed src="http://www.youtube.com/v/qb3AzXEB1Kg=zh_TW&amp;fs=1" type="application/x-shockwave-flash" allowscriptaccess="always" allowfullscreen="true" width="425" height="344"></object><p>SONY 的擴增實境</p><p>也可參考 <a href="http://gnn.gamer.com.tw/2/38352.html" target="_blank" rel="noopener noreferrer">操縱介面的改變</a></p>]]></content>
        <category label="Android" term="Android"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Introduction of Android Scripting Environment]]></title>
        <id>https://blog.gasolin.idv.tw/android/Introduction-of-Android-Scripting-Environment</id>
        <link href="https://blog.gasolin.idv.tw/android/Introduction-of-Android-Scripting-Environment"/>
        <updated>2009-08-16T08:25:54.000Z</updated>
        <summary type="html"><![CDATA[On Coscup 2009]]></summary>
        <content type="html"><![CDATA[<iframe src="http://docs.google.com/present/embed?id=ajkxs9k6pqxr_938ffvzq8n2" frameborder="0" width="410" height="342"></iframe><p>On Coscup 2009</p>]]></content>
        <category label="zhpy" term="zhpy"/>
        <category label="python" term="python"/>
        <category label="Android" term="Android"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Google Python Style Guide]]></title>
        <id>https://blog.gasolin.idv.tw/python/Google-Python-Style-Guide</id>
        <link href="https://blog.gasolin.idv.tw/python/Google-Python-Style-Guide"/>
        <updated>2009-08-15T03:03:02.000Z</updated>
        <summary type="html"><![CDATA[http://google-styleguide.googlecode.com/svn/trunk/pyguide.html]]></summary>
        <content type="html"><![CDATA[<p></p>]]></content>
        <category label="python" term="python"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Compiling Python for Android Scripting Environment]]></title>
        <id>https://blog.gasolin.idv.tw/devtools/Compiling-Python-for-Android-Scripting-Environment</id>
        <link href="https://blog.gasolin.idv.tw/devtools/Compiling-Python-for-Android-Scripting-Environment"/>
        <updated>2009-08-13T13:05:08.000Z</updated>
        <summary type="html"><![CDATA[Android Scripting Environment (ASE) is the scripting language (BeanShell, Python, Lua, Ruby) environment for Android Operating System.]]></summary>
        <content type="html"><![CDATA[<p>Android Scripting Environment (ASE) is the scripting language (BeanShell, Python, Lua, Ruby) environment for Android Operating System.</p><p>This article is about how to compile python for ASE.</p><p>The following instructions are according to the discussion from <a href="http://groups.google.com/group/android-scripting/browse_thread/thread/6a2fcc058fc7a5b1" target="_blank" rel="noopener noreferrer">ASE group</a>.</p><p>Compile python <strong> for host
</strong>To compile python for ASE, you need a Linux machine, then here goes:</p><p>Download proper python source distribution (according to the python version in ase/python/src) from <a href="http://www.python.org/" target="_blank" rel="noopener noreferrer">http://www.python.org/</a></p><p>Extract the source and run the following command:</p><blockquote><p>$ cd Python-2.6.2
$ ./configure
$ make
Then you have a clean python compiled for your PC (called host system).</p></blockquote><p>Compile python <strong> for target
</strong>Now we can go to compile python for your Android device (called target system).</p><p>Copy the python executable file and the pgen file into ase/python/src folder</p><blockquote><p>$ cd ~
$ cp Python-2.6.2/python ase/python/src/hostpython
$ cp Python-2.6.2/Parser/pgen ase/python/src/Parser/hostpgen
Then we should prepare the compile tools.</p></blockquote><p>First checkout the android source from <a href="http://source.android.com/" target="_blank" rel="noopener noreferrer">http://source.android.com/</a> (name as mydroid), we'll use the cross compile gcc in it's "prebuilt/linux-x86/toolchain/arm-eabi-4.2.1/bin" folder. Another tool is located in "ase/tools/agcc".</p><p>Edit .bashrc , add a line to include those compile tools:</p><blockquote><p>export PATH=${PATH}:~/mydroid/prebuilt/linux
-x86/toolchain/arm-eabi-4.2.1/bin:~/ase/tools/agcc
Then start compile python for ASE.</p></blockquote><p>$ cd ase/python
$ ./build.py</p><p><strong>Done!
</strong></p>]]></content>
        <category label="python" term="python"/>
        <category label="Android" term="Android"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Compiling Android Scripting Environment]]></title>
        <id>https://blog.gasolin.idv.tw/devtools/Compiling-Android-Scripting-Environment</id>
        <link href="https://blog.gasolin.idv.tw/devtools/Compiling-Android-Scripting-Environment"/>
        <updated>2009-08-06T12:28:58.000Z</updated>
        <summary type="html"><![CDATA[Android Scripting Environment (ASE) is the scripting language (BeanShell, Python, Lua, Ruby) environment for Android Operating System.]]></summary>
        <content type="html"><![CDATA[<p>Android Scripting Environment (ASE) is the scripting language (BeanShell, Python, Lua, Ruby) environment for Android Operating System.</p><p>The following instructions are according to the discussion from <a href="http://groups.google.com/group/android-scripting/browse_thread/thread/07905d5d088d237b#" target="_blank" rel="noopener noreferrer">ASE group</a>.</p><p><strong>Prerequisites</strong>
**To compile ASE, you need a Linux machine, then here goes:</p><p>1<!-- -->.<!-- --> Get Android source (read <a href="http://source.android.com/download" target="_blank" rel="noopener noreferrer">http://source.android.com/download</a> to fetch the source) and
name the folder as 'mydroid'(or else you prefer). In the following instructions I assume all the folders are in user's home folder(~) .</p><p>2<!-- -->.<!-- --> Get Android SDK (download from <a href="http://developer.android.com/" target="_blank" rel="noopener noreferrer">http://developer.android.com/</a>) and
extract it as "android_sdk"(or else you prefer).</p><p>3<!-- -->.<!-- --> Get Android Scripting Environment source (hg clone from <a href="http://code.google.com/p/android-scripting/source/" target="_blank" rel="noopener noreferrer">http://code.google.com/p/android-scripting/source/</a>) as "ase"(or else you prefer).</p><p>4<!-- -->.<!-- --> Enter ase/tools folder and execute "fix_android_sdk.py"
to patch the "android_sdk".</p><blockquote><p>$ cd ase/tools
$ python fix_android_sdk.py ~/mydroid ~/android_sdk
Copying source from .....mydroid to .....android_sdk/platforms/android-<!-- -->[verison]<!-- -->/sources
Adding android.os.Exec to android.jar
Compiling android.os.Exec to....
Done!</p></blockquote><p>In addition to modifying the SDK by adding android.os.Exec, the script
will also copy the source files into the SDK so that they can be
browsed in Eclipse.</p><p><strong>Import Project into Eclipse</strong></p><p>After executing the script, follow the instructions for developing in
Eclipse in the <a href="http://developer.android.com/guide/developing/eclipse-adt.html" target="_blank" rel="noopener noreferrer">Android developer guide</a> to setup a workable Android
development environment.</p><p>Change the project build path and specify the BeanShell path to (project
path)/beanshell/bsh-<!-- -->[version]<!-- -->.jar
Compile it, done!</p><p>PS: Python and Lua are precompiled and already put in res/raw folder. You
don't need to setup the cross compile environment unless you want to
also compile Lua and Python yourself.</p>]]></content>
        <category label="python" term="python"/>
        <category label="Android" term="Android"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[AppStore Rules]]></title>
        <id>https://blog.gasolin.idv.tw/tools/AppStore-Rules</id>
        <link href="https://blog.gasolin.idv.tw/tools/AppStore-Rules"/>
        <updated>2009-08-05T09:51:55.000Z</updated>
        <summary type="html"><![CDATA[*   Avoiding iPhone App Rejection From Apple 不管在哪個環境下開發給使用者用的應用程式都得先自我審查，過了自己這一關再把程式丟出去。]]></summary>
        <content type="html"><![CDATA[<ul><li><a href="http://www.mobileorchard.com/avoiding-iphone-app-rejection-from-apple/" target="_blank" rel="noopener noreferrer">Avoiding iPhone App Rejection From Apple</a> 不管在哪個環境下開發給使用者用的應用程式都得先自我審查，過了自己這一關再把程式丟出去。</li></ul>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Zii Egg]]></title>
        <id>https://blog.gasolin.idv.tw/android/Zii-Egg</id>
        <link href="https://blog.gasolin.idv.tw/android/Zii-Egg"/>
        <updated>2009-07-29T02:35:17.000Z</updated>
        <summary type="html"><![CDATA[基於 Android 平台擴充，支援 MPEG-4 外接 FullHD 顯示器播放的手持設備（不是手機]]></summary>
        <content type="html"><![CDATA[<object width="425" height="344"><param name="movie" value="http://www.youtube.com/v/CZ6It6z05rg&amp;color1=0xb1b1b1&amp;color2=0xcfcfcf&amp;feature=player_embedded&amp;fs=1"><param name="allowFullScreen" value="true"><param name="allowScriptAccess" value="always"><embed src="http://www.youtube.com/v/CZ6It6z05rg&amp;color1=0xb1b1b1&amp;color2=0xcfcfcf&amp;feature=player_embedded&amp;fs=1" type="application/x-shockwave-flash" allowfullscreen="true" allowscriptaccess="always" width="425" height="344"></object><p>基於 Android 平台擴充，支援 MPEG-4 外接 FullHD 顯示器播放的手持設備（不是手機</p>]]></content>
        <category label="Android" term="Android"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Guide to put (Hero) Builds to your G1/Magic Android]]></title>
        <id>https://blog.gasolin.idv.tw/android/Guide-to-put-Hero-Builds-to-your-G1-Magic-Android</id>
        <link href="https://blog.gasolin.idv.tw/android/Guide-to-put-Hero-Builds-to-your-G1-Magic-Android"/>
        <updated>2009-07-24T15:16:20.000Z</updated>
        <summary type="html"><![CDATA[http://forum.xda-developers.com/showthread.php?t=533505]]></summary>
        <content type="html"><![CDATA[<p></p>]]></content>
        <category label="Android" term="Android"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[All About Python and Unicode]]></title>
        <id>https://blog.gasolin.idv.tw/python/All-About-Python-and-Unicode</id>
        <link href="https://blog.gasolin.idv.tw/python/All-About-Python-and-Unicode"/>
        <updated>2009-07-12T01:18:41.000Z</updated>
        <summary type="html"><![CDATA[這篇完整講解了 Python Unicode 的作法,]]></summary>
        <content type="html"><![CDATA[<p><a href="http://boodebr.org/main/python/all-about-python-and-unicode" target="_blank" rel="noopener noreferrer">這篇</a>完整講解了 Python Unicode 的作法，</p><p>例如為什麼都已經是 Unicode 了還會有 encode, decode 的需求？
答案是因為電腦內部以二進制儲存 Unicode, 而一般網頁等程式能處理的是經過 "文字編碼" 後的 text code (utf-8, big5, gbk).</p><p>而為什麼常看到 UTF-8?
因為 UTF-8 這套文字編碼相容英文最常用的 ASCII 文字編碼，所以大多數英文程式不需要改寫就能沿用.</p><p>所以從網頁 / 程式存中文到資料庫 (電腦) 時要做 data.encode ('big5') 的動作來存到電腦中.</p><blockquote><blockquote><blockquote><p>h = ' 哈囉 '
h
'\xab\xa2\xc5o'</p></blockquote></blockquote></blockquote><p>從電腦中取出的中文 data 要做 data.decode ('big5') 的動作，</p><blockquote><blockquote><blockquote><p>print h
哈囉
h.decode ('big5')
u'\u54c8\u56c9'
print h.decode ('big5')
哈囉</p></blockquote></blockquote></blockquote><p>那麼為什麼有時候用一些程式不需要自己處理這些事情呢？
那是因為這些程式的作者已經預幫你處理了 XD</p><p>不知道預設的編碼時，可以試試用 <a href="http://chardet.feedparser.org/" target="_blank" rel="noopener noreferrer">Universal Encoding Detector</a> 來猜測所使用的編碼.</p><p>Update:</p><ul><li></li><li></li></ul>]]></content>
        <category label="python" term="python"/>
        <category label="unicode" term="unicode"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[HTC HERO]]></title>
        <id>https://blog.gasolin.idv.tw/android/HTC-HERO</id>
        <link href="https://blog.gasolin.idv.tw/android/HTC-HERO"/>
        <updated>2009-06-24T14:43:47.000Z</updated>
        <summary type="html"><![CDATA[介面進化多了]]></summary>
        <content type="html"><![CDATA[<object width="560" height="340"><param name="movie" value="http://www.youtube.com/v/FKTDSfbcbBU&amp;hl=zh_TW&amp;fs=1&amp;"><param name="allowFullScreen" value="true"><param name="allowscriptaccess" value="always"><embed src="http://www.youtube.com/v/FKTDSfbcbBU&amp;hl=zh_TW&amp;fs=1&amp;" type="application/x-shockwave-flash" allowscriptaccess="always" allowfullscreen="true" width="560" height="340"></object><p>介面進化多了</p>]]></content>
        <category label="Android" term="Android"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[OPhone 的 Web 3.0 架構]]></title>
        <id>https://blog.gasolin.idv.tw/android/OPhone-Web-3-0</id>
        <link href="https://blog.gasolin.idv.tw/android/OPhone-Web-3-0"/>
        <updated>2009-06-24T09:29:59.000Z</updated>
        <summary type="html"><![CDATA[.jpg).jpg)]]></summary>
        <content type="html"><![CDATA[<p></p><p>中國移動基於 Android 自行訂製的 OPhone 系統終於釋出了 SDK。<a href="http://www.oms-sdn.com/" target="_blank" rel="noopener noreferrer">OPhone 的 SDK</a> 相容於 Android 1.0 API ，使用 ADT 0.8 版開發工具（不支援 Android 1.1、1.5 和 ADT 0.9.x 以上版本的開發工具），並需要安裝它提供的 OPhone SDK 還有 WDT （桌面小程式開發工具 Widget Development Toolkit）這個 Eclipse Plugin。</p><p>無獨有偶的，OPhone 弄出了一個跟 <a href="http://unite.opera.com/" target="_blank" rel="noopener noreferrer">Opera Unite</a> 相似的「客戶端即伺服器」架構，叫做「Mobileyou」<a href="http://www.oms-sdn.com/article/show/24;jsessionid=9D59902E76E53BB69A5691043B726B8B" target="_blank" rel="noopener noreferrer">手機網頁伺服器</a>。我乾脆把這類架構稱為「網頁 P2P」，或「pWeb」（Personal Web、Peer-2-Peer Web）。</p><p>這類「pWeb」服務架構的本質，簡單說來是在電腦或手機上裝個網頁伺服器，以提供各種以網頁為介面的服務，再結合個人電腦或手機上提供的個人資訊，提供異化的功能性網站。</p><p>中國移動或 Opera 這些服務提供者端，將使用某種動態 DNS 轉址機制（Dynamic DNS），以提供一個統一的網址，如「http:// 官方網址 / 個人暱稱 / 服務」這樣的連結，讓網路上所有的人都可以用這個網址連上 pWeb 網站，以解決使用者該透過哪個網址訪問的問題。</p><p>OPhone 提供的「Mobileyou」，跟 Android 上另一個「i-jetty」應用程式很類似。裝了之後都可以存取手機上的功能，透過網頁介面來管理個人通訊錄、查看簡訊等。</p><p>有了這樣的服務以後，女朋友要看男朋友有沒有偷吃，就不用再偷偷拿他的手機查看簡訊，只要到個人手機上的網站查看就行了（怎麼覺得舉的是個反例 :p）</p>]]></content>
        <category label="Android" term="Android"/>
        <category label="network" term="network"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[學走]]></title>
        <id>https://blog.gasolin.idv.tw/digest/learn-to-walk</id>
        <link href="https://blog.gasolin.idv.tw/digest/learn-to-walk"/>
        <updated>2009-06-14T03:33:25.000Z</updated>
        <summary type="html"><![CDATA[程式設計領域裡，每一個人都想飛。但是，還沒學會走之前，不要跑！]]></summary>
        <content type="html"><![CDATA[<p>程式設計領域裡，每一個人都想飛。但是，還沒學會走之前，不要跑！
-- 侯捷</p>]]></content>
        <category label="digest" term="digest"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Anobiit]]></title>
        <id>https://blog.gasolin.idv.tw/tools/Anobiit</id>
        <link href="https://blog.gasolin.idv.tw/tools/Anobiit"/>
        <updated>2009-06-09T06:42:59.000Z</updated>
        <summary type="html"><![CDATA[寫了篇文章，介紹自己寫的小軟體 Anobiit]]></summary>
        <content type="html"><![CDATA[<p></p><p><a href="http://android.cool3c.com/article/8940" target="_blank" rel="noopener noreferrer">寫了篇文章</a>，介紹自己寫的小軟體 Anobiit</p>]]></content>
        <category label="Android" term="Android"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Google 救甘興 -- Google 應用服務引擎（App Engine）中文文件]]></title>
        <id>https://blog.gasolin.idv.tw/service/Google-App-Engine-manual</id>
        <link href="https://blog.gasolin.idv.tw/service/Google-App-Engine-manual"/>
        <updated>2009-05-22T09:18:30.000Z</updated>
        <summary type="html"><![CDATA[Google 對他的應用服務引擎（App Engine）推廣不遺餘力，]]></summary>
        <content type="html"><![CDATA[<p></p><p>Google 對他的應用服務引擎（App Engine）推廣不遺餘力，
除了在四月多發佈 Java 版的應用服務引擎之外，
前幾天竟然把官方網站上的文件全部翻譯成了中文！</p><p>學網頁開發再也不用自己架設伺服器（Server）、安裝網頁伺服器（Web Server）、伺服器語言、和資料庫（Database），有了 Google 應用服務引擎通通一次搞定。</p><p>對 Google 應用服務引擎有興趣的人可以連至<a href="http://code.google.com/intl/zh-TW/appengine/articles/" target="_blank" rel="noopener noreferrer">Google 應用服務引擎官方網站</a> （中文）查看。</p>]]></content>
        <category label="GAE" term="GAE"/>
        <category label="python" term="python"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[HTC 自製介面影片]]></title>
        <id>https://blog.gasolin.idv.tw/android/HTC-sense-ui</id>
        <link href="https://blog.gasolin.idv.tw/android/HTC-sense-ui"/>
        <updated>2009-05-19T14:54:18.000Z</updated>
        <summary type="html"><![CDATA[HTC 自製介面的影片流出了，與 Android 標準介面有些不同。]]></summary>
        <content type="html"><![CDATA[<object width="425" height="344"><param name="movie" value="http://www.youtube.com/v/6OMrSTEBeyI&amp;color1=0xb1b1b1&amp;color2=0xcfcfcf&amp;hl=en&amp;feature=player_embedded&amp;fs=1"><param name="allowFullScreen" value="true"><embed src="http://www.youtube.com/v/6OMrSTEBeyI&amp;color1=0xb1b1b1&amp;color2=0xcfcfcf&amp;hl=en&amp;feature=player_embedded&amp;fs=1" type="application/x-shockwave-flash" allowfullscreen="true" width="425" height="344"></object><object width="425" height="344"><param name="movie" value="http://www.youtube.com/v/2B4u7P4L6qE&amp;color1=0xb1b1b1&amp;color2=0xcfcfcf&amp;feature=player_embedded&amp;fs=1"><param name="allowFullScreen" value="true"><embed src="http://www.youtube.com/v/2B4u7P4L6qE&amp;color1=0xb1b1b1&amp;color2=0xcfcfcf&amp;feature=player_embedded&amp;fs=1" type="application/x-shockwave-flash" allowfullscreen="true" width="425" height="344"></object><p>HTC 自製介面的影片流出了，與 Android 標準介面有些不同。</p><p>就像 Linux 發佈套件（Ubuntu, OpenSUSE, RedHat）一樣，當 OS 都免費取得時，要與其他廠商作區隔就得在使用介面（3D 效果）、易用性（各式工具，如 PDF Reader、HTC Mail）、特有功能（與 Extrange 整合）等方面來著墨。</p>]]></content>
        <category label="Android" term="Android"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[解決 Android 版本相容性問題1]]></title>
        <id>https://blog.gasolin.idv.tw/android/solve-Android-version-conpatibility-1</id>
        <link href="https://blog.gasolin.idv.tw/android/solve-Android-version-conpatibility-1"/>
        <updated>2009-05-06T04:34:38.000Z</updated>
        <summary type="html"><![CDATA[Android 系統改版相當快，使用者拿到的手機上往往也搭載著不同版本的 Android 系統。當我們用到新版本 SDK 所提供的功能時，也代表我們放棄了所有使用舊版本 OS 的使用者。為了讓最多的使用者能用上我們所寫的應用程式，我們應該盡可能地讓應用程式做到向下相容。]]></summary>
        <content type="html"><![CDATA[<p>Android 系統改版相當快，使用者拿到的手機上往往也搭載著不同版本的 Android 系統。當我們用到新版本 SDK 所提供的功能時，也代表我們放棄了所有使用舊版本 OS 的使用者。為了讓最多的使用者能用上我們所寫的應用程式，我們應該盡可能地讓應用程式做到向下相容。</p><p>那麼我們最好向下相容到那個版本的 SDK 哩？簡單的答案是：</p><p>在 2010 年以前，以 SDK 1.1 為基礎來開發可以享受到最新版的開發工具的便利，同時也可以支援最多使用者。</p><p>若只要寫供中文版手機使用的應用程式，則可以直接基於 SDK 1.5 來開發，能使用 SDK 1.5 版的所有功能（因為第一支 Android 中文手機內建的版本就是 1.5 版）。</p>]]></content>
        <category label="Android" term="Android"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Android SDK 1.5 發佈]]></title>
        <id>https://blog.gasolin.idv.tw/android/Android-SDK-1-5-publish</id>
        <link href="https://blog.gasolin.idv.tw/android/Android-SDK-1-5-publish"/>
        <updated>2009-04-28T15:59:17.000Z</updated>
        <summary type="html"><![CDATA[Android SDK 1.5 發佈囉！]]></summary>
        <content type="html"><![CDATA[<p></p><p>主要可查覺的變化有稍微美化的介面，模擬器的操作有些改動，還有期待已久的輸入法與桌面小工具（appWidget）功能。</p><p>1.5 SDK 中，叫起模擬器的方法也改變了。新版支援多個不同版本模擬器共存，各廠商可以提供不同的自製模擬器。
例如 Google Map 等 Google API 就被另外抽出來放到了（加入了） Google API 的模擬器上。</p><p>所幸前陣子使用 1.5 pre 測試時<a href="http://www.books.com.tw/exep/assp.php/gasolin/exep/prod/booksfile.php?item=0010429598" target="_blank" rel="noopener noreferrer">書中</a>所提的範例都仍然可適用，在這段遷移往 1.5 平台的期間，請對照查看<a href="http://code.google.com/p/androidbmi/wiki/DiveIntoAndroid" target="_blank" rel="noopener noreferrer">線上版</a>的更新。</p><p>Update: 電子書版先支援 1.5 啦，主要的改動有</p><ul><li></li><li></li><li></li></ul>]]></content>
        <category label="Android" term="Android"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[在 Ubuntu 9.04 上連接 G1 開發]]></title>
        <id>https://blog.gasolin.idv.tw/android/G1-dev-in-Ubuntu-9-04</id>
        <link href="https://blog.gasolin.idv.tw/android/G1-dev-in-Ubuntu-9-04"/>
        <updated>2009-04-25T01:17:45.000Z</updated>
        <summary type="html"><![CDATA[參考這篇。]]></summary>
        <content type="html"><![CDATA[<p>參考<a href="http://www.maximyudin.com/2009/04/24/android/connecting-and-debugging-g1-on-ubuntu-904/" target="_blank" rel="noopener noreferrer">這篇</a>。</p>]]></content>
        <category label="Android" term="Android"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[非官方 SDK 與新的模擬器]]></title>
        <id>https://blog.gasolin.idv.tw/android/SDK-and-emulator</id>
        <link href="https://blog.gasolin.idv.tw/android/SDK-and-emulator"/>
        <updated>2009-04-13T10:05:15.000Z</updated>
        <summary type="html"><![CDATA[AndAppStore 4/7 日起提供非官方的 Android SDK BT 種子下載（需要註冊），有 Windows、Mac、Linux 版本。]]></summary>
        <content type="html"><![CDATA[<p></p><p><a href="http://andappstore.com/AndroidPhoneApplications/sdk/" target="_blank" rel="noopener noreferrer">AndAppStore</a> 4/7 日起提供非官方的 Android SDK BT 種子下載（需要註冊），有 Windows、Mac、Linux 版本。</p><p>在目前非官方 SDK 1.5 上可以看到繁簡體中文支援了，只是目前這個版本 Image 還有些問題，像是不支援網路等功能。</p><p>使用這版本的 emulator 前，需要建立一個 avd 模擬器 image 檔案。這表示不像目前模擬器只能換面板，骨子裡是同一台模擬器。SDK 1.5 發佈後，開發時可以自訂現在要模擬的機器是否支援諸如相機、GPS 等特性。也就是新版本在支援模擬多種不同的手機上跨進了一步。</p><p>建立方法是在 SDK 的 tools 目錄下執行以下命令：</p><blockquote><p>$ android create avd --target 1 --name cupcake-dev-vm</p></blockquote><p>自訂完手機模擬器 image 檔案 avd 後，就可以啟動 emulator</p><blockquote><p>emulator -avd cupcake-dev-vm</p></blockquote><p>PS: 還好<a href="http://www.books.com.tw/exep/assp.php/gasolin/exep/prod/booksfile.php?item=0010429598" target="_blank" rel="noopener noreferrer">書裡面</a>有先見之明，全使用 Eclipse 來操作，而不是用 terminal 來控制模擬器或編譯 Android 應用程式，不然馬上就包很大了 XD</p>]]></content>
        <category label="Android" term="Android"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Google! Android 手機應用程式設計入門 封面]]></title>
        <id>https://blog.gasolin.idv.tw/android/Google-Android-book-cover</id>
        <link href="https://blog.gasolin.idv.tw/android/Google-Android-book-cover"/>
        <updated>2009-04-13T09:08:30.000Z</updated>
        <summary type="html"><![CDATA[P0904703.jpg]]></summary>
        <content type="html"><![CDATA[<p><a href="http://www.flickr.com/photos/gasolin/3327041647/" target="_blank" rel="noopener noreferrer" title="photo sharing"><img loading="lazy" src="http://farm4.static.flickr.com/3354/3327041647_80623f98d3_m.jpg" class="img_ev3q"></a>
<a href="http://www.flickr.com/photos/gasolin/3327041647/" target="_blank" rel="noopener noreferrer">P0904703.jpg</a>
新書封面設計好囉，全書應該這幾週就會上市啦！到時懇請讀者們支持喔 :)</p><p>Update: 3/10 已經 <a href="http://www.books.com.tw/exep/assp.php/gasolin/exep/prod/booksfile.php?item=0010429598" target="_blank" rel="noopener noreferrer">在博客來上架了</a> :)</p>]]></content>
        <category label="Android" term="Android"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[平行處理概觀]]></title>
        <id>https://blog.gasolin.idv.tw/code/parallel</id>
        <link href="https://blog.gasolin.idv.tw/code/parallel"/>
        <updated>2009-04-03T06:18:55.000Z</updated>
        <summary type="html"><![CDATA[很棒的平行處理概觀講座]]></summary>
        <content type="html"><![CDATA[<p>很棒的<a href="http://www.zdnet.com.tw/white_board/intel/video-1.htm" target="_blank" rel="noopener noreferrer">平行處理概觀講座</a></p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[搜尋]]></title>
        <id>https://blog.gasolin.idv.tw/digest/search</id>
        <link href="https://blog.gasolin.idv.tw/digest/search"/>
        <updated>2009-03-30T01:49:25.000Z</updated>
        <summary type="html"><![CDATA[The main rationale was that the world is more complicated.]]></summary>
        <content type="html"><![CDATA[<blockquote><p>The main rationale was that the world is more complicated.
Now programmers spend more time researching libraries than writing everything from scratch.</p></blockquote>]]></content>
        <category label="digest" term="digest"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Django Pinax]]></title>
        <id>https://blog.gasolin.idv.tw/python/Django-Pinax</id>
        <link href="https://blog.gasolin.idv.tw/python/Django-Pinax"/>
        <updated>2009-03-23T02:49:00.000Z</updated>
        <summary type="html"><![CDATA[Pinax 是一套可重用的 Django app，看起來真是方便。]]></summary>
        <content type="html"><![CDATA[<object width="425" height="344"><param name="movie" value="http://www.youtube.com/v/1J91Ownq-7g&amp;color1=0xb1b1b1&amp;color2=0xcfcfcf&amp;hl=en&amp;feature=player_embedded&amp;fs=1"><param name="allowFullScreen" value="true"><embed src="http://www.youtube.com/v/1J91Ownq-7g&amp;color1=0xb1b1b1&amp;color2=0xcfcfcf&amp;hl=en&amp;feature=player_embedded&amp;fs=1" type="application/x-shockwave-flash" allowfullscreen="true" width="425" height="344"></object><p><a href="http://pinaxproject.com/" target="_blank" rel="noopener noreferrer">Pinax</a> 是一套可重用的 Django app，看起來真是方便。</p>]]></content>
        <category label="django" term="django"/>
        <category label="python" term="python"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Internet History]]></title>
        <id>https://blog.gasolin.idv.tw/ipv6/Internet-History</id>
        <link href="https://blog.gasolin.idv.tw/ipv6/Internet-History"/>
        <updated>2009-02-19T09:00:11.000Z</updated>
        <content type="html"><![CDATA[<object width="425" height="344"><param name="movie" value="http://www.youtube.com/v/9hIQjrMHTv4&amp;color1=0xb1b1b1&amp;color2=0xcfcfcf&amp;hl=de&amp;feature=player_embedded&amp;fs=1"><param name="allowFullScreen" value="true"><embed src="http://www.youtube.com/v/9hIQjrMHTv4&amp;color1=0xb1b1b1&amp;color2=0xcfcfcf&amp;hl=de&amp;feature=player_embedded&amp;fs=1" type="application/x-shockwave-flash" allowfullscreen="true" width="425" height="344"></object>]]></content>
        <category label="IPv6" term="IPv6"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[HTC Dream]]></title>
        <id>https://blog.gasolin.idv.tw/android/HTC-Dream</id>
        <link href="https://blog.gasolin.idv.tw/android/HTC-Dream"/>
        <updated>2009-02-18T06:43:25.000Z</updated>
        <summary type="html"><![CDATA[第二台 Android 手機，一樣的 HVGA，機身變薄、512 MB 記憶體、虛擬鍵盤（無實體鍵盤）。]]></summary>
        <content type="html"><![CDATA[<object width="480" height="295"><param name="movie" value="http://www.youtube.com/v/QBbu_FR6XPU&amp;hl=zh_TW&amp;fs=1"><param name="allowFullScreen" value="true"><param name="allowscriptaccess" value="always"><embed src="http://www.youtube.com/v/QBbu_FR6XPU&amp;hl=zh_TW&amp;fs=1" type="application/x-shockwave-flash" allowscriptaccess="always" allowfullscreen="true" width="480" height="295"></object><p>第二台 Android 手機，一樣的 HVGA，機身變薄、512 MB 記憶體、虛擬鍵盤（無實體鍵盤）。</p><p>mmm... 太普通了。</p>]]></content>
        <category label="Android" term="Android"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[在 Android 程式中切換介面語系]]></title>
        <id>https://blog.gasolin.idv.tw/android/switch-Android-language</id>
        <link href="https://blog.gasolin.idv.tw/android/switch-Android-language"/>
        <updated>2009-02-05T02:24:19.000Z</updated>
        <summary type="html"><![CDATA[在 Android 1.5 版發佈之後，我們就可以用官方文件中教的方法來定義不同語系的資源文件，並根據語言設定，在使用者螢幕上顯示出對應的語言。在此之前，我們可以在 onCreate 中加入下面的程式片段，來測試不同語系的介面：]]></summary>
        <content type="html"><![CDATA[<p>在 Android 1.5 版發佈之後，我們就可以用<a href="http://code.google.com/android/devel/resources-i18n.html" target="_blank" rel="noopener noreferrer">官方文件中教的方法</a>來定義不同語系的資源文件，並根據語言設定，在使用者螢幕上顯示出對應的語言。在此之前，我們可以在 onCreate 中加入下面的程式片段，來測試不同語系的介面：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"> Resources res = getResources();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> Configuration conf = res.getConfiguration();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> conf.locale = Locale.TRADITIONAL_CHINESE;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> DisplayMetrics dm = res.getDisplayMetrics();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> res.updateConfiguration(conf, dm);</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>這段程式碼還可以搭配 Preference 設定，讓使用者在程式中自己選擇想要的語系。</p><p>update: 要針對不同語系做處理時，可以直接判斷</p><blockquote><p>if (conf.locale == Locale.TRADITIONAL_CHINESE)</p></blockquote>]]></content>
        <category label="Android" term="Android"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[CupCake screencast in Emulator]]></title>
        <id>https://blog.gasolin.idv.tw/android/CupCake-screencast-in-Emulator</id>
        <link href="https://blog.gasolin.idv.tw/android/CupCake-screencast-in-Emulator"/>
        <updated>2009-01-29T16:30:14.000Z</updated>
        <summary type="html"><![CDATA[CupCake (Android 1.5) screencast in Emulator]]></summary>
        <content type="html"><![CDATA[<object width="425" height="344"><param name="movie" value="http://www.youtube.com/v/hfsvXJUVlY0&amp;color1=0xb1b1b1&amp;color2=0xcfcfcf&amp;feature=player_embedded&amp;fs=1"><param name="allowFullScreen" value="true"><embed src="http://www.youtube.com/v/hfsvXJUVlY0&amp;color1=0xb1b1b1&amp;color2=0xcfcfcf&amp;feature=player_embedded&amp;fs=1" type="application/x-shockwave-flash" allowfullscreen="true" width="425" height="344"></object><p>CupCake (Android 1.5) screencast in Emulator</p><p><a href="http://nullwire.com/try_out_cupcake_yourself" target="_blank" rel="noopener noreferrer">這裡</a>可以抓到 Android 1.5 的 Emulator。</p>]]></content>
        <category label="Android" term="Android"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Jythonroid works on Dev Phone!]]></title>
        <id>https://blog.gasolin.idv.tw/python/Jythonroid-works-on-Dev-Phone</id>
        <link href="https://blog.gasolin.idv.tw/python/Jythonroid-works-on-Dev-Phone"/>
        <updated>2009-01-18T15:50:20.000Z</updated>
        <summary type="html"><![CDATA[Just got my Dev Phone 1 and tried to run Jythonroid on it.]]></summary>
        <content type="html"><![CDATA[<p></p><p>Just got my Dev Phone 1 and tried to run <a href="http://inet6.blogspot.com/2008/11/jythonroid-jython-runs-successfully-on.html" target="_blank" rel="noopener noreferrer">Jythonroid</a> on it.</p><p>The procedure is</p><p>1<!-- -->.<!-- --> download sourcecode</p><p>$ svn co -r 51 <a href="http://jythonroid.googlecode.com/svn/branches/Jythonroid" target="_blank" rel="noopener noreferrer">http://jythonroid.googlecode.com/svn/branches/Jythonroid</a></p><p>2<!-- -->.<!-- --> import project into eclipse</p><p>3<!-- -->.<!-- --> connect Dev Phone and computer with USB</p><p>4<!-- -->.<!-- --> setup eclipse debug setting to run jythonroid in real Dev Phone</p><p>Now I got jythonroid installed in Dev Phone. Here's how to play with jythonroid:</p><p>1<!-- -->.<!-- --> Install Terminal Emulator to use the shell</p><p>2<!-- -->.<!-- --> just follow the screenshot to say 'Hello Android!' :)</p><p></p><p>in java we import Toast widget with</p><blockquote><p>import android.widget.Toast;In jython(roid), just type in interpreter:</p><blockquote><blockquote><blockquote><p>from android.widget import ToastPython rocks!</p></blockquote></blockquote></blockquote></blockquote>]]></content>
        <category label="python" term="python"/>
        <category label="Android" term="Android"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Android 應用程式排行]]></title>
        <id>https://blog.gasolin.idv.tw/android/Android-apprank</id>
        <link href="https://blog.gasolin.idv.tw/android/Android-apprank"/>
        <updated>2009-01-12T16:10:33.000Z</updated>
        <summary type="html"><![CDATA[Android Market  本身尚未提供網頁版本，只能透過實機來查看應用程式的下載與評論狀況。這對於還沒有拿到實機的開發者來說相當不方便。]]></summary>
        <content type="html"><![CDATA[<p><a href="http://www.android.com/market/" target="_blank" rel="noopener noreferrer">Android Market </a> 本身尚未提供網頁版本，只能透過實機來查看應用程式的下載與評論狀況。這對於還沒有拿到實機的開發者來說相當不方便。</p><p>還好現在網路上已經出現了一些解決方法：</p><p><a href="http://www.cyrket.com/" target="_blank" rel="noopener noreferrer">cyrket</a> 提供了 Android Market 的網頁介面版本。可以透過 <a href="http://www.cyrket.com/" target="_blank" rel="noopener noreferrer">cyrket</a>  來查看最近的使用者評論。</p><p>要得知最熱門應用程式，可以參考 <a href="http://atrackdog.a0soft.com/" target="_blank" rel="noopener noreferrer">aTrackDog</a> 網站提供的排行榜。</p><p>想看各個應用程式的下載總數排行，則可以參考 <a href="http://androidstats.com/ranking/applications" target="_blank" rel="noopener noreferrer">Android Market Place Rankings</a> （均不提供詳細下載數目）。</p><p>PS：下載數可以從側面顯示應用程式的普及率。但是應用程式的排行最理想的參考數值，則應該是使用者下載之後仍然保留在機器中繼續使用的數目（即 Active Install 數目）。</p>]]></content>
        <category label="Android" term="Android"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[緊湊]]></title>
        <id>https://blog.gasolin.idv.tw/digest/compact</id>
        <link href="https://blog.gasolin.idv.tw/digest/compact"/>
        <updated>2008-12-30T03:53:19.000Z</updated>
        <summary type="html"><![CDATA[Keep in mind the screen size of 480 x 320 pixels and use that as a motivation to focus the user interface on the essentials. You don't have the room to include design elements that aren't absolutely necessary, and]]></summary>
        <content type="html"><![CDATA[<blockquote><p>Keep in mind the screen size of 480 x 320 pixels and use that as a motivation to focus the user interface on the essentials. You don't have the room to include design elements that aren't absolutely necessary, and
crowding user interface elements makes your application unattractive and difficult to use.
螢幕就只有 480x320 這麼點大，促使我們必須盡量合理地利用每吋的空間。
在設計時我們不該在螢幕上放置不必要元素。
擁擠的螢幕配置讓我們的程式變得難用而不吸引人。
-- iphone Human Interface Guidelines</p></blockquote>]]></content>
        <category label="design" term="design"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[OMNET++ 4.0]]></title>
        <id>https://blog.gasolin.idv.tw/ipv6/OMNET-4-0</id>
        <link href="https://blog.gasolin.idv.tw/ipv6/OMNET-4-0"/>
        <updated>2008-12-25T04:16:33.000Z</updated>
        <summary type="html"><![CDATA[原來 OMNET++ 4.0 有 IDE 可用了呀，真是相當驚人。]]></summary>
        <content type="html"><![CDATA[<p>原來 OMNET++ 4.0 <a href="http://www.omnest.com/webdemo/ide/" target="_blank" rel="noopener noreferrer">有 IDE 可用了</a>呀，真是相當驚人。</p><p>另外，3.2 版也有 <a href="http://www.dlr.de/kn/en/desktopdefault.aspx/tabid-4979/8336_read-14161/" target="_blank" rel="noopener noreferrer">xMIPv6 Framework</a> 可以用了，可以根據 xMIPv6 修改，來支援 HMIPv6、SMIPv6、甚至是 NEMO 等衍生 protocol。
整個 Framework 是從 INET 修改而來，<a href="http://www.kn.e-technik.uni-dortmund.de/content/view/232/lang,de/" target="_blank" rel="noopener noreferrer">說明在這</a>。要是早幾年出來，我的論文就不必用麻煩的 NS-2 模擬啦。</p>]]></content>
        <category label="OMNET++" term="OMNET++"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[雲端運算]]></title>
        <id>https://blog.gasolin.idv.tw/service/雲端運算</id>
        <link href="https://blog.gasolin.idv.tw/service/雲端運算"/>
        <updated>2008-12-20T21:49:26.000Z</updated>
        <summary type="html"><![CDATA[幾年前學的 Grid Computing，現在換個名字重出江湖，拿出比較實質的內容了。]]></summary>
        <content type="html"><![CDATA[<p>幾年前學的 Grid Computing，現在換個名字重出江湖，拿出比較實質的內容了。</p><object width="425" height="344"><param name="movie" value="http://www.youtube.com/v/3NAP5rk9Nzs&amp;hl=zh_TW&amp;fs=1"><param name="allowFullScreen" value="true"><embed src="http://www.youtube.com/v/3NAP5rk9Nzs&amp;hl=zh_TW&amp;fs=1" type="application/x-shockwave-flash" allowfullscreen="true" width="425" height="344"></object><p></p><p>2008/12/21 Update: 講者 Ping 說 Grid Computing 跟 Cloud Computing 並不是同個換湯不換藥的東西。</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[aTrackDog: 來養隻幫你追蹤軟體更新的狗吧]]></title>
        <id>https://blog.gasolin.idv.tw/tools/App-aTrackDog</id>
        <link href="https://blog.gasolin.idv.tw/tools/App-aTrackDog"/>
        <updated>2008-12-19T03:18:32.000Z</updated>
        <summary type="html"><![CDATA[From aTrackDog]]></summary>
        <content type="html"><![CDATA[<p></p><p>From <a href="http://picasaweb.google.com/gasolin/ATrackDog?feat=embedwebsite" target="_blank" rel="noopener noreferrer">aTrackDog</a></p><p>第一次跑去<a href="http://bbs.cool3c.com/article/1795" target="_blank" rel="noopener noreferrer">癮科科</a>發文，介紹我跟 <a href="http://ysl-paradise.blogspot.com" target="_blank" rel="noopener noreferrer">Sam Lu</a> 合作寫的追蹤 Android 軟體更新程式：aTrackDog。</p><p>這個程式的前身是 Palm 版的 TrackDog。不同之處在於 aTrackDog （Android）可以直接通過網路更新，而 TrackDog （Palm）更多是透過桌面 Sync 來更新，這也是明顯時代在進步之處呀......。</p><p>連結：<a href="http://bbs.cool3c.com/article/1795" target="_blank" rel="noopener noreferrer">http://bbs.cool3c.com/article/1795</a></p>]]></content>
        <category label="Android" term="Android"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Demo 導向開發（Demo Driven Development）]]></title>
        <id>https://blog.gasolin.idv.tw/code/Demo-Driven-Development</id>
        <link href="https://blog.gasolin.idv.tw/code/Demo-Driven-Development"/>
        <updated>2008-12-08T14:47:43.000Z</updated>
        <summary type="html"><![CDATA[DEMOS ARE GOOD]]></summary>
        <content type="html"><![CDATA[<blockquote><p>DEMOS ARE GOOD</p></blockquote><embed src="http://blip.tv/play/Ad3zMYr8fA" type="application/x-shockwave-flash" width="480" height="320" allowscriptaccess="always" allowfullscreen="true"><p>Kevin Danger 做了一個關於如何發展社群（Growing Your Community）的演講，裡面提到了為了增加專案的可用性，可以運用「Embarrassment Driven Development」（丟臉導向開發）的觀念。亦即為了在上台時講到自己的東西不至於丟臉，會想辦法為台下聽講者加上一些感覺很好用的功能。例如用 quickstart 命令建立一個專案框架，在專案中打幾個指令就可以直接啟動 Web server 等等。</p><p>我覺得不妨把這個方法叫做「Demo 導向開發」（Demo Driven Development, 簡寫為 DDD? 3D?），感覺更為貼切。</p><ul><li>其一，是多在可以 Demo 的場合發佈自己的專案，這樣可以增加群眾與開發者們接觸這個專案的機會（沒錯.... 有了魔獸 / 異塵餘生 3 誰還天天在改自己的 Open Source 專案？當然是要有事件驅動呀！）。</li><li>其二，是為了在 Live Demo 中少出錯，在準備 Demo 時的壓力會激發許多靈感。</li><li>其三，是與聽眾互動的結果，也可以反過來促進專案的進步。</li></ul>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[保持簡單]]></title>
        <id>https://blog.gasolin.idv.tw/code/keep-simple</id>
        <link href="https://blog.gasolin.idv.tw/code/keep-simple"/>
        <updated>2008-12-05T07:41:43.000Z</updated>
        <summary type="html"><![CDATA[進行優化必須付出增加空間或計算時間之開銷的代價。 Python 開發人員發現，有些地方長期來看，進行簡單的實做會比「乍看之下更吸引人的額外優化」更好。簡言之，讓事物保持簡單，通常會有所收穫]]></summary>
        <content type="html"><![CDATA[<blockquote><p>進行優化必須付出增加空間或計算時間之開銷的代價。 Python 開發人員發現，有些地方長期來看，進行簡單的實做會比「乍看之下更吸引人的額外優化」更好。簡言之，讓事物保持簡單，通常會有所收穫
-- 美麗程式：Python 的辭典</p></blockquote>]]></content>
        <category label="python" term="python"/>
        <category label="digest" term="digest"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[As time goes by]]></title>
        <id>https://blog.gasolin.idv.tw/digest/As-time-goes-by</id>
        <link href="https://blog.gasolin.idv.tw/digest/As-time-goes-by"/>
        <updated>2008-12-04T01:53:44.000Z</updated>
        <summary type="html"><![CDATA[I have always wished that my computer would be as easy to use as my telephone.]]></summary>
        <content type="html"><![CDATA[<blockquote><p>I have always wished that my computer would be as easy to use as my telephone.
My wish has come true.
I no longer know how to use my telephone.</p></blockquote>]]></content>
        <category label="digest" term="digest"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Android 上的 3DMark]]></title>
        <id>https://blog.gasolin.idv.tw/android/Android-3DMark</id>
        <link href="https://blog.gasolin.idv.tw/android/Android-3DMark"/>
        <updated>2008-12-03T14:57:04.000Z</updated>
        <summary type="html"><![CDATA[Qualcomm 做的名為「Neocore」的 3D Mark 程式，用來推他們公司的圖型晶片。原來 G1 的 3D 能力也很驚人呀。]]></summary>
        <content type="html"><![CDATA[<object width="425" height="344"><param name="movie" value="http://www.youtube.com/v/RqKCam7wgws&amp;color1=0xb1b1b1&amp;color2=0xcfcfcf&amp;feature=player_embedded&amp;fs=1"><param name="allowFullScreen" value="true"><embed src="http://www.youtube.com/v/RqKCam7wgws&amp;color1=0xb1b1b1&amp;color2=0xcfcfcf&amp;feature=player_embedded&amp;fs=1" type="application/x-shockwave-flash" allowfullscreen="true" width="425" height="344"></object><p>Qualcomm 做的名為「Neocore」的 3D Mark 程式，用來推他們公司的圖型晶片。原來 G1 的 3D 能力也很驚人呀。</p>]]></content>
        <category label="Android" term="Android"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[不含 Google 服務的 Android 山寨機]]></title>
        <id>https://blog.gasolin.idv.tw/android/no-Google-service-Android</id>
        <link href="https://blog.gasolin.idv.tw/android/no-Google-service-Android"/>
        <updated>2008-11-28T01:53:51.000Z</updated>
        <summary type="html"><![CDATA[(圖片來自該網站)]]></summary>
        <content type="html"><![CDATA[<p><a href="http://img1.cache.netease.com/mobile/2008/11/27/qiji_07.jpg" target="_blank" rel="noopener noreferrer"><img loading="lazy" src="http://img1.cache.netease.com/mobile/2008/11/27/qiji_07.jpg" class="img_ev3q"></a>
(圖片來自該網站)</p><p></p><p>在 Android 平台公布原始碼後，對岸的手機廠短時間內就將介面自行簡體中文化，並加入簡單的中文輸入法功能（非官方），組合出一套可以販賣的產品。</p><p>Android 平台是完全免費的（對山寨機廠來說，WM 好像也是完全免費的 冏）。由於暫時還沒有 Google 授權，所以這台機器上沒有 Android Market、GMail 這些 Google 自有的應用程式。</p>]]></content>
        <category label="Android" term="Android"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Android SQLite]]></title>
        <id>https://blog.gasolin.idv.tw/android/Android-SQLite</id>
        <link href="https://blog.gasolin.idv.tw/android/Android-SQLite"/>
        <updated>2008-11-21T01:22:53.000Z</updated>
        <summary type="html"><![CDATA[在寫 SQLite 與實做 CRUD 介面教學的初稿。為了講清楚整個觀念竟然花了 5 章，還不包含講 ContentProvider，估計 ContentProvider 也要再加 2、3 章才夠 XD]]></summary>
        <content type="html"><![CDATA[<p>在寫 SQLite 與實做 CRUD 介面教學的初稿。為了講清楚整個觀念<a href="http://code.google.com/p/androidbmi/wiki/AfterWard" target="_blank" rel="noopener noreferrer">竟然花了 5 章</a>，還不包含講 ContentProvider，估計 ContentProvider 也要再加 2、3 章才夠 XD </p><p>一個 NotePad 背後需要好多技術，為什麼其他人寫教學可以把 SQL+CRUD+Content Provider 合在一起一篇講完呀？Android 初學者每個都這麼強大嗎？Orz</p><p>還是大家都太著急，希望有捷徑可走？</p><p>要不是我這個人太笨，Java 技巧太虛了，就是其他教的人都太聰明吧。</p>]]></content>
        <category label="Android" term="Android"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Flash demo on Android]]></title>
        <id>https://blog.gasolin.idv.tw/android/Flash-demo-on-Android</id>
        <link href="https://blog.gasolin.idv.tw/android/Flash-demo-on-Android"/>
        <updated>2008-11-19T01:40:53.000Z</updated>
        <summary type="html"><![CDATA[以後網頁上的 Flash 廣告或以 Flash 開發的遊戲也可以在 Android 上執行了。]]></summary>
        <content type="html"><![CDATA[<p>以後網頁上的 Flash 廣告或以 Flash 開發的遊戲也可以在 Android 上執行了。</p><object width="425" height="344"><param name="movie" value="http://www.youtube.com/v/ghIGj9r3_vc&amp;hl=zh_TW&amp;fs=1"><param name="allowFullScreen" value="true"><param name="allowscriptaccess" value="always"><embed src="http://www.youtube.com/v/ghIGj9r3_vc&amp;hl=zh_TW&amp;fs=1" type="application/x-shockwave-flash" allowscriptaccess="always" allowfullscreen="true" width="425" height="344"></object>]]></content>
        <category label="Android" term="Android"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Jythonroid: Jython runs successfully on Android Emulator]]></title>
        <id>https://blog.gasolin.idv.tw/python/Jythonroid-Jython-runs-successfully-on-Android-Emulator</id>
        <link href="https://blog.gasolin.idv.tw/python/Jythonroid-Jython-runs-successfully-on-Android-Emulator"/>
        <updated>2008-11-17T06:10:45.000Z</updated>
        <summary type="html"><![CDATA[What is jythonroid]]></summary>
        <content type="html"><![CDATA[<p>What is jythonroid</p><p>Jythonroid is a project for porting jython on Android platform. Created by ClassFoo.</p><p>Jythonroid is for console-only at this time. It means oneday Android has console/terminal app in device, you could use jython on real android phone. (or please point me if there's an exist console/terminal app for Android)</p><p>Jythondroid was worked on m5-build but outdated when 1.0 SDK comes out. Now Jythonroid (branch) works on 1.0 SDK <!-- -->&amp;<!-- --> Android Emulator again. Since there's no GUI yet, you could checked out the code, run the emulator(install in emulator), and use adb shell on PC to try jythonroid.</p><p>Project Url</p><p></p><p>Howto </p><p>1<!-- -->.<!-- --> check out the source</p><p>use svn to check out the project source</p><blockquote><p>$ svn co <a href="http://jythonroid.googlecode.com/svn/branches/Jythonroid" target="_blank" rel="noopener noreferrer">http://jythonroid.googlecode.com/svn/branches/Jythonroid</a> jythonroid</p></blockquote><p>2<!-- -->.<!-- --> import project</p><p>In Eclipse, select "File &gt; Import &gt; Existing Projects into Workspace" in tool bar to import jythonroid project into your workspace.</p><p>3<!-- -->.<!-- --> setup emulator and run</p><p>setup debug settings and press "Debug/Run" button to install jythonroid into Emulator.</p><p>4<!-- -->.<!-- --> Run with adb shell</p><p>WARN: Since jythonroid is in its early phase, at this time it could only be evaluated on dalvik vm/emulator.</p><p>open adb shell, enter data/app folder, and run jythonroid</p><blockquote><p>$ adb shell</p><h1>cd data/app</h1><h1>dalvikvm -classpath org.classfoo.apk org.python.util.jython</h1><p>Here's the screenshot:</p></blockquote><p></p>]]></content>
        <category label="python" term="python"/>
        <category label="Android" term="Android"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[移動網路的進展]]></title>
        <id>https://blog.gasolin.idv.tw/ipv6/移動網路的進展</id>
        <link href="https://blog.gasolin.idv.tw/ipv6/移動網路的進展"/>
        <updated>2008-11-17T01:16:09.000Z</updated>
        <summary type="html"><![CDATA[畢業以後用了許多時間玩了各種技術，發現還是無法忘懷小丑魚 (NEMO，Network Mobility)。]]></summary>
        <content type="html"><![CDATA[<p>畢業以後用了許多時間玩了各種技術，發現還是無法忘懷小丑魚 (NEMO，Network Mobility)。
我的熱情可能還是在網路移動技術上吧。</p><p>花了些時間察看 <a href="http://www.nautilus6.org/doc/nepl-howto/" target="_blank" rel="noopener noreferrer">NEPL (NEMO Platform for Linux) HOWTO</a> 以了解最近 Mobile IPv6 的更新情況，發現現在 MIPv6 for Linux (MIPL) 專案似乎已經被 <a href="http://www.linux-ipv6.org/" target="_blank" rel="noopener noreferrer">USAGI</a> 接管了。新的專案名稱叫 <a href="http://umip.linux-ipv6.org/" target="_blank" rel="noopener noreferrer">UMIP</a>，並直接包含 NEMO 的功能。</p><p>(以後待續...)</p>]]></content>
        <category label="IPv6" term="IPv6"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[試玩 Sphinx 之 2]]></title>
        <id>https://blog.gasolin.idv.tw/python/Sphinx-2</id>
        <link href="https://blog.gasolin.idv.tw/python/Sphinx-2"/>
        <updated>2008-11-14T03:37:08.000Z</updated>
        <summary type="html"><![CDATA[之前提到過 Python 2.6 新採用了一套叫做 Sphinx 的 rst 文件生成系統來管理 Python 語言官方的文件資料，用 sphinx 所生成的文件網站除了頁面能自訂樣式，自訂文件導覽順序，甚至還有附有搜尋功能。]]></summary>
        <content type="html"><![CDATA[<p>之前提到過 <a href="http://www.python.org" target="_blank" rel="noopener noreferrer">Python</a> 2.6 新採用了一套叫做 <a href="http://sphinx.pocoo.org/" target="_blank" rel="noopener noreferrer">Sphinx</a> 的 rst 文件生成系統來管理 Python 語言官方的文件資料，用 sphinx 所生成的文件網站除了頁面能自訂樣式，自訂文件導覽順序，甚至還有附有搜尋功能。</p><p>已經寫過一篇 <a href="http://inet6.blogspot.com/2007/11/sphinx.html" target="_blank" rel="noopener noreferrer">試玩 Sphinx</a>。</p><p>而現在值得再提的是，<a href="http://sphinx.pocoo.org/" target="_blank" rel="noopener noreferrer">Sphinx</a> 專案已經獨立出來了，可以將 sphinx 應用在任何需要文件網站的情況裡。</p><p>1<!-- -->.<!-- --> 安裝</p><blockquote><p>easy_install sphinx</p></blockquote><p>2<!-- -->.<!-- --> 打開命令列，找個目錄，鍵入</p><blockquote><p>sphinx-quickstart</p></blockquote><p>照著互動提示輸入一些生成訊息後， sphinx 會在目錄中生成幾個簡單的檔案。</p><p>目錄中生成幾個簡單的檔案其內容為：</p><ul><li>conf.py</li></ul><p>conf.py 中的內容大部分是我們剛剛在互動提示中填入的資訊，在此都可以修改。</p><p>0.5 版之後支援中文介面 (我丟的 Patch)，只要在 conf.py 中指定「language = 'zh_TW'」即可。</p><ul><li>MAKEFILE</li></ul><p>給 linux 或 mac 用的 make 檔。</p><ul><li>index.rst</li></ul><p>index.rst 等於是整個文件站台的主頁</p><ul><li>.template</li></ul><p>文件站台的樣板，要自訂樣板就修改這。</p><ul><li>.static</li></ul><p>靜態文件，如圖片等內容。</p><ul><li>.build</li></ul><p>建立 (編譯) 好的文件在此。</p><p>.template/.static/.build 這樣的檔案在 windows 下不易辨識，可以在互動提示中詢問 "Name prefix for templates and static dir <!-- -->[.]<!-- -->:" 時，將 '.' 改成 '_'。 那麼生成的資料夾就會變成 _template/_static/_build。</p><p>3<!-- -->.<!-- --> 建立文件</p><p>sphinx 會在目錄中生成 make 檔，輸入</p><blockquote><p>make html</p></blockquote><p>即能產生完整的 html 文件站台。</p><p>如此一來，整個完整的站台都能用 rst 格式來構成啦，實在便利。</p><p>沒有寫過 rst (結構化) 文件的人，也可以參考 <a href="http://sphinx.pocoo.org/rest.html" target="_blank" rel="noopener noreferrer">reStructuredText Primer</a>。</p><p>PS: 順帶一提， Pylons 與 TurboGears2 都已經有 sphinx 支持了。 TurboGears2 的部份 (這個是我加進去的) 可以用原始碼 docs 目錄中的 get_tgdoc.py 從 docs.turbogears.org 自動下載 rst 格式文件，然後再用上面提到的 'make html' 轉成 html 文件檔。</p>]]></content>
        <category label="python" term="python"/>
        <category label="rst" term="rst"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Android Maps]]></title>
        <id>https://blog.gasolin.idv.tw/android/Android-Maps</id>
        <link href="https://blog.gasolin.idv.tw/android/Android-Maps"/>
        <updated>2008-11-04T06:01:56.000Z</updated>
        <summary type="html"><![CDATA[在學 Android 1.0 版的地圖應用方面碰到很多麻煩。]]></summary>
        <content type="html"><![CDATA[<object width="425" height="344"><param name="movie" value="http://www.youtube.com/v/_YFw9p0TjT8&amp;color1=0xb1b1b1&amp;color2=0xcfcfcf&amp;hl=en&amp;fs=1"><param name="allowFullScreen" value="true"><embed src="http://www.youtube.com/v/_YFw9p0TjT8&amp;color1=0xb1b1b1&amp;color2=0xcfcfcf&amp;hl=en&amp;fs=1" type="application/x-shockwave-flash" allowfullscreen="true" width="425" height="344"></object><p>在學 Android 1.0 版的地圖應用方面碰到很多麻煩。</p><p>其一是 Android 1.0 版的地圖功能，在開發中就需要由金鑰申請 Map Key。
其二是各種版本 (M3、M5、0.9、1.0) 下來幾乎很難確認哪本書、哪段 Tutorial 到現在還是正確的。</p><p>SQLite 資料庫應用亦是有相同問題。</p><p>雖然遇到很多挫折，但看看 Android Map 的實際功能影片，會覺得不管怎樣，還是該學會這麼強悍的東西呀 :D</p><p>Update: 地圖部分已經搞定了。草稿也寫了些。接著來搞定 SQLite 資料庫吧 :D</p>]]></content>
        <category label="Android" term="Android"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Android Market 上架第一天成果]]></title>
        <id>https://blog.gasolin.idv.tw/android/Android-Market-first-day</id>
        <link href="https://blog.gasolin.idv.tw/android/Android-Market-first-day"/>
        <updated>2008-11-01T16:39:58.000Z</updated>
        <summary type="html"><![CDATA[在「Android Market」開放給開發者上傳應用程式的第一天（美國時間10/27），我就將「深入淺出 Android -- Google 手持設備應用程式設計」電子書中的兩個範例程式「aBMI」(英制)（還沒釋出的範例）、「gBMI」(公制)（基礎、中階的範例）「身高體重指數計算」程式上傳到「Android Market」上。考慮到當時使用者(美國)主要集中在使用英制的國家，因此我預期「aBMI」應用程式會得到比較好的評價。]]></summary>
        <content type="html"><![CDATA[<p></p><p>在「Android Market」開放給開發者上傳應用程式的第一天（美國時間 10/27），我就將「<a href="http://code.google.com/p/androidbmi/wiki/DiveIntoAndroid" target="_blank" rel="noopener noreferrer">深入淺出 Android -- Google 手持設備應用程式設計</a>」電子書中的兩個範例程式「aBMI」(英制)（還沒釋出的範例）、「gBMI」(公制)（基礎、中階的範例）「身高體重指數計算」程式上傳到「Android Market」上。考慮到當時使用者 (美國) 主要集中在使用英制的國家，因此我預期「aBMI」應用程式會得到比較好的評價。</p><p>果然，在第一天結束之後，截圖如下</p><p></p><p>「aBMI」(英制) 得到 732 次下載，目前「active installs」(仍安裝在機器上) 的人數為 452 人（比率 61%）。共有 25 個人平均給予 3 顆星的評價。就一個運作相當簡單的應用程式而言，比起其他書籍範例的完成度，3 顆星的評價還是算相當可接受的。至於「gBMI」(公制) 則因為不是針對目標使用者設計，得到 602 次下載，「active installs」的人數為 193 人 (比率 32%)。只有 11 個人平均給 2 顆星的評價。因此可以明顯看到，「gBMI」不論是下載的人數、安裝後繼續使用的比率，或是整體評價都要比「aBMI」差一個檔次。當 Android 手機在使用「公制」的國家開賣後，相信比例或評價會再次變化。</p><p>在設計兩個應用程式時，同樣需花上差不多的時間，但是卻得到有相當明顯差別的結果。由此可以看出，手機應用程式需針對使用者的特性來設計的重要性。</p>]]></content>
        <category label="Android" term="Android"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Q1 2009，繁體中文版 Android 手機?]]></title>
        <id>https://blog.gasolin.idv.tw/android/Q1-2009-tw-Android</id>
        <link href="https://blog.gasolin.idv.tw/android/Q1-2009-tw-Android"/>
        <updated>2008-10-24T03:02:18.000Z</updated>
        <summary type="html"><![CDATA[前幾天 Android 平台 開放了原始碼，同時也提供了 RoadMap。裡面有很值得玩味的訊息。]]></summary>
        <content type="html"><![CDATA[<p></p><p>前幾天 Android 平台 <a href="http://source.android.com/" target="_blank" rel="noopener noreferrer">開放了原始碼</a>，同時也提供了 <a href="http://source.android.com/roadmap" target="_blank" rel="noopener noreferrer">RoadMap</a>。裡面有很值得玩味的訊息。</p><p>在 Q1 2009，Android 平台將會加入以下支援：</p><p>1<!-- -->.<!-- --> Localization</p><p>French, Italian, es_es, zh_TW, Ja, NL, CZ</p><p>2<!-- -->.<!-- --> IMF <!-- -->&amp;<!-- --> IME (輸入法框架、虛擬鍵盤)</p><p>如果照著 Android 系統之前隨機子釋出的慣例來看，2009 Q1 很可能會有繁體中文版的 Android 手機喔。</p>]]></content>
        <category label="Android" term="Android"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[開放]]></title>
        <id>https://blog.gasolin.idv.tw/digest/open</id>
        <link href="https://blog.gasolin.idv.tw/digest/open"/>
        <updated>2008-10-11T05:00:21.000Z</updated>
        <summary type="html"><![CDATA[不管是專屬軟體還是開放源碼軟體，除錯絕對不會是免費的。即使沒有實際付錢，還是有機會成本和時間成本。投入開放源碼計畫的志願性程式人力是有限的，所有開放源碼計畫都在爭取同一群有限的程式設計資源，只有最具吸引力的計畫才能擁有超過需要的志願開發者。]]></summary>
        <content type="html"><![CDATA[<blockquote><p>不管是專屬軟體還是開放源碼軟體，除錯絕對不會是免費的。即使沒有實際付錢，還是有機會成本和時間成本。投入開放源碼計畫的志願性程式人力是有限的，所有開放源碼計畫都在爭取同一群有限的程式設計資源，只有最具吸引力的計畫才能擁有超過需要的志願開發者。
-- <a href="http://local.joelonsoftware.com/mediawiki/index.php/The_Joel_on_Software_Translation_Project:%E7%AD%96%E7%95%A5%E6%9B%B8%E4%B9%8B%E4%BA%94" target="_blank" rel="noopener noreferrer">Joel on Software</a></p></blockquote>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[機油 (GAEO) 0.2 alpha 版發佈]]></title>
        <id>https://blog.gasolin.idv.tw/service/機油-GAEO-0-2-alpha-版發佈</id>
        <link href="https://blog.gasolin.idv.tw/service/機油-GAEO-0-2-alpha-版發佈"/>
        <updated>2008-10-10T01:10:57.000Z</updated>
        <summary type="html"><![CDATA[開發過 Google App Engine 網頁應用程式的 Python 開發者，可能都有種被縛手縛腳的感覺。因為現成 Python 的網頁框架在 Google App Engine 上，有些地方因為 Google App Engine  的限制而無法作用，因此用起來不是很順手。]]></summary>
        <content type="html"><![CDATA[<p></p><p>開發過 Google App Engine 網頁應用程式的 Python 開發者，可能都有種被縛手縛腳的感覺。因為現成 Python 的網頁框架在 Google App Engine 上，有些地方因為 Google App Engine  的限制而無法作用，因此用起來不是很順手。</p><p><a href="http://code.google.com/p/google-app-engine-oil/" target="_blank" rel="noopener noreferrer">GAEO (Google App Engine Oil)</a> 是個專門作用在 Google App Engine 上的框架，免去 Google App Engine 一切得自己手動建造的麻煩。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="安裝">安裝<a href="#安裝" class="hash-link" aria-label="Direct link to 安裝" title="Direct link to 安裝">​</a></h2><p>使用</p><blockquote><p>easy_install gaeo
命令就可以安裝好。</p></blockquote><p>安裝完提供 gaeo 跟 gaeogen 兩個命令。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="建立新專案">建立新專案<a href="#建立新專案" class="hash-link" aria-label="Direct link to 建立新專案" title="Direct link to 建立新專案">​</a></h2><p>使用</p><blockquote><p>gaeo &lt;專案名稱&gt;
來建立一個新專案，新專案中除了基本 Google App Engine 的設定檔案外，還複製了一個 gaeo 檔案夾，提供  gaeo 相關的函式庫。</p></blockquote><p>建立後進入專案，啟動 Google App Engine 開發工具的 server 就可以看到運行的網站。</p><p>還可以改使用</p><blockquote><p>gaeo --eclipse &lt;專案名稱&gt;
來順便建立 pydev+eclipse 開發環境用的專案資訊。</p></blockquote><h2 class="anchor anchorWithStickyNavbar_LWe7" id="程式碼組織方式">程式碼組織方式<a href="#程式碼組織方式" class="hash-link" aria-label="Direct link to 程式碼組織方式" title="Direct link to 程式碼組織方式">​</a></h2><p>GAEO 組織程式碼的方式一樣是網頁框架常見的 Controller/Model/Templates 組織方式。剛建立的資料夾主要內容如下：</p><blockquote><p>main.py
application/controllers/welcome.py
application/template/welcome/index.html</p></blockquote><p>main.py 中可以透過 initRoutes () 函式來修改 url 對應的類別 (class)。
template 中的 welcome 資料夾則是直接對應到  controllers 中的 welcome.py。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="新增函式">新增函式<a href="#新增函式" class="hash-link" aria-label="Direct link to 新增函式" title="Direct link to 新增函式">​</a></h2><p>要新增一個 url 處理函式，可以用</p><blockquote><p>gaeogen controller blog view post
命令，會在 application/controllers 中建立 blog.py 檔案，裡面有一個 'blog' class，class 中包含 'view' 和 'post' 兩個 method。另外 application/template 中也會建立一個 blog 資料夾，裡面包含 view.html 和 post.html 兩個 Django template 檔案。</p></blockquote><h2 class="anchor anchorWithStickyNavbar_LWe7" id="技術">技術<a href="#技術" class="hash-link" aria-label="Direct link to 技術" title="Direct link to 技術">​</a></h2><p>技術上 gaeo 樣板使用 django template，而整個 routing 是採用「一頁樣板 (template) 對應一個方法 (method) 」的組織方式，可以用類似 route 的方式添加新方法。0.2 版除了提供 scaffold (鷹架) 之外，也提供 plugin 系統，整個很有 Ruby on Rail 的感覺。</p><p>照著<a href="http://doc.gaeo.org/" target="_blank" rel="noopener noreferrer">官方文件</a>說明做一遍，一個多小時內就可以上手開發 Google App Engine 上的網頁應用程式啦。</p>]]></content>
        <category label="GAEO" term="GAEO"/>
        <category label="GAE" term="GAE"/>
        <category label="python" term="python"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[建立自己的程式碼群圖]]></title>
        <id>https://blog.gasolin.idv.tw/devtools/build-program-graph</id>
        <link href="https://blog.gasolin.idv.tw/devtools/build-program-graph"/>
        <updated>2008-09-28T15:55:49.000Z</updated>
        <summary type="html"><![CDATA[看了 Creating your own code swarm 這篇文章，照著弄了一套程式碼群圖(Code Swarm) ，真的很簡單有趣。]]></summary>
        <content type="html"><![CDATA[<p></p><p>看了 <a href="http://amix.dk/blog/viewEntry/19350" target="_blank" rel="noopener noreferrer">Creating your own code swarm</a> 這篇文章，照著弄了一套程式碼群圖 (Code Swarm) ，真的很簡單有趣。</p><p>程式碼群圖是指從 svn, git, hg 上取得更新 log，由 CodeSwarm 程式分析，產生出以時間為單位的一張張截圖。</p><p>上圖是周蟒的程式碼群圖。</p>]]></content>
        <category label="python" term="python"/>
        <category label="fun" term="fun"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[手指操作介面的更新: Android Todo List Demo]]></title>
        <id>https://blog.gasolin.idv.tw/android/gesture-ui-update-Android-Todo-List-Demo</id>
        <link href="https://blog.gasolin.idv.tw/android/gesture-ui-update-Android-Todo-List-Demo"/>
        <updated>2008-09-26T08:48:03.000Z</updated>
        <summary type="html"><![CDATA[在 PDA 簡報夾上寫了一則 能用手指劃掉項目的 Android 待辦事項應用程式]]></summary>
        <content type="html"><![CDATA[<p>在 <a href="http://pdanewsclip.blogspot.com/" target="_blank" rel="noopener noreferrer">PDA 簡報夾</a>上寫了一則 <a href="http://pdanewsclip.blogspot.com/2008/09/android.html" target="_blank" rel="noopener noreferrer">能用手指劃掉項目的 Android 待辦事項應用程式</a></p>]]></content>
        <category label="Android" term="Android"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[T-Mobile G1 和 Android SDK 1.0]]></title>
        <id>https://blog.gasolin.idv.tw/android/T-Mobile-G1-Android-SDK-1-0</id>
        <link href="https://blog.gasolin.idv.tw/android/T-Mobile-G1-Android-SDK-1-0"/>
        <updated>2008-09-25T15:31:51.000Z</updated>
        <summary type="html"><![CDATA[T-Mobile G1（第一台 Android 實機） 實際使用情況]]></summary>
        <content type="html"><![CDATA[<p>T-Mobile G1（第一台 Android 實機） 實際使用情況</p><object width="425" height="344"><param name="movie" value="http://www.youtube.com/v/NTMHJamk5BA&amp;hl=zh_TW&amp;fs=1"><param name="allowFullScreen" value="true"><embed src="http://www.youtube.com/v/NTMHJamk5BA&amp;hl=zh_TW&amp;fs=1" type="application/x-shockwave-flash" allowfullscreen="true" width="425" height="344"></object><p>Android SDK 1.0 也釋出了。與 0.9 相比修改不多，有趣的一點是 <a href="http://blogs.zdnet.com/Burnette/?p=662" target="_blank" rel="noopener noreferrer">Android 的瀏覽器 (Chrome Lite) 已經內建 Google Gear Plugin 了</a>。支援 Gears 的網頁程式可以在 Android 桌面上留下啟動圖示。</p><p></p><p>使用模擬器時，也可以下載 <a href="http://www.android.encke.net/" target="_blank" rel="noopener noreferrer">T-Mobile G1 的模擬器佈景</a></p><p></p>]]></content>
        <category label="Android" term="Android"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[plurk + jaiku 一起發簡訊]]></title>
        <id>https://blog.gasolin.idv.tw/tools/plurk-jaiku-message</id>
        <link href="https://blog.gasolin.idv.tw/tools/plurk-jaiku-message"/>
        <updated>2008-09-18T08:57:51.000Z</updated>
        <summary type="html"><![CDATA[下載 plurkapipy 跟 python-jaiku 後，再把下面的 python 檔案另存新檔。填入必需的帳號密碼或 apikey 後，就可以同時使用 plurk + jaiku 囉。下面是 console 版本：]]></summary>
        <content type="html"><![CDATA[<p>下載 <a href="http://code.google.com/p/plurkapipy/" target="_blank" rel="noopener noreferrer">plurkapipy</a> 跟 <a href="http://code.google.com/p/python-jaiku/" target="_blank" rel="noopener noreferrer">python-jaiku</a> 後，再把下面的 python 檔案另存新檔。填入必需的帳號密碼或 apikey 後，就可以同時使用 plurk + jaiku 囉。下面是 console 版本：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">&gt; #!/usr/bin/python</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; #coding=utf-8</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; import plurkapi #http://code.google.com/p/plurkapipy/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; import jaiku #http://code.google.com/p/python-jaiku/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; #plurk login infomation</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; pnickname = ""</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; ppassword = ""</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; #jaiku login infomation</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; jusername = ""</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; japikey = ""</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; message = raw_input("要送出的訊息：")</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; #jaiku</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; japi = jaiku.Api(username=jusername, api_key=japikey)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; print japi.PostPresence(message)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; # plurk</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; papi = plurkapi.PlurkAPI()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; if papi.login(pnickname, ppassword) == False:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;     print "login fail"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; else:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;     print papi.addPlurk(content=message, lang="tr_ch")</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>再搭配 App Engine 的話，很快就可以寫出一個網頁介面的發訊程式囉。</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Will Django Live in separate world?]]></title>
        <id>https://blog.gasolin.idv.tw/python/Will-Django-Live-in-separate-world</id>
        <link href="https://blog.gasolin.idv.tw/python/Will-Django-Live-in-separate-world"/>
        <updated>2008-09-17T08:46:52.000Z</updated>
        <summary type="html"><![CDATA[Mark Ramm 跑去 Djangocon 踢館的 Screencast XD]]></summary>
        <content type="html"><![CDATA[<p>Mark Ramm 跑去 Djangocon 踢館的 Screencast XD</p><object width="425" height="344"><param name="movie" value="http://www.youtube.com/v/fipFKyW2FA4&amp;hl=zh_TW&amp;fs=1"><param name="allowFullScreen" value="true"><embed src="http://www.youtube.com/v/fipFKyW2FA4&amp;hl=zh_TW&amp;fs=1" type="application/x-shockwave-flash" allowfullscreen="true" width="425" height="344"></object>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[「Yahoo!奇摩字典」Ubiquity Script]]></title>
        <id>https://blog.gasolin.idv.tw/code/Ubiquity-Script</id>
        <link href="https://blog.gasolin.idv.tw/code/Ubiquity-Script"/>
        <updated>2008-09-10T03:43:48.000Z</updated>
        <summary type="html"><![CDATA[把下面的 script copy 到 Ubiquity 的 command-editor 中。]]></summary>
        <content type="html"><![CDATA[<p>把下面的 script copy 到 <a href="http://labs.mozilla.com/2008/08/introducing-ubiquity/" target="_blank" rel="noopener noreferrer">Ubiquity</a> 的 command-editor 中。
每當看到不熟的生字，打開 <a href="http://labs.mozilla.com/2008/08/introducing-ubiquity/" target="_blank" rel="noopener noreferrer">Ubiquity</a>，輸入「fy」，按下「Enter」鍵，即可連結到「<a href="http://tw.dictionary.yahoo.com/" target="_blank" rel="noopener noreferrer">Yahoo! 奇摩字典</a>」看解釋。</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">&gt; CmdUtils.CreateCommand({</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; name: "fy",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; homepage: "zhpy.googlecode.com",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; author: { name: "Fred Lin", email: "gasolin+ubiquity@gmail.com"},</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; license: "MIT",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; description: "yahoo dict",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; help: "fy [keyword]",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; takes: {"keyword": noun_arb_text},</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; preview: function( pblock, directObject ) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; searchText = jQuery.trim(directObject.text)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; var previewTemplate = "輸入要搜尋的單字 ${query}";</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; var previewData     = {query: searchText};</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; pblock.innerHTML    = CmdUtils.renderTemplate(previewTemplate, previewData);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; execute: function( directObject ) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; var url = "http://tw.dictionary.yahoo.com/dictionary?s={QUERY}"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; var urlString = url.replace("{QUERY}", directObject.text);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; Utils.openUrlInBrowser(urlString);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; })</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content>
        <category label="Ubiquity" term="Ubiquity"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[我是 Python，10件所有人都想問我的事]]></title>
        <id>https://blog.gasolin.idv.tw/python/10-things-python</id>
        <link href="https://blog.gasolin.idv.tw/python/10-things-python"/>
        <updated>2008-08-12T01:17:47.000Z</updated>
        <summary type="html"><![CDATA[Guido 在 Jaiku 上提到一篇「Learning Python」文章，]]></summary>
        <content type="html"><![CDATA[<p>Guido 在 <a href="http://jaiku.com/channel/python/presence/42088545" target="_blank" rel="noopener noreferrer">Jaiku</a> 上提到一篇<a href="http://troutgirl.wordpress.com/2008/08/08/learning-python/" target="_blank" rel="noopener noreferrer">「Learning Python」文章</a>，</p><p>裡面提到，Python 社群的最大問題就是注意力實在太分散了。相比用 PHP 或 Ruby 語言的人，問他們「對在哪方面使用該語言開發感興趣？」這問題，你幾乎都會聽到「Web 開發」。而在 Python 社群裡隨意抽五個人，問他們對在哪方面使用 Python 語言開發感興趣，則很可能會得到不同的五個答案。</p><p>所以在該文最後也提出了兩個問題:</p><p>   1<!-- -->.<!-- --> 舉出 10 件所有人會想用 Python 語言寫而不用其他語言寫的事</p><p>   2<!-- -->.<!-- --> 舉出 10 個所有人都會想問的關於 Python 語言的問題。</p><p>經過<a href="http://groups.google.com/group/python-cn/browse_thread/thread/5658c99025660056/126340d98c052fa5?show_docid=126340d98c052fa5#" target="_blank" rel="noopener noreferrer">一些討論</a>後，在此舉出「 10 件關於 Python 語言所有人都想問的問題」：</p><p>1<!-- -->.<!-- --> 為什麼 Python 既是動態語言又是強型別的語言？
2<!-- -->.<!-- --> 用哪個 IDE 寫 Python 比較好？
3<!-- -->.<!-- --> 有什麼關於 Python 語言的好書？
4<!-- -->.<!-- --> 學 python 語言能找到工作嗎？
5<!-- -->.<!-- --> 為什麼用縮排而不是用括弧或「End」來分段？
6<!-- -->.<!-- --> 用哪種 GUI 好？
7<!-- -->.<!-- --> 為什麼 Python 比 xxx 語言慢？
8<!-- -->.<!-- --> 如何開始學習 Python 語言？有什麼好建議嗎？
9<!-- -->.<!-- --> 有什麼小巧的 Python source 或專案項目可以參考練手？
10<!-- -->.<!-- --> 怎麼在 Windows 上直接跑 Python 程式 (不先安裝 Python)?</p><p>8/12/2008 更新: Guido 採用了這 10 個問題，並<a href="http://wiki.python.org/moin/Ten_things_people_want_to_know_about_Python" target="_blank" rel="noopener noreferrer">在 python wiki 上開了專頁</a>。</p>]]></content>
        <category label="python" term="python"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[三分鐘教你/妳自製閃光卡]]></title>
        <id>https://blog.gasolin.idv.tw/code/3min-flashcard</id>
        <link href="https://blog.gasolin.idv.tw/code/3min-flashcard"/>
        <updated>2008-08-08T09:35:47.000Z</updated>
        <summary type="html"><![CDATA[你/妳是否是去死去死團的一員？在這個充滿閃光與柴可夫斯基1812序曲的節日，有種暫時失明的感覺？]]></summary>
        <content type="html"><![CDATA[<p></p><p>你 / 妳是否是去死去死團的一員？在這個充滿閃光與柴可夫斯基 1812 序曲的節日，有種暫時失明的感覺？</p><p>為了對抗這個節日，我們就來自製閃光卡吧！</p><p>這個閃光卡製作的方法，就是寫個單詞記憶程式，並把這個單詞記憶程式命名為 閃光卡 (FlashCard) (* 註) XD</p><p>寫一個簡單的記憶程式不用花太多時間：我們只需要一個詞庫，與一個用作檢視與複習詞條的介面。</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">&gt; #!/usr/bin/python</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; # -*- coding: utf-8 -*-</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; deck = [("a","apple"),</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;       ("b", "boy"),</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;       ("c", "cat"),</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;       ("d","dog")] #詞庫，包含4筆詞條</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; import random</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; help = "commands: Fail/Lucky/Quit" #支援的命令</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; while True:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; card = random.choice(deck) # 從詞庫裡挑一個詞條，如 ('d', 'dog')</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; which = random.choice(card) # 從詞條裡挑一個詞，如 ('d', 'dog') 中挑 'd' 或 'dog'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; print which #顯示詞</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; print card[0], card[1] #印出完整答案</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; action = raw_input("&gt; ").lower() #輸入命令</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; if action == "q": #按其他鍵繼續，按q就跳出迴圈</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;    break</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; if "f" in action or "l" in action: #忘記時的處理策略</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;    print "...recorded."</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;    deck.append(card) #多加本詞條入詞庫中，以提升被選中的頻率</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; if "h" in action:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;    print help #印出說明</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>進一步修改參考：</p><ul><li><p>若要用作英文學習的話，不只前項 (英文)、後項 (中文解釋)，也許還要一欄音標。</p></li><li><p>詞庫應該要可以抽換</p></li><li><p>詞庫應該要可以合併使用 (應該支援多詞庫)</p></li><li><p>要用更有效的學習模式，如<a href="http://www.supermemo.com/english/ol/sm2.htm" target="_blank" rel="noopener noreferrer">sm2</a></p></li><li><p>應該可以用圖片代替文字，以做到支援「音標」等效果。參考資料</p></li><li><p></p></li><li><p></p></li></ul><p>* 註：英文中， flashcard 就是單詞記憶卡的意思。</p>]]></content>
        <category label="python" term="python"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[三分鐘教你/妳自製閃光卡 -- 補充包]]></title>
        <id>https://blog.gasolin.idv.tw/code/3min-flashcard-patch</id>
        <link href="https://blog.gasolin.idv.tw/code/3min-flashcard-patch"/>
        <updated>2008-08-08T09:31:52.000Z</updated>
        <summary type="html"><![CDATA[繼上一篇裡我們製作好閃光卡後，這裡再附送一個補充包： 平假名/片假名詞彙庫，讓閃光卡真正能運用於日常生活中 XD]]></summary>
        <content type="html"><![CDATA[<p>繼上一篇裡我們<a href="http://inet6.blogspot.com/2008/08/flashcard.html" target="_blank" rel="noopener noreferrer">製作好閃光卡</a>後，這裡再附送一個補充包： 平假名 / 片假名詞彙庫，讓閃光卡真正能運用於日常生活中 XD</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">&gt; Hiragana = [("あ","a"), ("い", "i"), ("う", "u"), ("え","e"), ("お", "o"),</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;               ("か", "ka"), ("き", "ki"), ("く", "ku"), ("け", "ke"), ("こ", "ko"),</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;               ("さ", "sa"), ("し", "shi"), ("す", "shu"), ("せ", "se"), ("そ", "so"),</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;               ("た", "ta"), ("ち", "chi"), ("つ", "tsu"), ("て", "te"), ("と", "to"),</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;               ("な", "na"), ("に", "ni"), ("ぬ", "nu"), ("ね", "ne"), ("の", "no"),</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;               ("は", "ha"), ("ひ", "hi"), ("ふ", "hu"), ("へ", "he"), ("ほ", "ho"),</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;               ("ま", "ma"), ("み", "mi"), ("む", "mu"), ("め", "me"), ("も", "mo"),</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;               ("や", "ya"),                 ("ゆ", "yu"),                 ("よ", "yo"),</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;               ("ら", "ra"), ("り", "ri"), ("る", "ru"), ("れ", "re"), ("ろ", "ro"),</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;               ("わ", "wa"), ("ゐ", "wi"),              ("ゑ", "we"), ("を", "wo"),</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;               ("が", "ga"), ("ぎ", "gi"), ("ぐ", "gu"), ("げ", "ge"), ("ご", "go"),</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;               ("ざ", "za"), ("じ", "ji"), ("ず", "zu"), ("ぜ", "ze"), ("ぞ", "zo"),</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;               ("だ", "da"), ("ぢ", "(ji)"), ("づ", "(zu)"), ("で", "de"), ("ど", "do"),</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;               ("ば", "ba"), ("び", "bi"), ("ぶ", "bu"), ("べ", "be"), ("ぼ", "bo"),</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;               ("ぱ", "pa"), ("ぴ", "pi"), ("ぷ", "pu"), ("ぺ", "pe"), ("ぽ", "po")</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;               ] #平假名詞庫</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; Katakana = [("ア", "a"), ("イ", "i"), ("ウ", "u"), ("エ","e"), ("オ", "o"),</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;               ("カ", "ka"), ("キ", "ki"), ("ク", "ku"), ("ケ", "ke"), ("コ", "ko"),</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;               ("サ", "sa"), ("シ", "shi"), ("ス", "shu"), ("セ", "se"), ("ソ", "so"),</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;               ("タ", "ta"), ("チ", "chi"), ("ツ", "tsu"), ("テ", "te"), ("ト", "to"),</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;               ("ナ", "na"), ("ニ", "ni"), ("ヌ", "nu"), ("ネ", "ne"), ("ノ", "no"),</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;               ("ハ", "ha"), ("ヒ", "hi"), ("フ", "hu"), ("ヘ ", "he"), ("ホ", "ho"),</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;               ("マ", "ma"), ("ミ", "mi"), ("ム", "mu"), ("メ", "me"), ("モ", "mo"),</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;               ("ヤ", "ya"),                 ("ユ", "yu"),                 ("ヨ", "yo"),</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;               ("ラ", "ra"), ("リ", "ri"), ("ル", "ru"), ("レ", "re"), ("ロ", "ro"),</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;               ("ワ", "wa"), ("ヰ", "wi"),              ("ヱ", "we"), ("ヲ", "wo"),</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;                                                                          ("ン", "n"),</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;               ("ガ", "ga"), ("ギ", "gi"), ("グ", "gu"), ("ゲ", "ge"), ("ゴ", "go"),</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;               ("ザ", "za"), ("ジ", "ji"), ("ズ", "zu"), ("ゼ", "ze"), ("ゾ", "zo"),</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;               ("ダ", "da"), ("ヂ", "(ji)"), ("ヅ", "(zu)"), ("デ", "de"), ("ド", "do"),</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;               ("バ", "ba"), ("ビ", "bi"), ("ブ", "bu"), ("ベ", "be"), ("ボ", "bo"),</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;               ("パ", "pa"), ("ピ", "pi"), ("プ", "pu"), ("ペ", "pe"), ("ポ", "po")</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;               ] #片假名詞庫</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; deck = Hiragana</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>使用時，依照需求將 deck 改成等於 "Hiragana"、"Katakana"，或 "Hiragana+Katakana" 即可。</p>]]></content>
        <category label="python" term="python"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[鐵蟒帶電池 IronPython Batteries Included]]></title>
        <id>https://blog.gasolin.idv.tw/python/IronPython-Batteries-Included</id>
        <link href="https://blog.gasolin.idv.tw/python/IronPython-Batteries-Included"/>
        <updated>2008-08-08T01:37:50.000Z</updated>
        <summary type="html"><![CDATA[最新的 IronPython 2.0 Beta4 版除了提供安裝包之外，也包含了所有的 Python 標準模組庫。看來用 Windows 平台的朋友，已經沒有什麼理由不玩玩它了。]]></summary>
        <content type="html"><![CDATA[<p>最新的 <a href="http://www.codeplex.com/IronPython/Release/ProjectReleases.aspx?ReleaseId=14353" target="_blank" rel="noopener noreferrer">IronPython</a> 2.0 Beta4 版除了提供安裝包之外，也包含了所有的 Python 標準模組庫。看來用 Windows 平台的朋友，已經沒有什麼理由不玩玩它了。</p>]]></content>
        <category label="python" term="python"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[scapy]]></title>
        <id>https://blog.gasolin.idv.tw/iot/scapy</id>
        <link href="https://blog.gasolin.idv.tw/iot/scapy"/>
        <updated>2008-08-08T01:32:31.000Z</updated>
        <summary type="html"><![CDATA[scapy 是個相當好用的封包產生工具,]]></summary>
        <content type="html"><![CDATA[<p><a href="http://trac.secdev.org/scapy" target="_blank" rel="noopener noreferrer">scapy</a> 是個相當好用的封包產生工具，
只是因為有幾個用到的函式庫需要手動尋找並安裝，還蠻不方便的.
Windows 下使用的限制更多.</p><p><a href="http://trac.secdev.org/scapy" target="_blank" rel="noopener noreferrer">scapy</a> 雖然只有一個檔案卻可以產生各種 Layer 2 以上的封包.
封包中有用到時會自行填入 mac, ip, checksum 等訊息，實在太省事了.
<a href="http://trac.secdev.org/scapy" target="_blank" rel="noopener noreferrer">scapy</a> 允許自訂封包欄位來設計自己的協定，或改變封包的內容.
裝上一些圖形處理函式庫後還可以輸出 protocol 欄位圖形等等.</p><p>在此列出需求函式庫的連結. (Mac 環境下需安裝)</p><p>pcap
<a href="http://code.google.com/p/pypcap/" target="_blank" rel="noopener noreferrer">http://code.google.com/p/pypcap/</a>
libdnet
<a href="http://sourceforge.net/projects/libdnet/" target="_blank" rel="noopener noreferrer">http://sourceforge.net/projects/libdnet/</a></p><p>gnuplot
<a href="http://sourceforge.net/projects/gnuplot/" target="_blank" rel="noopener noreferrer">http://sourceforge.net/projects/gnuplot/</a>
gnuplot-py
<a href="http://sourceforge.net/projects/gnuplot-py/" target="_blank" rel="noopener noreferrer">http://sourceforge.net/projects/gnuplot-py/</a>
pyx
<a href="http://sourceforge.net/projects/pyx/" target="_blank" rel="noopener noreferrer">http://sourceforge.net/projects/pyx/</a></p>]]></content>
        <category label="python" term="python"/>
        <category label="network" term="network"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[設計先行]]></title>
        <id>https://blog.gasolin.idv.tw/code/design-first</id>
        <link href="https://blog.gasolin.idv.tw/code/design-first"/>
        <updated>2008-08-01T10:42:40.000Z</updated>
        <summary type="html"><![CDATA[不要讓效能考量阻止應行的正確事項。你一定找得出讓程式跑快一點的聰明方式，但是，設計不良，就很難復原了。]]></summary>
        <content type="html"><![CDATA[<blockquote><p>不要讓效能考量阻止應行的正確事項。你一定找得出讓程式跑快一點的聰明方式，但是，設計不良，就很難復原了。
-- 美麗程式</p></blockquote>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[試玩 Sphinx 之 3]]></title>
        <id>https://blog.gasolin.idv.tw/python/Sphinx-3</id>
        <link href="https://blog.gasolin.idv.tw/python/Sphinx-3"/>
        <updated>2008-07-30T12:53:39.000Z</updated>
        <summary type="html"><![CDATA[試玩完前兩部之後，還是不了解 Sphinx 的話，]]></summary>
        <content type="html"><![CDATA[<p><a href="http://inet6.blogspot.com/search?q=Sphinx" target="_blank" rel="noopener noreferrer">試玩完前兩部</a>之後，還是不了解 Sphinx 的話，
直接來看個 <a href="http://showmedo.com/videos/video?name=2910020&amp;fromSeriesID=291" target="_blank" rel="noopener noreferrer">Screencast</a> (視頻演示) 吧</p>]]></content>
        <category label="python" term="python"/>
        <category label="rst" term="rst"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[wiifit 與瘦身-2]]></title>
        <id>https://blog.gasolin.idv.tw/life/wiifit-fit-2</id>
        <link href="https://blog.gasolin.idv.tw/life/wiifit-fit-2"/>
        <updated>2008-07-27T07:39:54.000Z</updated>
        <summary type="html"><![CDATA[半年前寫了 wiifit 與瘦身 一篇，當時嘗試的結論是失敗的。]]></summary>
        <content type="html"><![CDATA[<p>半年前寫了 <a href="http://inet6.blogspot.com/2007/12/wiifit.html" target="_blank" rel="noopener noreferrer">wiifit 與瘦身</a> 一篇，當時嘗試的結論是失敗的。
最近因為實在太胖了，又開始把 wii balance board 搬出來，拿來持續記錄體重，並設定預達成的目標。而不再依靠 wii fit 上面的小遊戲當減肥方法。
這次的使用效果卻不錯。</p><p>現在我訂的目標是每隔兩週減 0.5 公斤。</p><p>我的心得如下：</p><p>1<!-- -->.<!-- --> 訂的減重目標不要太遠
2<!-- -->.<!-- --> 訂的減重目標不要太大</p><p>1<!-- -->.<!-- --> 訂的減重目標不要太遠</p><p>對胖子而言，不能放開懷抱享受美食是痛苦的事。
如果能用短期就能達到目標的快樂，來替代美食入口的誘惑，能達成目標的機會就大的多。</p><p>2<!-- -->.<!-- --> 訂的減重目標不要太大</p><blockquote><p>一個月吃不成一個胖子，一個月也減不成一個瘦子。</p></blockquote><p>當股票大盤一直跌時，想要逆勢賺錢是件很困難的事。
同樣地，當體重在不停上升時，想要逆著方向減重，也容易遇到挫折。
把控制體重當做是長期的目標，一次 0.5、0.3 公斤，多累積幾次，減掉的重量也會很可觀。</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Androbian?]]></title>
        <id>https://blog.gasolin.idv.tw/android/Androbian</id>
        <link href="https://blog.gasolin.idv.tw/android/Androbian"/>
        <updated>2008-07-26T15:54:38.000Z</updated>
        <summary type="html"><![CDATA[How they will merge two platforms that have so many things different about them is beyond us.]]></summary>
        <content type="html"><![CDATA[<blockquote><p>How they will merge two platforms that have so many things different about them is beyond us.
One is chocolate, the other is peanut butter. Two completely different things. However, we know how good they taste together!</p><p>一邊是巧克力，另一邊是花生醬，兩者是完全不同的東西。但是，我們都知道巧克力花生醬嚐起來是多麼地美味！
在 <a href="http://androidguys.com" target="_blank" rel="noopener noreferrer">AndroidGuy</a> 上看到<a href="http://androidguys.com/2008/07/25/android-and-symbian-destined-to-become-one/" target="_blank" rel="noopener noreferrer">一篇文章</a>，提起 Android 與 Symbian 將合併的傳言。</p></blockquote><p>傳言本身不太可信 (Android、symbian 底層架構完全不同)，但是文章中所用到的比喻實在很精采。</p>]]></content>
        <category label="Android" term="Android"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[[思考]動態語言與框架，軟體工程師的上帝？]]></title>
        <id>https://blog.gasolin.idv.tw/code/soft-dev-god-dyna-arch</id>
        <link href="https://blog.gasolin.idv.tw/code/soft-dev-god-dyna-arch"/>
        <updated>2008-07-26T15:40:50.000Z</updated>
        <summary type="html"><![CDATA[在十六世紀，民眾把不可知的一切都歸於上帝的旨意。]]></summary>
        <content type="html"><![CDATA[<blockquote><p>在十六世紀，民眾把不可知的一切都歸於上帝的旨意。
為什麼榖物收成不好？都是上帝的旨意。
為什麼會發生大地震？都是上帝的旨意。
為什麼天體如此運行？都是上帝的旨意。
但是到了啟蒙時代，物理、化學、生物等開始發展，人類開始針對宇宙萬象尋求科學上的解釋。
這並不是說，人們都變成了無神論者，而是人類對於宇宙運行的方式，有了更深的理解。
-- 從 A 到 A+</p></blockquote><p>同樣的，當我們不去研究任何方便功能其背後的運作機制，而是直接將之歸因於「動態語言」或「框架」所提供的方便性時，我們和十六世紀的民眾其實沒有什麼差別，等於承認自己的無知。</p><p>每次我們兩手一攤，說：「答案一定是語言或框架做的手腳了！」我們等於放棄了以科學方式探討原因的機會。</p><blockquote><p>正因為只要生活過得好，我們就心滿意足，所以很少人擁有無與倫比的人生經歷。
-- 從 A 到 A+</p></blockquote><p>朋友對上面的話提出質疑：瞭解「動態語言」或「框架」背後的機制當然是不錯，但並不是那麼必要。因為就算不懂怎麼製造，還是可以把高階語言把玩的很好。
對軟體工程師來說，比較直覺的學習順序，應該是熟悉這些外功後，理解到有些不足，才會去想辦法補足內功的部份。</p><p>我說：就如同在古代人們不知道為什麼天空會降下雨的時候，還是可以先學會蓋房子避雨。有了房子的遮蔽，感到安全的人們，又可以騰出心力來探究天空為什麼會降雨的問題。
了解「動態語言」或「框架」，行有餘力時也去了解「動態語言」或「框架」背後的機制，也許也可以讓我們寫出更好的程式碼。</p><p>弄出天氣預報的人，永遠不會是眼光停留在遮風避雨階段的人，或是想著將遮雨的房子蓋的又大又舒服的人（這只是種選擇，無關於好或不好）。這大概就是「從 A 到 A+」一書所說的「優秀是卓越之敵」的理念吧。</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[美麗程式]]></title>
        <id>https://blog.gasolin.idv.tw/code/beautiful-code</id>
        <link href="https://blog.gasolin.idv.tw/code/beautiful-code"/>
        <updated>2008-07-25T11:05:23.000Z</updated>
        <summary type="html"><![CDATA[程式又短又簡單，那就是美麗，原因有很多。]]></summary>
        <content type="html"><![CDATA[<blockquote><p>程式又短又簡單，那就是美麗，原因有很多。
也許最重要的就是易於理解，而理解程式比撰寫程式更為困難。
沒有什麼地方可以躲藏。
此外，程式緊湊，對指令集，I-cache 及 JIT 編譯器而言，也會配合得比較好，因此跑得比較快。
-- 美麗程式</p></blockquote>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[給我五分鐘，教你用中文腳本寫一個 RPG (使用 TextRPG)]]></title>
        <id>https://blog.gasolin.idv.tw/code/TextRPG-via-chinese-python</id>
        <link href="https://blog.gasolin.idv.tw/code/TextRPG-via-chinese-python"/>
        <updated>2008-07-22T14:02:37.000Z</updated>
        <summary type="html"><![CDATA[TextRPG 是我最近找到的一個好玩 python 模組，由德國人開發。]]></summary>
        <content type="html"><![CDATA[<p><a href="http://pypi.python.org/pypi/TextRPG/" target="_blank" rel="noopener noreferrer">TextRPG</a> 是我最近找到的一個好玩 python 模組，由德國人開發。
作用就是用來寫一個純文字的冒險遊戲。
目前的版本已包含了 RPG 中常見的對話、戰鬥等元素，整個遊戲可以完全由一個 python 腳本來構成。</p><p>因為實在太簡單了，所以來個五分鐘上手文好了：)</p><p>1<!-- -->.<!-- --> 安裝軟體</p><p>安裝好 Python 與 easy_install 模組後，接著安裝周蟒與 TextRPG</p><blockquote><p>$ easy_install zhpy
$ easy_install textrpg</p></blockquote><p>如此安裝好後就可以開始寫 RPG 了。</p><p>2<!-- -->.<!-- --> 準備環境</p><p>新建一個檔案夾，首先，用文字編輯器新增一個 rpg.ini 檔案，裡面內容如下：</p><blockquote><p>[charactor]<!-- -->
角色 = Char
樣板 = template
名字 = name
姓名 = name
說 = say
詢問 = ask
動作 = act
行動 = act
比較技能 = compete_skill
取得經驗值 = get_exp
生命力 = bTP
生命值 ==TP
攻擊力 = attack
武器 = weapon
防具 = armor
傷害 = wounds
活著 = active
<!-- -->[story]<!-- -->
故事 = story
儲存 = save
給予經驗值 = give_exp
戰鬥 = battle
對話 = diag 將這個檔案儲存起來。接著開啟適當的 python 程式編輯器新建一個任意檔名的檔案 (範例裡將檔案取名為 HelloRPG.twpy)</p></blockquote><p>在檔案開頭加入三行敘述：</p><blockquote><p>#!/usr/bin/env python</p><h1>encoding: utf-8</h1><p>from rpg_lib.textrpg import *
好了，我們環境已經準備好了。</p></blockquote><p>3<!-- -->.<!-- --> 撰寫故事</p><p>因為用 TextRPG 寫故事太容易了，這就編一個大雄大戰小叮噹的故事：</p><blockquote><blockquote><p>#!/usr/bin/env python</p><h1>encoding: utf-8</h1></blockquote><p>from rpg_lib.textrpg import *</p><p>大雄 = 角色 ()
大雄。名字 ="大雄"</p><p>小叮噹 = 角色 ()
小叮噹。名字 ="小叮噹"</p><p>故事 ("""大雄哭著跑進房間""")</p><p>大雄。說 ("""嗚嗚～～小叮噹，技安跟阿福欺負我""")
小叮噹。說 ("""口胡，大雄我受夠你了，來戰吧！""")</p><p>大雄。攻擊力 = 3
小叮噹。攻擊力 = 90</p><p>大雄。動作 ("""大驚失色，狼狽逃竄""")
大雄。說 ("""小叮噹，你發什麼瘋！""")</p><p>勝利 = 小叮噹。戰鬥 (大雄)
如果 勝利:
_<strong>_故事 ("""小叮噹打敗了大雄，從此過上清靜的日子""")
否則:
__</strong>大雄。動作 ("從如廢墟般的房間中爬起")
_<strong>_大雄。說 ("""呼呼，我還是贏了""")
__</strong>故事 ("""大雄打敗了小叮噹，從此作者掰不下去封筆了。""")</p></blockquote><p>註：上面程式範例中的 "____" 代表 4 個空格。用空格來表示程式邏輯區塊是 python 的語法。</p><p>好了，我們寫好了故事，接著就是將這個檔案儲存起來。
檔案儲存好之後，我們打開 command line 程式，開始執行這個遊戲：</p><blockquote><p>$ zhpy HelloRPG.twpy
大雄哭著跑進房間
大雄：嗚嗚～～小叮噹，技安跟阿福欺負我
小叮噹：口胡，大雄我受夠你了，來戰吧！
大雄 大驚失色，狼狽逃竄
大雄：小叮噹，你發什麼瘋！</p><p>---battle-stats for 小叮噹 ---
....
---/battle-stats---</p><p>大雄 comes closer.
小叮噹: Do you want to attack 大雄？(Yes, no)  Yes
You attack 大雄.
小叮噹: How do you want to fight? (Usual, defensive, target head) Usual</p><p>You won this round.
大雄 took 80 points of damage and a critical wound.</p><p>小叮噹打敗了大雄，從此過上清靜的日子</p></blockquote>]]></content>
        <category label="game" term="game"/>
        <category label="python" term="python"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Pylons 書籍免費下載]]></title>
        <id>https://blog.gasolin.idv.tw/python/Pylons-free-books</id>
        <link href="https://blog.gasolin.idv.tw/python/Pylons-free-books"/>
        <updated>2008-07-14T01:52:32.000Z</updated>
        <summary type="html"><![CDATA[http://pylonsbook.com/]]></summary>
        <content type="html"><![CDATA[<p></p><p></p>]]></content>
        <category label="pylons" term="pylons"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[在 Google App Engine 上跑 Zope]]></title>
        <id>https://blog.gasolin.idv.tw/service/zope-on-Google-App-Engine</id>
        <link href="https://blog.gasolin.idv.tw/service/zope-on-Google-App-Engine"/>
        <updated>2008-07-14T01:48:55.000Z</updated>
        <summary type="html"><![CDATA[http://mockit.blogspot.com/2008/07/getting-started-with-zope-on-google-app.html]]></summary>
        <content type="html"><![CDATA[<p></p><p>只能說，這篇看到標題就很驚人了 ＠＠</p><p>原來 Guido 把 <a href="http://code.google.com/p/googleappengine/issues/detail?id=161#c19" target="_blank" rel="noopener noreferrer">zipimport</a> 在 App  Engine 上實做出來了 (原來所有 App Engine 上的 module 都不能用 zip 格式調用)。所以多數 Python Framework 理論上應該都能在 GAE 上跑了。</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[網頁小工具]]></title>
        <id>https://blog.gasolin.idv.tw/tools/web-widget</id>
        <link href="https://blog.gasolin.idv.tw/tools/web-widget"/>
        <updated>2008-07-05T16:30:25.000Z</updated>
        <summary type="html"><![CDATA[透過網頁小工具，有些小程式，不必再自己在各平台刻了...]]></summary>
        <content type="html"><![CDATA[<p>透過網頁小工具，有些小程式，不必再自己在各平台刻了...</p><object width="425" height="344"><param name="movie" value="http://www.youtube.com/v/GwoTewe01aE&amp;hl=zh_TW&amp;fs=1"><param name="allowFullScreen" value="true"><embed src="http://www.youtube.com/v/GwoTewe01aE&amp;hl=zh_TW&amp;fs=1" type="application/x-shockwave-flash" allowfullscreen="true" width="425" height="344"></object><p></p>]]></content>
        <category label="gadget" term="gadget"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[TurboGears 2 Leader find a job to develop TurboGears 2]]></title>
        <id>https://blog.gasolin.idv.tw/python/TurboGears-2-Leader-find-a-job-to-develop-TurboGears-2</id>
        <link href="https://blog.gasolin.idv.tw/python/TurboGears-2-Leader-find-a-job-to-develop-TurboGears-2"/>
        <updated>2008-06-18T13:37:42.000Z</updated>
        <summary type="html"><![CDATA[恭喜 TurboGears 2 的現任(XD)領頭人 Mark Ramm ，轉換到一個可以在工作時間開發 TurboGears 2 的工作：）]]></summary>
        <content type="html"><![CDATA[<p>恭喜 TurboGears 2 的現任 (XD) 領頭人 Mark Ramm ，<a href="http://compoundthinking.com/blog/index.php/2008/06/08/tg2-status/" target="_blank" rel="noopener noreferrer">轉換到一個可以在工作時間開發 TurboGears 2 的工作</a>：）</p>]]></content>
        <category label="TurboGears" term="TurboGears"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Python commit 群(Swarm)圖]]></title>
        <id>https://blog.gasolin.idv.tw/python/Python-commit-Swarm</id>
        <link href="https://blog.gasolin.idv.tw/python/Python-commit-Swarm"/>
        <updated>2008-06-18T03:12:16.000Z</updated>
        <summary type="html"><![CDATA[code_swarm - Python from Michael Ogawa on Vimeo.]]></summary>
        <content type="html"><![CDATA[<object width="400" height="302"> <param name="allowfullscreen" value="true"> <param name="allowscriptaccess" value="always"> <param name="movie" value="http://www.vimeo.com/moogaloop.swf?clip_id=1093745&amp;server=www.vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1"> <embed src="http://www.vimeo.com/moogaloop.swf?clip_id=1093745&amp;server=www.vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1" type="application/x-shockwave-flash" allowfullscreen="true" allowscriptaccess="always" width="400" height="302"></object>[code_swarm - Python](http://www.vimeo.com/1093745?pg=embed&amp;sec=1093745) from [Michael Ogawa](http://www.vimeo.com/michaelogawa?pg=embed&amp;sec=1093745) on [Vimeo](http://vimeo.com?pg=embed&amp;sec=1093745).<p>有人說，代表人類科學 / 技術最高的成就，其實都只是繫於那些突出的人手上。他們能吸引其他有共同目標的人聚集在旁邊，提供貢獻。</p><p>不管什麼熱門的 Open Source 專案，在最初期時都是只有一個 / 幾個人撐起來呀。</p><p>吸引其他人聚集的力量，就是 yy 小說中所謂的 "王霸之氣" 嗎 (誤) XD</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Google IO 演講上線]]></title>
        <id>https://blog.gasolin.idv.tw/android/Google-IO-speech</id>
        <link href="https://blog.gasolin.idv.tw/android/Google-IO-speech"/>
        <updated>2008-06-13T03:01:22.000Z</updated>
        <summary type="html"><![CDATA[Google IO Sessions Available Online]]></summary>
        <content type="html"><![CDATA[<p></p><p>Google 把演講影片放 YouTube、講稿放 Google Doc，然後將同個演講相關的內容嵌入一個畫面，
雖然離「很棒」還有距離，但這樣能線上瀏覽的感覺還真是不錯呀。</p><p></p>]]></content>
        <category label="Android" term="Android"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[簡單背後的複雜]]></title>
        <id>https://blog.gasolin.idv.tw/digest/complexity-in-simplicity</id>
        <link href="https://blog.gasolin.idv.tw/digest/complexity-in-simplicity"/>
        <updated>2008-06-10T06:37:17.000Z</updated>
        <summary type="html"><![CDATA[We also already knew that something very simple to use is very challenging to develop.]]></summary>
        <content type="html"><![CDATA[<blockquote><p>We also already knew that something very simple to use is very challenging to develop.
--<a href="http://jquery.com/blog/2008/06/09/jquery-ui-v15-released-focus-on-consistent-api-and-effects/" target="_blank" rel="noopener noreferrer">JQuery UI team</a></p></blockquote>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Android 大不同, 與實機 Demo]]></title>
        <id>https://blog.gasolin.idv.tw/android/Android-difference-Demo</id>
        <link href="https://blog.gasolin.idv.tw/android/Android-difference-Demo"/>
        <updated>2008-05-30T03:03:51.000Z</updated>
        <summary type="html"><![CDATA[每次看到 Android , 它的介面都改好大 Orz]]></summary>
        <content type="html"><![CDATA[<p>每次看到 Android , 它的介面都改好大 Orz
看起來新版也加入了類似 iPhone 的 Widget 功能.</p><p></p><object width="425" height="355"><param name="movie" value="http://www.youtube.com/v/sOSk9TW7z-4&amp;hl=en"><param name="wmode" value="transparent"><embed src="http://www.youtube.com/v/_y36fG2Oba0&amp;rel=1" type="application/x-shockwave-flash" wmode="transparent" width="425" height="355"></object><p>另外這台機器還真是有噱頭 -- 內建指南針...., 至少可以用在地圖或街景 (Street View) 功能上 @_@</p><p>Demo 中也用到了 "實物投影機".</p>]]></content>
        <category label="Android" term="Android"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[tgcrud 下載破千]]></title>
        <id>https://blog.gasolin.idv.tw/python/tgcrud-dl-over-1000</id>
        <link href="https://blog.gasolin.idv.tw/python/tgcrud-dl-over-1000"/>
        <updated>2008-05-29T02:45:18.000Z</updated>
        <summary type="html"><![CDATA[tgcrud 專案 1.0 版 放一年下載竟破千了, 這應該是我自己的開源專案中單一版本最好的紀錄 :p]]></summary>
        <content type="html"><![CDATA[<p>tgcrud 專案 <a href="http://pypi.python.org/pypi/tgcrud/1.0" target="_blank" rel="noopener noreferrer">1.0 版</a> 放一年下載竟破千了，這應該是我自己的開源專案中單一版本最好的紀錄 :p
還有<a href="http://www.amazon.com/Professional-Python-Frameworks-Programming-Turbogears/dp/0470138092/ref=sr_1_1?ie=UTF8&amp;s=books&amp;qid=1212028661&amp;sr=8-1" target="_blank" rel="noopener noreferrer"> 書</a> 花了 20 多頁介紹它，我竟然沒再更新了 Orz.
剛剛順手丟出個 1.0.1 版，修正個使用者丟過來的<a href="http://trac.turbogears.org/changeset/4606" target="_blank" rel="noopener noreferrer">小問題</a>.</p><p>後來我把精力放到 TurboGears 2.0 上。將來 TurboGears 2.0 開發工具中所包含的 crud 功能，
就是基於 tgcrud 的經驗開發的. tgcrud 是基於 kid 模版和 turbogears.widgets , 而 crud 功能則是基於 genshi 模版，toscawidgets 跟 dbsprockets.</p>]]></content>
        <category label="TurboGears" term="TurboGears"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Android 大獎賽第一階段揭曉]]></title>
        <id>https://blog.gasolin.idv.tw/android/Android-grant-phase-1</id>
        <link href="https://blog.gasolin.idv.tw/android/Android-grant-phase-1"/>
        <updated>2008-05-15T07:38:49.000Z</updated>
        <summary type="html"><![CDATA[全文寫到 PDA 簡報夾 中.]]></summary>
        <content type="html"><![CDATA[<p>全文寫到 <a href="http://pdanewsclip.blogspot.com/2008/05/android.html" target="_blank" rel="noopener noreferrer">PDA 簡報夾</a> 中.</p><p><a href="http://blog.pixnet.net/pmmustknow/post/17583540" target="_blank" rel="noopener noreferrer">Mr.PM</a> 這邊有對其中一些 App 作較詳細的介紹.</p>]]></content>
        <category label="Android" term="Android"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[程式語言面相學]]></title>
        <id>https://blog.gasolin.idv.tw/code/program-physiognomy</id>
        <link href="https://blog.gasolin.idv.tw/code/program-physiognomy"/>
        <updated>2008-05-01T15:33:58.000Z</updated>
        <summary type="html"><![CDATA[要知道哪門程式語言紅不紅，先看程式語言發明者的鬍子！]]></summary>
        <content type="html"><![CDATA[<p>要知道哪門程式語言紅不紅，先看程式語言發明者的鬍子！</p><p>程式語言幾乎是現代電腦的基礎。不只是資訊相關工作才會用到，只要讀理工科的碩士班，幾乎也都會因為實驗中需用到電腦模擬，而多多少少學了一些程式語言。電腦 / 手持設備的換代速度飛快，因此相對應的編寫程式技術與使用的程式語言也更新很快。於是很多人在跌跌撞撞學習程式語言時，心中都難免會存疑：</p><p>「我怎麼樣才能知道，我現在學習的語言，過了幾年以後還仍然熱門有用哩？」</p><p>答案很簡單，卻充滿驚奇：</p><blockquote><p>看程式語言發明者的面相。（特別是鬍子！）</p></blockquote><p>這個非常簡便的方式，可以相當準確地用來檢視我們所使用的程式語言的發展大勢，與判斷這門程式語言是不是值得我們繼續投資學習！</p><p>Tamir Khason 在四年前的 <a href="http://blogs.microsoft.co.il/blogs/tamir/archive/2008/04/28/computer-languages-and-facial-hair-take-two.aspx" target="_blank" rel="noopener noreferrer">第一篇</a> (<a href="http://www.kuqin.com/language/20070823/594.html" target="_blank" rel="noopener noreferrer">簡體中文版</a>) 文章中，提出了這個經由歸納而來的假說。其核心理論為：「程式語言的發展，與開發者臉上鬍子的疏密有莫大關係。擁有一個滿臉濃密鬍子的程式語言發明者，該程式語言的發展會比擁有沒蓄鬍子程式語言發明者的程式語言好得多 (Java v.s C#、C++ v.s Object C)」</p><p>Tamir Khason 今年再接再厲發表 <a href="http://blogs.microsoft.co.il/blogs/tamir/archive/2008/04/28/computer-languages-and-facial-hair-take-two.aspx" target="_blank" rel="noopener noreferrer">第二篇</a>，顯示這幾年程式語言的發展，仍然持續地應證了這個假說的正確性 XD</p><p>你相信這個假說嗎？</p>]]></content>
        <category label="fun" term="fun"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[inform 7: 像寫小說一樣寫互動文字冒險遊戲]]></title>
        <id>https://blog.gasolin.idv.tw/tools/inform-7-text-advantrue</id>
        <link href="https://blog.gasolin.idv.tw/tools/inform-7-text-advantrue"/>
        <updated>2008-05-01T12:25:35.000Z</updated>
        <summary type="html"><![CDATA[你可能沒有想過, 在有蘋果麥金塔電腦和單色視窗之前, 電腦遊戲就以文字冒險遊戲(Interactive Fiction, IF)的形式存在了.]]></summary>
        <content type="html"><![CDATA[<p>你可能沒有想過，在有蘋果麥金塔電腦和單色視窗之前，電腦遊戲就以文字冒險遊戲 (Interactive Fiction, IF) 的形式存在了.</p><p>玩這種文字冒險遊戲就像看小說一樣，所有的場景，人物，動作，怪物，全都以文字敘述來表示.
(比較老一點的玩家可能想起另一種叫 MUD 的網路遊戲。在 MUD 裡 "砍" 怪物掉血，是以 "史萊姆被玩家小 G 砍中失血 10 點" 這樣的文字敘述來表示。沒錯，MUD 就是從文字冒險遊戲進化來的)</p><p>要設計這種古老的遊戲，需要一些寫程式的技術，好來設計文字冒險遊戲中出現的場景，角色，房間 (D<!-- -->&amp;<!-- -->D)</p><p>這種古老的 "技藝" 在 2006 年產生了驚奇的改變. <a href="http://www.inform-fiction.org/I7/Welcome.html" target="_blank" rel="noopener noreferrer">inform 7</a> (之前當然有 inform 6, 5, 4...) 是第一個使用接近普通英語語法寫作，提供整合式開發工具 (IDE) 讓開發可以互動進行的文字冒險遊戲開發工具.</p><p>例如 "設定" 冒險小說的標題與作者，可以直接寫作如下:</p><blockquote><p>"Harry Potter" by J.K Rowling.
The story headline is "Harry Potter and the Goblet of Fire".</p></blockquote><p>要建立一個場景，在 Inform 裡就等於建立一個 "房間"</p><blockquote><p>Hogwarts School is a room</p></blockquote><p>用 inform 7 寫文字冒險遊戲根本不像在寫程式，一個括弧或是一個判斷語句都沒有！
在 IDE 中每寫完一段，可以按下左上角那個長得像瀏覽器圖示的 "Go" 按鈕，右邊的視窗中立即顯示可以玩的文字冒險遊戲！</p><p>inform 7 對於文字冒險遊戲愛好者而言，真是讓人瞳孔放大的改變呀.</p><p></p><p>更新：如今 Inform 7 發佈剛屆滿兩年，也有更好的教學可看囉
<a href="http://www.brasslantern.org/writers/howto/i7tutorial.html" target="_blank" rel="noopener noreferrer">Write a Text Adventure With Inform 7</a></p>]]></content>
        <category label="game" term="game"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[網摘]]></title>
        <id>https://blog.gasolin.idv.tw/digest/digest</id>
        <link href="https://blog.gasolin.idv.tw/digest/digest"/>
        <updated>2008-04-12T06:40:47.000Z</updated>
        <summary type="html"><![CDATA[Google App Engine for developers]]></summary>
        <content type="html"><![CDATA[<p>Google App Engine for developers
<a href="http://www.niallkennedy.com/blog/2008/04/google-app-engine.html" target="_blank" rel="noopener noreferrer">http://www.niallkennedy.com/blog/2008/04/google-app-engine.html</a></p><p>Google App Engine 大量使用了 django 的架構與功能
<a href="http://code.google.com/appengine/articles/djangoforms.html" target="_blank" rel="noopener noreferrer">http://code.google.com/appengine/articles/djangoforms.html</a></p><p>Google App Engine 使用的 Model Types 和 Property Classes
<a href="http://code.google.com/appengine/docs/datastore/typesandpropertyclasses.html" target="_blank" rel="noopener noreferrer">http://code.google.com/appengine/docs/datastore/typesandpropertyclasses.html</a></p><p>直接可用的 Google App Engine 範例
<a href="http://code.google.com/p/google-app-engine-django-guestbook/" target="_blank" rel="noopener noreferrer">http://code.google.com/p/google-app-engine-django-guestbook/</a></p><p>讓  Django 使用者更容易遷移到 app engine
<a href="http://code.google.com/p/google-app-engine-django/" target="_blank" rel="noopener noreferrer">http://code.google.com/p/google-app-engine-django/</a></p><p>app engine group
<a href="http://groups.google.com/group/google-appengine" target="_blank" rel="noopener noreferrer">http://groups.google.com/group/google-appengine</a></p><p>Python 性能調優 ppt
<a href="http://www.haokanbu.com/story/17930/" target="_blank" rel="noopener noreferrer">http://www.haokanbu.com/story/17930/</a></p>]]></content>
        <category label="digest" term="digest"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[WireShark 1.0 發佈]]></title>
        <id>https://blog.gasolin.idv.tw/tools/WireShark-1-0-in-public</id>
        <link href="https://blog.gasolin.idv.tw/tools/WireShark-1-0-in-public"/>
        <updated>2008-04-07T03:16:21.000Z</updated>
        <summary type="html"><![CDATA[Wireshark  一直是我工作中不可或缺的軟體，現在終於出 1.0 啦！]]></summary>
        <content type="html"><![CDATA[<p><a href="http://www.wireshark.org/" target="_blank" rel="noopener noreferrer">Wireshark </a> 一直是我工作中不可或缺的軟體，現在終於出 1.0 啦！</p><p>更棒的是 1.0 版同時提供了 intel mac 版！有圖有真相。</p><p></p><p>看的出來不是 Native Cocoa，而是透過 X 來支援的，所以應該看不到 iphone 版？XD</p>]]></content>
        <category label="soft" term="soft"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Andbook - Learning Android From Scratch 發佈]]></title>
        <id>https://blog.gasolin.idv.tw/android/Andbook-Learning-Android-From-Scratch</id>
        <link href="https://blog.gasolin.idv.tw/android/Andbook-Learning-Android-From-Scratch"/>
        <updated>2008-03-27T09:01:46.000Z</updated>
        <summary type="html"><![CDATA[anddev.org 的 plusminus 發佈了免費的 andbook (英文) 電子書 (~62 頁， 直接下載)。]]></summary>
        <content type="html"><![CDATA[<p><a href="http://www.anddev.org" target="_blank" rel="noopener noreferrer">anddev.org</a> 的 plusminus 發佈了免費的 <a href="http://www.anddev.org/announcing_andbook_-_learning_android_from_scratch-t1473.html" target="_blank" rel="noopener noreferrer">andbook</a> (英文) 電子書 (~62 頁， <a href="http://andbook.anddev.org/files/andbook.pdf" target="_blank" rel="noopener noreferrer">直接下載</a>)。</p><p>plusminus 從 Android 發佈開始，就持續地經營 <a href="http://www.anddev.org" target="_blank" rel="noopener noreferrer">anddev.org</a> 網站，提供許多簡易可照著做的 Android 程式範例。
如果你已經看完我寫的 <a href="http://code.google.com/p/androidbmi/wiki/DiveIntoAndroid" target="_blank" rel="noopener noreferrer">深入淺出 Android -- Google 手機應用程式設計</a>，那麼你也許會想看看這本更深入介紹 Android 的 <a href="http://www.anddev.org/announcing_andbook_-_learning_android_from_scratch-t1473.html" target="_blank" rel="noopener noreferrer">andbook</a>。</p>]]></content>
        <category label="Android" term="Android"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[試玩 Sphinx]]></title>
        <id>https://blog.gasolin.idv.tw/python/Sphinx</id>
        <link href="https://blog.gasolin.idv.tw/python/Sphinx"/>
        <updated>2008-03-26T06:22:54.000Z</updated>
        <summary type="html"><![CDATA[Sphinx 是 Python 2.6 新採用的 rst 文件生成系統.]]></summary>
        <content type="html"><![CDATA[<p>Sphinx 是 Python 2.6 新採用的 rst 文件生成系統.</p><p>要開始玩首先得下載 Python 原始碼</p><p>svn co <a href="http://svn.python.org/projects/doctools/trunk/" target="_blank" rel="noopener noreferrer">http://svn.python.org/projects/doctools/trunk/</a>  python</p><p>下載完後進入 Doc 目錄，輸入</p><p>make html</p><p>則會自動下載 sphinx 與相關程式，然後自動編譯 rst 檔案.</p><p>如果輸入</p><p>make web </p><p>的話則是產生一個可執行的線上網頁文件程式。此網站程式甚至還支援搜尋，真是強悍到有點扯 @@</p><p>Update:</p><p>Sphinx 產生的首頁原來是從 template 中 render 的。看來拿到其他地方重用的彈性並沒想像中的高.
一般使用 rst 時還是繼續用自己寫的 <a href="http://pypi.python.org/pypi/mopowg/" target="_blank" rel="noopener noreferrer">mopowg</a> 吧.</p>]]></content>
        <category label="python" term="python"/>
        <category label="rst" term="rst"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[IPTV with IPv6 Multicast]]></title>
        <id>https://blog.gasolin.idv.tw/ipv6/IPTV-with-IPv6-Multicast</id>
        <link href="https://blog.gasolin.idv.tw/ipv6/IPTV-with-IPv6-Multicast"/>
        <updated>2008-03-25T07:12:30.000Z</updated>
        <summary type="html"><![CDATA[Japan's IPTV Service goes IPv6: IPv6 Multicast Enables IP TV service]]></summary>
        <content type="html"><![CDATA[<p>Japan's IPTV Service goes IPv6: <a href="http://www.ipv6style.jp/en/action/20040902/index.shtml" target="_blank" rel="noopener noreferrer">IPv6 Multicast Enables IP TV service</a></p>]]></content>
        <category label="IPv6" term="IPv6"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Automated Tests]]></title>
        <id>https://blog.gasolin.idv.tw/devtools/Automated-Tests</id>
        <link href="https://blog.gasolin.idv.tw/devtools/Automated-Tests"/>
        <updated>2008-03-24T03:05:34.000Z</updated>
        <summary type="html"><![CDATA[Having good automated tests lets you refactor and re-engineer small parts of big code bases.]]></summary>
        <content type="html"><![CDATA[<blockquote><p>Having good automated tests lets you refactor and re-engineer small parts of big code bases.</p></blockquote><blockquote><p>Test automation is not a panacea, but it can really help stabilize a code base.</p></blockquote>]]></content>
        <category label="aglie test" term="aglie test"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[OLPC 入手]]></title>
        <id>https://blog.gasolin.idv.tw/tools/OLPC-on-hand</id>
        <link href="https://blog.gasolin.idv.tw/tools/OLPC-on-hand"/>
        <updated>2008-02-01T16:45:58.000Z</updated>
        <summary type="html"><![CDATA[托朋友從美國帶了台 OLPC 準備拿來當電子書閱讀器，]]></summary>
        <content type="html"><![CDATA[<p>托朋友從美國帶了台 OLPC 準備拿來當電子書閱讀器，
剛拿到的第 3 天來整理一下。</p><p>1<!-- -->.<!-- --> 連上無線網路</p><p>OLPC 主要是設計給缺乏網路基礎設施的地方使用，
因此對一般無線網路的支援有限。</p><p>確定能用的設定如下:</p><p>  1<!-- -->.<!-- --> 使用固定的 Channel： 選固定的 Channel (1,6,11)，不要用一般 AP 預設的自動選擇 (auto) 模式。</p><p>  2<!-- -->.<!-- --> 最好剛開始是用 open mode (不加密模式) 連線。</p><p></p><p>  3<!-- -->.<!-- --> 開啟 olpc 後，進入 Group View，每台 AP 或 OLPC 都是一個圓點，在代表你的 AP 的圓點上按 'X' 鍵一下，olpc 就會開始試著與你的 AP 連線。</p><p>2<!-- -->.<!-- --> 更新軔體</p><p>可以透過</p><blockquote><p>cat /etc/issue
命令來看目前的軔體版本。</p></blockquote><p>我拿到的機器預載的版本是 650，要更新版本可至 <a href="http://wiki.laptop.org/go/Olpc-update" target="_blank" rel="noopener noreferrer">http://wiki.laptop.org/go/Olpc-update</a> 查看更新步驟。
指令如下：</p><blockquote><p>su -l
olpc-update -rv 656</p></blockquote><p>3<!-- -->.<!-- --> 中文顯示</p><p>開啟 Terminal 程式，照著以下命令輸入:</p><blockquote><p>su -l
mkdir /usr/share/font/tw
cd /usr/share/font/tw
wget <a href="http://hep1.phys.ntu.edu.tw/~john/olpc/odosung_o.ttc.bz2" target="_blank" rel="noopener noreferrer">http://hep1.phys.ntu.edu.tw/~john/olpc/odosung_o.ttc.bz2</a>
bunzip2 odosung_o.ttc.bz2</p></blockquote><p>這些命令會在 /usr/share/font 資料夾下開一個新的 tw 資料夾，並從網路上下載 YChao 所修改適合 OLPC 的字型並解壓縮。</p><p>當以上命令執行完後，就可以透過 Browse 程式瀏覽中文網頁了。</p><p>4<!-- -->.<!-- --> 看英文電子書</p><p>OLPC 可以透過 Browse 程式上網下載，或是插入 SD 卡 / USB 隨身碟來取得 PDF 電子書來源。
OLPC 的 Browse 程式還可以當作檔案瀏覽器使用。 在網址列輸入 &gt; /media 就會進到放 SD 卡或隨身碟的檔案目錄中，可以透過網頁介面選擇電子書檔案。</p><p>選到檔案後按下連結就可以將電子書 "下載" 到 OLPC 上。
切換到 Journal 程式時可以看到下載的進度。
當下載完成後可以透過 Journal 程式呼叫 Reader 開啟 PDF。</p>]]></content>
        <category label="olpc" term="olpc"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[2007 年度程式語言 -- Python !]]></title>
        <id>https://blog.gasolin.idv.tw/python/2007-code-of-year-Python</id>
        <link href="https://blog.gasolin.idv.tw/python/2007-code-of-year-Python"/>
        <updated>2008-01-29T09:02:51.000Z</updated>
        <summary type="html"><![CDATA[試譯:]]></summary>
        <content type="html"><![CDATA[<p>試譯:</p><p>TIOBE 機構宣佈了 Python 程式語言成為 2007 年度程式語言。
今年的競爭相當激烈，但是最終 Python 語言以最高的年成長率 (2.04%) 拔得頭籌。
尚沒有明確原因能解釋為何 Python 語言在 2007 年能獲得那麼大的成長。</p><p>從有紀錄以來，上個月 Python 語言的普及度首次超越了 Perl 語言。
這是 Python 語言已成為在系統層級上主流黏合語言的指標。
系統管理者與版本管理者特別地喜愛 Python 語言。</p><p>Python 語言也很有可能因為即將發佈的 Python 3，
而進一步在 2008 年獲得更高的普及率。</p><p>原文 <a href="http://www.tiobe.com/tpci.htm" target="_blank" rel="noopener noreferrer">http://www.tiobe.com/tpci.htm</a></p><blockquote><p>Python has been declared as programming language of 2007<!-- -->.<!-- --> It was a close finish, but in the end Python appeared to have the largest increase in ratings in one year time (2.04%). There is no clear reason why Python made this huge jump in 2007<!-- -->.<!-- --> Last month Python surpassed Perl for the first time in history, which is an indication that Python has become the "de facto" glue language at system level. It is especially beloved by system administrators and build managers. Chances are high that Python's star will rise further in 2008, thanks to the upcoming release of Python 3.</p></blockquote><p>延伸閱讀: <a href="http://www.infoq.com/cn/news/2008/01/tiobe-language-of-year" target="_blank" rel="noopener noreferrer">TIOBE 語言流行度排行顯示混合編程時代到來</a></p>]]></content>
        <category label="python" term="python"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[IPv6 Ready Logo 白皮書最終版釋出]]></title>
        <id>https://blog.gasolin.idv.tw/ipv6/IPv6-Ready-Logo-白皮書最終版釋出</id>
        <link href="https://blog.gasolin.idv.tw/ipv6/IPv6-Ready-Logo-白皮書最終版釋出"/>
        <updated>2008-01-29T06:04:23.000Z</updated>
        <summary type="html"><![CDATA[IPv6 Ready Logo 白皮書最終版釋出了，文件中概述了 Phase I、Phase II Logo 的區別，並提供許多要過 Logo 相關的參考連結。]]></summary>
        <content type="html"><![CDATA[<p><a href="http://www.ipv6forum.com/dl/white/IPv6_Ready_Logo_White_Paper_Final.pdf" target="_blank" rel="noopener noreferrer">IPv6 Ready Logo 白皮書最終版</a>釋出了，文件中概述了 Phase I、Phase II Logo 的區別，並提供許多要過 Logo 相關的參考連結。</p><p>有測試 IPv6 產品需求的人可以下載來看看。</p>]]></content>
        <category label="IPv6" term="IPv6"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[先天與後天程式語言風格]]></title>
        <id>https://blog.gasolin.idv.tw/python/pre-pro-program-style</id>
        <link href="https://blog.gasolin.idv.tw/python/pre-pro-program-style"/>
        <updated>2008-01-09T03:10:14.000Z</updated>
        <summary type="html"><![CDATA[最近看到一篇 Ruby 跟 Python 本質上不同]]></summary>
        <content type="html"><![CDATA[<p>最近看到一篇 <a href="http://lightyror.thegiive.net/2008/01/ruby-python.html" target="_blank" rel="noopener noreferrer">Ruby 跟 Python 本質上不同</a></p><p>我也注意到一個現象： </p><p>偏向 c/c++/asp/php 的開發者對 Python 接受度較高，偏向 perl 的使用者則偏好 Ruby。
因為不管是 Python 還是 Ruby，要開發網頁都得寫 JavaScript，所以 JavaScript 沒有辨識度。</p><p>Python 像是先天武功密笈，不論資質，學了後一旦出招，都帶有 Pythonic 風格。
因為每個人寫起來的 Python 程式風格一致，更容易讓自己專注於內容。
而且學了 Pythonic 風格，自己使用其他語言寫作時也會想要盡量同樣簡明。</p><p>Python 社群的 Web 開發上也有更多的選擇，可以由禪入道 (TurboGears)、由佛入道 (Django)，或從諸多現成的組件中挑選，自行花幾個鐘頭打造一個。</p><p>魔幻語言則是武林密笈，靠著投靠門派，依師父傳授某些密籍 (開發、命名方法) 來鍛鍊自己的風格。</p><p>例如 Javascript 就從早期混著寫的方式，到近期 AJAX 興起，鼓吹 JS 與 HTML 分離的風格。永遠得追逐著非關語言的變化，來調整自己出招的方式。</p><p>學的好的有了自己的風格，學的不好的如邯鄲學步。</p><p>接了別人開始的案子要維護時，要按自己的風格重改過呢，還是照著前人的風格呢？
或是，就這麼接受風格混亂的程式碼，到最後難以維護？</p>]]></content>
        <category label="python" term="python"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[網摘2]]></title>
        <id>https://blog.gasolin.idv.tw/digest/digest-2</id>
        <link href="https://blog.gasolin.idv.tw/digest/digest-2"/>
        <updated>2008-01-04T01:48:41.000Z</updated>
        <summary type="html"><![CDATA[Why I chose Mercurial]]></summary>
        <content type="html"><![CDATA[<p><a href="http://www.dribin.org/dave/blog/archives/2007/12/30/why_mercurial/" target="_blank" rel="noopener noreferrer">Why I chose Mercurial</a>
Mercurial、git 等的比較。</p><p><a href="http://www.chweng.idv.tw/smart-questions.php" target="_blank" rel="noopener noreferrer">提問的智慧
</a><a href="http://vsevolod.balashov.name/middlestorm/" target="_blank" rel="noopener noreferrer">
middlestorm</a>
WSGI 的 Storm middleware</p><p><a href="http://www.postneo.com/talks/pycon2006/" target="_blank" rel="noopener noreferrer">Python in Your Pocket: Python for S60</a>
Python for s60 投影片</p><p><a href="http://ironpython-urls.blogspot.com/2008/01/ironpython-on-eee-pc-and-olpc.html" target="_blank" rel="noopener noreferrer">IronPython on eee PC and OLPC</a>
mono 可以在 eee PC 跟 OLPC 上跑了。</p>]]></content>
        <category label="digest" term="digest"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[開源的 Java 社群正向著水銀遷移]]></title>
        <id>https://blog.gasolin.idv.tw/devtools/Java-to-hg</id>
        <link href="https://blog.gasolin.idv.tw/devtools/Java-to-hg"/>
        <updated>2007-12-28T03:41:04.000Z</updated>
        <summary type="html"><![CDATA[剛剛發現開源的 Java 社群在版本控制系統(version control) 的選擇，正向著 Python mercurial 遷移。]]></summary>
        <content type="html"><![CDATA[<p>剛剛發現開源的 Java 社群在版本控制系統 (version control) 的選擇，正向著 Python mercurial 遷移。</p><p>證據是 <a href="http://www.selenic.com/mercurial/wiki/" target="_blank" rel="noopener noreferrer">Mercurial 的官方網站</a>上列出了近期的幾個 Sun 的重要專案都採用了 Mercurial：<a href="http://www.selenic.com/mercurial/wiki/" target="_blank" rel="noopener noreferrer"></a></p><h1>2007-12-12 NetBeans migrates to mercurial</h1><h1>2007-12-05 OpenJDK (aka Java) switches to Mercurial</h1><h1>2006-10-18 OpenSolaris announces ON Mercurial repository mirror</h1><p>包含 Sun 官方的 Java、NetBeans 跟 OpenSolaris 都採用 mercurial 分散式版本控制系統。
這對社群有極佳的示範作用。</p><p>試想一下，就跟許多 Linux 發佈套件開始用 BT 來分流一樣。
既然都開放下載了，用分散式的版本控制系統有助 Sun 降低其公司的網路流量，應該能省下不少花費。</p><p>另外，在 Windows 上相當有名的 tortoise 系列圖形化版本控制工具也出了 Mercurial 版囉，名叫<a href="http://tortoisehg.sourceforge.net/" target="_blank" rel="noopener noreferrer">tortoisehg</a>。(另外兩種是 tortoisecvs 跟 tortoisesvn)</p>]]></content>
        <category label="hg" term="hg"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[深入淺出 Android 手機應用程式設計，發佈]]></title>
        <id>https://blog.gasolin.idv.tw/android/dive-into-Android-dev-publish</id>
        <link href="https://blog.gasolin.idv.tw/android/dive-into-Android-dev-publish"/>
        <updated>2007-12-27T10:51:17.000Z</updated>
        <summary type="html"><![CDATA[深入淺出 Android 手機應用程式設計 是我從 11/12 Android 剛發佈即開始著手準備的寫作計畫。]]></summary>
        <content type="html"><![CDATA[<p><a href="http://code.google.com/p/androidbmi/wiki/DiveIntoAndroid" target="_blank" rel="noopener noreferrer">深入淺出 Android 手機應用程式設計</a> 是我從 11/12 Android 剛發佈即開始著手準備的寫作計畫。</p><p>當 Android 剛發佈時我馬上下載來玩了幾天，發現這是個很有趣的平台：Android 既是手機作業系統，卻有跨多平台 (Windows、Mac、Linux) 的開發工具；既是 Linux 平台，卻有許多類似 Web 開發的感覺。獨特的行程 (Process) 管理方式，讓程式運作起來頗有 Palm 平台反應迅速的風範。完整的上網功能，搭配 Google 地圖、Gmail 等服務，讓我看到許多不一樣的可能性。手上 Palm Treo650 用了多年，看來下一隻應該就是 Android 手機了。</p><p>我本身有一些 Palm 程式開發經驗、也有一些 Web 開發經驗，從 Android 並不是那麼完整的文件裡，也得到了一些領會。
個人自覺程式才華沒有到賺那大獎賽千萬獎金的境界，而快速地理解並與其他人分享才是我的長處。因此，寫些快快樂樂學 Android 教學文件，讓台灣的朋友也能快速上手 Android ，讓大家更有把握去賺那 Android 大獎賽的 1000 萬也許是個好主意。於是有了要寫些什麼的概念後，找了同學 Crota 一起腦力激盪，就開始動鍵盤寫作了。</p><p>寫作的同時當然也有想出書的念頭。透過朋友 Tib 跟 Yu 聯繫過 D 出版社跟 F 出版社，兩個出版社紛紛反應現在書市慘澹。由於手機軟體開發並非一般程式員會接觸到的課題，所以出版社覺得在台灣的市場恐怕不大，暫時沒有出版的計畫。</p><p>我想，既然一時沒有出版的計畫，那麼就乾脆回到原本的初衷，抱著希望讓台灣的朋友也能快速上手 Android 而能去參與比賽的想法，就來公開目前寫好的章節吧 XD</p><p>本書的目標讀者是這些人，你是否也是其中之一呢？</p><ul><li>Windows/Mac/Linux 各平台使用者</li><li>想學寫 Android 手機應用程式的人</li><li>想知道如何取得 Android 免費開發工具與資源的人</li><li>懂英文能上網的人</li><li>想知道怎麼查 Android 線上文件的人</li><li>有點物件導向 (OO) 程式經驗的人</li><li>J2ME/Java 學習者 / 開發者目前已於 <a href="http://code.google.com/p/androidbmi/wiki/DiveIntoAndroid" target="_blank" rel="noopener noreferrer">GoogleCode</a> 上公開了一部份章節內容，剩下的將慢慢補上。有些部份還只是初步的草稿，請持續關注<a href="http://code.google.com/p/androidbmi/wiki/DiveIntoAndroid" target="_blank" rel="noopener noreferrer">深入淺出 Android 手機應用程式設計</a> 。並歡迎提供建議。</li></ul><p>PS: <a href="http://code.google.com/p/androidbmi" target="_blank" rel="noopener noreferrer">androidbmi</a> 專案中的程式碼，即來自於書中的範例。</p>]]></content>
        <category label="Android" term="Android"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[wiifit 與瘦身]]></title>
        <id>https://blog.gasolin.idv.tw/life/wiifit-fit</id>
        <link href="https://blog.gasolin.idv.tw/life/wiifit-fit"/>
        <updated>2007-12-21T03:50:15.000Z</updated>
        <summary type="html"><![CDATA[有種最簡單的瘦身(減肥)法，就是每天紀錄你的體重曲線。]]></summary>
        <content type="html"><![CDATA[<p>有種最簡單的瘦身 (減肥) 法，就是每天紀錄你的體重曲線。</p><p>這個瘦身法的理論依據應該是這樣子：只要在潛意識裡，我們有在意體重這件事，就自然會節制飲食、注意運動。表現出的結果，自然就是會慢慢趨近理想體重了。</p><p>要實施這個瘦身法，首先要有一台體重計，再來就是準備一個紀錄體重變化的工具。簡單的工具比如紙跟筆、電腦化的工具如 Excel、或線上工具如 <a href="http://www.red-bean.com/fitz/ig/google15/faq.html" target="_blank" rel="noopener noreferrer">Google 15</a>。
你所要做的，就是持之以恆：每天量完體重後，將數值紀錄到這些工具上，然後在意數據 (或圖表曲線) 的變化。</p><p>當然，現在還有個更簡單的選擇 -- wiifit。</p><p>只要站上 wiifit 測量一下，wiifit 就會將你當天的體重與 BMI 值等資訊一起存成圖表。每次打開 wii 玩遊戲前，只要順便打開 wiifit 頻道測一下，持之以恆下來，估計也會有相同的瘦身效果。同時這也是一種從沒有遊戲嘗試過的新體驗。</p><p>在台灣，wiifit 並沒辦法取代健身房，因為 wiifit 只有附日文教練 XD (男女各一喔) 。但是別忘了，許多人想運動卻不想花一筆健身房錢。wiifit 正好讓我圓了請私人運動教練的夢想（還是外國貨 XD)。</p><p>我曾經有段時間會到宿舍附近的大湖公園跑步。
跑了一個月，覺得一個人在台北公園跑步無趣的很，出門跑步還要吸廢氣，跑完全身黏黏的還得走一段路回家，相當麻煩。於是我也漸漸停止了慢跑這項運動。 </p><p>wiifit 的慢跑運動中，全程配有一個 Mii 教練帶著你跑，每次跑的路線都不盡相同，與平常在外跑步一般都只有固定路線不同。而且 Mii 教練也會根據你跑步的狀態做出一些互動，如我跑步時只要一直保持相同的步調，螢幕下就會出現意思為 "現在你的步調很不錯喔" 的簡單互動訊息。也許這樣的互動準確度有限，不過確實提供了額外趣味與前進的動力。跑著跑著，路上有各種熟悉的 Mii (上 Mii 投票頻道抓的) 迎面跟我打招呼，或在旁舉起手來打氣加油。供慢跑的小島風景怡人，各種不同的地形、坡度，帶來了視覺上的不同刺激，保持了新鮮感；踩到草皮、海水的不同踏步音效，也都帶來了相當的樂趣。</p><p>昨天買到 (&lt;3.7k)，剛才終於跑完慢跑小島一圈模式，開啟了可選跑步時間的模式 (10,20,30 分)。感覺跑步功能很簡單也很有潛力，希望透過 wiiware 的推出，哪天除了慢跑小島外，還有其他場景可以探索。也許有一天，我也能在馬力歐銀河的場景裡跑步，那一定是個有趣的經驗 :D</p><p>PS: 在原地跑步又沒穿鞋襪的情況，反作用力可能會對腳踝造成較大的負擔。到底能不能持續靠著 wiifit 達到運動效果，我大概還要自己觀察一陣囉。</p><p>12/21 用 2 周活體實驗證明，人只要胖到一個程度，雖然有 wiifit 每天運動 30 min , 還是瘦不了 Orz</p>]]></content>
        <category label="game" term="game"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Pagoda CMS in Python and TurboGears]]></title>
        <id>https://blog.gasolin.idv.tw/python/Pagoda-CMS-in-Python-and-TurboGears</id>
        <link href="https://blog.gasolin.idv.tw/python/Pagoda-CMS-in-Python-and-TurboGears"/>
        <updated>2007-12-14T17:09:25.000Z</updated>
        <summary type="html"><![CDATA[Pagoda 是使用 TurboGears 框架撰寫的 CMS]]></summary>
        <content type="html"><![CDATA[<p>Pagoda 是使用 TurboGears 框架撰寫的 CMS</p><p></p><p>現在網站上僅有他們在 pycon 2007 上的 screencast</p><blockquote><p>Pagoda provides a first-class plugin-based content management system<br>
<!-- -->with a Web 2.0 management console
that integrates instantly with existing TurboGears applications.</p></blockquote><p><a href="http://groups.google.com/group/turbogears/browse_thread/thread/6555cf29f9ede0f3/01a6cbdb894bc7b8?#01a6cbdb894bc7b8" target="_blank" rel="noopener noreferrer">郵件列表</a>中他們揭示了 Pagoda CMS 的一些特色:</p><ul><li>只需兩行程式碼就能整合進任何使用 turbogears 撰寫的應用程式</li><li>專注於內容管理，而非取代整個網站</li><li>使用 SQLAlchemy 和 genshi</li><li>多語言內容版本 revisioned content in multiple languages</li><li>友善的介面</li><li>使用易於瞭解的詞彙與控制流程</li><li>頁面可以有附件，也可以嵌套內容</li><li>直接支持靜態內容 (如文件檔案), 亦提供 turbogears 新聞搜集，日曆，相簿，部落格等應用程式套件</li></ul><p>預計在三月底以 MIT license 發佈.</p><p>...... 要是這些特色都能實現的話，
因為新聞搜集，相簿，部落格等都有現成的 TurboGears 應用程式，若能用這個軟體全掛在一起，
可以完全體現 TurboGears 應用程式開發的優勢.
在 Python 網頁框架的佔有率之爭中，可能會是個扮演 FF7 角色的殺手呀.</p><p>2007.12: 可惜等了 9 個月連 Preview 都沒放出來，真是 Orz. 感覺 Django 已經吃下大部分新進的 Python Web developer 了.</p>]]></content>
        <category label="python" term="python"/>
        <category label="TurboGears" term="TurboGears"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[自由的古典音樂]]></title>
        <id>https://blog.gasolin.idv.tw/tools/free-classical</id>
        <link href="https://blog.gasolin.idv.tw/tools/free-classical"/>
        <updated>2007-12-08T05:10:33.000Z</updated>
        <summary type="html"><![CDATA[musopen 是個古典音樂網站，它的特色是其上所有的古典音樂都可以自由下載，也可以用線上廣播的方式收聽。]]></summary>
        <content type="html"><![CDATA[<p><a href="http://www.musopensource.com/radio/index.html" target="_blank" rel="noopener noreferrer">musopen</a> 是個古典音樂網站，它的特色是其上所有的古典音樂都可以自由下載，也可以用線上廣播的方式收聽。</p>]]></content>
        <category label="Music" term="Music"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[GHOP]]></title>
        <id>https://blog.gasolin.idv.tw/python/GHOP</id>
        <link href="https://blog.gasolin.idv.tw/python/GHOP"/>
        <updated>2007-12-08T01:43:12.000Z</updated>
        <summary type="html"><![CDATA[I think I don't need the introduction, I create Python!]]></summary>
        <content type="html"><![CDATA[<blockquote><p>I think I don't need the introduction, I create Python!
-- Guido Van Rossum</p></blockquote><p>Google 舉辦多年給大學生 / 研究生參與的<a href="http://code.google.com/soc/2007/" target="_blank" rel="noopener noreferrer">「程式碼之夏」(Summer of Code) </a>活動後，上週又推出開放國高中生參與的<a href="http://code.google.com/opensource/ghop/2007-8/" target="_blank" rel="noopener noreferrer">「GHOP」(Google Highly Open Participation Contest，念成 G-HOP)</a>活動。與「Summer of Code」活動一樣，Google 會從 Open Source 專案中挑選適當的專案，對其中專案有興趣的人可以申請參與。參與專案的方式很多樣，包含程式、教育、文件等方面。</p><p>第一年推出 10 個可參與的專案，其中三門 (MoinMoin、Plone、Python
) 與 Python 語言相關。</p><p>活動剛推出一週，負責 GHOP 的 PM 錄了一段 youtube，</p><object width="425" height="355"><param name="movie" value="http://www.youtube.com/v/pLA7wU1Kod4&amp;rel=1&amp;border=0"><param name="wmode" value="transparent"><embed src="http://www.youtube.com/v/pLA7wU1Kod4&amp;rel=1&amp;border=0" type="application/x-shockwave-flash" wmode="transparent" width="425" height="355"></object><p>在這段視頻中，除了可以看到一個胖阿姨攤在懶骨頭沙發上扭來扭去，也可以看到 Guido Van Rossum (Python 語言發明者)，和在本文最前面 quote 起來的超猛自我介紹。</p>]]></content>
        <category label="python" term="python"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[第一台能跑 Android OS 的非官方平台出現了 -- Sharp Zaurus SL-C760]]></title>
        <id>https://blog.gasolin.idv.tw/android/Android-OS-non-official-Sharp-Zaurus-SL-C760</id>
        <link href="https://blog.gasolin.idv.tw/android/Android-OS-non-official-Sharp-Zaurus-SL-C760"/>
        <updated>2007-12-07T02:25:25.000Z</updated>
        <summary type="html"><![CDATA[除了實際運行圖片外，還有照著做就能安裝成功的 instructions。真是強人 Orz]]></summary>
        <content type="html"><![CDATA[<p>除了實際運行圖片外，還有照著做就能安裝成功的 instructions。真是強人 Orz</p><p></p>]]></content>
        <category label="Android" term="Android"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[The day the routers died (2)]]></title>
        <id>https://blog.gasolin.idv.tw/android/The-day-the-routers-died-2</id>
        <link href="https://blog.gasolin.idv.tw/android/The-day-the-routers-died-2"/>
        <updated>2007-11-13T03:25:59.000Z</updated>
        <summary type="html"><![CDATA[當在車上的上網速度比在家裡還快時....]]></summary>
        <content type="html"><![CDATA[<p>當在車上的上網速度比在家裡還快時....
搭配 Google Android 發佈影片，更明顯感覺世界真的在變化</p><object width="425" height="355"><param name="movie" value="http://www.youtube.com/v/1FJHYqE0RDg&amp;rel=1&amp;border=0"><param name="wmode" value="transparent"><embed src="http://www.youtube.com/v/1FJHYqE0RDg&amp;rel=1&amp;border=0" type="application/x-shockwave-flash" wmode="transparent" width="425" height="355"></object>]]></content>
        <category label="Android" term="Android"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[有趣的 Geek 歌 -  The day the routers died]]></title>
        <id>https://blog.gasolin.idv.tw/ipv6/有趣的-Geek-歌-The-day-the-routers-died</id>
        <link href="https://blog.gasolin.idv.tw/ipv6/有趣的-Geek-歌-The-day-the-routers-died"/>
        <updated>2007-11-12T15:00:13.000Z</updated>
        <summary type="html"><![CDATA[很久很久以前]]></summary>
        <content type="html"><![CDATA[<p>很久很久以前
我還能記得
當我的筆記型電腦能在別處連線...</p><p></p><object width="425" height="355"><param name="movie" value="http://www.youtube.com/v/_y36fG2Oba0&amp;rel=1"><param name="wmode" value="transparent"><embed src="http://www.youtube.com/v/_y36fG2Oba0&amp;rel=1" type="application/x-shockwave-flash" wmode="transparent" width="425" height="355"></object>]]></content>
        <category label="IPv6" term="IPv6"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[周蟒中文程式語言的四不一沒有]]></title>
        <id>https://blog.gasolin.idv.tw/python/zhpy-4-differences</id>
        <link href="https://blog.gasolin.idv.tw/python/zhpy-4-differences"/>
        <updated>2007-10-22T05:47:54.000Z</updated>
        <summary type="html"><![CDATA[竊以為周蟒中文程式語言的四不一沒有是:]]></summary>
        <content type="html"><![CDATA[<p>竊以為<a href="http://code.google.com/p/zhpy/" target="_blank" rel="noopener noreferrer">周蟒中文程式語言</a>的四不一沒有是:</p><p>  一不：不強求完全的中文編程</p><p>過猶不及，絕大多數的程式語言是使用英文。周蟒中文程式語言的目標是協助使用者透過中文程式語言學習程式語言，進而接觸世界上大部份的程式語言，而不是脫離現實世界。</p><p>   二不：不用中文數字或運算符號 (加，減，乘，除 +, - ,*, /...)</p><p>程式語言中使用到數字與運算符號，並不僅只於常用的整數或四則運算符號。</p><p>  三不：不用文言文</p><p>程式語言是人與電腦溝通的語言，電腦只懂得平鋪直敘的邏輯。所以我們也不用掉書袋，直接用白話溝通。</p><p>  四不：不用中文標點符號</p><p>由於周蟒是完全兼容 <a href="http://www.python.org.tw/" target="_blank" rel="noopener noreferrer">Python 程式語言</a>的中文程式語言，而將中文的標點對應到英文標點的歧異不少，反而會造成寫作與辨識的困擾。統一使用英文標點並不影響閱讀，對以後學習其他英文程式語言也不致造成額外障礙。</p><p>  一沒有：沒有大括號 {}</p><p>周蟒是 Python 程式語言加上中文支援的中文程式語言，而 Python 程式語言本身就是使用結構化的程式區塊來代替以大括號判定程式區塊的語言。也符合中文使用習慣。</p>]]></content>
        <category label="zhpy" term="zhpy"/>
        <category label="python" term="python"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[我對測試的態度]]></title>
        <id>https://blog.gasolin.idv.tw/code/imho-test</id>
        <link href="https://blog.gasolin.idv.tw/code/imho-test"/>
        <updated>2007-10-22T05:45:04.000Z</updated>
        <summary type="html"><![CDATA[pycon 2007 裡的 presentation 提到測試金字塔, 由下而上將測試歸為三類：]]></summary>
        <content type="html"><![CDATA[<p>pycon 2007 裡的 presentation 提到測試金字塔，由下而上將測試歸為三類：</p><p>單元測試，功能測試，應用測試。</p><p>程式測試需要很多的單元測試，一些功能測試，少量的應用測試。</p><p>具有某個程度的單元測試可以保證代碼質量。</p><p>周蟒是我第一個包含完整測試的開源專案。然而周蟒也不是一開始就寫了測試用例.</p><p>我的經驗是 "先能跑，再求好"。在一開始先讓功能能跑，之後再想法改善或改寫。</p><p>周蟒改善或改寫的過程中，unittest, doctest (單元測試，功能測試),
與 example test (應用測試) 就是主要保證功能穩定的方式。</p><p>我覺得加入測試是我在開發周蟒過程中做出的最好決定。
當周蟒程式超過 15k 後，
已經進入難以將整份 code 短時間一次 Review 的階段。
這時我決定花時間為周蟒加入一部分測試用例。
我發現這麼作提昇了整個小程式的 ' 解析度 '-- nosetests 的報表告訴我：每個簡單的功能都運行。</p><p>當我在周蟒加入了某數量的測試用例後，周蟒的開發方式就有了質變。</p><p>由於可以提前由自動測試獲得功能結果，讓周蟒的開發方式變得更大膽，
我可以放心地大膽試驗各種新功能，並隨時能透過測試確認新功能對架構帶來的影響。
也得以在早期版本中即輕鬆地透過大規模的重構來增加架構的彈性。</p><p>用幾次就丟的程式 / 腳本當然沒加入測試的價值.
然而要維持一份可維護的程式，加入測試是很好的方式.</p>]]></content>
        <category label="aglie test" term="aglie test"/>
        <category label="python" term="python"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Python 語言的縮排迷思]]></title>
        <id>https://blog.gasolin.idv.tw/python/Python-indent</id>
        <link href="https://blog.gasolin.idv.tw/python/Python-indent"/>
        <updated>2007-09-28T01:35:36.000Z</updated>
        <summary type="html"><![CDATA[Guido 最近在他的 Blog 發佈一個文章連結 Myths about Indentation"，]]></summary>
        <content type="html"><![CDATA[<p>Guido 最近在他的 Blog 發佈一個文章連結: "<a href="http://www.secnetix.de/%7Eolli/Python/block_indentation.hawk" target="_blank" rel="noopener noreferrer">Python: Myths about Indentation</a>"，
這篇文章很好地解釋了對 Python 語言縮排的迷思。</p>]]></content>
        <category label="python" term="python"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[水銀 (mercurial) 浸入了大恐龍(Mozilla)]]></title>
        <id>https://blog.gasolin.idv.tw/devtools/mercurial-in-Mozilla</id>
        <link href="https://blog.gasolin.idv.tw/devtools/mercurial-in-Mozilla"/>
        <updated>2007-09-21T03:09:51.000Z</updated>
        <summary type="html"><![CDATA[最近 mozilla 宣佈要採用 水銀(mercurial, hg) 當作他們未來的版本控制系統.]]></summary>
        <content type="html"><![CDATA[<p>最近 mozilla 宣佈要採用 水銀 (mercurial, hg) 當作他們未來的版本控制系統.</p><p>我試了一下發現 mercurial 有用 twist 提供內建的 web server,
想用版本控制時再也不用先搞定 apache 設定了，Python 真是好呀</p><p>水銀分散式版本控制系統的使用概念如下:</p><p>0<!-- -->.<!-- --> 開個檔案夾 (<!-- -->[origin]<!-- -->), 開始 coding.
1<!-- -->.<!-- --> 告訴自己這個檔案夾裡放的是版本庫 (hg init).
2<!-- -->.<!-- --> 將原始版本中的所有檔案放進版本庫 (hg commit *).
3<!-- -->.<!-- --> 怕接下來的修改把原始版本改糟了，所以另外複製一份來改 (hg clone <!-- -->[origin][dst]<!-- -->).
4<!-- -->.<!-- --> 在複製檔案夾上改一改，覺得弄完一小階段了，先大致查看一下修改了些甚麼 (hg status), 然後儲存修改 (hg commit).
5<!-- -->.<!-- --> 重複修改的過程.
5.x 哇！遇到錯誤了怎麼辦？沒關係，用 ' 快速鍵 ' 將修改復原 (hg revert <!-- -->[id]<!-- -->).
6<!-- -->.<!-- --> 改得滿意了，將修改的東西存回原始檔案夾 (hg push <!-- -->[origin]<!-- -->).
7<!-- -->.<!-- --> 整理一下原始檔案夾 (hg update), 確認修改沒衝突.</p><p>其他應用</p><ul><li>開個 分享讓其他人也可以用 (hg serve <!-- -->[-p port]<!-- -->)</li><li>看看修改歷程 (hg log)</li><li>看看修改的內容 (hg diff)</li><li>修改有衝突了，進去檔案看看，解決它 (hg merge)</li><li>接受其他人的修改 (hg pull)</li></ul>]]></content>
        <category label="hg" term="hg"/>
        <category label="python" term="python"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Debugging]]></title>
        <id>https://blog.gasolin.idv.tw/code/Debugging</id>
        <link href="https://blog.gasolin.idv.tw/code/Debugging"/>
        <updated>2007-09-04T01:05:59.000Z</updated>
        <summary type="html"><![CDATA[Debugging is twice as hard as writing the code in the first place. Therefore, if you write the code as cleverly as possible, you are, by definition, not smart enough to debug it.]]></summary>
        <content type="html"><![CDATA[<blockquote><p>Debugging is twice as hard as writing the code in the first place. Therefore, if you write the code as cleverly as possible, you are, by definition, not smart enough to debug it.</p><p>剛開始時，除錯比起寫程式要難上兩倍。因此，如果你將程式寫得聰明無比，你必然不夠聰明以至於能除錯這個程式。</p><p>—Brian W. Kernighan, co-author of <em>The C Programming Language</em> and the "K" in "AWK"</p></blockquote>]]></content>
        <category label="aglie test" term="aglie test"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Code Like a Pythonista]]></title>
        <id>https://blog.gasolin.idv.tw/code/Code-Like-a-Pythonista</id>
        <link href="https://blog.gasolin.idv.tw/code/Code-Like-a-Pythonista"/>
        <updated>2007-08-01T09:09:32.000Z</updated>
        <summary type="html"><![CDATA[一個 pycon 2007 中的簡報,  總結了 Python 語言的編程習慣.]]></summary>
        <content type="html"><![CDATA[<p>一個 pycon 2007 中的<a href="http://python.net/%7Egoodger/projects/pycon/2007/idiomatic/presentation.html" target="_blank" rel="noopener noreferrer">簡報</a>,  總結了 Python 語言的編程習慣.
看起來相當棒.</p>]]></content>
        <category label="python" term="python"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[ipv6 howto book]]></title>
        <id>https://blog.gasolin.idv.tw/ipv6/ipv6-howto-book</id>
        <link href="https://blog.gasolin.idv.tw/ipv6/ipv6-howto-book"/>
        <updated>2007-07-23T06:19:38.000Z</updated>
        <summary type="html"><![CDATA[以前同學領導的國科會計畫,]]></summary>
        <content type="html"><![CDATA[<p>以前同學領導的國科會計畫，
提供在 FreeBSD 環境上架設 IPv6 Enable 相關服務的中文書，
每個動作都測試過兩遍以上保證可以照著執行，真是佛心來著 @@</p><p>還有附錄教怎麼安裝 FreeBSD</p><p>Index：</p><p><a href="http://louksblog.blogspot.com/2007/06/ipv6-howto-bookchapter-1_8232.html" target="_blank" rel="noopener noreferrer">Chapter 1： FreeBSD 與 WinXP 的 IPv6 相關基礎</a>
<a href="http://louksblog.blogspot.com/2007/06/ipv6-howto-bookchapter-2.html" target="_blank" rel="noopener noreferrer">Chapter 2： DNS 架設 — 使用 bind 9-9.3.2</a>
<a href="http://louksblog.blogspot.com/2007/06/chapter-3-www-apache2.html" target="_blank" rel="noopener noreferrer">Chapter 3： WWW 架設 — 使用 apache 2.2.0_7</a>
<a href="http://louksblog.blogspot.com/2007/06/ipv6-howto-bookchapter-4.html" target="_blank" rel="noopener noreferrer">Chapter 4： FTP 架設 — 使用 proftpd-1.3.0.r3</a>
<a href="http://louksblog.blogspot.com/2007/06/ipv6-howto-bookchapter-5.html" target="_blank" rel="noopener noreferrer">Chapter 5： Mail Server 架設</a>
<a href="http://louksblog.blogspot.com/2007/06/ipv6-howto-bookchapter-5_27.html" target="_blank" rel="noopener noreferrer">Chapter 6： NEWS 架設 — 使用 inn-current-20040118_1</a>
<a href="http://louksblog.blogspot.com/2007/06/ipv6-howto-bookchapter-7.html" target="_blank" rel="noopener noreferrer">Chapter 7： 在 FreeBSD 與 WindowsXP 上使用 Tunnel</a>
<a href="http://louksblog.blogspot.com/2007/06/ipv6-howto-bookchapter-8.html" target="_blank" rel="noopener noreferrer">Chapter 8： FreeBSD 與 KAME project</a>
<a href="http://louksblog.blogspot.com/2007/06/chapter-9-freebsdipv6-router-ipv6.html" target="_blank" rel="noopener noreferrer">Chapter 9： FreeBSD 上建置 IPv6 Router</a>
<a href="http://louksblog.blogspot.com/2007/07/ipv6-howto-bookchapter-10.html" target="_blank" rel="noopener noreferrer">Chapter 10： ISATAP Tunnel</a>
<a href="http://louksblog.blogspot.com/2007/07/ipv6-howto-book-freebsd.html" target="_blank" rel="noopener noreferrer">附錄： 安裝 FreeBSD</a></p>]]></content>
        <category label="IPv6" term="IPv6"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[XML templates 比 Plain-text templates 還快?]]></title>
        <id>https://blog.gasolin.idv.tw/python/XML-templates-faster-than-Plain-text-templates</id>
        <link href="https://blog.gasolin.idv.tw/python/XML-templates-faster-than-Plain-text-templates"/>
        <updated>2007-06-29T19:46:40.000Z</updated>
        <summary type="html"><![CDATA[genshi 的開發者說 genshi 的 markup 核心用 C 重寫後測效能時比原來快 10%~20%,]]></summary>
        <content type="html"><![CDATA[<p><a href="http://genshi.edgewall.org/" target="_blank" rel="noopener noreferrer">genshi</a> 的開發者說 genshi 的 markup 核心用 C 重寫後測效能時比原來快 10%~20%,
測試工具所測出來的效能已超越了 Django templates .</p><blockquote><p>yesterday I merged the cspeedups branch into trunk, which adds a C
implementation of the genshi.core.Markup class. This improves
performance around 10-20% in the benchmarks (Genshi now outperforms
Django templates in the bigtable.py benchmark).</p></blockquote>]]></content>
        <category label="django" term="django"/>
        <category label="python" term="python"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[trac-subversion 安裝配置設定三合一 (Ubuntu)]]></title>
        <id>https://blog.gasolin.idv.tw/devtools/trac-subversion-Ubuntu-installation</id>
        <link href="https://blog.gasolin.idv.tw/devtools/trac-subversion-Ubuntu-installation"/>
        <updated>2007-06-27T09:01:17.000Z</updated>
        <summary type="html"><![CDATA[因為電源不穩的關係, 苦吞 "svn: No such revision 425 " 訊息. svnadmin recover 都不管用, 只好重新 import 一次 Source 啦... 下次一定研究怎麼自動備份 Orz.]]></summary>
        <content type="html"><![CDATA[<p>因為電源不穩的關係，苦吞 "svn: No such revision 425" 訊息. svnadmin recover 都不管用，只好重新 import 一次 Source 啦... 下次一定研究怎麼自動備份 Orz.</p><h1>安裝 install apache</h1><p>$ sudo apt-get install apache2</p><h1>安裝 install subversion</h1><p>$ sudo apt-get install subversion</p><p>$ sudo apt-get install libapache2-svn</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="設定-confiigure-subversion">設定 Confiigure subversion<a href="#設定-confiigure-subversion" class="hash-link" aria-label="Direct link to 設定 Confiigure subversion" title="Direct link to 設定 Confiigure subversion">​</a></h2><p>Enter menu system/management/user_and_group</p><p>change to group tab, add atwo new group named "www-data"(apache) and "subversion"
then add user <!-- -->[your account]<!-- --> and "www-data" to "subversion"'s group members.</p><p>or use command instead::</p><p> $ sudo adduser www-data subversion
$ sudo adduser <!-- -->[your account]<!-- --> subversion</p><p>Then we could create svn repository::</p><p> $ sudo svnadmin create /home/svn  (or $ sudo svnadmin /usr/local/svn)</p><p>Then Change the folder owner</p><p> $ sudo chown -R www-data:www-data /home/svn
$ sudo chmod -R g+ws /home/svn</p><p>Setup apache host site
$ sudo gedit /etc/apache2/mods-enabled/dav_svn.conf</p><p>uncomment following lines:</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">[Location /svn]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">DAV svn</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">SVNPath /home/svn</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">AuthType Basic</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">AuthName "Subversion Repository"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">AuthUserFile /etc/subversion/passwd</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[/Location]</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>or add following just above the /location:</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">[LimitExcept GET PROPFIND OPTIONS REPORT]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    Require valid-user</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    [/LimitExcept]</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>為 subversion 存取加上密碼:</p><p>sudo htpasswd -c /etc/subversion/passwd user_name</p><p>重開 apache:</p><p>sudo /etc/init.d/apache2 restart</p><p>驗證能取得 svn 檔案:</p><p>$ svn co http://hostname/svn/myproject myproject --username user_name</p><h1>安裝 Install Trac</h1><p>$ sudo apt-get install trac</p><p>$ sudo mkdir /home/trac
$ sudo chown www-data:www-data /home/trac</p><p>To add a virtual host to host trac:</p><p>$ sudo gedit /etc/apache2/sites-available/trac</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">[VirtualHost *]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     ServerAdmin webmaster@localhost</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     ServerName trac.example.com</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     DocumentRoot /usr/share/trac/cgi-bin/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     [Directory /usr/share/trac/cgi-bin/]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">             Options Indexes FollowSymLinks MultiViews ExecCGI</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">             AllowOverride All</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">             Order allow,deny</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">             allow from all</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     [/Directory]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     Alias /trac "/usr/share/trac/htdocs"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     [Location /]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">             SetHandler mod_python </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">             PythonHandler trac.web.modpython_frontend </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">             PythonOption TracEnvParentDir /home/trac</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">             #PythonOption TracEnv /home/trac/singletrac</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">             PythonOption TracUriRoot /</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     [/Location]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     DirectoryIndex trac.cgi</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     ErrorLog /var/log/apache2/error.trac.log</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     CustomLog /var/log/apache2/access.trac.log combined</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[/VirtualHost]</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Uncomment the AddHandler line in /etc/apache2/apache2.conf so that the Trac CGI program will be executed:</p><h1>To use CGI scripts outside /cgi-bin/:</h1><h1></h1><p>AddHandler cgi-script .cgi</p><p>Disable the default virtualhost, enable the Trac virtualhost, and restart Apache2:</p><p>sudo a2dissite default
sudo a2ensite trac
sudo  /etc/init.d/apache2 reload</p><h1>Make New Trac Project expose to web</h1><p>sudo trac-admin /home/trac/YourProjectNameHere initenv</p><p>Then the interactive interface was prompt:
<!-- -->[specify the repository to /home/svn/YourProjectNameHere]</p><p>sudo chown -R www-data /home/trac/YourProjectNameHere</p><p>Refer to
<a href="http://trac.edgewall.org/wiki/TracOnUbuntu" target="_blank" rel="noopener noreferrer">http://trac.edgewall.org/wiki/TracOnUbuntu</a>
<a href="http://trac.edgewall.org/wiki/TracModPython" target="_blank" rel="noopener noreferrer">http://trac.edgewall.org/wiki/TracModPython</a>
<a href="http://www.blendedtechnologies.com/setting-up-subversion-on-ubuntu/11" target="_blank" rel="noopener noreferrer">http://www.blendedtechnologies.com/setting-up-subversion-on-ubuntu/11</a>
<a href="http://philipatswarchy.wordpress.com/2006/11/27/apachesslsubversionpam/" target="_blank" rel="noopener noreferrer">http://philipatswarchy.wordpress.com/2006/11/27/apachesslsubversionpam/</a></p>]]></content>
        <category label="trac" term="trac"/>
        <category label="subversion" term="subversion"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[與 NS3 的第一次接觸-2]]></title>
        <id>https://blog.gasolin.idv.tw/devtools/2nd-contact-with-NS3</id>
        <link href="https://blog.gasolin.idv.tw/devtools/2nd-contact-with-NS3"/>
        <updated>2007-06-19T14:04:51.000Z</updated>
        <summary type="html"><![CDATA[前篇 中提到模擬程式跑完會產生 trace  (.tr)檔. 這幾天再仔細看了一下, 模擬程式跑完竟然也會產生 .pcap 檔!]]></summary>
        <content type="html"><![CDATA[<p><a href="http://inet6.blogspot.com/2007/06/ns3.html" target="_blank" rel="noopener noreferrer">前篇</a> 中提到模擬程式跑完會產生 trace  (.tr) 檔。這幾天再仔細看了一下，模擬程式跑完竟然也會產生 .pcap 檔！</p><p>pcap 封包檔案是用來紀錄網路封包的格式。這個檔案格式可以使用 tcpdump 或是圖形介面的 wireshark 等工具開啟，從除錯的角度上來看，因為有一些現成封包分析工具可用來分析 pcap 封包檔，因此比起 .tr 檔更容易分析。對熟悉網路開發的人來說，pcap 讓人有從真實網路抓封包的錯覺 :D</p><p>一打開 pcap 封包，NS-3 目前的優缺點就無所遁形:</p><p>優點:</p><p>1<!-- -->.<!-- --> 封包格式參照真實封包定義，擴充性佳</p><p>缺點:</p><p>1<!-- -->.<!-- --> 封包目前只支援 IP, UDP, 沒有 mac 層支援
2<!-- -->.<!-- --> 沒計算 checksum (計較起來這其實不算缺點，沒有那個做網路模擬的還真的去算 checksum)</p><p>另外 NS-3 還比較差的一點是目前的拓樸描述還蠻醜的，宣告一個網路節點會用到這種鬼語法:</p><blockquote><p>Ptr<!-- -->[node]<!-- --> n0 = Create<!-- -->[internetnode]<!-- --> (); 相對 8 月中預計發佈的 3.0.5 版中可使用的 Python script 版本宣告則是:
n0 = ns.MakeInterNetNode () 同樣的 simple-p2p 拓樸，Python 版的可能是因為加入較少與實做相關的 code 所以比較好理解.
擁有較好可讀性的 Python script 應該是個學習網路模擬的好幫手 :D</p></blockquote>]]></content>
        <category label="NS3" term="NS3"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[與 NS3 的第一次接觸]]></title>
        <id>https://blog.gasolin.idv.tw/devtools/1st-contact-with-NS3</id>
        <link href="https://blog.gasolin.idv.tw/devtools/1st-contact-with-NS3"/>
        <updated>2007-06-19T13:21:19.000Z</updated>
        <summary type="html"><![CDATA[NS-3? 跟PS3沒關係 NS(Network Simulator)-3 是已經主宰網路模擬界多年的 NS2 的繼任者. 原來 NS-3 早已悄悄上路. 值得花點時間來瞧瞧 NS-3 有什麼改進.]]></summary>
        <content type="html"><![CDATA[<p><a href="http://www.nsnam.org/" target="_blank" rel="noopener noreferrer">NS-3</a>? <del>跟 PS3 沒關係</del> NS (Network Simulator)-3 是已經主宰網路模擬界多年的 <a href="http://www.isi.edu/nsnam/ns/" target="_blank" rel="noopener noreferrer">NS2</a> 的繼任者。原來 NS-3 早已悄悄上路。值得花點時間來瞧瞧 NS-3 有什麼改進.</p><p>初接觸的感覺還不錯，NS-3 有個比 NS2 規範多的<a href="http://www.nsnam.org/" target="_blank" rel="noopener noreferrer">網站</a>, 拿掉 otcl 介面描述語言，使用 C++ 模組化元件並直接用 C++ 來描述拓樸，有<a href="http://code.nsnam.org/" target="_blank" rel="noopener noreferrer">公開</a>可參與的程式碼，有定期的<a href="http://www.nsnam.org/wiki/index.php/Roadmap" target="_blank" rel="noopener noreferrer">版本發佈規劃</a>, 而且有 <a href="http://code.nsnam.org/gjc/ns-3-pybindgen/" target="_blank" rel="noopener noreferrer">Python Binding</a> (用 Python script 來描述拓樸，與控制模擬的互動) 的規劃！</p><p>有 Python Binding 這件事其實看了他們的網站並不那麼意外.
NS-3 專案程式碼用 <a href="http://www.selenic.com/mercurial/" target="_blank" rel="noopener noreferrer">mercurial</a> 管理 (用 python 寫的分散式版本控制系統), 所以程式碼可以用 "hg clone http://<a href="http://code.nsnam.org/ns-3-dev/%22%E6%8A%93%E4%B8%8B%E4%BE%86" target="_blank" rel="noopener noreferrer">http://code.nsnam.org/ns-3-dev/" 抓下來</a>. 預設的編譯程式是一般比較少聽過的 scons, 而在<a href="http://www.nsnam.org/wiki/index.php/Roadmap" target="_blank" rel="noopener noreferrer">版本發佈規劃</a>中不久就要以另一套 waf 來取代原本的 scons.  scons 跟 waf 都是 Python 版的 "better Make" 程式.
總之原本 Makefile 要用 shell script 寫的地方，都改用 python script 來撰寫，可讀性較佳之外還可以用到 Python 語言的所有功能.</p><p>就 NS-3 模組本身而言，NS-3 去掉了 NS-2 中 <del>討人厭的</del> 使用 otcl 描述模型的方式，改成<a href="http://code.nsnam.org/gjc/ns-3-pybindgen/file/1690717820e3/examples/simple-p2p.cc" target="_blank" rel="noopener noreferrer">直接用 C++ 描述</a>之後，安裝上簡單了不少，也不用多學一門沒啥用途的語言. C++ 讓多數基本網路元件可以重用，像以前各個模組會 "綁版本" 的情形應可降低很多.</p><p>目前還在開發中的 Python Binding 讓 <a href="http://code.nsnam.org/gjc/ns-3-pybindgen/file/1690717820e3/examples/simple-p2p.py" target="_blank" rel="noopener noreferrer">網路模型也可以用 Python 描述</a>, 晚上編譯完還沒意識到如何使用 Python 版。不過編好的 C++ 版一執行就跑出熟悉的 .tr 檔還是蠻有親切感的.</p><p>目前 NS-3 的核心網路元件還不多 (不過 node 終於可以有真的 IP 位址了 XD), 範例較少是比較可惜的。看看這情形要多久才能改善囉.</p>]]></content>
        <category label="NS3" term="NS3"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Turbogears widgets 介紹 -- 表單篇]]></title>
        <id>https://blog.gasolin.idv.tw/python/Turbogears-widgets-form</id>
        <link href="https://blog.gasolin.idv.tw/python/Turbogears-widgets-form"/>
        <updated>2007-05-22T08:34:43.000Z</updated>
        <summary type="html"><![CDATA[相信在做網頁開發時不少人被表單處理困擾著,]]></summary>
        <content type="html"><![CDATA[<p>相信在做網頁開發時不少人被表單處理困擾著，
cherrypy 的網頁表單處理已經很簡單了，
而 TurboGears 更為我們帶來了 widget (網頁元件) 這個概念.
透過 widget 能簡單地完成產生表單，欄位驗證，重用表單等等仔細思考起來相當複雜的動作.</p><p>TurboGears 開發者們宣稱 widget 多麼好用，但是 widget 的說明文件卻相當缺乏.</p><p>那麼 widget 到底是什麼東西哩？</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="widget-是什麼">widget 是什麼<a href="#widget-是什麼" class="hash-link" aria-label="Direct link to widget 是什麼" title="Direct link to widget 是什麼">​</a></h2><p>widget 用中文表達簡而言之就是 "網頁元件",
TurboGears widget 的功能就是讓使用者重用所有網頁元件.</p><p>那麼網頁元件是什麼？網頁元件就是網頁的構成元素.</p><p>古代希臘先哲柏拉圖認為風，火，水，土是構成世界的四大元素。所有的物質最終都可以拆解成這四個元素.</p><p>而在網頁的世界裡，HTML, 表單 (Form), CSS, Javascript 則是網頁的四大構成元素.(註)
多數的網頁都可以由這四個元素組合產生.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="widget-表單元件">Widget 表單元件<a href="#widget-表單元件" class="hash-link" aria-label="Direct link to Widget 表單元件" title="Direct link to Widget 表單元件">​</a></h3><p>Widget 表單屬於 Widget 的一個重要分支。由以下的基本網頁元件組成:</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">* 表單欄位元件 (Field) — 等同於 HTML 表單欄位的基本元素, 如文字欄位 [input type="text"] 文字區塊欄位 (textarea) 等等. 用來產生基本的表單欄位.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">* 表單欄位列表元件 (WidgetList) - 用來有機地組合表單欄位元件, 產生欄位列表, 提供表單元件使用.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">* 表單元件(Form) — 表單欄位, 驗證資訊, 處理方式(post 或 get), 處理函式 (URI) 的集合. 可使用現有的驗證功能 validators.Schema 來做表單驗證.</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>除了基本的表單欄位元件，TurboGears 也透過 widget 提供了一些進階的表單欄位元件例如跳頁選單 (表單 + Javascript), 語法高亮 (HTML+CSS+Javascript), 標籤頁 (HTML+Javascript) 等元件，這些高級元件 (Rich Element) 也都是由這些網頁中最常見的基本元素所組成.</p><p>透過 widget 你可以自己建造自己的網頁元件，也可以透過 python 的擴充機制，很容易使用 easy_install 命令取得其他人共享出來的各種元件.</p><p>在使用高級元件之前，我們回到基本面上，先來看看如何用 widget 處理表單.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="用-widget-產生表單欄位">用 widget 產生表單欄位<a href="#用-widget-產生表單欄位" class="hash-link" aria-label="Direct link to 用 widget 產生表單欄位" title="Direct link to 用 widget 產生表單欄位">​</a></h2><p>你可以在互動式直譯器 (interactive interpreter) 裡試驗 TurboGears widget.</p><p>產生 TextField</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">&gt;&gt;&gt; # TextField</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;&gt;&gt; from turbogears.widgets import *</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;&gt;&gt; Field = TextField(label='Main Menu')</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;&gt;&gt; Field.render()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">'&lt;input id="widget" class="textfield" name="widget" type="text"&gt;'</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>產生 TextArea</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">&gt;&gt;&gt; # TextArea</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;&gt;&gt; Field2 = TextArea(label="Description", attrs=dict(rows=3, cols=60))</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;&gt;&gt; Field2 = TextArea(label="Description",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">...     attrs=dict(rows=3, cols=60))</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">...</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;&gt;&gt; Field2.render()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">'&lt;textarea rows="3" cols="60" class="textarea" name="widget" id="widget"&gt;&lt;/textarea&gt;'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;&gt;&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>在 Python 互動式直譯器裡你可以看到用 TurboGears widget 產生一個表單欄位並不困難.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="用-widget-產生跳頁選單">用 widget 產生跳頁選單<a href="#用-widget-產生跳頁選單" class="hash-link" aria-label="Direct link to 用 widget 產生跳頁選單" title="Direct link to 用 widget 產生跳頁選單">​</a></h2><p>我們再來看如何用 widget 產生跳頁選單</p><p>跳頁選單適用於諸如 "選擇使用的語言" 等等情況，
可以在使用者選擇後自動跳至對應的網頁.</p><p>首先，我們先看看如何產生一般的網頁選單</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">&gt;&gt;&gt; # SingleSelect Field</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;&gt;&gt; Field3 = SingleSelectField(label="Author",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">...       options=[(1, "fred"), (2, "Joe")])</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">...</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;&gt;&gt; Field3.render()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">'&lt;select class="singleselectfield" name="widget" id="widget"&gt;    &lt;option value="1"&gt;fred&lt;/option&gt;&lt;option value="2"&gt;Joe&lt;/option&gt;&lt;/select&gt;'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;&gt;&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>到現在為止，我們可以確認產生一般網頁選單的方式與前面生成簡單文字欄位的方式完全一致.</p><p>我們接著來看看如何產生跳頁選單.</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">&gt;&gt;&gt; # JumpMenu</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;&gt;&gt; from turbogears.widgets import *</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;&gt;&gt; Form = JumpMenu('Main Menu',options = [</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">...        ('/createNewBatch', 'Create New Batch'),])</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">...</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;&gt;&gt; Form.render()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">'&lt;select class="jumpmenu" onchange="TG_jumpMenu(\'parent\',this,0)" id="Main Menu" name="Main Menu"&gt;    &lt;option value="/createNewBatch"&gt;Create New Batch&lt;/option&gt;&lt;/select&gt;'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;&gt;&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>恩，產生跳頁選單跟產生一般網頁選單的使用方式並無二致。也同樣是這麼容易.</p><p>跳頁選單無法在 Python 互動式直譯器中完全表現，
因為在實際使用時，跳頁選單元件除了會產生這段 HTML 表單外，
嵌入 turbogears 網頁樣板時網頁元件還會自動嵌入相應的 javascript.</p><p>等你熟悉了 Turbogears 之後，
透過 widget, 即使是很複雜的 javascript 元件 (如所見即所得網頁介面編輯器),
你也不必擔心要導入哪些 Javascript library 等瑣事，透過網頁元件的分享，你可以直接透過 easy_install 命令即裝即用別人寫好的網頁元件。然後把時間用在自己網站內容的開發上.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="用-widget-產生表單">用 widget 產生表單<a href="#用-widget-產生表單" class="hash-link" aria-label="Direct link to 用 widget 產生表單" title="Direct link to 用 widget 產生表單">​</a></h2><p>前面已經講完用 widget 產生表單 "欄位" 了。然而一個表單除了基本的各個欄位之外，
還包含了一些其他元素。例如如何組織欄位，指定上傳方式 (GET/POST), 指定處理動作 (action) 等等.</p><p>TurboGears 裡已包含了數種預設表單欄位的格式。而其中最常見的就是 TableForm 了.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="用-widget-組織表單欄位">用 widget 組織表單欄位<a href="#用-widget-組織表單欄位" class="hash-link" aria-label="Direct link to 用 widget 組織表單欄位" title="Direct link to 用 widget 組織表單欄位">​</a></h2><p>可以透過 WidgetsList 來組織表單欄位.</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">&gt;&gt;&gt; class BookFields(WidgetsList):</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">...  title = TextField(label="Title")</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">...  description = TextArea(label="Description")</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">...</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;&gt;&gt; BookFields()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[TextField(name='title', convert=True, field_class='textfield', attrs={}, css_classes=[]), TextArea(name='description', convert=True, rows=7, cols=50, attrs={}, css_classes=[], field_class='textarea')]</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>我們已經組織起了兩個文字欄位，通過最後一行可以發現 WidgetsList 其實只是協助我們產生了一個表單欄位元件的列表.
接下來我們就要把這個欄位列表放進表單裡.</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">&gt;&gt;&gt; class BookForm(TableForm):</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">...     #name="Book"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">...  fields = BookFields()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">...     #validator = BookSchema()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">...     #method="post"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">...  submit_text = "Create"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">...</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;&gt;&gt; BookForm()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">BookForm(name='form', submit_text='Create', convert=True, table_attrs={}, form_attrs={}, action=None, disabled_fields=set([]), method='post')</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;&gt;&gt; BookForm().render()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">'.form method="post" class="tableform" name="form".</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">......略......</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">./form.</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>基本上這產生的就是相當完整的表單了....</p><p>等等！～～想必你要大聲質疑：我的 "action" 呢？？？換句話說，我怎麼指定處理這個表單的 url 呢？</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="widget-與樣板合作">widget 與樣板合作<a href="#widget-與樣板合作" class="hash-link" aria-label="Direct link to widget 與樣板合作" title="Direct link to widget 與樣板合作">​</a></h2><p>恩，好問題。你可以直接在宣告時就將 action 的值傳給 widget,
也可以在樣板 render 時再傳入。一般我習慣習慣在表單最終產生時 (樣板 render 時) 再指明.</p><p>例如這樣</p><p>在 controllers.py 中加入</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">model_form = BookForm() # 事先宣告好在重用時不用多次呼叫</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="產生實際表單頁面">產生實際表單頁面<a href="#產生實際表單頁面" class="hash-link" aria-label="Direct link to 產生實際表單頁面" title="Direct link to 產生實際表單頁面">​</a></h3><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">@expose("template.new")</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">def new(self, **kw):</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">return dict(form = model_form)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>在 "new.kid" 樣板中加入這一行</p><p><code>${form(action='save')}</code></p><p>當然有了處理這個表單的 url  , 也需要在 controllers.py 中加入一個處理 "save" 這個處理表單資料的 method</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">@expose()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">def save(self, id=None, **kw):</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">....</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>前面講起來好像花了不少篇幅，但其實看完程式後你會發現使用 widget
程式邏輯變得出乎意料之外的清晰.
<a href="http://docs.turbogears.org/1.0/CRUDTemplate" target="_blank" rel="noopener noreferrer">http://docs.turbogears.org/1.0/CRUDTemplate</a></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="用-widget-驗證表單欄位">用 widget 驗證表單欄位<a href="#用-widget-驗證表單欄位" class="hash-link" aria-label="Direct link to 用 widget 驗證表單欄位" title="Direct link to 用 widget 驗證表單欄位">​</a></h2><p>驗證表單欄位其實只要在 TableForm 中傳入 validator 參數即可</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">&gt;&gt;&gt; class BookForm(TableForm):</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">...  fields = BookFields()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">...  validator = BookSchema()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">...  submit_text = "Create"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">...</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;&gt;&gt; BookForm().render()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">.....略....</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>你可以使用 formencode 模組所提供的 "Schema" 完成任何複雜的表單驗證程序.
從比較基本的輸入字數長短 / 類型驗證，到多欄位密碼確認等都可以簡單地達成.
(Turbogears 將 formencode 的 Schema 包裝成 validators.Schema)</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">&gt;&gt;&gt; from turbogears import validators</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;&gt;&gt; class BookSchema(validators.Schema):</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">...  title = validators.String(not_empty=True, max=30)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">...  description = validators.String()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">...</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;&gt;&gt; BookSchema()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&lt;bookschema object="" 114="" chained_validators="[]" fields="{'description':" title="" pre_validators="[]"&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;&gt;&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>上一節中我們在 controllers.py 裡定義了</p><p><code>model_form = BookForm()</code></p><p>現在我們在做表單驗證時也可以用的上.</p><p>用法是簡單地在 "save" 這個 method 上加上 @validate (model_form) 裝飾。表示要使用 model_form 表單元件所附的表單驗證元件.</p><p>而要順便將輸入錯誤的訊息產生在表單上的話，只要再加入 @error_handler (new) 裝飾，
表示如果有錯誤就跳轉到 new 這個 method (我們的表單頁) 處理.</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">@validate(model_form)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@error_handler(new)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@expose()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">def save(self, id=None, **kw):</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">....</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="widget-還可以幹什麼">widget 還可以幹什麼<a href="#widget-還可以幹什麼" class="hash-link" aria-label="Direct link to widget 還可以幹什麼" title="Direct link to widget 還可以幹什麼">​</a></h2><p>widget 可以讓你用最 Pythonic 的方式表現網頁表單，也可以簡化提供不同 AJAX 函式庫的支援.</p><p>你覺得網頁元件能幹什麼，Turbogears widget 就可以幫助你幹什麼.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="怎麼知道有哪些-widget">怎麼知道有哪些 widget<a href="#怎麼知道有哪些-widget" class="hash-link" aria-label="Direct link to 怎麼知道有哪些 widget" title="Direct link to 怎麼知道有哪些 widget">​</a></h2><p>Turbogears 的網頁工具箱 toolbox 中有網頁元件瀏覽器 (widget browser).
使用 $tg-admin toolbox 命令啟動網頁工具箱就會看到網頁元件瀏覽器.
在網頁元件瀏覽器中你可以找到所有內建與外掛的網頁元件.</p><p>外掛的網頁元件 (widget plugin) 可以在 cogbin (<a href="http://www.turbogears.org/cogbin/" target="_blank" rel="noopener noreferrer">http://www.turbogears.org/cogbin/</a>) 找到.</p><p>註：嚴格說來，"表單" 其實是屬於 HTML 的一部分.
所以也可以說網頁的三大基本組成元素是 HTML, CSS, Javascript.</p><p>TurboGears widget 實現表單的方式也是組合這三大基本組成元素.</p><p>然而因為表單的使用與其他 HTML 元素的使用有較大差別.
在說明時獨立出來更易於理解.</p>]]></content>
        <category label="widgets" term="widgets"/>
        <category label="python" term="python"/>
        <category label="TurboGears" term="TurboGears"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[TurboGears 的開發哲學]]></title>
        <id>https://blog.gasolin.idv.tw/python/TurboGears-dev-philosophy</id>
        <link href="https://blog.gasolin.idv.tw/python/TurboGears-dev-philosophy"/>
        <updated>2007-05-11T19:06:40.000Z</updated>
        <summary type="html"><![CDATA[TurboGears 的開發哲學有三:]]></summary>
        <content type="html"><![CDATA[<p>TurboGears 的開發哲學有三:</p><p>1<!-- -->.<!-- --> Keep simple things simple and complex things possible
讓簡單的事情維持簡單，並讓複雜的事情變得可辦到</p><p>2<!-- -->.<!-- --> Give defaults while you give choices
提供選擇時一並提供預設值.</p><p>3<!-- -->.<!-- --> Give choices while the one obvious way depends
當莫衷一是時就提供選擇.</p>]]></content>
        <category label="zen" term="zen"/>
        <category label="TurboGears" term="TurboGears"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[NDS 上跑 Python]]></title>
        <id>https://blog.gasolin.idv.tw/python/NDS-Python</id>
        <link href="https://blog.gasolin.idv.tw/python/NDS-Python"/>
        <updated>2007-04-02T12:35:16.000Z</updated>
        <summary type="html"><![CDATA[(這段是 KUSO 的) 繼 Ruby 在 GBA 上大顯神威賣破百萬套之後 ,]]></summary>
        <content type="html"><![CDATA[<p></p><p>(這段是 KUSO 的) 繼 <a href="http://www.amazon.com/Nintendo-45496732530-Pokemon-Ruby/dp/B000084313/ref=sr_1_1/104-3408780-2552749?ie=UTF8&amp;s=toys-and-games&amp;qid=1175423710&amp;sr=8-1" target="_blank" rel="noopener noreferrer">Ruby</a> 在 GBA 上大顯神威賣破百萬套之後，</p><p>(這段是正經的) Python 終於悄悄爬上了 NDS 硬體.</p><p></p><p></p><p>果然什麼主流平台 (NDS 已經賣破一千五百多萬台) 上都可以跑 Python 呀.</p>]]></content>
        <category label="nds" term="nds"/>
        <category label="python" term="python"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[pypy 架構分析 1]]></title>
        <id>https://blog.gasolin.idv.tw/python/trace-pypy-arch-1</id>
        <link href="https://blog.gasolin.idv.tw/python/trace-pypy-arch-1"/>
        <updated>2007-04-02T02:55:18.000Z</updated>
        <summary type="html"><![CDATA[以前已經有些人研究過 Python 原始碼.]]></summary>
        <content type="html"><![CDATA[<p>以前已經有些人研究過 Python 原始碼.</p><p></p><p></p><p><a href="http://tag.csdn.net/tag/python%E6%BA%90%E7%A0%81%E7%A0%94%E7%A9%B6/1.html" target="_blank" rel="noopener noreferrer">python 源码分析</a> 中有列出 Python 語法分析的機制。回顧一下 cPython 的整個處理流程：</p><p>1<!-- -->.<!-- -->     PyTokenizer 進行詞法分析，把源程序分解為 Token</p><p>2<!-- -->.<!-- -->     PyParser 根據 Token 創建 CST</p><p>3<!-- -->.<!-- -->     CST 被轉換為 AST</p><p>4<!-- -->.<!-- -->     AST 被編譯為字節碼 ByteCode</p><p>5<!-- -->.<!-- -->     執行字節碼</p><p>這個流程是直譯器 Interpreter 的流程.
大體也可以套用在 pypy 的 Python 直譯器上.</p><p><a href="http://codespeak.net/pypy/dist/pypy/doc/architecture.html" target="_blank" rel="noopener noreferrer">PyPy - Goals and Architecture Overview</a> (pypy 架構) 一文中講到 pypy 有兩大構成部份，
其一就是 Python Interpreter (直譯器),
其二則是 Translation Framework (轉譯器).</p><p>.... 寫好的被 Ctrl+Z 吃掉了.... 待補...  Orz</p>]]></content>
        <category label="python" term="python"/>
        <category label="pypy" term="pypy"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[程式語言中的流氓: pypy]]></title>
        <id>https://blog.gasolin.idv.tw/python/pypy-intro</id>
        <link href="https://blog.gasolin.idv.tw/python/pypy-intro"/>
        <updated>2007-03-31T04:46:05.000Z</updated>
        <summary type="html"><![CDATA[PyPy 1.0 剛發佈]]></summary>
        <content type="html"><![CDATA[<p><a href="http://codespeak.net/pypy/dist/pypy/doc/release-1.0.0.html%20" target="_blank" rel="noopener noreferrer">PyPy 1.0 剛發佈</a>
PyPy 是:</p><p>1<!-- -->.<!-- --> 使用 Python 語言編寫的 Python 語言 (稱作 rpython).
2<!-- -->.<!-- --> 可以將 python 程式碼編譯成原生的 c, CLI (.net 2.0), javascript 或其他語言執行程式，提高執行速度.
3<!-- -->.<!-- --> 可以把 rpython 編譯成 javascript , 用來產生客戶端 javascript / 編寫 ajax 應用.
4<!-- -->.<!-- --> 可以將 rpython 程式碼流程展示成視圖.
5<!-- -->.<!-- --> 可以透過 JIT 產生自訂版本的編譯器.</p><p>為什麼說 pypy 是流氓哩？因為跟其他程式語言相比，它根本就是在作弊嘛！</p><ul><li>你說 c 語言寫的程式最快，pypy 可以將程式碼自動轉成 c 版程式。用 gcc 編譯後僅慢原生 c 執行檔 10~20%.</li><li>你說 .Net 跨平台，pypy 可以將程式碼自動轉成 .Net 版程式。編譯後比  <a href="http://www.voidspace.org.uk/python/weblog/arch_d7_2007_03_24.shtml#e674" target="_blank" rel="noopener noreferrer"> MS 官方提供的 .Net 平台 IronPython 快 100 倍</a>.</li><li>寫好的程式可以透過 pypy 自動幫你畫流程圖。最恐怖的是 pypy 是使用 Python 語言編寫的 Python 語言，可透過轉譯器編譯成各平台執行程式以取得超過 cpython  的效能.
各種語言轉譯器 (translator) 也可以用 rpython 本身撰寫。以後 rpython 語言開發者不用是 C 語言專家也可以參與改進 Python 語言，與其他語言相比加入各種實驗性新特性的難度簡單了好幾個數量級.</li></ul><p>用 pypy 目前已經可以產生 JavaScript 程式碼，來支援 AJAX 開發.
以後想必也能產生 ActionScript 程式碼，支援 Flash/Flex/Appolo 開發吧？</p><p>我已經準備要屈服於 pypy 的惡勢力了 XD</p>]]></content>
        <category label="python" term="python"/>
        <category label="pypy" term="pypy"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[來個網摘]]></title>
        <id>https://blog.gasolin.idv.tw/digest/a-digest</id>
        <link href="https://blog.gasolin.idv.tw/digest/a-digest"/>
        <updated>2007-03-31T03:55:56.000Z</updated>
        <summary type="html"><![CDATA[線上跑團工具-OpenRPG使用心得]]></summary>
        <content type="html"><![CDATA[<p></p><p>OpenRPG 看起來像是 IRC 的一種變形，提供 Table RPG 相關工具.
背後是使用 python 2.5 + pygame 提供跨平台功能.</p><p><a href="http://cleverdevil.org/computing/52/making-a-statement-with-elixir" target="_blank" rel="noopener noreferrer">Making a Statement with Elixir</a>
怎麼用 Elixir 寫增強功能。跟 <a href="http://www.ibm.com/developerworks/cn/java/j-cb03137/index.html" target="_blank" rel="noopener noreferrer">跨越边界：对 Rails 进行扩展</a> 一同服用.</p><p><a href="http://www.hlod-wig.org/index.php/gcpi/" target="_blank" rel="noopener noreferrer">(GCPi) Google Calendar Python Interface</a>
Google 日曆的 Python API</p>]]></content>
        <category label="python" term="python"/>
        <category label="digest" term="digest"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[pyGlobus]]></title>
        <id>https://blog.gasolin.idv.tw/python/pyGlobus</id>
        <link href="https://blog.gasolin.idv.tw/python/pyGlobus"/>
        <updated>2007-03-31T03:42:21.000Z</updated>
        <summary type="html"><![CDATA[Globus 是目前網格運算(Grid Computing)的實際標準, 使用 JAVA 實做.]]></summary>
        <content type="html"><![CDATA[<p><a href="http://www.globus.org/" target="_blank" rel="noopener noreferrer">Globus</a> 是目前網格運算 (Grid Computing) 的實際標準，使用 JAVA 實做.</p><p><a href="http://wiki.cogkit.org/index.php/Python_CoG_Kit" target="_blank" rel="noopener noreferrer">pyGlobus</a> 是 Globus 的  Python 接口</p>]]></content>
        <category label="grid" term="grid"/>
        <category label="python" term="python"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[對 HP 收購 Tabblo 的想法]]></title>
        <id>https://blog.gasolin.idv.tw/python/imho-HP-acquire-Tabblo</id>
        <link href="https://blog.gasolin.idv.tw/python/imho-HP-acquire-Tabblo"/>
        <updated>2007-03-24T16:19:14.000Z</updated>
        <summary type="html"><![CDATA[新聞來源: HP acquires Tabblo]]></summary>
        <content type="html"><![CDATA[<p>新聞來源: <a href="http://blog.linux.org.tw/%7Ejserv/archives/001888.html" target="_blank" rel="noopener noreferrer">HP acquires Tabblo</a></p><p>Tabblo 是一個使用 Python 語言下的 Django 網站開發框架製作的圖片分享網站。特點是可以將上傳的圖片輕鬆製作成各種形式精美的套卡. HP 最近將這個以 9 人團隊組織的網站收購下來.</p><p>Python 語言繼 YouTube 的大成功後，在使用網站開發框架 (Django) 上也找到了另一個具說服力的範例。讓人打消 Python 語言不適合 Web 開發的疑慮.</p><p>話說回來，HP 這家公司難道也想玩 Web 2.0 嗎？不然為何要買這樣的 .com 公司？</p><p>當然，連友立 (Ulead, 出品 PhotoImpact 的公司) 都有線上圖片分享網站了，HP 這間印表機大廠也來一個有何不可？</p><p>依新聞來源內容來看，我做個猜測: HP 買 Tabblo 可能不只看在圖片分享網站上，更看中的應該是 Tabblo 的核心價值.</p><p>Tabblo 的核心價值是什麼？Tabblo 的核心價值是它所提供的獨家 "圖片轉精美的套卡" 服務.
而 Tabblo 是透過 PIL (合理猜測啦) 等圖片處理模組，才有辦法建立這樣的服務.</p><p>即使哪天 HP 印表機附的光碟裡提供類似 Tabblo 網站提供的圖片 -&gt; 套卡功能，
我一點也不會意外.</p><p>使用 Python 語言開發網站一大優勢就是背後有很多現有執行在作業系統上的高效模組 (ex: PIL) 可以調用.</p><p>單就圖形處理方面，使用超有彈性又真正跨平台的 Python 語言開發這類原本只有單機才做得到的服務有許多的好處.</p><p>其中最重要的一點是：同樣的程式，可以套用在 Tabblo 網站上，也可以套用在各作業系統的單機版上.</p>]]></content>
        <category label="django" term="django"/>
        <category label="python" term="python"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Functional Programming 函數式編程(程式設計)]]></title>
        <id>https://blog.gasolin.idv.tw/code/Functional-Programming</id>
        <link href="https://blog.gasolin.idv.tw/code/Functional-Programming"/>
        <updated>2007-03-16T18:59:08.000Z</updated>
        <summary type="html"><![CDATA[Functional Programming 中文一般被翻作"函數式編程(程式設計)". 看到這個名詞, 我腦袋裡很自然就浮出 "def ..." 這樣的語句.]]></summary>
        <content type="html"><![CDATA[<p>Functional Programming 中文一般被翻作 "函數式編程 (程式設計)". 看到這個名詞，我腦袋裡很自然就浮出 "def ..." 這樣的語句.
因此 "函數式編程" 一詞所想表達的程式設計概念一直讓我完全摸不著頭腦.</p><p>直到看了<a href="http://www.ibm.com/developerworks/cn/java/j-cb07186.html" target="_blank" rel="noopener noreferrer">跨越边界：用 Haskell 研究函数性编程</a>這篇文章，我才理解 "函數式編程" 其實就是 "以撰寫數學方程式的方式來編程 (程式設計)" 的程式設計方式.</p><p>看了內容很自然地發現其實 Python 語言裡可以找到 map, filter, lambda 等這些用起來比較怪異的函數都是在 Python 中可以拿來作函數式編程的基礎工具.</p><p>Python 程式裡有些時候會有用上這些語句的地方，雖然省了空間，
但是命令式 / OO 編程的習慣卻讓這些段程式較難理解.</p><p>為了更易於學習與理解，python3000 中會將其中一些函數式編程相關函數 (lambda) 從核心中去掉，但卻提供了更完整的函數式編程模組 <a href="http://oakwinter.com/code/functional/index.html" target="_blank" rel="noopener noreferrer">functional </a>的支援。也許這是個更兩全其美的方式吧.</p><p>最近在準備 OSDC.tw 2007 要用的投影片，在整理的過程中也產生了不少想法.
今天看了 "跨越邊界" 系列之後.
更加感受到要好好理解並運用一種開發方法 (不管是函數式編程還是測試驅動編程), 果然還是應該從心法 (本質) 上著手呀.</p><p>參考資料:</p><ul><li></li><li><a href="http://oakwinter.com/code/functional/index.html" target="_blank" rel="noopener noreferrer">functional 模組</a>, 提供 findr, findl 等常見函數式編程支援.</li><li></li><li></li></ul>]]></content>
        <category label="functional" term="functional"/>
        <category label="python" term="python"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[結構文本(rst)轉網頁投影片(s5)]]></title>
        <id>https://blog.gasolin.idv.tw/devtools/structure-text-rst-to-slides-s5</id>
        <link href="https://blog.gasolin.idv.tw/devtools/structure-text-rst-to-slides-s5"/>
        <updated>2007-03-16T18:48:05.000Z</updated>
        <summary type="html"><![CDATA[在看 pycon-trac-presentation 時,]]></summary>
        <content type="html"><![CDATA[<p>在看 <a href="http://matt-good.net/2007/02/28/pycon-trac-presentation/" target="_blank" rel="noopener noreferrer">pycon-trac-presentation</a> 時，
發現 Matt Good 用 docutils 模組提供的 "rst2s5" 套件來將結構文本 (rst) 轉換成網頁投影片 (s5) 效果還蠻不錯的。用他客製化的 rst2s5 模組可以透過 pygments 支援程式的語法高亮展示.</p><p>以下提供使用方法</p><h1>下載</h1><p>$ easy_install docutils
$ easy_install docutils pygments</p><p>並下載 <a href="http://matt-good.net/2007/02/28/pycon-trac-presentation/" target="_blank" rel="noopener noreferrer">rst2s5 with code high lighting</a></p><h1>用法</h1><p>rst2s5.py <!-- -->[輸入]<!-- -->.rst <!-- -->[輸出]<!-- -->.html</p><p>i.e.
rst2s5.py xxx.rst ooo.html</p><p>會產生的輸出結果是 "ooo.html" 這個檔名的檔案，
跟一個包含 s5 投影片 js/css 資料的資料夾.</p><h1>語法備忘</h1><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">=======</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">標題</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">=======</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">:Author: Fred Lin</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">:Date:   $Date: 2007-03-16 $</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">一張投影片</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">==========</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">.. code-block:: pycon</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  &gt;&gt;&gt; # python console</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">.. class:: handout</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   handout 是放註解的地方. 不會 show 到投影片上</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   code-block 可用 pygments 提供的各種語法高亮, 如 pycon, python, bash, html...</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">投影片再一張</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">============</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">.. class:: incremental</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   * 1st. item</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   * 2nd. item</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">.. image:: python.png</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">.. class:: handout</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   依序顯示重點. image 會嵌入圖片.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">.. include:: pylevels.rst</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">語法參考</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">========</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">http://docutils.sourceforge.net/docs/user/slide-shows.html</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">.. class:: handout</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   前一張後的 include 語句支援嵌套其他 rst 文件.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content>
        <category label="s5" term="s5"/>
        <category label="docutils" term="docutils"/>
        <category label="python" term="python"/>
        <category label="rst" term="rst"/>
        <category label="pygments" term="pygments"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Python 社群的 web 框架開發]]></title>
        <id>https://blog.gasolin.idv.tw/python/Python-web-frameworks</id>
        <link href="https://blog.gasolin.idv.tw/python/Python-web-frameworks"/>
        <updated>2007-03-06T05:04:36.000Z</updated>
        <summary type="html"><![CDATA[框架介紹]]></summary>
        <content type="html"><![CDATA[<p>框架介紹</p><p>Python 社群中各種 web 框架開發路線都有. </p><p>Django
目前 Django 框架吸引的使用者最多，一方面原因是 Django 團隊的性質，Django 有一個像 Rails 那樣的專職團隊在維護，保證了專案的持續性。同時不錯的指引文件，對初學者友善的 Admin 介面，開發者 Adrian 四處不遺餘力的宣傳也是吸引人的原因.
除了持續框架維護的承諾，宣傳之外，Django 框架傑出的效能也屢屢在網頁框架評比中勝出.
python 創造者 Guido 也將 Django 視為 Python 語言的首選網頁框架.</p><p>Django 網頁框架的每個部份都是 Django 開發團隊自行建置.
但是在 Django 之外，python 社群其實早已有各式各樣的網頁開發工具. TurboGears 與 pylons 開發者則是致力於將這些開發有年的網頁開發工具 "黏起來", 發揮小兵團結的綜合效應.</p><p>TurboGears
例如使用 TurboGears 框架，就可免去各模組間合作時的重複設定。由於各個挑選的模組都經過多年實戰測試，除了滿足基本的開發需求外。也比較容易達成較深入或較特殊的需求. </p><p>構成 TurboGears 框架的組件，包含 Template, model, URL dispatcher, AJAX library 等等全部可以透過 setuptools 工具簡單安裝與替換。彈性 100%!</p><p>TurboGears 框架還提供命令列 (tg-admin) 和網頁工具箱 (Toolbox) 等可供擴展的輔助工具，從而獲得相當棒的開發體驗. (Toolbox 裡面也有類似 Django Admin 的 Catwalk 工具.)</p><p>整合 Django 與 TurboGears?
那麼這兩個都很棒的框架有沒有整合的可能呢？</p><p>Kevin Dangoor (TurboGears 框架創造者) 在 Pycon 2007 的 web panel 說:</p><blockquote><p>You can have more innovation with individual components with their own maintainers than with a full stack.
比起完整的框架，將各個組件讓各自的維護者維護可以產生更多的創造性</p></blockquote><p>TurboGears 框架的這種開發哲學與 Django 團隊走的路是完全相反的。加上 Django 團隊堅持在他們的網頁框架中不包含 AJAX 功能並不成問題 (我覺得問題是在其他 Django 用戶沒有什麼很容易的方法提供 Django AJAX 擴充包). 在這種理念完全不同的情況下是不可能整合的.</p><p>Pylons
TurboGears 跟 Pylons 兩個框架走的路線更相近。一些擴充模組或樣板引擎早都可以共用了.
pylons 差不多就是換掉 controller 核心的 TurboGears.
Pylons 框架沒有 TG 的 toolbox 或 Django 的 Admin 介面，但支援 WSGI, web helpers (學習 Rails), 效能也不錯，卻還沒找到自己的最佳定位.</p><p>整合 TurboGears 與 Pylons?</p><p>那麼這兩個框架有沒有整合的可能呢？</p><blockquote><p>it’s the style/feel thing that represents the difference between the two framework
-- Kavin Dangoor</p></blockquote><p><a href="http://www.blueskyonmars.com/2007/03/05/merging-turbogears-and-pylons/" target="_blank" rel="noopener noreferrer">Kavin Dangoor</a> 和 <a href="http://compoundthinking.com/blog/index.php/2007/03/05/merging-turbogears-and-pylons/" target="_blank" rel="noopener noreferrer">
Mark Ramn</a> 兩位 TurboGears 框架的代表人物在 pycon 2007 後紛紛對 TurboGears 與 Pylons 的整合發表了樂觀的文章。原因是兩個框架的理念相近，差別主要在預設選擇的套件不同。還有實作上所造成的差異.</p>]]></content>
        <category label="python" term="python"/>
        <category label="webframework" term="webframework"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[使用 nose 測試工具簡單做測試]]></title>
        <id>https://blog.gasolin.idv.tw/code/test-with-nose</id>
        <link href="https://blog.gasolin.idv.tw/code/test-with-nose"/>
        <updated>2007-03-04T17:24:14.000Z</updated>
        <summary type="html"><![CDATA[楔子]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="楔子">楔子<a href="#楔子" class="hash-link" aria-label="Direct link to 楔子" title="Direct link to 楔子">​</a></h2><p>自從聽說了敏捷方法 (Agile programming) 後，一直很想試試這種 "測試先行" 的開發方式.
但是在 python 上前後試過 unitest, doctest, 都不夠 "簡單到會想常常拿來用" 的程度，</p><p>今天拿了一份原型寫得差不多的程式，試著寫些測試例子 (test case) 後用 nose 測試工具來測試看看，想不到 nose 還蠻容易使用的.</p><p>三步驟使用 nose 開始測試</p><ol><li>安裝或更新 nose</li></ol><p><code># easy_install -U nose</code></p><p>沒用過 easy_install ? 你該開始試著用了！</p><ol start="2"><li>撰寫測試例子 (test case)</li></ol><p>打開一個新的資料夾，我們統一在這個新資料夾裡寫主程式與測試例子</p><p>將要測試的內容寫入 something.py 這個檔案<!-- -->[註 1]<!-- -->:</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">&gt; class Hello(object):</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;       def  __init__(self):</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;            self.template = "hello world"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;       def render(self):</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;           return self.template</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>nose 測試工具識別測試例子的條件，是判斷找到的這個類別或方法的名稱是不是以 "test" 或 "Test" 開頭。如果是的話就當成是測試例子. nose 會自動搜尋子目錄下所有符合的測試例子，並自動開始測試.</p><p>因此我們第一個範例程式用的測試例子只要是函式名稱用 'test' 開頭來命名就可以囉，我們命名一個檔案 testsomething.py (這個檔案名稱以 test 開頭與識別測試例子的條件並無關聯，只是慣例上放測試的例子的檔名都會加上 test 字樣), 並在裡面寫下:</p><p>testsomething.py:</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;     def test_Hello():</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;         abc = Hello()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;         assert "hello" in abc.render()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;     def test_foreign():</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;         abc = Hello()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;         assert "bonjour" not in abc.render()</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>assert 是 nose 用來判斷測試結果的語法。主要有這兩種:</p><ul><li><p>assert 片段 in "結果"</p></li><li><p>assert 片段 not in "結果"
對照上面範例，可以得知上面兩者的意思就是:</p></li><li><p>測試結果 "hello" 字串應該在 abc.render () 回應的結果裡</p></li><li><p>測試結果 "bonjour" 字串應該不會在 abc.render () 回應的結果裡如果上面任一種情況不符合 assert 敘述，這個測試用例就會回報失敗.</p></li></ul><ol start="3"><li>開始測試</li></ol><p>切換到檔案在的檔案目錄下，輸入</p><p><code># nosetests</code></p><p>結果應該類似這個樣子:</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">&gt; D:\path\pyfile&gt;nosetests</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; ......</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; ----------------------------------------------------------------------</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; Ran 1 tests in 0.020s</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>OK 那麼如果我們改動了 something.py 中 self.template 變數的內容，在內容裡加上了 "bonjour" 字樣，會發生什麼事情呢？</p><p>有測試工具的好處就是我們只要單純地再次運行 nosetests 命令就好了，不用花腦力去判斷或思考：) 我們查看訊息時會看到類似以下的訊息:</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">&gt; 2, in runTest</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; self.testFunc()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; File "D:\path\pyfile\testsomething.py", line 90, in test_Hello</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; assert "bonjour" not in abc.render()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; AssertionError</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; -----------------</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; Ran 1 tests in 0.030s</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; FAILED (failures=1, errors=1)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>上面的報告提醒我們有一件錯誤: "bonjour" 字串原本不應該出現在 abc.render () 回應結果中的，但結果中竟然出現了！</p><p>所以如果我們的測試用例寫的好，就可以肯定我們剛剛改動 something.py 時出了些問題。測試這件事確實有效！</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="較好的約定">較好的約定<a href="#較好的約定" class="hash-link" aria-label="Direct link to 較好的約定" title="Direct link to 較好的約定">​</a></h2><p>我們已經知道，只要類別或方法的名稱是以 "test" 或 "Test" 開頭。就會被 nose 當成是測試例子，所以其實在一個小程式中，我們大可把測試例子跟主程式放在同一個檔案裡. </p><p>但是當你都還不很確定你在幹什麼的時候，我建議還是將測試例子跟主程式分開。這麼做除了程式不容易搞混之外，在切換檔案時，還可以順便切換撰寫程式與撰寫測試例子時的不同 MindSet.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="測試驅動">測試驅動<a href="#測試驅動" class="hash-link" aria-label="Direct link to 測試驅動" title="Direct link to 測試驅動">​</a></h2><p>那麼如果我們想改寫 hello 函式，好讓它可以用法語 "bonjour" 打招呼，我們該怎麼辦？
記得 "測試先行", 考慮加上一個新的測試例子，而不影響原本的功能吧！</p><p>加入的測試例子:</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;     def test_bonjour():</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;         abc = Hello('bonjour')</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;         assert "bonjour" in abc.render()</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>接著要做的就是再跑一次 nosetests, 看到這個新的例子跟我們報告錯誤了. OK, 那就開始修改 hello 函式吧<!-- -->![註 2]</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="其他的測試">其他的測試<a href="#其他的測試" class="hash-link" aria-label="Direct link to 其他的測試" title="Direct link to 其他的測試">​</a></h2><p>nose 支援的測試的方式琳瑯滿目，可以使用 "nosetests -h" 命令來查看支援的項目.</p><p>例如另外一個常用的測試方式是使用 doctest:
<code>nosetests --with-doctest</code></p><p>那麼 doctest 是什麼樣的測試方式？
又該怎麼使用 doctest 呢？嘿嘿，4 月 <a href="http://osdc.tw/2007/02/post_7.html" target="_blank" rel="noopener noreferrer">OSDC.tw 07</a> 再開講囉：D</p><p>我知道這個工具已經快半年了，到今天才有時間，勇氣真的下去嘗試.
讓我白白錯過這樣好用的工具這麼久，應該怪在 nose 太少文件可以參考的頭上吧？
乾脆自己來寫個 "三步驟使用 nose 開始測試" 的簡易文件好了.</p><p>註 1: 這篇文章不講怎麼寫 python 程式，這部份請自理：P
註 2: 同註 1, 建議妳逛逛 <a href="http://www.python.org.tw" target="_blank" rel="noopener noreferrer">www.python.org.tw</a> 可以看到更多參考資料</p>]]></content>
        <category label="aglie test" term="aglie test"/>
        <category label="python" term="python"/>
        <category label="TurboGears" term="TurboGears"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[python 禪學]]></title>
        <id>https://blog.gasolin.idv.tw/python/python-zen</id>
        <link href="https://blog.gasolin.idv.tw/python/python-zen"/>
        <updated>2007-02-28T17:00:24.000Z</updated>
        <summary type="html"><![CDATA[任何安裝好的 python 版本中都包含著 python 禪學(哲學),]]></summary>
        <content type="html"><![CDATA[<p>任何安裝好的 python 版本中都包含著 python 禪學 (哲學),
在任何 python 互動介面 (如 IDLE) 中輸入</p><blockquote><blockquote><blockquote><blockquote><p>import this</p></blockquote></blockquote></blockquote></blockquote><p>則會出現如下的 python 禪學 (哲學)</p><blockquote><p>Python 禪學 (pythoon Zen)</p><p>美觀的比醜陋的好 (Beautiful is better than ugly)
直率的比含糊的好 (Explicit is better than implicit)
簡單的比繁雜的好 (Simple is better than complex)
繁雜的比晦澀的好 (Complex is better than complicated)
平直的比巢雜的好 (Flat is better than nested)
疏落有致的比櫛次鱗比的好  (Sparse is better than dense)
可讀性應當被重視 (Readability counts)</p><p>就算是特例，也不能壞了規矩 (Special cases aren't special enough to break the rules)
然而能解決問題仍然比維持單純重要 (Although practicality beats purity)</p><p>錯誤不應該被默默地放過 (Errors should never pass silently)
除非你是刻意為之 (Unless explicitly silenced)</p><p>面對模稜兩可的情況，要抗拒猜測的誘惑 (In the face of ambiguity, refuse the temptation to guess)
應該會有一個 -- 而且最好只有一個 -- 適當的方式來實現 (There should be one-- and preferably only one --obvious way to do it)
雖然不是這個語言創造者的妳一開始可能看不出來 (Although that way may not be obvious at first unless you're Dutch)</p><p>現在動手比總是不動手的好 (Now is better than never)
然而不動手可能還比沒有準備就動手的好 (Although never is often better than <em>right</em> now)</p><p>如果實作方式難以解釋，那大概是個壞主意 (If the implementation is hard to explain, it's a bad idea)
如果實作方式易於解釋，那可能是個好主意 (If the implementation is easy to explain, it may be a good idea)
名稱空間是一個很棒的主意 -- 我們就盡量用吧！(Namespaces are one honking great idea -- let's do more of those!)</p><p>--Tim Peters (gasolin 翻譯)</p></blockquote><p>2007/03/01 更新:
參考 <a href="http://wiki.python.org.tw/The_Zen_Of_Python" target="_blank" rel="noopener noreferrer">http://wiki.python.org.tw/The_Zen_Of_Python</a> 其他人的理解修改</p>]]></content>
        <category label="zen" term="zen"/>
        <category label="python" term="python"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[示範影片: 使用 TurboGears 製作書站]]></title>
        <id>https://blog.gasolin.idv.tw/python/demo-booksite-TurboGears</id>
        <link href="https://blog.gasolin.idv.tw/python/demo-booksite-TurboGears"/>
        <updated>2007-02-24T19:34:50.000Z</updated>
        <summary type="html"><![CDATA[前幾個禮拜看到 limodou 的 Openbook platform 後弄的 TurboGears 製作書站 screencast (示範影片)]]></summary>
        <content type="html"><![CDATA[<p>前幾個禮拜看到 limodou 的 Openbook platform 後弄的 TurboGears 製作書站 screencast (示範影片) </p><p>第一個影片裡示範了如何使用 TurboGears 建立一個專案，與如何啟動開發用網頁伺服器.
並展示了如何透過修改模板快速訂製頁面。這個 screencast 中完全使用 TurboGears 預設的 CSS style.</p><p>1st. is <a href="http://files.turbogears.org/video/openbook1.swf" target="_blank" rel="noopener noreferrer">a quickstart demo with hello world template version</a> (6.5MB)</p><p>第二個影片裡示範了如何使用 TurboGears 工具箱 (Toolbox) 中的模型設計工具 (Model Designer）和資料編輯工具 (Catwalk) 來建置 TurboGears 動態內容網站</p><p>2nd is <a href="http://files.turbogears.org/video/openbook2.swf" target="_blank" rel="noopener noreferrer">Model Designer with Catwalk</a> (7.7MB)</p><p>第三個影片中使用到我寫的 TurboGears tgcrud 擴充模組，透過 tgcrud 擴充模組可以很容易地產生類似 Rails 的 scaffold 介面架構。但與 scaffold 不同的是所有 code 都是 implicit 的，更加容易修改.</p><p>3rd. is <a href="http://files.turbogears.org/video/openbook3.swf" target="_blank" rel="noopener noreferrer">tgcrud, the TG's scaffold</a> (5.2 MB)</p><p>感謝 Elvelind Grandin 協助上傳至 TurboGears 網頁空間.</p>]]></content>
        <category label="python" term="python"/>
        <category label="TurboGears" term="TurboGears"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[PyCon SQLAlchemy tutorial 投影片]]></title>
        <id>https://blog.gasolin.idv.tw/python/PyCon-SQLAlchemy-tutorial-slide</id>
        <link href="https://blog.gasolin.idv.tw/python/PyCon-SQLAlchemy-tutorial-slide"/>
        <updated>2007-02-24T03:20:14.000Z</updated>
        <summary type="html"><![CDATA[PyCon 2007 正在舉行, 有一些很不錯的投影片正陸續被釋放出來. 例如]]></summary>
        <content type="html"><![CDATA[<p>PyCon 2007 正在舉行，有一些很不錯的投影片正陸續被釋放出來。例如</p><p><a href="http://spyced.blogspot.com/2007/02/pycon-sqlalchemy-tutorial-slides.html" target="_blank" rel="noopener noreferrer">SQLAlchemy tutorial </a>, <a href="http://utahpython.org/jellis/sqlalchemy-tutorial.pdf" target="_blank" rel="noopener noreferrer">下載</a></p><p>SqlSoup slides, <a href="http://utahpython.org/jellis/sqlsoup.pdf" target="_blank" rel="noopener noreferrer">下載</a></p><p>還有 TurboGears 書使用的範例程式:
<a href="http://www.cleverdevil.org/pycon2007/" target="_blank" rel="noopener noreferrer">
WhatWhat Status</a> (flash 投影片)</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[NTT IPv6 Blog]]></title>
        <id>https://blog.gasolin.idv.tw/ipv6/NTT-IPv6-Blog</id>
        <link href="https://blog.gasolin.idv.tw/ipv6/NTT-IPv6-Blog"/>
        <updated>2007-02-16T07:45:38.000Z</updated>
        <summary type="html"><![CDATA[http://ipv6.blog.ocn.ne.jp/]]></summary>
        <content type="html"><![CDATA[<p></p><p>NTT 社員活用 OCN IPv6 服務的 Blog, 目前看到特別有用的幾篇是如何在 Linux 上設定 OCN IPv6 連線 :)</p><p><a href="http://ipv6.blog.ocn.ne.jp/ipv6/2006/04/linuxocn_ipv61_35c9.html" target="_blank" rel="noopener noreferrer">Linux で [OCN IPv6] に繋ぐ（1）</a>
<a href="http://ipv6.blog.ocn.ne.jp/ipv6/2006/04/linuxocn_ipv62_5915.html" target="_blank" rel="noopener noreferrer">Linux で [OCN IPv6] に繋ぐ（2）</a>
<a href="http://ipv6.blog.ocn.ne.jp/ipv6/2006/04/linuxocn_ipv63_7f90.html" target="_blank" rel="noopener noreferrer">Linux で [OCN IPv6] に繋ぐ（3）</a></p>]]></content>
        <category label="IPv6" term="IPv6"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Python 網頁框架出新招, KUSO 圖徵求貢獻文件]]></title>
        <id>https://blog.gasolin.idv.tw/python/Python-webframework-KUSO</id>
        <link href="https://blog.gasolin.idv.tw/python/Python-webframework-KUSO"/>
        <updated>2007-02-08T16:13:50.000Z</updated>
        <summary type="html"><![CDATA[晚上剛看到在 TurboGears 的說明文件寫作文件中加上了張圖]]></summary>
        <content type="html"><![CDATA[<p>晚上剛看到在 TurboGears 的<a href="http://docs.turbogears.org/DocHelp" target="_blank" rel="noopener noreferrer">說明文件寫作文件</a>中加上了張圖</p><p></p><p>這張圖上的口號是:</p><blockquote><p>Onward, Documentation Writers!
DID YOU CONTRIBUTE SOMETHING TODAY?</p></blockquote><p>可以翻譯成:</p><blockquote><p>前進吧，(寫手) 同志們
你今天為 (TurboGears 的文件) 革命事業貢獻了些什麼嗎？</p></blockquote><p>TurboGears 用這麼有趣的圖 (萬里大長征) 來徵求貢獻文件，真是很 KUSO 呀...</p><p>PS: 這週末 (2/10) 有近期的第二次 TurboGears Doc Sprint 喔.</p>]]></content>
        <category label="python" term="python"/>
        <category label="TurboGears" term="TurboGears"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[OSDC.tw 07 議程公佈]]></title>
        <id>https://blog.gasolin.idv.tw/code/OSDC-tw-07-sessions-in-public</id>
        <link href="https://blog.gasolin.idv.tw/code/OSDC-tw-07-sessions-in-public"/>
        <updated>2007-02-06T03:48:20.000Z</updated>
        <summary type="html"><![CDATA[OSDC.tw 07 的議程終於公佈了, 有幸在一早(920 am)為大家暖場 :P]]></summary>
        <content type="html"><![CDATA[<p>OSDC.tw 07 的<a href="http://osdc.tw/2007/02/post_7.html" target="_blank" rel="noopener noreferrer">議程終於公佈</a>了，有幸在一早 (9:00 am–10:20 am) 為大家暖場 :P</p><p>瀏覽一下大家的講題，發現我提供的講題似乎太白爛了些 XD</p><p>先把投稿的演講簡介放上吧</p><p>subject:</p><p>Test Driven Python 懶人包</p><p>abstract:</p><p>介紹透過 Test Driven programming 的方式.
使用簡單易懂的 Python 動態語言和模組來實際撰寫 Console 和網頁程式.</p><blockquote><p>"Test Driven 是什麼？"</p><p>"編寫 Test Case 很麻煩吧."</p><p>"寫程式已經夠麻煩了，我不要另外寫 Test Case 啦"</p></blockquote><p>在這個 session 中你可以學到懶人用的測試概念:
測試既不麻煩也不用特地學，
寫 Test Case 和寫一般函式沒兩樣.
程式註釋裡的範例片段也可以拿來當 Test Case</p><p>內容主要涵蓋</p><ul><li>Test Driven 簡介</li><li>簡單測試：使用 Nose 測試工具</li><li>用寫文件的方式寫測試：使用 DocTest</li><li>console 程式測試</li><li>使用 Python optparse 標準函式庫來產生 "-- help" 和處理 console 參數</li><li>網頁程式測試：使用 Nose 測試 TurboGears 程式.</li></ul>]]></content>
        <category label="python" term="python"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[咬一口 Python 翻譯完成(第一階段)]]></title>
        <id>https://blog.gasolin.idv.tw/python/a-bite-of-Python-translation-phase-1</id>
        <link href="https://blog.gasolin.idv.tw/python/a-bite-of-Python-translation-phase-1"/>
        <updated>2007-02-05T03:41:45.000Z</updated>
        <summary type="html"><![CDATA[終於將 咬一口 Python (Byte Of Python) 翻完一遍啦!]]></summary>
        <content type="html"><![CDATA[<p>終於將 <a href="http://docs.google.com/View?docid=ajkxs9k6pqxr_3fb3njp&amp;revision=_published" target="_blank" rel="noopener noreferrer">咬一口 Python (Byte Of Python)</a> 翻完一遍啦！</p><p>本書是當前最新的 Python 正體中文書。共有 17 章.
在有簡體中文版可以參照的情況下，
照著每一兩週翻譯一章的進度翻下來，
還是花了 3 個多月才翻完。有種發宏願繞境達成的感覺 XD</p><p>內文主體都翻譯好了，接下來剩修改錯字，排版，加入連結等等後續工作囉.</p>]]></content>
        <category label="python" term="python"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[CRUD Template]]></title>
        <id>https://blog.gasolin.idv.tw/python/CRUD-Template</id>
        <link href="https://blog.gasolin.idv.tw/python/CRUD-Template"/>
        <updated>2007-01-26T08:58:33.000Z</updated>
        <summary type="html"><![CDATA[好久前使用 Ultra Dev (Dreamweaver 4 網頁編輯器時代的東西) 寫ASP網頁時, 那時其中一個超方便的功能就是在與伺服器繫結後, 選擇一個"產生詳細頁面"的 Widget 元件, 稍稍做點設定 Dreamweaver 就幫我產生一個包含資料庫表單內容的頁面. 用同樣類似的方法就能完成製作新增, 刪除網頁等事情. 製作一套動態網頁也不用花太久時間.]]></summary>
        <content type="html"><![CDATA[<p>好久前使用 Ultra Dev (Dreamweaver 4 網頁編輯器時代的東西) 寫 ASP 網頁時，那時其中一個超方便的功能就是在與伺服器繫結後，選擇一個 "產生詳細頁面" 的 Widget 元件，稍稍做點設定 Dreamweaver 就幫我產生一個包含資料庫表單內容的頁面。用同樣類似的方法就能完成製作新增，刪除網頁等事情。製作一套動態網頁也不用花太久時間.</p><p>上禮拜回頭去試試 Ruby On Rails 時覺得 ROR 有得分的一大優點是鷹架產生器 (scaffold).</p><p>scaffold 有什麼功能呢？scaffold 可以根據 RoR 的 ORM (Active Record) 來產生對應的 Controller/Template 程式碼，達到能基本的資料建立 / 修改 / 檢視 / 刪除 (Create/Read/Update/Delete, CRUD) 的目的。而且即使在產生出來 scaffold 後再變更資料庫欄位，產生出來的程式仍然可以正確判斷內容。使用感覺頗類似 Django 的 admin 介面或 TurboGears 的 Catwalk  / DataController, 但是就可修改性而言我覺得這種作法稍勝一籌.</p><p>只是要拿 ROR 的 scaffold 繼續修改也很容易碰上問題.
因為它為了要能自動對應資料庫的改變來反應到 scaffold 介面上，所以產生出來的 code 除了基本大框架可見之外，裡面的內容都被包在不可見的單一函式裡.
要做任何修改時還是得自己大量改寫 scaffold 產生的內容 (不過還是比全自己寫來的快)</p><p>要搭一個漂亮的鷹架要多久呢？
我使用 TurboGears 來重現 scaffold 的各種列表增刪修改介面，為了取得最高的重用性，再用 widgets 改寫一遍，運用 TurboGears 現成的 Widget 已經能幫忙處理新增 / 修改表單的生成。弄好這個 CRUD 介面已花了 3 小時，而且還不像 Rails 一樣會自動去抓變動的欄位.</p><p>(3 小時？有人開始撇嘴了....)</p><p>寫這個介面當然是有目的的.
接下來在開發環境中，我試著將這個 CRUD 介面做成了 TurboGears 的樣板。並透過 tg-admin 加入一個 crud 命令。使用</p><blockquote><p>tg-admin crud <!-- -->[model class name][controller name]</p></blockquote><p>這樣的語法來產生一個包含了 controller 和 template 的資料夾</p><p>例如 model 中已經定義了一個 BookMark class, 只要在專案資料夾中輸入</p><blockquote><p>$tg-admin crud BookMark admin</p></blockquote><p>就會在專案資料夾中新增一個 admin 資料夾，在 controller 中使用</p><blockquote><p>from admin import admin
就可以將處理 BookMark 資料的介面導入到網站中.</p></blockquote><p>以後每次要做的只是簡單地修改表單欄位 (Form field) 定義和 list/show 樣板想要顯示的欄位就可以有完整的 CRUD 介面了。整個過程只要幾分鐘 (預設還會自動套用專案預設的 CSS, 啥都不改就蠻漂亮滴 XD).</p><p>目前 tg-admin crud 的做法和 ROR 的 Scaffold 最大的不同在於整份產生的介面不管是 controller 或 template 的程式都是明確的，沒有需要修改時就得重寫的黑盒子.</p><p>接下來應該是進一步降低要修改的地方，透過 widget 來將重複設定 (無論是 controller/template) 都減到最低程度。達到足夠成熟度再公開.</p><p>目前的 crud 樣板在這，已經可以運用了
<a href="http://docs.turbogears.org/1.0/CRUDTemplate" target="_blank" rel="noopener noreferrer">CRUD Template</a></p>]]></content>
        <category label="python" term="python"/>
        <category label="TurboGears" term="TurboGears"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[WhatWhat Status with sqlite]]></title>
        <id>https://blog.gasolin.idv.tw/python/WhatWhat-Status-with-sqlite</id>
        <link href="https://blog.gasolin.idv.tw/python/WhatWhat-Status-with-sqlite"/>
        <updated>2007-01-26T08:45:20.000Z</updated>
        <summary type="html"><![CDATA[WhatWhat Status is a web application for tracking the status of projects across]]></summary>
        <content type="html"><![CDATA[<p><a href="http://cleverdevil.org/whatwhat/wiki" target="_blank" rel="noopener noreferrer">WhatWhat Status</a> is a web application for tracking the status of projects across
an organization. It's opensource and able to download from <a href="http://cleverdevil.org/whatwhat/wiki" target="_blank" rel="noopener noreferrer">here</a>.</p><p>I found this project from the <a href="http://www.turbogearsbook.com/" target="_blank" rel="noopener noreferrer">TurboGears book</a>. WhatWhatStatus'  default setting is for protegres and MySQL, but not for SQLite. I'd like to share my steps to use  SQLite database with  WhatWhat Status.</p><p>1<!-- -->.<!-- -->  check out the source from svn</p><p>svn co <a href="http://cleverdevil.org/svn/optio/whatwhat/trunk" target="_blank" rel="noopener noreferrer">http://cleverdevil.org/svn/optio/whatwhat/trunk</a></p><p>2<!-- -->.<!-- -->  install textile with easy_install command</p><p><code>$ easy_install textile</code></p><p>3<!-- -->.<!-- --> config the dev.cfg file to use sqlite database</p><p>enter the whatwhat status folder, edit dev.cfg:</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">[global]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># WHATWHAT SPECIFIC</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">whatwhat.uploaddir = '%(current_dir_uri)s/whatwhat/static/files'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># DATABASE</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sqlobject.dburi="sqlite://%(current_dir_uri)s/devdata.sqlite"</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>4<!-- -->.<!-- --> create database by tg-admin sql sql command</p><p><code>$ tg-admin sql sql (or tg-admin sql create)</code></p><p>5<!-- -->.<!-- -->  add default user with catwalk</p><p>5.1 first you need to start the TurboGears toolbox</p><p>$ tg-admin toolbox</p><p>5.2<!-- -->.<!-- --> choose the catwalk in browser</p><p>5.3 select "Person" in catwalk left side menu</p><p>5.4 click "Add Person" button on top of the page</p><p>5.5 enter the following informations:</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">displayname: any name</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">email: any email</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">userid: admin</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">password:21232f297a57a5a743894a0e4a801fc3</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Note that the password field is crypted, the verbose password we typed means "admin".</p><p>6<!-- -->.<!-- --> Start whatwhat status</p><p>run</p><p><code>$ whatwhat-start.py</code></p><p>enter the username/password as "admin", "admin", then click login.</p><p>all done!</p>]]></content>
        <category label="python" term="python"/>
        <category label="TurboGears" term="TurboGears"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[TurboGears 書入手]]></title>
        <id>https://blog.gasolin.idv.tw/python/TurboGears-get-the-book</id>
        <link href="https://blog.gasolin.idv.tw/python/TurboGears-get-the-book"/>
        <updated>2007-01-25T02:25:59.000Z</updated>
        <summary type="html"><![CDATA[快下班的時候接到一通電話, 聲音甜美的天瓏小姐打來提醒我上次訂的 TurboGears 書已經到貨囉.]]></summary>
        <content type="html"><![CDATA[<p>快下班的時候接到一通電話，聲音甜美的天瓏小姐打來提醒我上次訂的 TurboGears 書已經到貨囉.
晚上馬上殺到天瓏去敗了一本，在附近的漢堡王就看了起來.</p><p>總的來說感覺很不賴，和網路上的教學文章切入的方向不盡相同，書中採用了好幾種方法來寫 Hello World, 好讓程式 / 網頁開發者都能找到切入點. </p><p>比較令我驚訝的是在書中第四章就開始講使用版本控制來管理程式，並講解 TurboGears 對測試先行（先寫測試再開始開發的方法）的支援；書中有大概 80 多頁 (全書 450 頁左右) 講的是 AJAX 函式庫 (Mochikit) 的支援，這都是網站教學文章裡最缺乏的.</p><p>另外一個插曲是我在天瓏附近的簡體書店裡看到 DH 的 Agile Ruby on Rails 簡體中文版，定價 65 元 (<em>4), 跟手上的這本 $50 元 (</em>30) 比起來實在夠便宜呀 Orz</p>]]></content>
        <category label="python" term="python"/>
        <category label="TurboGears" term="TurboGears"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Basic OMNeT++ TCP/IP Tutorial]]></title>
        <id>https://blog.gasolin.idv.tw/ipv6/Basic-OMNeT-TCP-IP-Tutorial</id>
        <link href="https://blog.gasolin.idv.tw/ipv6/Basic-OMNeT-TCP-IP-Tutorial"/>
        <updated>2007-01-22T23:41:37.000Z</updated>
        <summary type="html"><![CDATA[A very basic OMNeT++ TCP/IP tutorial from Ahmet Sekercioglu is provided in]]></summary>
        <content type="html"><![CDATA[<p>A very basic OMNeT++ TCP/IP tutorial from Ahmet Sekercioglu is provided in</p><p></p>]]></content>
        <category label="OMNET++" term="OMNET++"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Ubuntu Windows 安裝檔]]></title>
        <id>https://blog.gasolin.idv.tw/devtools/Ubuntu-Windows-install-file</id>
        <link href="https://blog.gasolin.idv.tw/devtools/Ubuntu-Windows-install-file"/>
        <updated>2007-01-21T13:12:03.000Z</updated>
        <summary type="html"><![CDATA[https://wiki.ubuntu.com/install.exe/Prototype]]></summary>
        <content type="html"><![CDATA[<p><a href="http://omattos.co.uk/ubuntuscreens/4.JPG" target="_blank" rel="noopener noreferrer"><img loading="lazy" src="http://omattos.co.uk/ubuntuscreens/4.JPG" class="img_ev3q"></a>
<a href="https://wiki.ubuntu.com/install.exe/Prototype" target="_blank" rel="noopener noreferrer">https://wiki.ubuntu.com/install.exe/Prototype</a></p><p>Ubuntu 新推出使用 Bit Torrent 下載的方式，
在 Windows 環境下安裝原生的 Linux 系統，實在是挑戰想像的極限呀.</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Python 的封裝格式 egg 介紹]]></title>
        <id>https://blog.gasolin.idv.tw/python/Python-egg</id>
        <link href="https://blog.gasolin.idv.tw/python/Python-egg"/>
        <updated>2007-01-19T16:50:23.000Z</updated>
        <summary type="html"><![CDATA[對岸的 黄毅 兄寫了一篇 "Build extensible application with egg]]></summary>
        <content type="html"><![CDATA[<p>對岸的 黄毅 兄寫了一篇 "<a href="http://codeplayer.blogspot.com/2007/01/build-extensible-application-with-egg.html" target="_blank" rel="noopener noreferrer">Build extensible application with egg</a>
" 參考資料，介紹 Python 的封裝格式</p><blockquote><p>在 python 社區中 egg 已經是一種廣為人知的格式了。眾所周知對於 python 來說 egg 是一種用來生小蛇的東西，小蛇自然就是 python 軟件包了 (純屬瞎扯；-)。</p><p>簡單地說，egg 之於 python 正如 jar 之於 java。是一種軟件包打包的格式</p></blockquote><p>想要讀懂這篇文章的關鍵在 "egg 最重要的作用是给软件包增加元数据！" 這句話.</p><p>"软件包" 大概大家還能猜得出來是什麼，不過 "元數據" 是啥？</p><p>答案是 "MetaData", Meta-Data 的意思就是資料背後的參考資料.
用在這的意思是說，這個程式的壓縮包裡，除了提供這個程式的功能外，還提供了安裝相關的資訊. </p><p>例如我在<a href="http://inet6.blogspot.com/2006/09/blog-post.html" target="_blank" rel="noopener noreferrer">如何把蛋砸到起司商店？</a>中指出 cheeseshop 的上傳方式，所有 cheeseshop 上的各個說明欄位都可以事先在你的 setup.py 檔案中填好，用同樣的 </p><blockquote><p>setup.py bdist_egg</p></blockquote><p>命令來將程式包裝成 egg 檔.</p>]]></content>
        <category label="python" term="python"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[EasyEclipse for Python and TurboGears]]></title>
        <id>https://blog.gasolin.idv.tw/python/EasyEclipse-for-Python-and-TurboGears</id>
        <link href="https://blog.gasolin.idv.tw/python/EasyEclipse-for-Python-and-TurboGears"/>
        <updated>2007-01-16T08:08:55.000Z</updated>
        <summary type="html"><![CDATA[EasyEclipse for python]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="easyeclipse-for-python">EasyEclipse for python<a href="#easyeclipse-for-python" class="hash-link" aria-label="Direct link to EasyEclipse for python" title="Direct link to EasyEclipse for python">​</a></h2><p>People who are used to Microsoft VisualStudio or Java IDE usually criticize that python has no good IDE to cooperate with,</p><p>I think pydev is one of good python IDE, which is based on eclipse platform.
But since you try to install it, it's pretty annoying to set the eclipse and pydev run properly.</p><p>Now <a href="http://www.easyeclipse.org/" target="_blank" rel="noopener noreferrer">EasyEclipse</a> project provide an easy install pack of <a href="http://www.easyeclipse.org/site/distributions/python.html" target="_blank" rel="noopener noreferrer">Eclipse for python</a>, it contains:</p><ul><li><p>eclipse platform itself,</p></li><li><p>pydev(eclipse python support),</p></li><li><p>Subclipse(eclipse SVN GUI),</p></li><li><p>and several useful plugins installed by default.It really ease the installation and configuration of Eclipse for python.</p></li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="pydev-with-turbogears">Pydev with Turbogears<a href="#pydev-with-turbogears" class="hash-link" aria-label="Direct link to Pydev with Turbogears" title="Direct link to Pydev with Turbogears">​</a></h2><p>Besides that, Pydev developer recently wrote an article for <a href="http://pydev.blogspot.com/2006/07/configuring-pydev-to-work-with.html" target="_blank" rel="noopener noreferrer">Configuring Pydev to work with Turbogears</a></p><p>It sounds like a right time to try for pydev + TurboGears.</p><p>So I searched and installed the <a href="http://www.easyeclipse.org/site/distributions/python.html" target="_blank" rel="noopener noreferrer">Eclipse for python</a> and <a href="http://www.easyeclipse.org/site/plugins/eclipse-wtp-web.html" target="_blank" rel="noopener noreferrer">EasyEclipse Web tools editors</a> for eclipse HTML/CSS editor and an Internal Web Browser.</p><p>The result? It's not much too say.... pretty good:D</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="start-up">Start Up<a href="#start-up" class="hash-link" aria-label="Direct link to Start Up" title="Direct link to Start Up">​</a></h2><p>First create a pydev project, it will assign a workspace for the project.
Open the console, change path to the workspace folder.
Use <code>tg-admin</code> tool to create a TurboGears projects named "projectname" within the  pydev project workspace folder.</p><p>Now the project folder will shown on eclipse Navigator panel. (you may need use right click menu-&gt; refresh)
click the start-_projectname.py
tap F9, then the web server will run.</p><p>You can use the "Open Web Browser" icon which is near with the search icon to open the internal Web Browser. Type http://localhost:8080 to see the welcome page :)</p><p>Sounds good?</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="configurations">Configurations<a href="#configurations" class="hash-link" aria-label="Direct link to Configurations" title="Direct link to Configurations">​</a></h2><p>Here are a little configuration tips you may intrested...</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="assign-the-python-interpretor">Assign the python interpretor<a href="#assign-the-python-interpretor" class="hash-link" aria-label="Direct link to Assign the python interpretor" title="Direct link to Assign the python interpretor">​</a></h2><p>1<!-- -->.<!-- --> open window/preference,
select pydev/interpreter-python,
click top right "Add" button to select the python.exe path (windows default is C:\python24\pythonw.exe).
The proper library and key words will automatically load for you to use.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="template-association">Template Association<a href="#template-association" class="hash-link" aria-label="Direct link to Template Association" title="Direct link to Template Association">​</a></h2><p>2<!-- -->.<!-- --> select General/Editors/File Association,
click top right "new" button to add "*.kid" file style for kid template.
Press the second "Add" button to assign the associate editors to HTML Editor(default) and Internal Web Browser.</p><p></p><p>I also found a WYSIWYG HTML editor
<a href="http://www.easyeclipse.org/site/plugins/ezingbuilder.html" target="_blank" rel="noopener noreferrer">EasyEclipse eZingBuilder</a>, but I can't get the kid page present correctly now.</p><p>more tips are welcome</p>]]></content>
        <category label="python" term="python"/>
        <category label="TurboGears" term="TurboGears"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[The Zen of TurboGears, my version]]></title>
        <id>https://blog.gasolin.idv.tw/python/The-Zen-of-TurboGears-my-version</id>
        <link href="https://blog.gasolin.idv.tw/python/The-Zen-of-TurboGears-my-version"/>
        <updated>2007-01-12T09:02:46.000Z</updated>
        <summary type="html"><![CDATA[The Zen of TurboGears, by Fred Lin]]></summary>
        <content type="html"><![CDATA[<p>The Zen of TurboGears, by Fred Lin</p><p>Keep simple things simple and complex things possible
Give defaults while you give choices
Give choices while the one obvious way depends</p><p>Make it work
Make it right
Make it fast</p><p>Pythonic is better than domain specific
Easy configuration is clear than convention
Integration counts
Batteries included rocks
Flexibility flow ideas into each part of code </p><p>keep data in Model and seperated logic from Template
Widgets are one honking great idea -- let's do more of those!</p>]]></content>
        <category label="python" term="python"/>
        <category label="TurboGears" term="TurboGears"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[從 Ruby 到 Python]]></title>
        <id>https://blog.gasolin.idv.tw/python/from-Ruby-to-Python</id>
        <link href="https://blog.gasolin.idv.tw/python/from-Ruby-to-Python"/>
        <updated>2007-01-12T09:01:46.000Z</updated>
        <summary type="html"><![CDATA[從 Ruby  到 Python 一文的目的是向 Ruby  語言的使用者介紹 Python 語言.]]></summary>
        <content type="html"><![CDATA[<p><a href="http://docs.google.com/View?docid=ajkxs9k6pqxr_103cxv7r9" target="_blank" rel="noopener noreferrer">從 Ruby  到 Python</a> 一文的目的是向 Ruby  語言的使用者介紹 Python 語言.</p><p>文章中標出高亮度的部份是可以修改成目標語言 (Java,
PHP.... 等等) 的部份。歡迎使用相同的版型與內容，群策群力，創作一系列 "從 xxx 到 Python" 的系列介紹文章. </p><p>有問題或建議請在 <a href="http://groups.google.com/group/pythontw" target="_blank" rel="noopener noreferrer">Google Group</a> 中提出</p>]]></content>
        <category label="python" term="python"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[從 C 到 Python]]></title>
        <id>https://blog.gasolin.idv.tw/python/from-C-to-Python</id>
        <link href="https://blog.gasolin.idv.tw/python/from-C-to-Python"/>
        <updated>2007-01-12T09:01:19.000Z</updated>
        <summary type="html"><![CDATA[從 C 到 Python 一文的目的是向 C 語言的使用者介紹 Python 語言.]]></summary>
        <content type="html"><![CDATA[<p><a href="http://docs.google.com/View?docid=ajkxs9k6pqxr_103cxv7r9" target="_blank" rel="noopener noreferrer">從 C 到 Python</a> 一文的目的是向 C 語言的使用者介紹 Python 語言.</p><p>文章中標出高亮度的部份是可以修改成目標語言 (Java,
PHP.... 等等) 的部份。歡迎使用相同的版型與內容，群策群力，創作一系列 "從 xxx 到 Python" 的系列介紹文章. </p><p>有問題或建議請在 <a href="http://groups.google.com/group/pythontw" target="_blank" rel="noopener noreferrer">Google Group</a> 中提出</p>]]></content>
        <category label="python" term="python"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Rails 'link_to_remote' helper as TurboGears AJAX widgets]]></title>
        <id>https://blog.gasolin.idv.tw/python/Rails-link-to-remote-helper-as-TurboGears-AJAX-widgets</id>
        <link href="https://blog.gasolin.idv.tw/python/Rails-link-to-remote-helper-as-TurboGears-AJAX-widgets"/>
        <updated>2007-01-11T02:27:24.000Z</updated>
        <summary type="html"><![CDATA[I wrote a doc in TurboGears doc site: Wrap AJAX operation in Widgets, which demonstrates how to use the widget to do basic AJAX operation as Rails 'linktoremote' helper.]]></summary>
        <content type="html"><![CDATA[<p>I wrote a doc in <a href="http://docs.turbogears.org/" target="_blank" rel="noopener noreferrer">TurboGears doc site</a>: <a href="http://docs.turbogears.org/1.0/RemoteLink" target="_blank" rel="noopener noreferrer">Wrap AJAX operation in Widgets</a>, which demonstrates how to use the widget to do basic AJAX operation as Rails 'link_to_remote' helper.</p><p>The RemoteLink widget works differ from Rails 'link_to_remote' helper.
It's simple, pure python(while you use it) and fully 'optional'!
'Optional' means if you remove the widget, <a href="http://docs.turbogears.org/1.0/Wiki20/Page6" target="_blank" rel="noopener noreferrer">your site still functional</a>.
Thanks to the mochikit cool functions :-)</p>]]></content>
        <category label="python" term="python"/>
        <category label="TurboGears" term="TurboGears"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[TurboGears 在維基百科]]></title>
        <id>https://blog.gasolin.idv.tw/python/TurboGears-wikipedia</id>
        <link href="https://blog.gasolin.idv.tw/python/TurboGears-wikipedia"/>
        <updated>2007-01-09T13:29:09.000Z</updated>
        <summary type="html"><![CDATA[剛剛在維基百科加入了一個 TurboGears 條目]]></summary>
        <content type="html"><![CDATA[<p>剛剛在維基百科加入了一個 <a href="http://zh.wikipedia.org/wiki/TurboGears" target="_blank" rel="noopener noreferrer">TurboGears 條目</a></p>]]></content>
        <category label="python" term="python"/>
        <category label="TurboGears" term="TurboGears"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[wii GOT IT!!]]></title>
        <id>https://blog.gasolin.idv.tw/life/wii-GOT-IT</id>
        <link href="https://blog.gasolin.idv.tw/life/wii-GOT-IT"/>
        <updated>2007-01-09T12:51:06.000Z</updated>
        <summary type="html"><![CDATA[Python tw 星球上最近刮起了 wii 的風潮,]]></summary>
        <content type="html"><![CDATA[<p>Python tw 星球上最近刮起了 wii 的風潮，</p><p>我托日本同事買的 wii 也在昨天到了 XD
一同購入的是 wii Sports 跟第一次接觸.</p><p>看來有機會辦 python 使用者聚會啦 (一起玩 wii 才是真 XD)</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[回 Ruby on Rails觀察（同樣負面想法，非喜勿視）]]></title>
        <id>https://blog.gasolin.idv.tw/python/imho-Ruby-on-Rails</id>
        <link href="https://blog.gasolin.idv.tw/python/imho-Ruby-on-Rails"/>
        <updated>2006-12-17T16:46:32.000Z</updated>
        <summary type="html"><![CDATA[這兩年隨著 Ruby On Rails 爆紅而在各語言上都紛紛出現許多相應的輕量框架 (framework).]]></summary>
        <content type="html"><![CDATA[<p>這兩年隨著 Ruby On Rails 爆紅而在各語言上都紛紛出現許多相應的輕量框架 (framework).
這些輕量框架由於存在的時間不長，他們開發的過程都是先從幫助使用者快速上手開始，接著考量 web 功能的完整性，再來才是進一步調整框架的效能.
(make it work, make it work well, make it small)</p><p>在<a href="http://eddychang.blogspot.com/2006/11/ruby-on-rails.html" target="_blank" rel="noopener noreferrer">這篇文章</a>的回覆裡看到一段敘述: "我自己都用 c/c++ 寫 apache handler 搞網站，速度.. 熟了，速度還出不來嗎？"
我必須說他講的沒錯，有沒有框架對高手可能沒差別，就算使用框架他也可以根據對語言 / 網站開發的理解自行修改，達到最好的效能。因為他對 web 開發的理解已經隨心所欲了 :-)</p><p>當然最後當你開發的服務使用的人多了，還是要回歸效能上來考量.
那麼為什麼這些框架卻能吸引這麼多人關注哩？</p><p>個人覺得長久以來的開發方式對比輕量框架開發，就好像要花數十年苦功才有成的中國功夫對比相對速成的空手道... 又或使用有關鍵字加亮的文字編輯器對比使用所見即所得的 Dreamweaver.</p><p>大家看事情的角度不見得相同，如同大家練功夫的目的不見得都是要靠功夫吃飯。對於 hobby web programmer 來說效能不是第一考量，易上手與開發的方便性才是吸引大批人的原因.</p><p>對以網頁開發維生的人而言，RoR 號稱 10 倍效能這點有好有壞。但無論如何廣告效果達到了；
對以興趣為主的開發者來說，能節省時間的方便開發工具卻代表了在他們休閒時間除了都花在設計自己感興趣的網站外，還可能空出了陪女朋友看電影的時間.</p><p>我從去年六月多就從 Oreilly OnLamp 網站的 Tutorial 中接觸過 RoR 了，個人覺得 RoR 的設計觀念相當紮實，但是進一步的使用上並未感覺有這麼好. </p><p>我認為 RoR 強調的約定高於配置 (Convention over Configuration) 的觀念很棒，但是在 RoR 中實在太多約定了，記不清的約定就變成了需要記憶的 Magic. </p><p>另外個人的原因之一是已經學會了 Python 語言後再看同為動態語言的 Ruby 語言並沒有吸引我的地方。要掌握好一門語言需要的不只是 20 分鐘的時間。同為動態語言，在程式的可讀性上 Python 語言好太多了.</p><p>而且 RoR 太多依賴特用語言 DSL (Domain Specific Language) 了，RHTML, RJS 等等神奇的樣板看起來並不那麼的易讀或可維護. </p><p>另外在學習的過程中我感覺學習 RoR 並不等同於在學習 Ruby 語言.
而要進一步深入使用框架，不瞭解語言是不可想像的.</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[深入觀察 TurboGears]]></title>
        <id>https://blog.gasolin.idv.tw/python/divein-TurboGears</id>
        <link href="https://blog.gasolin.idv.tw/python/divein-TurboGears"/>
        <updated>2006-12-16T13:57:03.000Z</updated>
        <summary type="html"><![CDATA[許多人以為 TurboGears 能跟 Django 或 Ruby on Rails 比較的地方只是因為一個分散組件, 一個集中開發.]]></summary>
        <content type="html"><![CDATA[<p>許多人以為 <a href="http://www.turbogears.org/" target="_blank" rel="noopener noreferrer">TurboGears</a> 能跟 <a href="http://www.djangoproject.com/" target="_blank" rel="noopener noreferrer">Django</a> 或 <a href="http://www.rubyonrails.org" target="_blank" rel="noopener noreferrer">Ruby on Rails</a> 比較的地方只是因為一個分散組件，一個集中開發.</p><p>但 TurboGears 好用的地方並不是在它堆砌了許多開源的 python web 專案 (如不曾成功過的 subway), 而是真正提出了一個整合這些 python web 開發資源的方法。並提供相當具有 python 風格 (pythonic) 的使用方式.</p><p>1<!-- -->.<!-- --> Decorator 形式的 Dispatcher</p><p>TurboGears 的多數的秘密存在於 Decorator (用 "＠" 符號開頭的敘述) 中. Decorator 是 python 2.4 後才引入的特性，
適度使用可以讓程式碼更清晰.</p><p>TurboGears 基本的網頁型態是這樣:</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;     @expose()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;     def index():</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;         return</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>基本的 pyhton method 加上 <a href="http://docs.turbogears.org/1.0/ExposeDecorator" target="_blank" rel="noopener noreferrer">@expose()</a> 這個 decorator 敘述，
讓 server 知道這個函式是 public to web 的.</p><p>需要登入認證功能，就再加一個 <a href="http://docs.turbogears.org/1.0/IdentityDecorator" target="_blank" rel="noopener noreferrer">@identity</a> 敘述</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">&gt; #auth_admin_required = identity.in_group("admin")</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;     @identity.require(auth_admin)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;     @expose()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;     def index():</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;         return</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>如此被裝飾到的網頁就有了認證功能.</p><p>同樣形式的還有 </p><blockquote><p><a href="http://docs.turbogears.org/1.0/PaginateDecorator" target="_blank" rel="noopener noreferrer">@paginate</a> # 分頁功能
<a href="http://docs.turbogears.org/1.0/ValidateDecorator" target="_blank" rel="noopener noreferrer">@validate</a> # 表單驗證功能
<a href="http://docs.turbogears.org/1.0/ErrorHandling" target="_blank" rel="noopener noreferrer">@error_handler</a> #錯誤處理功能
<a href="http://docs.turbogears.org/1.0/ErrorHandling" target="_blank" rel="noopener noreferrer">@exception_handeler</a> #例外處理功能</p></blockquote><p>等特殊功能.</p><p>@validate 表單驗證的功能除了驗證表單參數，
還負責將參數從字串轉換成 python native 格式，可以對網頁傳過來的參數直接用 python 做處理.</p><p>@error_handler 和 @exception_handeler 被用來對應表單驗證功能
讓我們可在同一個函式裡處理錯誤，或另外定義函式做錯誤處理</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;     @error_handler("index")</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;     def ex_report():</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;         return "exception"</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>2<!-- -->.<!-- --> 一個函式，多重輸出</p><p>很多人知道 TurboGears 在樣板選擇上的多樣性，
但是卻沒有挖掘到在 TurboGears 的神奇之處.
在 TurboGears 中使用同一個函式，就可以針對不同需求，輸出多種期望的格式.</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;     # 使用網頁樣板產生網頁介面 </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;     @expose(template = "hello.welcome") </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;     # 產生 JSON 格式介面供 AJAX 程式調用</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;     @expose("json") </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;     #使用不同的樣板引擎, 產生RSS格式介面</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;     @expose(template = "genshitext:hello.hoho", as_format="RSS/XML") </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;     def show(self, **kw):</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;         return dict(name = 'foo', url = 'boo')</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>這是因為 TurboGears 回傳使用 python 特殊的 "字典 (dict)" 形式，
而不是一般常見的字串形式 (當然 TurboGears 同樣也可以直接輸出字串).</p><p>當使用者要求網頁的時候，web server 決定好對應的 method 運行後，
method 輸出字典型式的返回值到 decorator. 再根據 @expose decorator 的判斷條件，
取用適當的樣板配合字典來生成適當的介面. </p><p>原本需要自行將樣板與內容 "串連 (serialize)" 的工作，TurboGears 都幫忙我們完成，
讓我們只要專注在程式邏輯上即可.</p><p>要從別的 method 調用這個函式不同的輸出也很容易，
只要在返回值裡加上一個 "tg_format" 參數即可手動指定輸出格式.</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;     @expose()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;     def rss():</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;         return rss(tg_format = "RSS/XML")</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="3-簡單設定">3. 簡單設定<a href="#3-簡單設定" class="hash-link" aria-label="Direct link to 3. 簡單設定" title="Direct link to 3. 簡單設定">​</a></h2><p>通常在 TurboGears 中要讓一個資料庫程式運作，
只要在 dev.cfg 裡指定好對應的資料庫路徑 (dburi), 就可以開始資料庫網站的開發.
TurboGears 自會幫忙處理初始化的動作，並且提供相應工具.</p><p>要改換整個網站的預設樣板引擎，同樣也是一行設定搞定.</p><blockquote><p>tg.defaultview = "genshi"</p></blockquote><p>程式裡往往會有些可以讓使用者修改預設運行設定的地方，
如在程式裡要取得預設的模板引擎，可以使用</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">&gt; config.get("tg.defaultview")</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>來取得預設的模板引擎。取得其他設定值也是使用同樣的方法.</p><p>TurboGears 開發的應用程式在發佈 / 安裝上相當容易.
使用易用的 setuptools python 套件發佈功能，
安裝時能自動抓取使用到的 python  modules. </p><p>4<!-- -->.<!-- --> 高擴展性</p><p>TurboGears 框架是個組合框架 (meta framework),
因此設計之初就把高擴展性視為重要目標.
只要在 console 中使用 tg-admin info 命令就可以一窺 TurboGears 擴展的面目。你會驚訝地發現其實 TurboGears 大多數的功能都是透過擴展實現.</p><p>TurboGears 使用的擴展方式是透過 python setuptools 的 entrypoint,
撰寫自己的擴展並不需要改動 TurboGears 的原始碼.
安裝擴展也可以透過 easy_install 命令自動從 python cheese shop 下載組件. </p><p>5<!-- -->.<!-- --> 與 Python 社群互利</p><p>TurboGears 並不是一個只取不予的開發框架，
一方面 TurboGears 降低了試用各 python web modules 的難度，
使得各專案能吸引更多使用者，也加快了各專案的成熟度；</p><p>另外一方面，除了多數 python modules 都可配合 TurboGears 使用之外，
TurboGears 框架中所開發出來的工具也都盡量朝能獨立於框架外使用的方向邁進.</p><p>近期的成果是 ToscaWidgets, 將 TurboGears 中方便重用的 widgets 獨立出來，
可在 pylons, web.py 等框架和工具上使用.</p><p>TurboGears 在組合框架上，不只是達到功能上的滿足，還達到與 python 語言使用上的一致性.
充分使用各種 python 語言的特性與工具，沒有過多的 Magic. 這是許多追趕的組合框架應該思考的.</p><p>PS: 對 Open Source Project 來說，一個<a href="http://docs.turbogears.org/1.0" target="_blank" rel="noopener noreferrer">好的文件網站</a>也很重要</p>]]></content>
        <category label="python" term="python"/>
        <category label="TurboGears" term="TurboGears"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[水果 vs 企鵝  小提琴 vs 齒輪]]></title>
        <id>https://blog.gasolin.idv.tw/python/apple-vs-pengiun-violin-vs-gear</id>
        <link href="https://blog.gasolin.idv.tw/python/apple-vs-pengiun-violin-vs-gear"/>
        <updated>2006-12-06T11:17:39.000Z</updated>
        <summary type="html"><![CDATA[國外有人將 Django / TurboGears 的選擇比做 Mac 跟 Linux 的選擇.]]></summary>
        <content type="html"><![CDATA[<p>國外有人將 <a href="http://www.djangoproject.com/" target="_blank" rel="noopener noreferrer">Django</a> / <a href="http://www.turbogears.org/" target="_blank" rel="noopener noreferrer">TurboGears</a> 的選擇比做 Mac 跟 Linux 的選擇.</p><p>Mac OSX (Django) 美觀，從頭打造，有專職團隊維護，
有較好的宣傳與一致的文件. </p><p>Linux (TurboGears) 彈性，
python 網頁開發相關模組的有機集合，可訂製程度高。文件散見各模組，皆為自由貢獻，品質不一.</p><p>雖然 MAC/LINUX (Django/TurboGears) 都是 UNIX (python) 核心，但是社群的偏向還是有差異的. </p><p>喜歡一體成形，具有很高一致性方案的人可能就會選擇 Django.
有高彈性需求的人可能會比較偏愛 TurboGears.</p>]]></content>
        <category label="python" term="python"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Ren'py : 戀愛派]]></title>
        <id>https://blog.gasolin.idv.tw/tools/Ren-py</id>
        <link href="https://blog.gasolin.idv.tw/tools/Ren-py"/>
        <updated>2006-12-04T11:58:28.000Z</updated>
        <summary type="html"><![CDATA[身穿冒險服裝, 身纏蟒蛇的漫畫少女(萌)會讓你聯想到什麼?]]></summary>
        <content type="html"><![CDATA[<p></p><p>身穿冒險服裝，身纏蟒蛇的漫畫少女 (萌) 會讓你聯想到什麼？</p><p>荒島求生，畢業旅行，還是純情房東俏房客這些讓人臉紅心跳的日系 AVG 遊戲？</p><p>再怎麼想，大概也不會想到我要介紹的卻是 <a href="http://www.renpy.org/wiki/renpy/Home_Page" target="_blank" rel="noopener noreferrer">Ren'py</a> 這個免費的 AVG 冒險遊戲設計工具吧 :-D</p><p><a href="http://www.renpy.org/wiki/renpy/Home_Page" target="_blank" rel="noopener noreferrer">Ren'py</a> 透過主視窗就可以產生新專案，一個空白的專案就包含了一般 AVG 遊戲常見的選單，記錄，讀出等功能 (嗯嗯... 可惜沒看到看圖功能 XD) 或是將設計好的遊戲發佈成 Windows, Mac, Linux 等各平台的套件，非常方便將自己製作的遊戲與其他人分享.</p><p><a href="http://www.renpy.org/wiki/renpy/Home_Page" target="_blank" rel="noopener noreferrer">Ren'py</a> 的文件還不錯 (甚至還有互動遊戲版說明 :-D), 腳本的寫作與編譯也相當方便.
而且這個工具支援中文 (另外抓<a href="http://www.study-area.org/apt/firefly-font/" target="_blank" rel="noopener noreferrer">螢火飛的中文字型</a>即可).  需要進階功能的話，可以使用 Python 語言撰寫加強程式，擴展性極佳:-D 如果想要設計一套 AVG 遊戲，Ren'py 實在是相當棒的選擇. </p><p>PS: 看看可愛的蟒蛇還咬著遊戲手把，有些人可能已經猜到，這個工具是基於 <a href="http://www.pygame.org/news.html" target="_blank" rel="noopener noreferrer">pygame</a> 來開發的.</p>]]></content>
        <category label="python" term="python"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[[Firefox 的耶誕時光 ] 預裝版]]></title>
        <id>https://blog.gasolin.idv.tw/tools/Firefox-xmas</id>
        <link href="https://blog.gasolin.idv.tw/tools/Firefox-xmas"/>
        <updated>2006-12-03T08:21:34.000Z</updated>
        <summary type="html"><![CDATA[聖誕節流行什麼東西呢?]]></summary>
        <content type="html"><![CDATA[<p></p><p>聖誕節流行什麼東西呢？</p><p>卡哇伊的聖誕節佈景主題面版 + 業界最新的中文介面 <a href="http://www.msfirefox.com/" target="_blank" rel="noopener noreferrer">Mlcrosoft Firefox 2007</a> 瀏覽器應該不只能吸引一批批眼睛冒著小星星的女生吧 :-D</p><p><a href="http://www.sharebig.com/d/skfmdaahe/0Jf9E2b45724ED006/Firefox-2.0.XmasTheme.zh-TW.installer.exe.htm" target="_blank" rel="noopener noreferrer">下載頁面於此</a>。(2.0 繁體中文，6.1mb)</p><p>1<!-- -->.<!-- --> 中文版 Firefox 2.0 瀏覽器
2<!-- -->.<!-- --> 預裝聖誕版面</p><p></p><p>BTW, 截圖裡的網站是<a href="http://www.northpole.com" target="_blank" rel="noopener noreferrer">聖誕老人北極的家</a> ,
點玩具工廠的圖示進去，還可以選要自己讀故事或聽人念故事喔：)</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[TurboGears 簡單存取資料庫的方法]]></title>
        <id>https://blog.gasolin.idv.tw/python/TurboGears-access-db</id>
        <link href="https://blog.gasolin.idv.tw/python/TurboGears-access-db"/>
        <updated>2006-11-29T14:45:41.000Z</updated>
        <summary type="html"><![CDATA[拿到一個現成的資料庫, 最快速的就是直接存取啦.]]></summary>
        <content type="html"><![CDATA[<p>拿到一個現成的資料庫，最快速的就是直接存取啦.</p><p>TurboGears 中除了預先定義 schema 外，也可以直接使用 SQLAlchemy 中的 SqlSoup 模組來直接存取資料庫.</p><p>之前我有寫過<a href="http://inet6.blogspot.com/2006/07/turbogears-with-sqlsoup.html" target="_blank" rel="noopener noreferrer">英文版</a>的，今天 trace 一下 sqlsoup 後發現還有更簡單的方法：直接取用 metadata.</p><p>1<!-- -->.<!-- --> 修改 dev.cfg 中的 sqlalchemy.dburi , 指到對應的資料庫</p><p>2<!-- -->.<!-- --> 在 your project/model.py 中，寫下</p><blockquote><p>from turbogears.database import metadata
from sqlalchemy.ext.sqlsoup import SqlSoup</p><p>soup = SqlSoup(metadata)</p></blockquote><p>3<!-- -->.<!-- --> 使用 shell 存取資料</p><p>$ tg-admin shell </p><blockquote><blockquote><blockquote><p>poll = soup.poll.select()
print poll</p></blockquote></blockquote></blockquote>]]></content>
        <category label="python" term="python"/>
        <category label="TurboGears" term="TurboGears"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[TurboGears with SqlSoup]]></title>
        <id>https://blog.gasolin.idv.tw/python/TurboGears-with-SqlSoup</id>
        <link href="https://blog.gasolin.idv.tw/python/TurboGears-with-SqlSoup"/>
        <updated>2006-11-22T06:19:11.000Z</updated>
        <summary type="html"><![CDATA[Purpose]]></summary>
        <content type="html"><![CDATA[<p>Purpose</p><p>Have an exist database and want migrate to TurboGears?
Or you've been using TurboGears SQLObject model and want to migrate to <a href="http://www.sqlalchemy.org/" target="_blank" rel="noopener noreferrer">SQLAlchemy</a>?</p><p>Solution</p><p>TurboGears newly support SQLAlchemy 0.2 module(&gt;0.9a6), it provide  a slick solution: SqlSoup !</p><p>What SqlSoup does?</p><p>SqlSoup inspects your database and reflects its contents to class, no model definitions are necessary!</p><p>What does that mean?</p><p>It means you only need to specify a uri for database,
and call SqlSoup to do the rest.</p><p>What's the Benifits?</p><p>SqlSoup maps database tables to classes automatically. I'm not sure how efficient it is, but at least you can use SqlSoup by following ways:</p><ul><li>To use existing Database design tools to design my database</li><li>To use SqlSoup in design phase, and code to SQLAlchemy class when the databse is settled down.</li><li>To painless migrate SQLObject generated database to SQLAlchemyTest Code</li></ul><p>Try the test code, it is thin.</p><p>in model.py</p><blockquote><p>1 from sqlalchemy.ext.sqlsoup import SqlSoup</p><p>2 uri = "sqlite://%(current_dir_uri)s/devdata.sqlite"
3 soup = SqlSoup(uri)</p></blockquote><p>Explain</p><p>line 1 import SqlSoup from sqlalchemy module,</p><p>line 2 specify the uri link to the database (I believe it can be improved)</p><p>line 3 the real code calling SqlSoup connect to uri</p><p>line 4 and line 5 shows I call the table "poll" from database</p><p>if you can't execute is , maybe you should install sqlalchemy first</p><p>$ easy_install sqlalchemy</p><p>or try the TurboGears way:</p><blockquote><p>1 from turbogears import config
2 from sqlalchemy.ext.sqlsoup import SqlSoup</p><p>3 uri = config.get('sqlalchemy.dburi')
4 soup = SqlSoup(uri)
All you need to do is specify the dburi for sqlsoup.</p></blockquote><p>Let's test what we got</p><blockquote><blockquote><blockquote><p>poll = soup.poll.select()
print poll</p></blockquote></blockquote></blockquote><h2 class="anchor anchorWithStickyNavbar_LWe7" id="reference">Reference<a href="#reference" class="hash-link" aria-label="Direct link to Reference" title="Direct link to Reference">​</a></h2><p>That's all you need in TurboGears.
To get further usage , you can refer to <a href="http://spyced.blogspot.com/2006/04/introducing-sqlsoup.html" target="_blank" rel="noopener noreferrer">Introducing SqlSoup</a></p><p>ps: Actually TurboGears has done nothing particularly to support SqlSoup, I just use it as other modules.</p>]]></content>
        <category label="python" term="python"/>
        <category label="TurboGears" term="TurboGears"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Python FAQ Zone]]></title>
        <id>https://blog.gasolin.idv.tw/python/Python-FAQ-Zone</id>
        <link href="https://blog.gasolin.idv.tw/python/Python-FAQ-Zone"/>
        <updated>2006-11-16T12:11:40.000Z</updated>
        <summary type="html"><![CDATA[剛看到一個 Python FAQ 系統. 當然這並不是最好的 FAQ 系統, 不過裡面除了一般的分類索引之外, 還有個非常有趣的功能是 "Show me a random article! (隨機文章)", 這功能有點像一些 IDE 剛開啟的時候出現隨機的 FAQ 視窗, 每次開啟時都有不同的訊息.]]></summary>
        <content type="html"><![CDATA[<p>剛看到一個 <a href="http://effbot.org/pyfaq/index.htm" target="_blank" rel="noopener noreferrer">Python FAQ 系統</a>. 當然這並不是最好的 FAQ 系統，不過裡面除了一般的分類索引之外，還有個非常有趣的功能是 "<a href="http://effbot.org/rpc/random.cgi/pyfaq" target="_blank" rel="noopener noreferrer">Show me a random article!</a> (隨機文章)", 這功能有點像一些 IDE 剛開啟的時候出現隨機的 FAQ 視窗，每次開啟時都有不同的訊息.</p>]]></content>
        <category label="python" term="python"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[TurboEntity 版 SimpleBlog 之二]]></title>
        <id>https://blog.gasolin.idv.tw/python/TurboEntity-SimpleBlog-2</id>
        <link href="https://blog.gasolin.idv.tw/python/TurboEntity-SimpleBlog-2"/>
        <updated>2006-11-16T02:43:13.000Z</updated>
        <summary type="html"><![CDATA[用 TurboEntity 照著 'SimpleBlog Part II' 中的範例改寫後, 獲得以下程式碼 (model.py):]]></summary>
        <content type="html"><![CDATA[<p>用 <a href="http://turboentity.ematia.de/" target="_blank" rel="noopener noreferrer">TurboEntity</a> 照著 '<a href="http://www.splee.co.uk/2006/10/20/simpleblog-part-2/" target="_blank" rel="noopener noreferrer">SimpleBlog Part II</a>' 中的範例改寫後，獲得以下程式碼 (model.py):</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; from turboentity import *</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; from docutils.core import publish_parts</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; class Post(Entity): </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;     class turboentity:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;         tablename = "posts"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;     title = Column(Unicode(50))</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;     content = Column(Unicode)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;     post_date = Column(DateTime, default=datetime.now())</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;     is_published = Column(Boolean, default=False)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;     comments = OneToMany('Comment',backref='posts')</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;     @property</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;     def html_content(self):</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;         return publish_parts(self.content,writer_name="html")["html_body"]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; class Comment(Entity):</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;     class turboentity:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;         tablename = "comments"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;     author_name = Column(Unicode(255), nullable=False)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;     author_email = Column(Unicode(255), nullable=False)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;     author_url = Column(String(255))</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;     comment_date = Column(DateTime, default=datetime.now())</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;     content = Column(Unicode)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;     post = ManyToOne("Post",backref='comments') </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>要表示 post-comments 關係只需分別在兩個類別中宣告 OneToMany - ManyToOne 即可，真是方便呀.</p><p>另外當定義好 <a href="http://turboentity.ematia.de/" target="_blank" rel="noopener noreferrer">TurboEntity</a> 類別後，物件自動可以用傳值的方式輸入內容，不需一個個各別指定喔.</p><p>例如一般的寫法是這樣子:</p><blockquote><blockquote><blockquote><blockquote><p>p = Post.get (1) # 取得條目
c = Comment () # 新建一條評論
c.post = p # 這條評論屬於 p 條目
c.author_name = "CommentDude1" # 這條目的作者是
c.author_email = "<a href="mailto:cd1@example.com" target="_blank" rel="noopener noreferrer">cd1@example.com</a>" # 這條目作者的郵件信箱是
c.content = "Great post!  Keep them coming!" # 這條目的內容
c.flush ()
可以直接改成
p = Post.get (1)
c = Comment (post=post, author_name="Bob", author_email="<a href="mailto:bob@example.com" target="_blank" rel="noopener noreferrer">bob@example.com</a>", content="Bob loves this site.", author_url="<a href="http://bob.example.com/%22" target="_blank" rel="noopener noreferrer">http://bob.example.com/"</a>)
c.flush()</p></blockquote></blockquote></blockquote></blockquote><p>用<a href="http://turboentity.ematia.de/" target="_blank" rel="noopener noreferrer">TurboEntity</a>改寫的程式和原本 Tutorial 相比，可以看出它好用的地方.</p>]]></content>
        <category label="python" term="python"/>
        <category label="TurboGears" term="TurboGears"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[如何在  Blogger (Blogspot) 上使用 UrMap API]]></title>
        <id>https://blog.gasolin.idv.tw/service/UrMap-API-on-Blogger-Blogspot</id>
        <link href="https://blog.gasolin.idv.tw/service/UrMap-API-on-Blogger-Blogspot"/>
        <updated>2006-11-15T15:56:33.000Z</updated>
        <summary type="html"><![CDATA[參考這篇講如何在 Blooger 上使用 GoogleMap API 的文章, 試著使用 UrMap API 來看看能不能用.]]></summary>
        <content type="html"><![CDATA[<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">&lt;script type="text/javascript"&gt; function map_details() { var map = new UMap(document.getElementById("urmap")); map.setCenter(new ULatLng(25.035405, 121.520255), 9);}&lt;/script&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>參考這篇講<a href="http://ron_larson.blogspot.com/2005/10/google-maps-within-googles-blogger.html" target="_blank" rel="noopener noreferrer">如何在 Blooger 上使用 GoogleMap API 的文章</a>, 試著使用 <a href="http://www.urmap.com/SearchEngine/api/documentation/" target="_blank" rel="noopener noreferrer">UrMap API</a> 來看看能不能用.</p><p>目前的嘗試好像不太成功的樣子 Orz</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[TurboGears vs Rails]]></title>
        <id>https://blog.gasolin.idv.tw/python/TurboGears-vs-Rails</id>
        <link href="https://blog.gasolin.idv.tw/python/TurboGears-vs-Rails"/>
        <updated>2006-11-12T17:56:22.000Z</updated>
        <summary type="html"><![CDATA[明天公司補放國父誕辰紀念日, 所以有空到 Google 翻翻最近有沒什麼有趣的文章. 我找到了一篇 TurboGears vs Rails. 文章名稱夠聳動, 雖然這篇文章有點舊了 (用的是 0.9 的預覽版 TurboGears, 或稱為未進化型態版本 XD), 不過裡面對 TurboGears 和 Rails 的特性確實抓得頗準:]]></summary>
        <content type="html"><![CDATA[<p>明天公司補放國父誕辰紀念日，所以有空到 Google 翻翻最近有沒什麼有趣的文章。我找到了一篇 <a href="http://wildmanshore.blogspot.com/2006/01/turbogears-vs-rails.html" target="_blank" rel="noopener noreferrer">TurboGears vs Rails</a>. 文章名稱夠聳動，雖然這篇文章有點舊了 (用的是 0.9 的預覽版 TurboGears, 或稱為未進化型態版本 XD), 不過裡面對 TurboGears 和 Rails 的特性確實抓得頗準:</p><blockquote><p>The Pythonic way is "explicit over implicit". Everything is out for show: you know what modules are imported, you know what methods are exposed, you know what columns are defined and so on. It may take more keystrokes but the extra code let's you know what is happening when things go wrong.
python 語言的風格是 '<a href="http://inet6.blogspot.com/2006/10/python.html" target="_blank" rel="noopener noreferrer">直率的比含糊的好</a>'. 所以所有的過程都可以被檢視：妳曉得如何導入使用的模組，函式怎麼對應到網址上，妳也曉得資料物件如何定義等等。妳可能需要多打一些字 (註：事實上不多), 但是這些額外的程式碼能讓妳在發生錯誤時更容易地知道自己的程式到底發生了什麼事.</p></blockquote><blockquote><p>The the Rails way is the opposite: take the burden off the developer, don't bother them with the petty details that get in the way and add to the line noise.
Rails 的寫作方式則相反：把讓開發者困擾的因子都去除掉，不要在開發中用細節來干擾程式碼.</p></blockquote><p>事實上去年 5 月底時，我在看過 OnLamp 網站上的 Ruby On Rails 教學後，相當驚訝現在網頁開發的進步 (之前有一年沒寫動態網頁了). 所以我也趁等待完成論文前的時間歔空寫了篇 Ruby On Rails 教學。不過在 7 , 8 月 Django, TurboGears 這些 Python 框架相繼出現後，我發現除了可以使用熟悉的 Python 語言風格來寫程式之外，以後也可以透過網頁介面來使用大量的 Python 模組實在非常吸引我。而當 TurboGears 框架出現 ToolBox 這神奇的工具箱後，我開始漸漸投入了 TurboGears 開發的行列.</p><blockquote><p>能展現自我特點的是創意而不是程式碼
在我的觀念裡，能展現自我特點的是創意而不是程式碼 (也許因為我不是個天才程式設計師吧 XD). Rails 也是個相當吸引人的框架 (差不多靠一己之力拉拔 Ruby 語言 XD). 但是 python 的 "<a href="http://inet6.blogspot.com/2006/10/python.html" target="_blank" rel="noopener noreferrer">應該會有一個 -- 最適當的一個的方式來實現</a>" 哲學比較接近我的想法。在閱讀其他人的 TurboGears 專案時只要不用到太進階的 Python 語言功能，基本上都非常易於閱讀與修改. (例如目前 TurboGears 最進階的教學文件: SQLalchemy 版的 SimpleBlog, 花一些時間就可以改寫成 TurboEntity 版 SimpleBlog <a href="http://inet6.blogspot.com/2006/10/turboentity-simpleblog.html" target="_blank" rel="noopener noreferrer">之一</a>, <a href="http://inet6.blogspot.com/2006/11/turboentity-simpleblog.html" target="_blank" rel="noopener noreferrer">之二</a>)</p></blockquote>]]></content>
        <category label="python" term="python"/>
        <category label="TurboGears" term="TurboGears"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[淺談網頁框架的 URL 對映]]></title>
        <id>https://blog.gasolin.idv.tw/python/webframework-URL-mapping</id>
        <link href="https://blog.gasolin.idv.tw/python/webframework-URL-mapping"/>
        <updated>2006-11-12T04:02:20.000Z</updated>
        <summary type="html"><![CDATA[當開始使用 MVC (Model, View, Controller) 的方式設計網站程式後, 組織網站架構的重任就從傳統的分頁換到程式控制部份 (Controller) 的網址-函式對映 (URL Mapper)上.]]></summary>
        <content type="html"><![CDATA[<p>當開始使用 MVC (Model, View, Controller) 的方式設計網站程式後，組織網站架構的重任就從傳統的分頁換到程式控制部份 (Controller) 的網址 - 函式對映 (URL Mapper) 上.</p><p>舉 python 網頁框架的例子為例，python 的網頁框架很多，最常聽到的 Django, TurboGears, pylons 都各自有各自不同的網址 - 函式對映方式.
網址 - 函式對映能將程式控制部份對映到網站架構，也能依照一些規則將輸入的網址對應成函式的參數，方便程式使用.</p><p><a href="http://wsgiarea.pocoo.org/colubrid/documentation/applications/" target="_blank" rel="noopener noreferrer">Colubrid</a> 這個 WSGI 工具的網站上清楚地列出了目前常見的 URL 對映分類:</p><ul><li>使用 正則表達式 (Regular Expression, Regex) 對映 -Django</li><li>使用 物件 (Object) 對映 -TurboGears</li><li>使用 路徑 (Routes) 對映 -pylons</li></ul><p>"-" 號後面的補註是我另加上去的，表示這幾個框架預設的 URL 對映方式.
當然有的框架也可以用另外的 URL 對映 (例如 TurboGears 也能使用路徑對應方式).</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="範例">範例<a href="#範例" class="hash-link" aria-label="Direct link to 範例" title="Direct link to 範例">​</a></h2><p>首先我們先給出一個基本的程式架構，再來討論如何將這個程式對應到網頁上。本文隱藏了各網頁框架特定的程式碼，因此在實際運行各種對應方式時需要再加上各自的程式碼.</p><div class="language-py codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-py codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">Class </span><span class="token class-name">Root</span><span class="token punctuation" style="color:#393A34">(</span><span class="token builtin">object</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   </span><span class="token keyword" style="color:#00009f">def</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">index</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">self</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">       </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"Front Page"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   </span><span class="token keyword" style="color:#00009f">def</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">profile</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">self</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">       </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"Profile Page"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">app </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> Root</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>這個類別 (Class) 包含兩個函式 (Method), 我們的目的是讓它顯示成如下的網站架構:</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">- index</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">- profile</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>例子很淺顯，我們就開始來嘗試吧</p><p>1. 使用 正則表達式 (Regular Expression) 對映</p><p>使用時在 Root 類別裡加上正則表達式來對映網頁</p><div class="language-py codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-py codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">urls </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">         </span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">r'^index,'</span><span class="token plain">index'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">         </span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">r'^profile,'</span><span class="token plain">profile'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">       </span><span class="token punctuation" style="color:#393A34">]</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>網頁架構是一串以 (r' 網頁名稱 ' ,' 函式名稱 ') 組成的列表來定義.
網頁名稱，函式名稱部份都可以使用正則表達式</p><p>2. 使用 物件對映</p><p>不必加入特別的對映方式.
Root 類別在實例化後等同網站預設的根目錄，
Root 類別下的兩個函式直接對映到相應名稱的網頁上.</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">/- Root</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">- index()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">- profile()</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>訪問 / 或 /index 時就等於訪問 index () 函式，
訪問 /profile 時就等於訪問 profile () 函式</p><p>3. 使用 路徑對映</p><p>這種方式是跟 Ruby on Rails 學來的.
方法是另外建立一個類別，專門處理網頁架構.</p><div class="language-py codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-py codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">app</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">RoutesApplication</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  mapping </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'/'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> Root</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">index</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'/profile'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> Root</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">profile</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">app </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> app</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>網頁架構是以 (' 網頁名稱 ' ,' 類別。函式名稱 ') 組成的列表來定義.
網頁名稱部份可以使用正則表達式.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="結語">結語<a href="#結語" class="hash-link" aria-label="Direct link to 結語" title="Direct link to 結語">​</a></h2><p>我在寫本篇之前，從來沒有看懂其他網頁框架的對應方式，因此傻瓜式的物件對映方式對我來說是最直覺了，使用至今還沒什麼感到不方便的地方.</p><p>雖然本篇所作的比較簡單，無法展現各種對映方式的實際能力，
例如本篇沒有比較到輸入參數的對映方式. </p><p>以上三種方法都已經被證明有效而且許多網站正使用著這些方法運行著.
希望大家能以本篇為基礎，就較理解的 URL 對映方式繼續深入學習.</p><p>我很想知道各位看官，對於用簡單的例子來對的各種 URL 對映方式做說明是不是比較容易理解呢？</p>]]></content>
        <category label="python" term="python"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Dual Stack Mobile IPv6 展出!]]></title>
        <id>https://blog.gasolin.idv.tw/ipv6/Dual-Stack-Mobile-IPv6-展出</id>
        <link href="https://blog.gasolin.idv.tw/ipv6/Dual-Stack-Mobile-IPv6-展出"/>
        <updated>2006-11-09T01:46:56.000Z</updated>
        <summary type="html"><![CDATA[CEATEC JAPAN 2006 上東京大學的 Ezaki San 的研究室 (養海龜 的那間) 又推出了 Dual Stack Mobile IPv6 展示, 可以應用在一般 IPv4 環境中.]]></summary>
        <content type="html"><![CDATA[<p>CEATEC JAPAN 2006 上東京大學的 Ezaki San 的研究室 (<a href="http://www.kame.net" target="_blank" rel="noopener noreferrer">養海龜</a> 的那間) 又推出了 <a href="http://www.ietf.org/internet-drafts/draft-ietf-mip6-nemo-v4traversal-02.txt" target="_blank" rel="noopener noreferrer">Dual Stack Mobile IPv6</a> 展示，可以應用在一般 IPv4 環境中.
前陣子看 Draft 時覺得這個方法很棒但是實做也很複雜，想不到這麼快就有實做展示出現了.</p><p>看展示平台的樣子是拿筆電當作 Home Agent, 拿 Sharp Zaurus 分別當作 IPv4 與 IPv6 環境下的 Mobile Node, 讓兩者可以順暢使用 IPv6 做溝通.</p><p></p><p>圖片連結自
<a href="http://www.ipv6style.jp/jp/20061018/ceatec3.html" target="_blank" rel="noopener noreferrer">http://www.ipv6style.jp/jp/20061018/ceatec3.html</a></p>]]></content>
        <category label="IPv6" term="IPv6"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[MIPv6 addressing v4 traversal]]></title>
        <id>https://blog.gasolin.idv.tw/ipv6/MIPv6-addressing-v4-traversal</id>
        <link href="https://blog.gasolin.idv.tw/ipv6/MIPv6-addressing-v4-traversal"/>
        <updated>2006-11-08T05:37:10.000Z</updated>
        <summary type="html"><![CDATA[根據這封信件所言, IETF 上 又將出現一個新的 Working Group.]]></summary>
        <content type="html"><![CDATA[<p>根據<a href="http://www1.ietf.org/mail-archive/web/nemo/current/msg02525.html" target="_blank" rel="noopener noreferrer">這封</a>信件所言，IETF 上 又將出現一個新的 Working Group.
這篇是他們的 Design team 在 NEMO WG 上的宣告.</p><p>這個 WG 的起因來自於 Edouard LASNIER REDDAN 一封雷諾車廠研發 MIPv6 Car 成果的<a href="http://www1.ietf.org/mail-archive/web/nemo/current/msg02524.html" target="_blank" rel="noopener noreferrer">信件</a>.
信中說明在大環境使用 IPv4 的環境下在車輛中使用 MIPv6 的車子已經被開發出來了 (用的可能就是 Mobile Router),
需要解決的問題除了透過轉換透通機制在純 IPv4 網域取得 HA address 外，還有就是從車廠的角度看，HA 不能被通信商把持的問題.</p><p>MIPv6 addressing v4 traversal 看起來很值得研究，
而 HA 不能被通信商把持的問題感覺似乎在未來可以用來加持我的 NEMO-DHA 架構。可惜跟現在我的論文主題方向還是有些差別....</p><p>為了更容易了解這封信的價值.. 我把雷諾車廠信內提到的主題內容也整理成了投影片大綱了附在<a href="http://inet6.blogspot.com/2005/06/requirement-of-car-manufacturer-for.html" target="_blank" rel="noopener noreferrer">前一篇</a>中</p><p>MIPv6 <!-- -->&amp;<!-- --> traversal/Tunnel 應該將會是蠻熱的題材吧，要求的背景知識也很高，
可惜是實驗室目前要做這題材的話也等於找人重新開始學了，
從讀 traversal/Tunnel mechanism, 想 idea, 到準備模擬工具，
跟其他 lab 比起來已經沒什麼優勢了...... 殘念</p><p>我想也大概不會有人想做 (碩士班做的話從頭學再用功大概 2 年內對這主題也不可能做出好東西，除非請博班帶著大家分著做), 只是講講有這東西而已.</p><p>要我繼續留下來是辦不到的，可惜了這麼棒的東西卻不能自己做....</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[TurboGears Quick MindMap Reference]]></title>
        <id>https://blog.gasolin.idv.tw/python/TurboGears-Quick-MindMap-Reference</id>
        <link href="https://blog.gasolin.idv.tw/python/TurboGears-Quick-MindMap-Reference"/>
        <updated>2006-11-08T02:20:31.000Z</updated>
        <summary type="html"><![CDATA[After watching Mark Ramm's TurboGears One Page Reference,]]></summary>
        <content type="html"><![CDATA[<p>After watching Mark Ramm's <a href="http://compoundthinking.com/blog/index.php/2006/01/26/turbogears-one-page-reference/" target="_blank" rel="noopener noreferrer">TurboGears One Page Reference</a>,</p><p>I made a huge MindMap to track my understanding of TurboGears svn
version,
I think this MindMap will help others as well.</p><p>Here are parts of them (that I've tracked):</p><p></p><p></p><p></p><p></p><p></p><p>and related <a href="http://static.flickr.com/30/100028640_c6685db5b6_o.png" target="_blank" rel="noopener noreferrer">Cherrypy API</a></p><p>Notice that a part of notes in these MindMaps are based on Mark Ramm's
One Page Reference. </p><p>And it's even better if someone intrest to make a more fancy quickreference based on those early works.</p>]]></content>
        <category label="TurboGears" term="TurboGears"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[巫毒編程 (voodoo programming)]]></title>
        <id>https://blog.gasolin.idv.tw/code/voodoo-programming</id>
        <link href="https://blog.gasolin.idv.tw/code/voodoo-programming"/>
        <updated>2006-11-05T14:42:44.000Z</updated>
        <summary type="html"><![CDATA[有兩種設計軟體的方式, 一種設計方式是將軟體設計得很簡單, 因此很明顯地沒有缺點;]]></summary>
        <content type="html"><![CDATA[<blockquote><p>有兩種設計軟體的方式，一種設計方式是將軟體設計得很簡單，因此很明顯地沒有缺點；
另一種設計方式是將軟體設計得很複雜，因此看不出明顯的缺點. ——C.A.R. Hoare</p></blockquote><p>今天到書局買了本簡體的程序員雜誌，裡面提到了很有趣的 "巫毒編程 (voodoo programming)" 方法. </p><p>"巫毒編程 (voodoo programming)" 說的是一種很糟糕的寫程式方法.</p><p>感覺 "巫毒編程" 的形容實在是蠻形象的，想想當寫程式時要是遇到程式一直跑不出來又找不到原因，心情超煩悶的時候打鍵盤是不是就痛苦地像在刻咒怨一樣？</p><p>如果這時試著像對草人扎針一樣隨意改些程式的變數，按下編譯 (Compile) 然後期望程式可以正常跑 (詛咒成功).
嘿嘿嘿，是不是很有巫毒儀式的感覺呢？</p><p>update from April/16/2006</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[預定了 TurboGears 書]]></title>
        <id>https://blog.gasolin.idv.tw/python/ordered-TurboGears-book</id>
        <link href="https://blog.gasolin.idv.tw/python/ordered-TurboGears-book"/>
        <updated>2006-11-04T16:40:15.000Z</updated>
        <summary type="html"><![CDATA[今天到天瓏書局預定了 11/9 號出版的 "Rapid Web Applications with TurboGears".]]></summary>
        <content type="html"><![CDATA[<p></p><p>今天到天瓏書局預定了 11/9 號出版的 "<a href="http://www.amazon.com/gp/product/0132433885/ref=wl_it_dp/102-9756128-6643351?ie=UTF8&amp;coliid=I2HRUJ2LOEKLIT&amp;colid=T71I7J0XXSOJ" target="_blank" rel="noopener noreferrer">Rapid Web Applications with TurboGears</a>". </p><p>其實這本書早在 9 月多時主要作者 Mark Ramm 透過封閉的 <a href="http://groups.google.com/group/TurboGearsBook" target="_blank" rel="noopener noreferrer">TurboGearsBook group</a> 提供各章節草稿時我就看過了. </p><p>參與 TurboGearsBook Group 的要求就是在享受預覽草稿的權利同時也要扮演 Reviewer/Editor 的角色提出意見. </p><p>在書籍不是 OpenSource 的情況下，這種兼顧社群與提昇質量的方式還蠻值得參考的.</p><p>當時內容還不太完整，不過已經勾勒出大部分的輪廓了。由於 TurboGears 是個整合許多 Python 模組的框架，因此裡面除了框架本身內容，實際範例外，還專章提到了諸如 TurboGear 如何的使用 CherryPy, SQLObject, SQLAlchemy, Formencode 等模組. </p><p>另外測試的部份除了講到 nosetests 與 TurboGears 為方便 Model, Controller, Viewer 各層測試而加入的 testutils 測試函式庫外，還提到 Selenium, Mechanize 等使用者經驗測試部份.
算是我相當期待的一本書.</p>]]></content>
        <category label="python" term="python"/>
        <category label="TurboGears" term="TurboGears"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[TurboEntity 版 SimpleBlog]]></title>
        <id>https://blog.gasolin.idv.tw/python/TurboEntity-SimpleBlog</id>
        <link href="https://blog.gasolin.idv.tw/python/TurboEntity-SimpleBlog"/>
        <updated>2006-11-02T01:59:19.000Z</updated>
        <summary type="html"><![CDATA[這幾天 TurboEntity 這個類似 ActiveMapper 的模組一出現馬上獲得不小的關注.]]></summary>
        <content type="html"><![CDATA[<p>這幾天 <a href="http://turboentity.ematia.de/" target="_blank" rel="noopener noreferrer">TurboEntity</a> 這個類似 ActiveMapper 的模組一出現馬上獲得不小的關注.
因為它可以用幾乎與 SQLObject 數量相當的程式碼來定義 ORM, 又能完全繼承 SQLAlchemy 的效能和彈性.</p><p><a href="http://www.splee.co.uk/colophon/" target="_blank" rel="noopener noreferrer"> Lee McFadden</a> 從上上週開始在他的 Blog 上連載了 3 篇 'SimpleBlog' 系列文章，引導如何使用 SQLAlchemy + TurboGears 製作簡單的 Blog 系統.
他採用了接近基本 SQLAlchemy 的設定方式，因此程式碼有點多.</p><p>我用 <a href="http://turboentity.ematia.de/" target="_blank" rel="noopener noreferrer">TurboEntity</a> 照著 '<a href="http://www.splee.co.uk/2006/10/14/simpleblog-part-1/" target="_blank" rel="noopener noreferrer">SimpleBlog Part I</a>' 中的範例改寫後，獲得以下程式碼 (model.py):</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; from turboentity import *</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; from docutils.core import publish_parts</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; class Post(Entity): </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;     title = Column(Unicode(50))</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;     content = Column(Unicode)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;     post_date = Column(DateTime, default=datetime.now())</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;     is_published = Column(Boolean, default=False)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;     @property</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;     def html_content(self):</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;         return publish_parts(self.content,writer_name="html")["html_body"]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>在其它部份保持不變的情形下，拿來跟原文比較可以發現使用 <a href="http://turboentity.ematia.de/" target="_blank" rel="noopener noreferrer">TurboEntity</a> 寫的定義 ORM 程式，就程式碼行數上實在不輸 SQLObject. 難能可貴地是同樣能保持很高的可讀性.</p><p><a href="http://turboentity.ematia.de/" target="_blank" rel="noopener noreferrer">TurboEntity</a> 網站上還有使用 <a href="http://turboentity.ematia.de/" target="_blank" rel="noopener noreferrer">TurboEntity</a> 版本做 TurboGears Identity Model 的例子，看來轉換到從 SQLObject 轉換到 SQLAlchemy 已經不再是太令人躊躇的事了.</p>]]></content>
        <category label="python" term="python"/>
        <category label="TurboGears" term="TurboGears"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[TurboGears in Minutes - Say Hello with TurboGears]]></title>
        <id>https://blog.gasolin.idv.tw/python/TurboGears-in-Minutes-Say-Hello-with-TurboGears</id>
        <link href="https://blog.gasolin.idv.tw/python/TurboGears-in-Minutes-Say-Hello-with-TurboGears"/>
        <updated>2006-10-24T01:29:22.000Z</updated>
        <summary type="html"><![CDATA[The doocument was merged to http://docs.turbogears.org/1.0/GettingStarted/CherryPy]]></summary>
        <content type="html"><![CDATA[<p>The doocument was merged to <a href="http://docs.turbogears.org/1.0/GettingStarted/CherryPy" target="_blank" rel="noopener noreferrer">http://docs.turbogears.org/1.0/GettingStarted/CherryPy</a></p><p>The syntax is such simple that you may still hesitate: "did those code can fit all my need?" We'll see in next minutes.</p>]]></content>
        <category label="python" term="python"/>
        <category label="TurboGears" term="TurboGears"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[TurboGears in Minutes - Getting new project Start]]></title>
        <id>https://blog.gasolin.idv.tw/python/TurboGears-in-Minutes-Getting-new-project-Start</id>
        <link href="https://blog.gasolin.idv.tw/python/TurboGears-in-Minutes-Getting-new-project-Start"/>
        <updated>2006-10-24T01:28:52.000Z</updated>
        <summary type="html"><![CDATA[I decide to start a new track of TurboGears Tutorial (In English), which is light weight enough so it will be easy to follow.]]></summary>
        <content type="html"><![CDATA[<p>I decide to start a new track of TurboGears Tutorial (In English), which is light weight enough so it will be easy to follow.</p><p>Why not start this tutorial on <a href="http://docs.turbogears.org" target="_blank" rel="noopener noreferrer">TurboGears Documentation Site</a> ?</p><p>It just because I feel more comfortable with blogger's editor, and I'll feel less guilty if I mess these tutorial up :-D</p><p>Oops, 5 seconds passed, let's go back to the topic.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="start-a-new-project">Start a new project<a href="#start-a-new-project" class="hash-link" aria-label="Direct link to Start a new project" title="Direct link to Start a new project">​</a></h2><p>To start a new project (new site) with TurboGears, you'd use "tg-admin quickstart" command for it.
The syntax is:</p><blockquote><p>$ tg-admin quickstart <!-- -->[projectname]<!-- -->
Let's create a "TurboHello" (sound's powerful, isn't it? :-D) project for example:</p></blockquote><blockquote><p>$ tg-admin quickstart TurboHello
The console will prompt some choices. Feel free to press "enter" button (let defaults) and proceed to the next step.</p></blockquote><h2 class="anchor anchorWithStickyNavbar_LWe7" id="start-the-web-server">Start the web server<a href="#start-the-web-server" class="hash-link" aria-label="Direct link to Start the web server" title="Direct link to Start the web server">​</a></h2><p>The 'TurboHello' folder was created by your console. After the project was created, enter the 'TurboHello' folder, and you could start the TurboGears development web server with following command:</p><blockquote><p>$ ./start-TurboHello.py</p></blockquote><p>The web server is running, browse <a href="http://localhost:8080/" target="_blank" rel="noopener noreferrer">http://localhost:8080/</a> to see the project welcome page:</p><p></p><p>Pretty and easy, right?</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="the-project-structure">The project structure<a href="#the-project-structure" class="hash-link" aria-label="Direct link to The project structure" title="Direct link to The project structure">​</a></h2><p>While entering the 'TurboHello' folder, you'll see the project skeleton laid there. Those files can be categorized for 4  purposes:</p><p>The document was merged to <a href="http://docs.turbogears.org/1.0/GettingStarted/BigPicture" target="_blank" rel="noopener noreferrer">http://docs.turbogears.org/1.0/GettingStarted/BigPicture</a></p><p>TurboGears followed MVC design pattern (search if you don't know that), which seperate the web application design into three different roles, to build the default quickstart project.
TurboGears  also offer you the flexibility to 'not use the MVC' as well (will be shown in next minutes).</p><p>We'd always focus on part 4: "the Development part" in TurboGears.</p>]]></content>
        <category label="python" term="python"/>
        <category label="TurboGears" term="TurboGears"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[推廣 python ?]]></title>
        <id>https://blog.gasolin.idv.tw/python/marketing-python</id>
        <link href="https://blog.gasolin.idv.tw/python/marketing-python"/>
        <updated>2006-10-14T08:10:03.000Z</updated>
        <summary type="html"><![CDATA[我想沒什麼人會想學新語言, 即使這門語言很美很有用, 尤其是當對人們來說這語言用不太到的情況下 (例如有個傢伙跟你說一旦你學會了優美的拉丁文, 以後你就可以讀懂中古歐洲的文獻. 這傢伙大概會被你罵神經病 :-D).]]></summary>
        <content type="html"><![CDATA[<p>我想沒什麼人會想學新語言，即使這門語言很美很有用，尤其是當對人們來說這語言用不太到的情況下 (例如有個傢伙跟你說一旦你學會了優美的拉丁文，以後你就可以讀懂中古歐洲的文獻。這傢伙大概會被你罵神經病 :-D).</p><p>我認為要說服人學新東西，要遵循：對他有用，讓他感興趣，使他容易學習 三個步驟.</p><p>分享一下我最近讓公司同仁對 python 開始感興趣的方法，</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="對他有用">對他有用<a href="#對他有用" class="hash-link" aria-label="Direct link to 對他有用" title="Direct link to 對他有用">​</a></h2><p>第一階段是我們團隊的部份原始碼庫從 MS 的系統改到 svn 上.<br>
<!-- -->工作久了，會有個錯覺是世界會這麼一直運行下去，日常使用的工具是世界運行的一環因此不太會思考要改變它.</p><p>當自己花些時間讓大家看到新工具 svn/trac 的好用時，趁機跟大家灌輸新一代的工具優點，再若有似無地提到 trac 這強悍的程式整個是 python 寫的。可以勾起大家有點求變的動能.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="讓他感興趣">讓他感興趣<a href="#讓他感興趣" class="hash-link" aria-label="Direct link to 讓他感興趣" title="Direct link to 讓他感興趣">​</a></h2><p>第二階段是最近工作中引入自己用 scapy 做的封包產生器，有的同事發現我用的工具可以跨平台使用，不用花時間架設特別的機器和環境，可以讓測試變得不那麼麻煩，可能就有了想學習的動力.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="使他容易學習">使他容易學習<a href="#使他容易學習" class="hash-link" aria-label="Direct link to 使他容易學習" title="Direct link to 使他容易學習">​</a></h2><p>第三階段是在適當時機展示一下 python 的簡潔，
讚揚一下 python 程式中非常直觀的列表，字典等內建型態.
程式縮排等寫作原則提都不用提，python 程式的美觀展示時即自然呈現.
如果真的要強調，則是花時間下去學習 python 語法時的事情了.</p><p>你的工作裡也有地方用的上 python 嗎？</p>]]></content>
        <category label="python" term="python"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[收到管理權限]]></title>
        <id>https://blog.gasolin.idv.tw/python/get-turbogear-auth</id>
        <link href="https://blog.gasolin.idv.tw/python/get-turbogear-auth"/>
        <updated>2006-10-12T11:28:28.000Z</updated>
        <summary type="html"><![CDATA[終於收到 TurboGears 官方文件網站的管理權限, 可以修改首頁了.]]></summary>
        <content type="html"><![CDATA[<p>終於收到 <a href="http://docs.turbogears.org/1.0" target="_blank" rel="noopener noreferrer">TurboGears 官方文件網站</a>的管理權限，可以修改首頁了.
這幾天重新整理了 TurboGears 的官方文件，讓整個學習流程變得更清楚了. </p><p>TurboGears 安裝早已變得很簡單，
裝好 python 後，只要抓下 tgsetup.py 後執行就會自動安裝.
不用管是否已安裝了 setuptools 模組或 easy_install 命令.</p><p>新使用者可以關注 "教程 (Tutorials)", "使用導覽 (Getting Started Guide)", "安裝 (Installation)" 三個部份.</p><p>一些特別的主題如 cookie, session, 傳送 Email, 註冊新使用者等等都被歸類在 "Solving specific problems" 中.</p>]]></content>
        <category label="python" term="python"/>
        <category label="TurboGears" term="TurboGears"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[kid 或 genshi 中文樣板編輯]]></title>
        <id>https://blog.gasolin.idv.tw/python/kid-genshi-chinese-template</id>
        <link href="https://blog.gasolin.idv.tw/python/kid-genshi-chinese-template"/>
        <updated>2006-10-06T09:57:07.000Z</updated>
        <summary type="html"><![CDATA[原本使用 TurboGears 都是拿來做些網站應用程式的原型, 享受它帶來的樂趣. 現在終於等到一個可以製作實際網站的機會.]]></summary>
        <content type="html"><![CDATA[<p>原本使用 TurboGears 都是拿來做些網站應用程式的原型，享受它帶來的樂趣。現在終於等到一個可以製作實際網站的機會. </p><p>我打算使用 TurboGears 的 1.1 (在 SVN Trunk 開發中) 版本開始做一個中文的應用網站.
使用 genshi 做網頁樣板系統和 SQLAlchemy 做 ORM, 並使用 pydev (python) + Aptana (web) eclipse 環境開發.</p><p>剛開始玩得很順利：P
直到我發現在預覽網頁時發生了錯誤.
錯誤訊息看起來是有中文的地方會報錯，因此我以為是網頁樣板預設編碼不是 'utf-8' 的問題.</p><p>找了半天，到後來直接用瀏覽器預覽時，才發現整個中文部份都變成了亂碼，改編碼為 big5 時才顯示正常。原來罪魁禍首是作業系統和編輯器！</p><p>作業系統預設編碼是 big5, 因此照一般輸入方式在編輯器中編輯儲存中文字的結果，當然不是我所期望的 utf-8 囉.
當我改使用 Dreamweaver 來編輯樣版後，一切顯示就回歸正常了.
應該是編輯時 Dreamweaver 會自動幫忙轉碼吧:-D</p><p>Anyway, 還是希望能找到個 OpenSource 的網頁編輯器可以做到國際化支援呀.</p>]]></content>
        <category label="python" term="python"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[TurboGears on O3 Magzine]]></title>
        <id>https://blog.gasolin.idv.tw/python/TurboGears-on-O3-Magzine</id>
        <link href="https://blog.gasolin.idv.tw/python/TurboGears-on-O3-Magzine"/>
        <updated>2006-10-02T15:02:19.000Z</updated>
        <summary type="html"><![CDATA[繼 Ruby On Rails 後, 最新期的 o3 雜誌專刊介紹 TurboGears]]></summary>
        <content type="html"><![CDATA[<p>繼 Ruby On Rails 後，最新期的 o3 雜誌專刊介紹 TurboGears</p><p><a href="http://www.o3magazine.com/pastissues/issue5/" target="_blank" rel="noopener noreferrer"><img loading="lazy" src="http://photos1.blogger.com/blogger/1345/565/320/o3cover.jpg" class="img_ev3q"></a>) 中發表了<a href="http://groups.google.com/group/turbogears/browse_thread/thread/20888f4a6f0f9f99/#" target="_blank" rel="noopener noreferrer">一篇文章</a> 推薦 <a href="http://turboentity.ematia.de/" target="_blank" rel="noopener noreferrer">TurboEntity</a> 這個項目，看起來他蠻推崇這個大量借鑒他的 ActiveMapper 功能的專案的.</p><p>TurboEntity 最酷的能耐應該是'self reference',
能參考同個物件的資料 (不知道 Django 的怎樣，SQLObject
不行直接參考，要加一些特別的代碼)</p><p>網站上的範例裡拿了辛普森家庭 (The Simpsons) 做例子:</p><p>定義四個角色</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">grampa = Person(name="Abe")</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>   homer = Person(name="Homer")
bart = Person(name="Bart")
lisa = Person(name="Lisa")</p><p>定義人物間的關係：</p><p>祖父 - 河馬 - 霸子</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">                               - 麗莎</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">grampa.children.append(homer)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>   homer.children.append(bart)
lisa.father = homer</p><p>不講的話還真的看不出來這些是存取資料庫中資料的函式.</p><p>ManyToOne / ManyToMany 這些函式也是直接呼叫 sqlalchemy
的功能.</p>]]></content>
        <category label="python" term="python"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[支援 OCN IPv6 連線的 BroadBand Router]]></title>
        <id>https://blog.gasolin.idv.tw/ipv6/支援-OCN-IPv6-連線的-BroadBand-Router</id>
        <link href="https://blog.gasolin.idv.tw/ipv6/支援-OCN-IPv6-連線的-BroadBand-Router"/>
        <updated>2006-09-28T03:14:52.000Z</updated>
        <summary type="html"><![CDATA[Corega 在     INTEROP TOKYO 2006 中展出了一台支援 NTT OCN IPv6 連線服務的寬頻路由器]]></summary>
        <content type="html"><![CDATA[<p>Corega 在     INTEROP TOKYO 2006 中展出了一台支援 NTT OCN IPv6 連線服務的寬頻路由器
CG-BARPRO6</p><p></p><p></p><p></p><p><a href="http://corega.jp/event/interop2006/" target="_blank" rel="noopener noreferrer">http://corega.jp/event/interop2006/</a>
<a href="http://corega.jp/product/news/060607.htm" target="_blank" rel="noopener noreferrer">http://corega.jp/product/news/060607.htm</a></p><p>效能比較
<a href="http://www.ipv6style.jp/jp/20060922/corega.html" target="_blank" rel="noopener noreferrer">http://www.ipv6style.jp/jp/20060922/corega.html</a></p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[簡單安裝 TurboGears]]></title>
        <id>https://blog.gasolin.idv.tw/python/easy-install-TurboGears</id>
        <link href="https://blog.gasolin.idv.tw/python/easy-install-TurboGears"/>
        <updated>2006-09-26T02:53:46.000Z</updated>
        <summary type="html"><![CDATA[TurboGears 在進入1.0b版本後吸引了許多新的使用者,]]></summary>
        <content type="html"><![CDATA[<p>TurboGears 在進入 1.0b 版本後吸引了許多新的使用者，
為了讓安裝 Python 跟 TurboGears 再更簡易. TurboGears 開發者 Kevin 釋出了新的簡單安裝工具 tgsetup.py, 將 SetupTools 與 TurboGears 的安裝步驟合而為一，讓安裝 TurboGears 的過程更簡單.
只需兩個步驟就能安裝好 TurboGears:</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="1-安裝-python">1<!-- -->.<!-- --> 安裝 Python<a href="#1-安裝-python" class="hash-link" aria-label="Direct link to 1-安裝-python" title="Direct link to 1-安裝-python">​</a></h2><p>Linux 使用者:
一般說來，你的 Linux 發行版本 (Distribution) 裡早已預裝了 Python, 並且偷偷用在了一些內附的程式中。你可以輸入</p><blockquote><p>$whereis python
來查看它的存在.
如果你是 Ubuntu 的使用者，你需要再安裝幾個必備的套件
$ sudo apt-get install gcc libc6-dev python2.4-dev</p></blockquote><p>Windows 使用者:
到 <a href="http://www.python.org" target="_blank" rel="noopener noreferrer">www.python.org</a> 下載 python 2.4 安裝檔，接著只要按 "下一步" 按鈕就能安裝成功.
安裝成功後需要設定環境變數。進入 "控制台"-&gt;"系統"-&gt;"進階"-&gt;"環境變數", 並選擇 "編輯" path 變數.
在 path 變數前端加入</p><blockquote><p>C:\Python24\Scripts; (安裝路徑 \Scripts) 敘述.</p></blockquote><p>其他平台使用者:
請參考 <a href="http://www.python.org" target="_blank" rel="noopener noreferrer">www.python.org</a> 網站</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="2-安裝-turbogears">2. 安裝 TurboGears<a href="#2-安裝-turbogears" class="hash-link" aria-label="Direct link to 2. 安裝 TurboGears" title="Direct link to 2. 安裝 TurboGears">​</a></h2><p> 各平台使用者都可以從 <a href="http://www.turbogears.org/download/" target="_blank" rel="noopener noreferrer">www.turbogears.org/download/</a> 下載 tgsetup.py 檔案。在命令列輸入</p><blockquote><h1>python tgsetup.py</h1></blockquote><p> Windows 使用者可以直接在命令列輸入</p><blockquote><blockquote><p>tgsetup.py</p></blockquote></blockquote><p> tgsetup.py 會自動從網路上下載相關的檔案來安裝 TurboGears.</p>]]></content>
        <category label="python" term="python"/>
        <category label="TurboGears" term="TurboGears"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[如何把蛋砸到起司商店?]]></title>
        <id>https://blog.gasolin.idv.tw/python/egg-to-cheese-shop</id>
        <link href="https://blog.gasolin.idv.tw/python/egg-to-cheese-shop"/>
        <updated>2006-09-23T12:19:42.000Z</updated>
        <summary type="html"><![CDATA[白話翻譯是: 怎麼在 Linux 或 Windows 平台上將 python 的安裝蛋(.egg)上傳到 Python 檔案集散地 CheeseShop 上.(取了個白目的標題 XD)]]></summary>
        <content type="html"><![CDATA[<p>白話翻譯是：怎麼在 Linux 或 Windows 平台上將 python 的安裝蛋 (.egg) 上傳到 Python 檔案集散地 CheeseShop 上.(取了個白目的標題 XD)</p><p>一般來說，要上傳安裝檔到 CheeseShop, 只要輸入</p><blockquote><p>setup.py bdist_egg upload</p></blockquote><p>即可.
"bdist_egg" 是通知 setup.py 將我的程式封裝成安裝蛋 (.egg),
"upload" 是通知 setup.py 將我剛封裝好的程式上傳至 CheeseShop.
(另外一個常用的命令是 "register", 可以直接更新 CheeseShop 上的程式發佈資訊)</p><p>但是在 Windows 上使用 setup.py upload 命令一般會得到下面這樣非常無用的錯誤報告:</p><blockquote><p>Submitting dist/your.egg to <a href="http://www.python.org/pypi" target="_blank" rel="noopener noreferrer">http://www.python.org/pypi</a>
Upload failed (401): Authorization Required</p></blockquote><p>仔細查過文件才發現，原來是在上傳之前，需先建立一個 .pypirc 文件，內容是儲存欲登入 cheeseshop 的帳號密碼。如下:</p><blockquote><p>[server-login]<!-- -->
username:james
password:password</p></blockquote><p>在 Linux 上，可以在 home 目錄下建立.pypirc 文件；</p><p>在 Windows 上則是放在 Documents and Settings 目錄。例如 C:\Documents and Settings\Gasolin</p><p>在 Windows 下一般無法編輯 .xxx 開頭的檔案，這時可以在命令列下輸入</p><blockquote><blockquote><p>edit .pypirc</p></blockquote></blockquote><p>來編輯 .pypirc 檔案.</p><p>編輯完儲存後，需在命令列下設置 HOME 環境變數. </p><blockquote><blockquote><p>SET HOME=C:\Documents and Settings\James</p></blockquote></blockquote><p>當設定完成後，就可以輕鬆使用 CheeseShop 提供的所有功能囉！</p>]]></content>
        <category label="python" term="python"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[支援 Feel6 連線服務的寬頻路由器]]></title>
        <id>https://blog.gasolin.idv.tw/ipv6/支援-Feel6-連線服務的寬頻路由器</id>
        <link href="https://blog.gasolin.idv.tw/ipv6/支援-Feel6-連線服務的寬頻路由器"/>
        <updated>2006-09-22T09:32:54.000Z</updated>
        <summary type="html"><![CDATA[Corega 上次在 INTEROP TOKYO 2006 中展出了一台支援 NTT OCN IPv6 連線服務的寬頻路由器 CG-BARPRO6, 現在這台機器可以用更新韌體的方式新增支援 Feel6 連線服務.]]></summary>
        <content type="html"><![CDATA[<p>Corega 上次在 INTEROP TOKYO 2006 中展出了一台<a href="http://inet6.blogspot.com/2006/06/ocn-ipv6-broadband-router.html" target="_blank" rel="noopener noreferrer">支援 NTT OCN IPv6 連線服務的寬頻路由器</a> CG-BARPRO6, 現在這台機器可以用更新韌體的方式新增支援 <a href="http://start.feel6.jp/" target="_blank" rel="noopener noreferrer">Feel6 連線服務</a>. </p><p>據我試用過的結果，Feel6 服務跟 OCN 服務的差別除了使用的 Tunnel 技術不同之外，兩者在 CG-BARPRO6 上都可以透過同樣的設定方式使用.</p><p>Feel6 服務是免費的，在台灣只要上 Feel6 網站，填寫資料後也可以申請 Feel6 服務，比設一堆 Tunnel Broker 方便多了:-)</p><p>資料來源: <a href="http://www.ipv6style.jp/jp/news/20060920/corega.html" target="_blank" rel="noopener noreferrer">コレガ、CG-BARPRO6 の最新ファームウェアを公開</a></p>]]></content>
        <category label="IPv6" term="IPv6"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[讓簡單的事情簡單 - TurboGears]]></title>
        <id>https://blog.gasolin.idv.tw/python/make-simple-things-simple-TurboGears</id>
        <link href="https://blog.gasolin.idv.tw/python/make-simple-things-simple-TurboGears"/>
        <updated>2006-09-08T17:00:38.000Z</updated>
        <summary type="html"><![CDATA[TurboGears 1.0 b1 發佈囉!]]></summary>
        <content type="html"><![CDATA[<p><a href="http://www.blueskyonmars.com/2006/09/08/turbogears-10b1-released/" target="_blank" rel="noopener noreferrer">TurboGears 1.0 b1</a> 發佈囉！</p><p>在看到這個訊息後我把剛寫好的 TurboJinja 插件也順便發佈了.</p><p>和 TurboDjago 模板插件一樣，TurboJinja 可以讓你在 TurboGears 上用 Django 的 template,
只是用 TurboJinja 的話不需要先安裝 Django.</p><p></p><p> TurboGears 的 API 在最近這的三個月中幾乎沒有改動，
1.0b1 發佈後，現在 TurboGears 的文件也很齊全了，
正是學習的好時機:-)</p>]]></content>
        <category label="python" term="python"/>
        <category label="TurboGears" term="TurboGears"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Python + fibonacci]]></title>
        <id>https://blog.gasolin.idv.tw/python/Python-fibonacci</id>
        <link href="https://blog.gasolin.idv.tw/python/Python-fibonacci"/>
        <updated>2006-09-07T11:17:42.000Z</updated>
        <summary type="html"><![CDATA[網路上找到 Algorithms 一書, 由於書上都是虛擬碼, 試試看用 Python 來做點練習]]></summary>
        <content type="html"><![CDATA[<p>網路上找到 <a href="http://www.cse.ucsd.edu/users/dasgupta/mcgrawhill/" target="_blank" rel="noopener noreferrer">Algorithms</a> 一書，由於書上都是虛擬碼，試試看用 Python 來做點練習</p><p>下面是序章 <a href="http://www.cse.ucsd.edu/users/dasgupta/mcgrawhill/chap0.pdf" target="_blank" rel="noopener noreferrer">Prologue</a> 的例子:</p><p>目標:
用 Python 實現 fibonacci 數列
<!-- -->[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89 .....]</p><p>Python 程式碼:</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">def Fib1(n):</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   """遞迴函式"""</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   if n==0:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">       return 0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   elif n==1:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">       return 1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   else:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">       return Fib1(n-1) + Fib1(n-2)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">def Fib2(n):</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    """用列表暫存結果"""</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    f = [0]*(n+1)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    f[1] = 1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    if n&lt;2:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        return f[n]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    else:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        for i in xrange(2,n+1):</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            f[i]=f[i-1]+f[i-2]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        return f[n],f</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">if __name__=="__main__":</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    """試算結果"""</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    import time</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    testtimes = 3</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    for i in xrange(testtimes):</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        begintime =  time.clock()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        print Fib1(30)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        endtime = time.clock()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        print endtime - begintime</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    for i in xrange(testtimes):</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        begintime =  time.clock()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        print Fib2(30)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        endtime = time.clock()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        print endtime - begintime</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>執行結果:
832040
4.24318425945 (Fib1)
832040
7.90603275007e-005 (Fib2)</p>]]></content>
        <category label="python" term="python"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[python 手冊(簡體)中文版]]></title>
        <id>https://blog.gasolin.idv.tw/python/python-manual-simplified-chinese</id>
        <link href="https://blog.gasolin.idv.tw/python/python-manual-simplified-chinese"/>
        <updated>2006-09-01T05:27:50.000Z</updated>
        <summary type="html"><![CDATA[簡體中文版的 python 手冊已經發佈一段日子了.]]></summary>
        <content type="html"><![CDATA[<p>簡體中文版的 python 手冊已經發佈一段日子了.</p><p>連 python 2.5 版的手冊都有已經翻譯了.</p><p></p><p>PDF 下载: <a href="http://www.woodpecker.org.cn:9081/doc/Python/Py2.5tut/Py2_5_tut_cn.pdf" target="_blank" rel="noopener noreferrer" title="localshare">Py2_5_tut_cn.pdf</a>
譯者：劉鑫 李夢夷</p><p>PDF 下载: <a href="http://www.woodpecker.org.cn:9081/doc/Python/Py2.4tut/ctut.pdf" target="_blank" rel="noopener noreferrer" title="localshare">Py2_4_tut_cn.pdf</a>
譯者：劉鑫</p>]]></content>
        <category label="python" term="python"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[探索 IPv6]]></title>
        <id>https://blog.gasolin.idv.tw/ipv6/探索-IPv6</id>
        <link href="https://blog.gasolin.idv.tw/ipv6/探索-IPv6"/>
        <updated>2006-08-03T14:09:04.000Z</updated>
        <summary type="html"><![CDATA[IBM 網站文章 探索 IPv6]]></summary>
        <content type="html"><![CDATA[<p>IBM 網站文章 <a href="http://www-128.ibm.com/developerworks/cn/web/wa-ipv6/index.html?ca=dwcn-newsletter-web" target="_blank" rel="noopener noreferrer">探索 IPv6 </a>
講了最粗淺的 IP 格式與作業系統 / 瀏覽器支援</p>]]></content>
        <category label="IPv6" term="IPv6"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[台灣的開放原始碼 (OpenSource) 週報]]></title>
        <id>https://blog.gasolin.idv.tw/code/taiwan-OpenSource-weekly</id>
        <link href="https://blog.gasolin.idv.tw/code/taiwan-OpenSource-weekly"/>
        <updated>2006-08-03T05:23:26.000Z</updated>
        <summary type="html"><![CDATA[繼 OSSF 電子報後]]></summary>
        <content type="html"><![CDATA[<p>繼 OSSF 電子報後
<a href="http://www.openfoundry.org/newsletter.pl?section=zh_epaper" target="_blank" rel="noopener noreferrer">http://www.openfoundry.org/newsletter.pl?section=zh_epaper</a></p><p>tossug 社群也開始出三週報了</p><p></p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[冰山]]></title>
        <id>https://blog.gasolin.idv.tw/code/iceberg</id>
        <link href="https://blog.gasolin.idv.tw/code/iceberg"/>
        <updated>2006-08-02T05:35:17.000Z</updated>
        <summary type="html"><![CDATA[把使用介面的畫面展示給非程式人員看時，如果這個介面很不好，對方會認為你整個程式也是很不好的。]]></summary>
        <content type="html"><![CDATA[<p><em>&gt; </em>   把使用介面的畫面展示給非程式人員看時，如果這個介面很不好，對方會認為你整個程式也是很不好的。</p><blockquote><ul><li>把使用介面的畫面展示給非程式人員看時，如果這個介面非常漂亮，對方會認為這個程式幾乎已經完工。</li><li>比起功能齊全又累積了 3700 年資料但用灰色底色的網站，只有四個網頁但外觀漂亮的會獲到較高的評價。</li><li>因為某些因素要求由各技術經理或客戶「啟動」專案時，可以拿些無關緊要的家家酒內容 (ex: 數種美術設計) 給他們玩 (選擇），讓他們覺得自己很重要。這些他們就不會嚴重影響你的時程了。</li><li>展示時唯一重要的就是畫面。一定要讓它美得冒泡。*
結論:</li></ul></blockquote><ul><li>應該把未完成的使用介面畫得<em>像</em>未完成。在功能完成之前對應的工具欄圖示就只用草圖或暗影。如果是建立 web 服務，在功能完成之前就先不要放在首頁裡。這樣大家就會逐漸看到首頁由三個命令擴充到廿個命令。</li></ul><p>-- 約爾談軟體 (<a href="http://local.joelonsoftware.com/mediawiki/index.php/The_Joel_on_Software_Translation_Project:%E6%8F%AD%E9%9C%B2%E5%86%B0%E5%B1%B1%E8%88%AC%E7%9A%84%E7%A7%98%E5%AF%86" target="_blank" rel="noopener noreferrer">揭露冰山般的秘密)</a></p><p>有空時翻一翻看過的舊文章，可以提醒自己很多事情:-)</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Bruce Eckel 看 TurboGears]]></title>
        <id>https://blog.gasolin.idv.tw/python/Bruce-Eckel-TurboGears</id>
        <link href="https://blog.gasolin.idv.tw/python/Bruce-Eckel-TurboGears"/>
        <updated>2006-07-30T12:00:40.000Z</updated>
        <summary type="html"><![CDATA[我想, 這是第一次有了個網站框架將它的功能做得這麼容易明白.]]></summary>
        <content type="html"><![CDATA[<blockquote><p>我想，這是第一次有了個網站框架將它的功能做得這麼容易明白.
I think this is the first time that a web framework's functionality has been so obvious
-- Bruce Eckel</p></blockquote><p>原文: <a href="http://www.artima.com/weblogs/viewpost.jsp?thread=170038" target="_blank" rel="noopener noreferrer">The Web Frameworks Jam and Turbogears</a></p><p>誰是 Bruce Eckel ?</p><p>Bruce Eckel 是 Thinking in Java, Thinking in C++ 系列書的作者，作品享有很高的聲譽.</p>]]></content>
        <category label="python" term="python"/>
        <category label="TurboGears" term="TurboGears"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[IPv6-IPv4 TCP Relay & PortProxy]]></title>
        <id>https://blog.gasolin.idv.tw/ipv6/IPv6-IPv4-TCP-Relay-PortProxy</id>
        <link href="https://blog.gasolin.idv.tw/ipv6/IPv6-IPv4-TCP-Relay-PortProxy"/>
        <updated>2006-07-28T13:41:40.000Z</updated>
        <summary type="html"><![CDATA[在看 ブロードバンドルータ(CG-BARPRO6)によるOCN IPv6接続 這篇文章時,]]></summary>
        <content type="html"><![CDATA[<p>在看 <a href="http://ipv6.blog.ocn.ne.jp/ipv6/2006/06/cgbarpro6ocn_ip_62af.html" target="_blank" rel="noopener noreferrer">ブロードバンドルータ (CG-BARPRO6) による OCN IPv6 接続 </a>這篇文章時，
發現回覆中提到很可惜沒支援 "v6-v4 TCP Relay" 這功能.</p><p>IPv6-IPv4 TCP Relay 到底是什麼呢？</p><p>上網查了一查，原來就是一種 BIS (Bump In Stack) 的應用，讓 IPv4 Only 的程式可以透過 Port Mapping 來存取 IPv6 網路.</p><p>例如回覆中提到一台僅支援 IPv4 的網路電視機器，因為區網內使用私有地址的關係，需要在外部建一台 Virtual Server 才能在各地存取網路電視這資源.
如果 Router 能支援 "IPv6-IPv4 TCP Relay", 我們就能在外部使用 IPv6 位址存取網路電視了！</p><p>想起來就很讚，做起來.......:-D</p><p>參考：
<a href="http://www.microsoft.com/technet/prodtechnol/windowsserver2003/zh-cht/library/ServerHelp/2e145188-ce7e-4556-8540-abd9e7feb46c.mspx?mfr=true" target="_blank" rel="noopener noreferrer">介面 Portproxy 的 Netsh 命令</a></p>]]></content>
        <category label="IPv6" term="IPv6"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Assimilate Django Template to TurboGears]]></title>
        <id>https://blog.gasolin.idv.tw/python/Assimilate-Django-Template-to-TurboGears</id>
        <link href="https://blog.gasolin.idv.tw/python/Assimilate-Django-Template-to-TurboGears"/>
        <updated>2006-07-22T05:10:43.000Z</updated>
        <summary type="html"><![CDATA[Lots of people use Django template for Pyhton Web Framework(As Django project shares).]]></summary>
        <content type="html"><![CDATA[<p>Lots of people use Django template for Pyhton Web Framework(As Django project shares).</p><p>And if we want to make people feel comfortable to try TurboGears (and then migrate to tg hopefully), first thing we can do is making django template system available on TurboGears.</p><p>Its easy because many template plugins (and their source codes) are available for TurboGears, I use a couple hours to read the <a href="http://www.turbogears.org/docs/plugins/template.html" target="_blank" rel="noopener noreferrer">template plugins doc</a> and make the TurboDjango template plugin.</p><p>You can try the  django template in minutes. Here is the step by step guide:</p><p>Install By SetupTools</p><p>$ easy_install TurboDjango</p><p>How to Make it just Work?</p><p>Step 1<!-- -->.<!-- --> Quickstart</p><p>Use tg-admin tool to create a project</p><p>$ tg-admin quickstart tgdj</p><p>The project name is "tgdj"</p><p>Step 2<!-- -->.<!-- --> Edit Controller</p><p>Edit tgdj/tgdj/controller.py, add following method in "Root" class.</p><blockquote><p>@expose(template = "django:tgdj.templates.djpage")
def page(self):
return dict(name="TurboGears")
"djpage" is django template name</p></blockquote><p>Step 3<!-- -->.<!-- --> Edit Template</p><p>Edit tgdj/tgdj/templates/djpage.html</p><blockquote><p>[h1]<!-- -->Hello, {{name}}<!-- -->[/h1]</p></blockquote><p>The template has "html" file suffix</p><p>Step 4<!-- -->.<!-- --> Check Result</p><p>In tgdj, start develop server by typing</p><p>$ start-tgdj</p><p>Then surf <a href="http://localhost:8080/page" target="_blank" rel="noopener noreferrer">http://localhost:8080/page</a>, you'll see</p><blockquote><h1>Hello, TurboGears</h1><p>The Release is available <a href="http://www.python.org/pypi/TurboDjango" target="_blank" rel="noopener noreferrer">here</a>.</p></blockquote><p>To Django Users: You can migrate your database with <a href="http://inet6.blogspot.com/2006/07/turbogears-with-sqlsoup.html" target="_blank" rel="noopener noreferrer">SQLAlchemy's SqlSoup</a></p>]]></content>
        <category label="python" term="python"/>
        <category label="TurboGears" term="TurboGears"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[TurboGears 中使用 Django 模板]]></title>
        <id>https://blog.gasolin.idv.tw/python/TurboGears-Django-template</id>
        <link href="https://blog.gasolin.idv.tw/python/TurboGears-Django-template"/>
        <updated>2006-07-22T04:54:39.000Z</updated>
        <summary type="html"><![CDATA[利用 TurboDjango Template Plugin, 可以在 TurboGears, Buffet, 或 CherryPy 裡如此這般調用 Django 模板:]]></summary>
        <content type="html"><![CDATA[<p>利用 TurboDjango Template Plugin, 可以在 TurboGears, Buffet, 或 CherryPy 裡如此這般調用 Django 模板:</p><p>在 controller.py 裡</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">{{{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   @expose(template = "django:dem.templates.djpage")</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   def page(self):</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">       return dict(name="TurboGears")</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> &lt;div id="qhide_141663" style="display: block;" class="qt"&gt;}}}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>用 "template" 參數指定樣板時加一個 "django:" 前綴，
或是在設定檔 app.cfg 中將預設的 tg.defaultview = "kid" 改成
tg.defaultview = "django" 就可以在全站使用 django 模板.</p><p>djpage 是模板名稱，return dict
後面給的參數群是要傳給模板的參數.</p><p>在  djpage.html 裡</p><div class="language-{{{ codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-{{{ codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[h1]Hello, {{name}}[/h1]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> &lt;div id="qhide_141664" style="display: block;" class="qt"&gt;}}}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>djpage 是模板名稱，html 是檔名</p><p>網頁 <a href="http://localhost:8080/page" target="_blank" rel="noopener noreferrer">http://localhost:8080/page</a> 的輸出結果是</p><p>"</p><h1>Hello, {{name}}</h1><p>"</p>]]></content>
        <category label="python" term="python"/>
        <category label="TurboGears" term="TurboGears"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Step-by-Step Guide for Setting Up IPv6 in a Test Lab]]></title>
        <id>https://blog.gasolin.idv.tw/ipv6/Step-by-Step-Guide-for-Setting-Up-IPv6-in-a-Test-Lab</id>
        <link href="https://blog.gasolin.idv.tw/ipv6/Step-by-Step-Guide-for-Setting-Up-IPv6-in-a-Test-Lab"/>
        <updated>2006-07-11T07:32:04.000Z</updated>
        <summary type="html"><![CDATA[Microsoft's Step-by-Step Guide for Setting Up IPv6 in a Test Lab]]></summary>
        <content type="html"><![CDATA[<p>Microsoft's <a href="http://www.microsoft.com/downloads/details.aspx?FamilyID=fd7e1354-3a3b-43fd-955f-11edd39551d7&amp;DisplayLang=en" target="_blank" rel="noopener noreferrer">Step-by-Step Guide for Setting Up IPv6 in a Test Lab</a></p>]]></content>
        <category label="IPv6" term="IPv6"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Eclipse Configuration for TurboGears]]></title>
        <id>https://blog.gasolin.idv.tw/python/Eclipse-Configuration-for-TurboGears</id>
        <link href="https://blog.gasolin.idv.tw/python/Eclipse-Configuration-for-TurboGears"/>
        <updated>2006-07-07T19:15:08.000Z</updated>
        <summary type="html"><![CDATA[Continue to my previous article, here is a configuration using eclipse external tools to start web server without open start-proj.py]]></summary>
        <content type="html"><![CDATA[<p>Continue to my <a href="http://inet6.blogspot.com/2006/07/easyeclipse-for-python-and-turbogears.html" target="_blank" rel="noopener noreferrer">previous article</a>, here is a configuration using eclipse external tools to start web server without open start-proj.py</p><p>Here is a list of the current functionality:</p><p>External Tools:</p><ul><li><p>Start Server</p></li><li><p>Start ToolboxAccessibility:</p></li><li><p>Auto Completion
Configure Eclipse to Launch developer server</p></li><li><p>Select<strong> Run -&gt; External Tools -&gt; External Tools </strong></p></li><li><p>Select<strong> "Program" </strong>from the<strong> configuration</strong> tree<em>   Select <strong>New</strong> to create a new program</em>   Enter “<strong>Start Server</strong>” as the name<em>   Enter C:\Python24\pythonw.exe for the Location</em>   For the Working Directory, use
<strong>${project_loc}</strong></p></li><li><p>Enter start-${project_name}.py for the <strong>Arguments</strong></p></li><li><p>Select the <strong>refresh</strong> tab and check <strong>Refresh Resources Upon Completion</strong></p></li><li><p>Select the <strong>Common</strong> tab</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">    *   Find the section for **Display in Favorites Menu**</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">*   Check **External Tools **option**</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><strong>*   Select </strong>Apply** Configure Eclipse to Launch ToolBox</p></li><li><p>Select<strong> Run -&gt; External Tools -&gt; External Tools </strong></p></li><li><p>Select<strong> "Program" </strong>from the<strong> configuration</strong> tree<em>   Select <strong>New</strong> to create a new program</em>   Enter “<strong>Start</strong> ToolBox” as the name<em>   Enter C:\Python24\Scripts\tg-admin.exe for the Location</em>   For the Working Directory, use
<strong>${project_loc}</strong></p></li><li><p>Enter toolbox** <strong>for the </strong>Arguments**</p></li><li><p>Select the <strong>Common</strong> tab</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">    *   Find the section for **Display in Favorites Menu**</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">*   Check **External Tools **option**</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><strong>*   Select </strong>Apply**</p></li></ul><p>Auto-completion</p><ul><li>Select your project in Navigator panel</li><li>Select Properties on Right click menu.</li><li>Select<strong> pyDev - PYTHONPATH </strong>Select<strong> Add source folder </strong>to add project path in<strong> Project Source Folder.
</strong>it will bring project code-completion and code-analysis.</li><li>Select <strong> Add source folder </strong>to add turbogears path in External Source Folder.</li></ul><p>it will bring turbogears code-completion PS: I get idea from <a href="http://www.napcs.com/howto/railsonwindows.html" target="_blank" rel="noopener noreferrer">the rails article</a>, but for mine, you'd have eclipse <!-- -->&amp;<!-- --> pydev installed, I recommand you try <a href="http://www.easyeclipse.org/site/distributions/python.html" target="_blank" rel="noopener noreferrer">EasyEclipse for Python</a>.</p>]]></content>
        <category label="python" term="python"/>
        <category label="TurboGears" term="TurboGears"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[PlotKit with EasyPlot in TurboGears]]></title>
        <id>https://blog.gasolin.idv.tw/python/PlotKit-with-EasyPlot-in-TurboGears</id>
        <link href="https://blog.gasolin.idv.tw/python/PlotKit-with-EasyPlot-in-TurboGears"/>
        <updated>2006-07-04T15:41:34.000Z</updated>
        <summary type="html"><![CDATA[NOTICE: This Article is updated for 0.9w3]]></summary>
        <content type="html"><![CDATA[<p>NOTICE: This Article is updated for 0.9w3</p><p>I recently update my TurboGears PlotKit widget.
This version(0.9w3, 0.9 is <a href="http://www.liquidx.net/plotkit/" target="_blank" rel="noopener noreferrer">origin lib's version</a>, w means 'widget')</p><p>To get these widgets, easy_install them :</p><p>$easy_install plotkit</p><p>Then, you can Check the demo in TurboGears toolbox :D</p><p></p><p>How to try it? Well, it's extremely simple.</p><p>For a fresh quickstart site,</p><p>In controllers.py:</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">from plotkit import EasyPlot</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">class Root(controllers.RootController):</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@expose(template="wgtest.templates.welcome")</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">def index(self):</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">setA = [[0,0], [1,2], [2,3], [3,7], [4,8], [5,6]]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">setB = [[0,0], [1,1], [2,4], [3,8], [4,7], [5,20]]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">setC = [[0,1], [1,3], [2,5], [3,5], [4,3], [5,2]]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">return dict(ep= EasyPlot(id="diag",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                       style="line",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                       width="300",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                       height="300",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                       data=[setA, setB, setC]))</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>In welcome.kid:</p><p>${ep.display()}</p><p>add this script into html "body".</p><p>Explain:</p><p>from plotkit import EasyPlot</p><p>First of all, import the proper widget. (origin PlotKit widget is still availbe)</p><p>return dict(ep= EasyPlot(...))</p><p>return the "ep" diagram instance to template</p><p>${ep.display()}</p><p>display the diagram in template</p><p>Parameters:</p><p>id: (diag)
The Diagram's Identifer (Element ID)</p><p>style: (line)
The diagram could be plot as a "line", "pie", or "bar"diagram.</p><p>width, height : (400, 400)</p><p>The diagram's size</p><p>data :
Datasets is structured with [<!-- -->[x,y]<!-- -->,<!-- -->[x1,y1]<!-- -->,....]</p><p>option :
options of both Layout and Renderer (dictionary style), need be a string</p><p>The <a href="http://media.liquidx.net/js/plotkit-doc/PlotKit.EasyPlot.html" target="_blank" rel="noopener noreferrer">origin example</a> is here.</p><hr><p>History
0.9w3 07/04/2006: more flexible EasyPlot dataset
0.9w2 : fix bugs and add a  EasyPlot() widget to plot a diagram within the code.</p><p>The svn repository is in <a href="http://svn.sourceforge.net/viewcvs.cgi/tgwidgets/" target="_blank" rel="noopener noreferrer">Sourceforge</a>, you can share your TurboGears widget there, too.</p><p>known limit:
current widget's  option param suppor is not very OO, you need pass the dictionary in string format (can't recognize "v", "label")</p>]]></content>
        <category label="python" term="python"/>
        <category label="TurboGears" term="TurboGears"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[EasyEclipse for Python]]></title>
        <id>https://blog.gasolin.idv.tw/python/EasyEclipse-for-Python</id>
        <link href="https://blog.gasolin.idv.tw/python/EasyEclipse-for-Python"/>
        <updated>2006-07-02T08:12:27.000Z</updated>
        <summary type="html"><![CDATA[習慣用微軟 VisualStudio 或用 Java 的人用了 python 語言,]]></summary>
        <content type="html"><![CDATA[<p>習慣用微軟 VisualStudio 或用 Java 的人用了 python 語言，
通常會挑剔 python 語言沒什麼好用的 IDE 來搭配.</p><p>現在 EasyEclipse 有提供包好的 eclipse + pydev (eclipse
平台上的 python 語言支援 -) + Subclipse
(eclipse 平台上的圖形化 SVN 版本控制工具)
<a href="http://www.easyeclipse.org/site/distributions/python.html" target="_blank" rel="noopener noreferrer">http://www.easyeclipse.org/site/distributions/python.html</a></p><p>簡化了 eclipse 平台安裝設定上的繁瑣，拿來做 python
程式開發其實還蠻不賴的，</p>]]></content>
        <category label="python" term="python"/>
        <category label="TurboGears" term="TurboGears"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[prototype documentation]]></title>
        <id>https://blog.gasolin.idv.tw/vr/prototype-documentation</id>
        <link href="https://blog.gasolin.idv.tw/vr/prototype-documentation"/>
        <updated>2006-06-27T16:58:09.000Z</updated>
        <summary type="html"><![CDATA[using prototype.js]]></summary>
        <content type="html"><![CDATA[<p>using prototype.js
<a href="http://www.sergiopereira.com/articles/prototype.js.html" target="_blank" rel="noopener noreferrer">http://www.sergiopereira.com/articles/prototype.js.html</a></p><p>chinese version is also available</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[IETF.org is IPv6 Enabled!]]></title>
        <id>https://blog.gasolin.idv.tw/ipv6/IETF-org-is-IPv6-Enabled</id>
        <link href="https://blog.gasolin.idv.tw/ipv6/IETF-org-is-IPv6-Enabled"/>
        <updated>2006-06-15T01:26:10.000Z</updated>
        <summary type="html"><![CDATA[Now, we can access www.ietf.org with IPv6 connection!]]></summary>
        <content type="html"><![CDATA[<p>Now, we can access <a href="http://www.ietf.org" target="_blank" rel="noopener noreferrer">www.ietf.org</a> with IPv6 connection!</p>]]></content>
        <category label="IPv6" term="IPv6"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[TurboGears AJAX 使用感想- 2]]></title>
        <id>https://blog.gasolin.idv.tw/python/imho-TurboGears-AJAX-2</id>
        <link href="https://blog.gasolin.idv.tw/python/imho-TurboGears-AJAX-2"/>
        <updated>2006-06-09T06:17:23.000Z</updated>
        <summary type="html"><![CDATA[補充一點心得:]]></summary>
        <content type="html"><![CDATA[<p>補充一點心得:</p><p>如果你的網頁應用服務主要關注在 AJAX 應用，大部分動作都用 javascript 在客戶端完成，</p><p>只有 data 部分需要後端提供。那麼 TurboGears 是非常適用的選擇.</p><p>1<!-- -->.<!-- --> 可以先用一般 serverside 開發方式寫函式和建立網頁應用服務原型 (prototype), </p><p>來測試你的網頁應用服務該有的功能.</p><blockquote><p>@expose (format = ".template.pages") #資料以樣版格式顯示
def method (self):
....
return dict {data=data} 因為 TurboGears 中從傳入 serverside 的表單資料處理一致，</p></blockquote><p>所以在 serverside 寫的 code 完全可以繼續使用，</p><p>不必為了支持 AJAX 重寫，很好的達到不重複自己 (DRY) 的效果.</p><p>2.import javascript library , 將資料改以 JSON 格式傳到網頁</p><p>from turbogears import mochikit
...
@expose (format = ".template.pages") #資料以樣版格式顯示
@expose (format = "JSON") #資料以 JSON 格式顯示
def method (self):
....
return dict {data=data, scripty = mochikit} #在網頁上</p><p>TurboGears 預先包好 mochikit, scriptaculous, plotkit 等 javascript 庫，</p><p>使用時可以用程式呼叫，預設可用 JSON 格式傳輸，</p><p>預設 mochikit 庫提供相應資料處理支援.</p><p>3<!-- -->.<!-- --> 在 client 端用 javascript 處理 DOM 物件.</p><p>因為在開發的第一步時已經能將所需的資料，傳輸內容等都處理好了，</p><p>能確信資料傳輸的正確性。所以開發 javascript 時，可以專注在網頁內資料處理的部分. </p><p>在這時遇到 bug 的話也可以很放心地將可能的問題點縮小到單純網頁內資料處理的範圍，</p><p>因而 AJAX 開發時最麻煩的交叉 debug 也變得更容易.</p><p>因此如果你的網頁應用服務主要關注在 AJAX 應用，那麼 TurboGears 是非常適合的選擇.</p>]]></content>
        <category label="python" term="python"/>
        <category label="TurboGears" term="TurboGears"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[PlotKit & moo.fx Widget for TurboGears]]></title>
        <id>https://blog.gasolin.idv.tw/python/PlotKit-moo-fx-Widget-for-TurboGears</id>
        <link href="https://blog.gasolin.idv.tw/python/PlotKit-moo-fx-Widget-for-TurboGears"/>
        <updated>2006-06-02T08:44:10.000Z</updated>
        <summary type="html"><![CDATA[I've made PlotKit & moo.fx widget for TurboGears]]></summary>
        <content type="html"><![CDATA[<p>I've made <a href="http://www.python.org/pypi/plotkit/0.8" target="_blank" rel="noopener noreferrer">PlotKit</a> &amp; <a href="http://www.python.org/pypi/moofx/1.2.4" target="_blank" rel="noopener noreferrer">moo.fx</a> widget for TurboGears</p><p><a href="http://moofx.mad4milk.net/" target="_blank" rel="noopener noreferrer">moo.fx</a> is a super-lite javascript effect library</p><p><a href="http://www.liquidx.net/plotkit/" target="_blank" rel="noopener noreferrer">PlotKit</a> is a javascript svg web diagram plotting library</p><p>Both are available on CheeseShop, youcan easyinstall them by following commands:</p><p>$easy_install moofx</p><p>$easy_install plotkit</p><p>You can found them on <a href="http://www.turbogears.org/cogbin/" target="_blank" rel="noopener noreferrer">TurboGears CogBin</a> too.</p><p>enjoy!</p>]]></content>
        <category label="TurboGears" term="TurboGears"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[TurboGears Widgets One Page List]]></title>
        <id>https://blog.gasolin.idv.tw/python/TurboGears-Widgets-One-Page-List</id>
        <link href="https://blog.gasolin.idv.tw/python/TurboGears-Widgets-One-Page-List"/>
        <updated>2006-05-24T15:52:06.000Z</updated>
        <content type="html"><![CDATA[<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">&lt;table border="1" cellpadding="0" cellspacing="0" bordercolor="#E1E1E1"&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  &lt;tbody&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      &lt;tr&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      &lt;td colspan="4" nowrap="nowrap"&gt;&lt;span class="style1"&gt;TurboGears Widgets &lt;/span&gt;&lt;/td&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    &lt;/tr&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    &lt;tr&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      &lt;td colspan="2" nowrap="nowrap" class="style1"&gt;Form Elements&lt;/td&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      &lt;td colspan="2" nowrap="nowrap" class="style1"&gt;HTML Imports&lt;/td&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    &lt;/tr&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    &lt;tr&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      &lt;td&gt; 1 &lt;/td&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      &lt;td&gt; Button &lt;/td&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      &lt;td&gt;1&lt;/td&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      &lt;td&gt;CSS Link &lt;/td&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    &lt;/tr&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    &lt;tr&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      &lt;td&gt; 2 &lt;/td&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      &lt;td&gt; Calendar &lt;/td&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      &lt;td&gt;2&lt;/td&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      &lt;td&gt;CSS Source &lt;/td&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    &lt;/tr&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    &lt;tr&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      &lt;td&gt; 3 &lt;/td&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      &lt;td&gt; Calendar with time &lt;/td&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      &lt;td&gt;3&lt;/td&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      &lt;td&gt;JS Link&lt;/td&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    &lt;/tr&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    &lt;tr&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      &lt;td&gt; 4 &lt;/td&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      &lt;td&gt;CheckBox&lt;/td&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      &lt;td&gt;4&lt;/td&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      &lt;td&gt;JS Source &lt;/td&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    &lt;/tr&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    &lt;tr&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      &lt;td&gt; 5 &lt;/td&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      &lt;td&gt; File Field &lt;/td&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      &lt;td&gt;5&lt;/td&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      &lt;td&gt;Localizable JS Link&lt;/td&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    &lt;/tr&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    &lt;tr&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      &lt;td&gt; 6 &lt;/td&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      &lt;td&gt; Hidden Field &lt;/td&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      &lt;td colspan="2" nowrap="nowrap" class="style1"&gt;Form Components&lt;/td&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    &lt;/tr&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    &lt;tr&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      &lt;td&gt; 7 &lt;/td&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      &lt;td&gt; Image Button &lt;/td&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      &lt;td&gt;1&lt;/td&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      &lt;td&gt;CheckBox List &lt;/td&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    &lt;/tr&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    &lt;tr&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      &lt;td&gt; 8 &lt;/td&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      &lt;td&gt; Label &lt;/td&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      &lt;td&gt;2&lt;/td&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      &lt;td&gt;FieldSet&lt;/td&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    &lt;/tr&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    &lt;tr&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      &lt;td&gt; 9 &lt;/td&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      &lt;td&gt; Multiple Select Field &lt;/td&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      &lt;td&gt;3&lt;/td&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      &lt;td&gt;RadioButton List &lt;/td&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    &lt;/tr&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    &lt;tr&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      &lt;td&gt; 10 &lt;/td&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      &lt;td&gt; Password Field &lt;/td&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      &lt;td&gt;4&lt;/td&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      &lt;td&gt;Repeating FieldSet&lt;/td&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    &lt;/tr&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    &lt;tr&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      &lt;td&gt; 11 &lt;/td&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      &lt;td&gt; Reset Button &lt;/td&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      &lt;td colspan="2" class="style1"&gt;Table / Form&lt;/td&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    &lt;/tr&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    &lt;tr&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      &lt;td&gt; 12 &lt;/td&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      &lt;td&gt; Single Select Field &lt;/td&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      &lt;td&gt;1&lt;/td&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      &lt;td&gt;DataGrid&lt;/td&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    &lt;/tr&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    &lt;tr&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      &lt;td&gt; 13 &lt;/td&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      &lt;td&gt; Submit Button &lt;/td&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      &lt;td&gt;2&lt;/td&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      &lt;td&gt;List Form &lt;/td&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    &lt;/tr&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    &lt;tr&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      &lt;td&gt; 14 &lt;/td&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      &lt;td&gt; Text Area &lt;/td&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      &lt;td&gt;3&lt;/td&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      &lt;td&gt;Table Form&lt;/td&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    &lt;/tr&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    &lt;tr&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      &lt;td&gt; 15 &lt;/td&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      &lt;td&gt; Text Field &lt;/td&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      &lt;td colspan="2" class="style1"&gt;AJAX&lt;/td&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    &lt;/tr&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    &lt;tr&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   &lt;td colspan="2" class="style1"&gt;Form UI&lt;/td&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      &lt;td&gt;1&lt;/td&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      &lt;td&gt;AJAX Form&lt;/td&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    &lt;/tr&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    &lt;tr&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            &lt;td&gt; 1&lt;/td&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      &lt;td&gt; Jump Menu&lt;/td&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      &lt;td&gt;2&lt;/td&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      &lt;td&gt;Ajax Grid&lt;/td&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    &lt;/tr&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    &lt;tr&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      &lt;td&gt;2&lt;/td&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      &lt;td&gt;Syntax Highlighter&lt;/td&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      &lt;td&gt;3&lt;/td&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      &lt;td&gt;Ajax remote function&lt;/td&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    &lt;/tr&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    &lt;tr&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      &lt;td&gt;3&lt;/td&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      &lt;td&gt;Tabber&lt;/td&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      &lt;td&gt;4&lt;/td&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      &lt;td&gt;Auto Complete&lt;/td&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    &lt;/tr&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    &lt;tr&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      &lt;td colspan="4"&gt;Find more widgets in [TurboGears Cogbin](http://www.turbogears.org/cogbin/)&lt;/td&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    &lt;/tr&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  &lt;/tbody&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&lt;/table&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content>
        <category label="python" term="python"/>
        <category label="TurboGears" term="TurboGears"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[MochiKit Intro - Ajax Experience Slides]]></title>
        <id>https://blog.gasolin.idv.tw/python/MochiKit-Intro-Ajax-Experience-Slides</id>
        <link href="https://blog.gasolin.idv.tw/python/MochiKit-Intro-Ajax-Experience-Slides"/>
        <updated>2006-05-14T04:27:56.000Z</updated>
        <summary type="html"><![CDATA[MochiKit Intro - Ajax Experience Slides]]></summary>
        <content type="html"><![CDATA[<p></p>]]></content>
        <category label="TurboGears" term="TurboGears"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[TurboGears AJAX 使用感想]]></title>
        <id>https://blog.gasolin.idv.tw/python/imho-TurboGears-AJAX</id>
        <link href="https://blog.gasolin.idv.tw/python/imho-TurboGears-AJAX"/>
        <updated>2006-05-13T13:30:19.000Z</updated>
        <summary type="html"><![CDATA[很難用簡短言語表述這種互動開發的經驗. 真的要稍微描述的話, 那是一種不管你想要怎麼進行下一個開發步驟時, TurboGears 都幫你準備好了各種基本工具的感覺.]]></summary>
        <content type="html"><![CDATA[<blockquote><p>很難用簡短言語表述這種互動開發的經驗。真的要稍微描述的話，那是一種不管你想要怎麼進行下一個開發步驟時，TurboGears 都幫你準備好了各種基本工具的感覺.</p></blockquote><p>在學習 TurboGears 之後，我用 TurboGears 框架試做了一個網路模擬架構產生器，發現使用 TurboGears 寫操作到表單的網頁應用程式實在超方便.</p><p>很難用簡短言語表述這種互動開發的經驗。真的要稍微描述的話，那是一種不管你想要怎麼進行下一個開發步驟時，TurboGears 都幫你準備好了各種基本工具的感覺.</p><p>(以下不包含程式碼).</p><p>設計考量</p><p>產生器程式裡使用到大量小塊的表單，用上 AJAX 技術可以大幅縮短來來回回修改的時間，增進使用者經驗.</p><p>採用 ' 內容為中心 ' 的開發方式，controller 中盡量只返回與內容有關的資料。所有內容展示都在樣版跟 javascript 中產生.</p><p>開發之初就可以預見程式中將會出現相對大量的 Javascript 程式碼，我盡量採用 AJAX in Action 中提到將程式碼跟網頁分離的方式實做，將 Javascript 用 import 的方式包含進網頁. </p><p>原型階段
在 protocontroller.py 中新增一個方法函式，在其中手動建立一個列表 (預見將來將改成從資料庫中讀出), 返回列表到網頁，作為剛開始要傳入網頁的資料.</p><p>建立一個剛剛的方法函式所用到的樣版 (template), 在樣版中建立一個表單，來讓使用者選擇傳入的資料。並提供一個給使用者互動用的按鈕.</p><p>使用者按下互動用的按鈕後，利用 mochikit (TurboGears 內建的 javascript 函式庫) 提供的 DOM 處理參數，由使用者選擇的選項來動態創建進一步的表單與第二個互動用的按鈕.</p><p>使用者填好相關資訊，按下第二個互動用的按鈕。傳回資料到另一個方法函式，
取得下一個頁面.</p><p>exception: 使用者修改原來的選擇，按下互動用的按鈕後，利用 mochikit 提供的 DOM 處理函式更新原本動態產生的內容. </p><p>AJAX 網頁
使用 mochikit 提供的非同步 (Async) 處理函式，從伺服器取回資訊.   </p><p>感想
AJAX 非同步處理部分需要 server /client 一起配合才行，因此對一個網頁框架而言，不是單純加上一個 AJAX 函式庫，這個框架就可以說是支援 AJAX. TurboGears 在這點上合格了！</p><p>開發時很妙的地方是 Turbogears 處理表單參數 (POST) 跟網頁參數 (GET) 的方式是一致的，所以原本 controller 中寫好的程式根本不怎麼需要修改. </p><p>Turbogears 返回的資料除了給樣版用之外，要回傳 JSON 格式只要在 uri 後加上 '?tg_format=json' 即可，也不必做額外處理. </p><p>javascript 很多語法跟 c 和 python 相似，mochikit 函式庫更是借用了很多 python 的使用方式，因此實際寫起來 client/server side 程式，轉換間並不感到太過突兀.</p><p>到目前使用上還沒發現 TurboGears 沒有 url mapping 有什麼壞處，要用 url mapping 的話再裝 routes 不遲.</p>]]></content>
        <category label="python" term="python"/>
        <category label="TurboGears" term="TurboGears"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Python 雙週刊 ...?]]></title>
        <id>https://blog.gasolin.idv.tw/python/Python-biweekly</id>
        <link href="https://blog.gasolin.idv.tw/python/Python-biweekly"/>
        <updated>2006-04-22T16:42:10.000Z</updated>
        <summary type="html"><![CDATA[在OSDC tw 上 Marr 提到辦 Python 雙週刊的想法,]]></summary>
        <content type="html"><![CDATA[<p>在 OSDC tw 上 Marr 提到辦 Python 雙週刊的想法，
預計出版方式採雙週報的方式，內容有 python 相關網摘，
原創文章，翻譯文章等.
我覺得這是個很棒的提議.
回來後一直很期待有進一步消息.</p><p>這週回到家來，想想既然是 Open 計畫，
小弟也試著來推動一下，好讓這個好想法更快實現.</p><p>要辦 Python 雙週刊首先是要做好基礎建設.</p><p>基礎建設包含選定使用平台，決定授權方式，
接下來則是決定收稿方式，內容管理與出版方式.</p><p>我提出我的參考實作方法:</p><p>基礎建設部分，小弟在 OSSF 上用 "pythonext", "python
時代雙週刊 " 的專案名稱申請
<a href="http://rt.openfoundry.org/Foundry/Project/index.html?Queue=550" target="_blank" rel="noopener noreferrer">http://rt.openfoundry.org/Foundry/Project/index.html?Queue=550</a></p><p>接下來收稿方式與內容管理方面，
召集人似乎已經有些腹案了，
在此小弟建議增加一種從 TurboGears
社群學來的收稿方式: wiki.</p><p>在 OSSF 共同筆記區中開闢一塊 "DocumentPlayGround",
用來寫隨筆，寫下簡單的 recipes, 創作文章草稿，</p><p>OSSF 也提供 maillist , 可以在 maillist 上討論.</p><p>最後是出版方式，
對最後出版方式我還沒很明確的概念，
但是我可以看到的是利用 OSSF 的檔案庫，
我們可以提供所有出版的 Python 雙週刊下載.</p><p>利用版本控制系統，
我們未來還可以做到針對有更新價值的文章更新，
或是計畫用 python svn
模組動態獲取這雙週中版本控制系統內更新的內容，
組成新一期的雙週刊 :)</p><p>有興趣加入 Python
雙週刊計畫的大哥大姐們先來加入計畫吧，
<a href="http://rt.openfoundry.org/Foundry/Project/?Queue=550" target="_blank" rel="noopener noreferrer">http://rt.openfoundry.org/Foundry/Project/?Queue=550</a>
這是最直接統計 雙週刊辦不辦得起來的方式 :-P</p><p>小弟目前只是協助做好初步的基礎建設，
大家有了共同的 Base, 能開始討論更進一步的 Python
雙週刊運作才是我的希望</p><p>--
使用平台: OSSF
授權方式：未定 (待議)</p>]]></content>
        <category label="python" term="python"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[OCN IPv6]]></title>
        <id>https://blog.gasolin.idv.tw/ipv6/OCN-IPv6</id>
        <link href="https://blog.gasolin.idv.tw/ipv6/OCN-IPv6"/>
        <updated>2006-04-21T06:22:14.000Z</updated>
        <summary type="html"><![CDATA[http://www.ocn.ne.jp/ipv6/]]></summary>
        <content type="html"><![CDATA[<p></p><p>提供以每個月 315 日圓的低價格試驗 IPv6 網路</p><p>網站上演示了透過 IPv6 網路與支援 OCN IPv6 連線的家用閘道器來控制資訊家電，
這願景很可能在近期變的真實.</p>]]></content>
        <category label="IPv6" term="IPv6"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[TurboGears Identity Management]]></title>
        <id>https://blog.gasolin.idv.tw/python/TurboGears-Identity-Management</id>
        <link href="https://blog.gasolin.idv.tw/python/TurboGears-Identity-Management"/>
        <updated>2006-04-11T08:44:15.000Z</updated>
        <summary type="html"><![CDATA[I just try the TurboGears Identity Management function,]]></summary>
        <content type="html"><![CDATA[<p>I just try the TurboGears Identity Management function, </p><p>Thanks Jeff,  the TurboGears  identity system is pretty slick :-)</p><p>I think we need a more clear and "actionable" document, so I "fire up" and modify the IdentityManagement doc on trac.</p><p></p><p>Updated 20060410:
Now the document has been the Turbogears official document,
get it <a href="http://www.turbogears.org/preview/docs/identity/index.html" target="_blank" rel="noopener noreferrer">here</a>.</p>]]></content>
        <category label="TurboGears" term="TurboGears"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Brian's TurboGears Tutorial]]></title>
        <id>https://blog.gasolin.idv.tw/python/Brian-s-TurboGears-Tutorial</id>
        <link href="https://blog.gasolin.idv.tw/python/Brian-s-TurboGears-Tutorial"/>
        <updated>2006-04-10T05:30:46.000Z</updated>
        <summary type="html"><![CDATA[Brian's TurboGears Tutorial]]></summary>
        <content type="html"><![CDATA[<p></p>]]></content>
        <category label="python" term="python"/>
        <category label="TurboGears" term="TurboGears"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[INET 20060330]]></title>
        <id>https://blog.gasolin.idv.tw/ipv6/INET-20060330</id>
        <link href="https://blog.gasolin.idv.tw/ipv6/INET-20060330"/>
        <updated>2006-04-03T12:21:06.000Z</updated>
        <summary type="html"><![CDATA[新版的 INET 出了, 主要加入 RIP and OSPFv2 等 IP Routing 功能]]></summary>
        <content type="html"><![CDATA[<p>新版的 <a href="http://www.omnetpp.org/filemgmt/singlefile.php?lid=108" target="_blank" rel="noopener noreferrer">INET</a> 出了，主要加入 RIP and OSPFv2 等 IP Routing 功能</p>]]></content>
        <category label="OMNET++" term="OMNET++"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[QuickMindMaps]]></title>
        <id>https://blog.gasolin.idv.tw/python/QuickMindMaps</id>
        <link href="https://blog.gasolin.idv.tw/python/QuickMindMaps"/>
        <updated>2006-04-03T04:43:17.000Z</updated>
        <summary type="html"><![CDATA[I've Update some QuickMindMaps for TurboGears.]]></summary>
        <content type="html"><![CDATA[<p>I've Update some <a href="http://flickr.com/photos/gasolin/tags/turbogears/" target="_blank" rel="noopener noreferrer">QuickMindMaps</a> for TurboGears.
Those QuickMindMaps present from model to views(by topic) to give you better resolution of TurboGears.</p><p>And I've listed My TurboGears-relate posts on my <a href="http://gasolinfred.pbwiki.com/%5BTurboGearsInMinutes" target="_blank" rel="noopener noreferrer">pbwiki</a></p>]]></content>
        <category label="python" term="python"/>
        <category label="TurboGears" term="TurboGears"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[TurboGears 的測試框架]]></title>
        <id>https://blog.gasolin.idv.tw/python/TurboGears-test-framework</id>
        <link href="https://blog.gasolin.idv.tw/python/TurboGears-test-framework"/>
        <updated>2006-03-24T11:04:58.000Z</updated>
        <summary type="html"><![CDATA[TurboGears 裡集成了 nose 作為測試工具. nose 支持 unitest / doctest, 可以對資料庫處理 (Model), 生成的頁面(View),  cherrypy 輸出結果(Controller) 作測試.]]></summary>
        <content type="html"><![CDATA[<p>TurboGears 裡集成了 <a href="http://somethingaboutorange.com/mrl/projects/nose/" target="_blank" rel="noopener noreferrer">nose</a> 作為測試工具. nose 支持 unitest /doctest, 可以對資料庫處理 (Model), 生成的頁面 (View),  cherrypy 輸出結果 (Controller) 作測試. </p><p>搭配 selenium4gears 直接測試網頁介面的能力，讓 TurboGears 擁有了完整的測試方法.</p><p>TurboGears 可以直接集成成熟的現成 python 套件，這是使用 TurboGears 的好處.</p>]]></content>
        <category label="TurboGears" term="TurboGears"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[TurboGears 支持各種 Ajax 套件]]></title>
        <id>https://blog.gasolin.idv.tw/python/TurboGears-Ajax</id>
        <link href="https://blog.gasolin.idv.tw/python/TurboGears-Ajax"/>
        <updated>2006-03-23T12:32:02.000Z</updated>
        <summary type="html"><![CDATA[網路上許多 Ajax 套件, 例如 Dojo, Rico, 提供了比 TurboGears 預設的 mochikit 更多視覺上或是功能上的便利.]]></summary>
        <content type="html"><![CDATA[<p>網路上許多 Ajax 套件，例如 <a href="http://dojotoolkit.org/" target="_blank" rel="noopener noreferrer">Dojo</a>, <a href="http://openrico.org/" target="_blank" rel="noopener noreferrer">Rico</a>, 提供了比 TurboGears 預設的 mochikit 更多視覺上或是功能上的便利.</p><p>要讓 TurboGears 框架支援更多這些 Ajax 函式庫超容易。只要將解壓縮後的函式庫放到 Turbogears/static/js 資料夾下。然後在要使用時在 html 中以 script type="text/javascript"  src = "/tg_js/script.js" 路徑加入即可</p><p>例如要用 Dojo 的 WYSIWYG 網頁編輯器功能，</p><p>先在 html body 中加入</p><blockquote><p>div class="dojo-Editor"
some content
/div</p></blockquote><p>然後再在 title 中加入 dojo 連結</p><blockquote><p>script type="text/javascript" src="/tg_js/dojo/dojo.js</p></blockquote><p>並呼叫載入要使用的 dojo-Editor 功能:</p><blockquote><p>script type="text/javascript"
dojo.require("dojo.widget.Editor");
/script</p></blockquote>]]></content>
        <category label="TurboGears" term="TurboGears"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[從分享書籤到分享內容- unAPI]]></title>
        <id>https://blog.gasolin.idv.tw/service/from-share-bookmark-to-content-unAPI</id>
        <link href="https://blog.gasolin.idv.tw/service/from-share-bookmark-to-content-unAPI"/>
        <updated>2006-03-13T16:52:26.000Z</updated>
        <summary type="html"><![CDATA[現在不少 web 服務(amazon, del.icio.us, flickr)都提供有 API 或 RSS,]]></summary>
        <content type="html"><![CDATA[<p>現在不少 web 服務 (amazon, del.icio.us, flickr) 都提供有 API 或 RSS,
共通之處是這些 web 服務都使用了 XML 標記語言，解析起來類似.
但是問題來了，這些種類 web service 的標籤格式雖然都遵照 XML 標記語言規範了，
但各 web service 的格式還是都稍有不同，programmer 要使用這些 web 服務的時候，每要支援一個服務就得重寫一個 Adapter.</p><p><a href="http://unapi.info/specs/" target="_blank" rel="noopener noreferrer">unAPI</a>是一個新提出來的抽象 API,
希望透過統一介面操作這些 API,
讓 programmer 得以更輕鬆用同一個介面做出能線上分享書籍介紹，參照圖片，剪貼網頁的平台.(拿 windows 軟體來比喻的話就像是 Microsoft OneNote 那樣的功能)
programmer 開發的速度加快了，使用者也更容易得到更好的體驗 (或是更奇怪的體驗？).</p><p>雖然之前已經有不少 web 2.0 網站打著可以將許多 web service 或是將 feed, blog post "燒" 在一起來用來看，
但是被 "綁" 在特定平台上的感覺總是不夠自在.
因此我感覺 <a href="http://unapi.info/specs/" target="_blank" rel="noopener noreferrer">unAPI</a> 相當具有成功的機會.</p><p>unAPI 離我們有點遠，覺得太抽象？還有<a href="http://onebiglibrary.net/project/unapi/dawn-of-social-clipboards-screencast" target="_blank" rel="noopener noreferrer">screencast</a>可以參考喔.</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[What straws make you choose TurboGears?]]></title>
        <id>https://blog.gasolin.idv.tw/python/What-straws-make-you-choose-TurboGears</id>
        <link href="https://blog.gasolin.idv.tw/python/What-straws-make-you-choose-TurboGears"/>
        <updated>2006-03-12T13:29:44.000Z</updated>
        <summary type="html"><![CDATA[I wonder to know the reason why people here choose TurboGears? I'd like to share mine.]]></summary>
        <content type="html"><![CDATA[<p>I wonder to know the reason why people here choose TurboGears? I'd like to share mine.</p><p>1<!-- -->.<!-- --> Python Battery Included
With TurboGears I can apply &gt;5000 python modules on my web application natually. "Battery Included" facilitate me focusing on my major job to getting things done.</p><p>ex:
Wiki20: "docutils" module is helpful for wiki syntax
TurboBlog: PIL "ImageFonts" module is helpful for blog anti-spam stuff.</p><p>2<!-- -->.<!-- --> Flexibility from Prototpying to Merchandising
In small app or prototyping stage, I just want to see something work first.
TurboGears give me the flexibility to do most of my web programming by only edit controller.py. I can adopt Template, ORM, AJAX.... latter if I really need them.
I don't want to take care of "framework" stuff such as admin controll, templating, url mapping, or database reference at first (which Django did).</p><p>ex: I've written some short tutorials to teach myself turbogears' features without template. (in chinese).
<a href="http://gasolinfred.pbwiki.com/%5BTurboGearsInMinutes" target="_blank" rel="noopener noreferrer">http://gasolinfred.pbwiki.com/%5BTurboGearsInMinutes</a></p><p>3<!-- -->.<!-- --> Easy to start, Plenty for Learn
Model Designer , CatWalk, help me leave from the first headache of database backend web programming.
<a href="http://trac.turbogears.org/turbogears/wiki/QuickPrototyping" target="_blank" rel="noopener noreferrer">http://trac.turbogears.org/turbogears/wiki/QuickPrototyping</a></p><p>And after learning how "controllers" and "expose" works (I think its the minimum set of turbogears core), I can construct a workable web app and enhance it during my learning curve.</p>]]></content>
        <category label="TurboGears" term="TurboGears"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Hypy, hypertext in python]]></title>
        <id>https://blog.gasolin.idv.tw/python/Hypy-hypertext-in-python</id>
        <link href="https://blog.gasolin.idv.tw/python/Hypy-hypertext-in-python"/>
        <updated>2006-03-08T16:07:01.000Z</updated>
        <summary type="html"><![CDATA[http://manatlan.online.fr/hypy.php]]></summary>
        <content type="html"><![CDATA[<p></p><p>今天剛寫完 "Making a Time Tracker in TurboGears", 重新來看 Hypy 這個小樣板程式.</p><p>在 TurboGears 中可以這樣使用 hypy</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">0  from turbogears import controllers</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">0  from turbogears import expose</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">0  import hypy</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">1  class Root(controllers.RootController):</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">2    @expose()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">3    def hypyd(self):</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">4        template="""</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">5        @html:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">7         @head:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">8          @title:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">9           ${title}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">10         @body:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">11          Hello TurboGears!</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">12       """</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">13       context = (title = "Hello hypy")</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">14       web = hypy.parse(template,context)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">15       return web</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>原本 template 字串樣版用 html 寫的話簡直就是糊在一起，但是改用 Hypy 寫之後整體就清楚多了
Hypy 的語法跟 kid 的基本語法接近。又能乾淨地在程式碼中內嵌網頁，很適合當作一個取代字串樣版介於 controller 與 template 的中間形式.</p><p>只是這樣是否就又要使用者多學一種語言，反而增加學習難度？這就是相當見仁見智的事了.</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Making a Time Tracker in TurboGears]]></title>
        <id>https://blog.gasolin.idv.tw/code/Making-a-Time-Tracker-in-TurboGears</id>
        <link href="https://blog.gasolin.idv.tw/code/Making-a-Time-Tracker-in-TurboGears"/>
        <updated>2006-03-07T10:52:15.000Z</updated>
        <summary type="html"><![CDATA[2006/30/7]]></summary>
        <content type="html"><![CDATA[<p>2006/30/7
Since may people may come from <a href="http://42.blogs.warnock.me.uk/2006/03/will_python_dom.html" target="_blank" rel="noopener noreferrer">42</a>, I suggest you to download the full instruction at <a href="http://trac.turbogears.org/turbogears/wiki/QuickPrototyping" target="_blank" rel="noopener noreferrer">TurboGears Trac</a>, you'll see full instruction to make it.</p><p>This article is motivate by the <a href="http://oodt.jpl.nasa.gov/better-web-app.mov" target="_blank" rel="noopener noreferrer">framework comparison screencast</a> performed by Sean Kelly. I found this screencast from <a href="http://groups.google.com/group/turbogears/browse_thread/thread/76378b490de76eab" target="_blank" rel="noopener noreferrer">TurboGears group</a>. the <a href="http://oodt.jpl.nasa.gov/better-web-app.mov" target="_blank" rel="noopener noreferrer">screencast</a> compare J2EE , <a href="http://www.rubyonrails.org" target="_blank" rel="noopener noreferrer">Rails</a> ,<a href="http://www.zope.org" target="_blank" rel="noopener noreferrer">Zope</a> ,<a href="http://www.turbogears.org" target="_blank" rel="noopener noreferrer">TurboGears</a> ,and <a href="http://www.djangoproject.com" target="_blank" rel="noopener noreferrer">Django</a>.  TurboGears did fairly well. but Sean Kelly wasn't using the latest version(~0.9) during his tests.Thus I try to re-imlement the demo by using bunch of exciting new features (Model Designer, CatWalk, DataController...) introduced in the latest TurboGears  version.</p><p>Origin version in ScreenCast</p><p>The screencast implement page like this,  there is a add only interface, no editing.</p><p></p><p>And it cost 2 python source files 49 lines of code, 2 page of templates, 53 lines of code, not a hundred lines of code.</p><p></p><p>Re-Implement version with latest svn(#885)</p><p>Its time catch up with Sean Kelly's demo in latest TurboGears version.
The re-implement with latest Turbogears svn like this. TurboGears &gt; 0.9 provide autogenerate Editor(Catwalk) in Admin Panel(Toolbox)</p><p></p><p>We can get another running mode editor(much usefull for real app) with DataController by several lines of code.</p><p></p><p>the re-implement version cost 2 python source files (now Turbogears config file is in python) 6 lines of code, 0 page of templates, not a ten lines of code. The re-implement version also include a full-functional database-relation editor.</p><p></p><p>Turbogears automatically generate pages for you both in admin and practice perspective. In Turbogears you can customize DataController and other widgets' looking and feel to fit your layout style.</p>]]></content>
        <category label="TurboGears" term="TurboGears"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Access to IPv6 Home Network from Mobile Terminals]]></title>
        <id>https://blog.gasolin.idv.tw/ipv6/Access-to-IPv6-Home-Network-from-Mobile-Terminals</id>
        <link href="https://blog.gasolin.idv.tw/ipv6/Access-to-IPv6-Home-Network-from-Mobile-Terminals"/>
        <updated>2006-03-07T05:24:32.000Z</updated>
        <summary type="html"><![CDATA[OCN, an ISP company in Japan has published an experimental service for non-IPv6 enabled devices in non-IPv6 enabled networks to access pure-IPv6 Home network.]]></summary>
        <content type="html"><![CDATA[<p>OCN, an ISP company in Japan has published an experimental service for non-IPv6 enabled devices in non-IPv6 enabled networks to access pure-IPv6 Home network.</p><p>They seems using some kind of tunneling service. </p><p>OCN IPv6 Mobile Provides Access to IPv6 Home Network from Mobile Terminals
<a href="http://www.ipv6style.jp/en/news/2006/0214_nttcom.shtml" target="_blank" rel="noopener noreferrer">http://www.ipv6style.jp/en/news/2006/0214_nttcom.shtml</a></p><p>OCN IPv6 モバイル
<a href="http://www.ocn.ne.jp/ipv6/mobile/?ipv6_info" target="_blank" rel="noopener noreferrer">http://www.ocn.ne.jp/ipv6/mobile/?ipv6_info</a></p>]]></content>
        <category label="IPv6" term="IPv6"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[用 TurboGears 做個網站時間追蹤應用程式]]></title>
        <id>https://blog.gasolin.idv.tw/python/time-tracker-TurboGears</id>
        <link href="https://blog.gasolin.idv.tw/python/time-tracker-TurboGears"/>
        <updated>2006-03-05T15:36:16.000Z</updated>
        <summary type="html"><![CDATA[根據 Sean Kelly 的 framework comparison screencast  的影片演示,]]></summary>
        <content type="html"><![CDATA[<p>根據 Sean Kelly 的 <a href="http://oodt.jpl.nasa.gov/better-web-app.mov" target="_blank" rel="noopener noreferrer">framework comparison screencast </a> 的影片演示，
他比較了 J2EE, Rails, Zope, TurboGears, and Django 幾個框架. TurboGears 在其中得到了不錯的評價，然而他所使用的 TurboGears 版本還沒引入網頁自動生成資料庫編輯介面 (CRUD) 等 0.9 版新加入，可以大大減少初期開發時間的功能.
因此我利用他的 Time Tracker 例子和資料模型寫了篇用上 TurboGears 0.9 新功能的教學文章 (英文), 貼在 TurboGears Trac 裡，可以前去下載.</p><p>QuickPrototyping: Making a Time Tracker in TurboGears
<a href="http://trac.turbogears.org/turbogears/wiki/QuickPrototyping" target="_blank" rel="noopener noreferrer">http://trac.turbogears.org/turbogears/wiki/QuickPrototyping</a></p>]]></content>
        <category label="TurboGears" term="TurboGears"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[深入 TurboGears - 驗證並轉換表單參數 (Validators) 講解草稿]]></title>
        <id>https://blog.gasolin.idv.tw/python/divein-TurboGears-form-Validators</id>
        <link href="https://blog.gasolin.idv.tw/python/divein-TurboGears-form-Validators"/>
        <updated>2006-03-01T08:29:23.000Z</updated>
        <summary type="html"><![CDATA[在 TurboGears 中可以用 "@validate()" 裝飾方法來處理輸入表單參數的轉值與驗證. 使用的好處是除了會自動確認型態的正確性之外, 還會將字串轉換成目標型態.]]></summary>
        <content type="html"><![CDATA[<p>在 TurboGears 中可以用 "@validate ()" 裝飾方法來處理輸入表單參數的轉值與驗證。使用的好處是除了會自動確認型態的正確性之外，還會將字串轉換成目標型態.</p><p>例如拿前一個網頁加法器作例子，原來例子中加總結果必須先將字串轉換成目標型態，因此計算式如下
SUM = (int (A)+int (B))
我們可以使用 "@validate ()" 來預先先確認輸入資料，並將資料轉換成預期的資料型態.
範例如下:</p><div class="language-py codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-py codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> turbogears</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">validators </span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">*</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token decorator annotation punctuation" style="color:#393A34">@expose</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">inputform </span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">"add"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token decorator annotation punctuation" style="color:#393A34">@validate</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">validators</span><span class="token operator" style="color:#393A34">=</span><span class="token builtin">dict</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">A</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">validators</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Int</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">B</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">validators</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Int</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">def</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">calcit</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">self</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">A</span><span class="token operator" style="color:#393A34">=</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">B</span><span class="token operator" style="color:#393A34">=</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> SUM</span><span class="token operator" style="color:#393A34">=</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            template </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token triple-quoted-string string" style="color:#e3116c">"""</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">            &amp;lt;form name="add" method="post" action="/calcit"&amp;gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">              &amp;lt;input name="A" type="text" value="%d"/&amp;gt; + &amp;lt;input name="B" type="text" value="%d"/&amp;gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">              &amp;lt;input type="submit" value="=" /&gt; &amp;lt;input name="SUM" type="text" value="%d"/&amp;gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">            &amp;lt;/form&amp;gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">            """</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            SUM </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> A </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> B</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> template</span><span class="token operator" style="color:#393A34">%</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">A</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">B</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">SUM</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>@validate(validators=dict(A=Int(),B=Int()))
@validate(validators={"A":Int()}, "B":Int())</p><p>現在例子中由於已經預先將字串轉換成目標型態，因此可以直接加總
SUM = A + B</p><p>這讓程式碼可讀性更進一步增加了.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="總結">總結<a href="#總結" class="hash-link" aria-label="Direct link to 總結" title="Direct link to 總結">​</a></h2><p>validate ()" 方法除了可以幫忙我們判斷回傳值型態外，同時也會將回傳值從傳回的字串型態轉換成指定型態供我們處理</p><p>除了這些簡單值的字串轉換外，在 TurboGears 中做 email 地址確認時，甚至還能選擇確認 email 主機是否真正存在喔；)</p>]]></content>
        <category label="TurboGears" term="TurboGears"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[深入 TurboGears - 從模板生成網頁 (Templating)]]></title>
        <id>https://blog.gasolin.idv.tw/python/divein-TurboGears-Templating</id>
        <link href="https://blog.gasolin.idv.tw/python/divein-TurboGears-Templating"/>
        <updated>2006-02-28T13:58:26.000Z</updated>
        <summary type="html"><![CDATA[TurboGears 中可以使用從模板生成網頁 (Templating) 的方式,可以更好地將控制邏輯與操作介面分開,來達到程式碼與網頁分離的需求.讓程式與網頁更易於維護.]]></summary>
        <content type="html"><![CDATA[<p>TurboGears 中可以使用從模板生成網頁 (Templating) 的方式，可以更好地將控制邏輯與操作介面分開，來達到程式碼與網頁分離的需求。讓程式與網頁更易於維護. </p><p>使用 TurboGears 中的預設模板，可以用所見即所得 (WYSIWYG) 網頁編輯器來編輯網頁外觀.
並在回傳時用字典 (dict) 形式傳回變數，降低程式碼與網頁之間的直接關聯性.</p><p>讓我們用模板功能取代將網頁用字串存在 controllers 中的方式:</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="1建立控制邏輯add-logic">1. 建立控制邏輯 (Add Logic)<a href="#1建立控制邏輯add-logic" class="hash-link" aria-label="Direct link to 1. 建立控制邏輯 (Add Logic)" title="Direct link to 1. 建立控制邏輯 (Add Logic)">​</a></h2><div class="language-py codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-py codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token number" style="color:#36acaa">0</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> turbogears </span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> controllers</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token number" style="color:#36acaa">1</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> turbogears </span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> expose</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token number" style="color:#36acaa">2</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">Root</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">controllers</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">RootController</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token number" style="color:#36acaa">3</span><span class="token plain">    @expose</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">template</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">".templates.filename"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token number" style="color:#36acaa">4</span><span class="token plain">    </span><span class="token keyword" style="color:#00009f">def</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">webpage</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">self</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token number" style="color:#36acaa">5</span><span class="token plain">        </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token builtin">dict</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>透過在 @expose () 方法中加入 template=".templates.filename" 宣告來指定要使用的模板名稱.</p><p>return 型態必須是字典型態。裡面傳回的內容則可以動態被填入模板中</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="2建立模板">2. 建立模板<a href="#2建立模板" class="hash-link" aria-label="Direct link to 2. 建立模板" title="Direct link to 2. 建立模板">​</a></h2><p>我們建立 "filename.kid" 的模板.
模板名稱要跟 controllers 中 @expose (template=".templates.filename") 的 filename 相符</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="3模板宣告">3. 模板宣告<a href="#3模板宣告" class="hash-link" aria-label="Direct link to 3. 模板宣告" title="Direct link to 3. 模板宣告">​</a></h2><p>模板要使用 XHTML 格式來撰寫. </p><p>從 HTML 轉換到 XHTML 的主要差別在於 XHTML 對網頁語法有較嚴格規定</p><ul><li><p>在 html 標籤內加上 <!-- -->&lt;<!-- -->html xmlns:py="<a href="http://purl.org/kid/ns#%22/" target="_blank" rel="noopener noreferrer">http://purl.org/kid/ns#"/</a>&gt;<!-- --> 宣告，表示這是一個 TurboGears 的模板，在執行的時候 TurboGears 才能正確地將自行設定的變數替換成適當的值</p></li><li><p>所有的標籤要對稱，單一的標籤要以 / 作結尾。例如 <!-- -->&lt;<!-- -->br<!-- -->&gt;<!-- --> 變成 <!-- -->&lt;<!-- -->br/<!-- -->&gt;<!-- -->, <!-- -->&lt;<!-- -->input<!-- -->&gt;<!-- --> 變成 <!-- -->&lt;<!-- -->input/<!-- -->&gt;</p></li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="結論">結論<a href="#結論" class="hash-link" aria-label="Direct link to 結論" title="Direct link to 結論">​</a></h2><p>前幾分鐘裡的範例都是在 Controller 中將網頁用一個 "template" 字串來表示，直接將網頁內容存在 python 程式裡。然後用傳回值 (return) 的方式將 "template" 字串轉換成網頁顯示出來.
用這種方法寫網頁程式，好處是我們只需要將網頁程式當作一般程式來處理就行了，不需要了解太多複雜的動態網頁技巧，利用這樣的方法，我們需要仔細處理插入變數的類別，並在回傳時注意變數的安排順序，好正確地將字串中的變數替換成我們期望的樣子.
我們很快地就發現這樣將網頁內容嵌在程式碼裡的寫作方式，隨著漸漸增加的功能方法，與要求更複雜的內容呈現時，程式碼就變得越來越難以維護.</p><p>我們應該要擁有方便的工具，可以用任意順序傳回我們想要顯示的內容，並在實際的網頁上重複運用這些資訊。最好還可以用一般的所見即所得 (WYSIWYG) 網頁編輯器來編輯網頁外觀，</p>]]></content>
        <category label="TurboGears" term="TurboGears"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[程序維護]]></title>
        <id>https://blog.gasolin.idv.tw/code/maintenance</id>
        <link href="https://blog.gasolin.idv.tw/code/maintenance"/>
        <updated>2006-02-17T08:40:57.000Z</updated>
        <summary type="html"><![CDATA[程序維護是不同於程序開發的]]></summary>
        <content type="html"><![CDATA[<blockquote><p>程序維護是不同於程序開發的
要想維護一個程序，就要把程序看作是一棵漸漸成長的植物，拔苗助長是毫無益處的。一個程序必須被小心地滋養。程序員在對程序進行改動之前，必須對每一個邏輯關係非常熟悉，必須對程序的意圖有很深刻的理解力。這種理解力不是在一夜之間就可以得來的，需要長時間的積累。
-<a href="http://wiki.woodpecker.org.cn/moin/ZenOfProgramming" target="_blank" rel="noopener noreferrer">編程之禪</a></p></blockquote><p>編程之禪實在是蠻唬人的文章，不過其中也有些的內容令人有所感觸</p><blockquote><p>我編程三日，
兩耳不聞人聲，
只有硬盤在歌唱。
一台沒有靈魂的機器，人們說，
但它的靈魂是同事們的汗水，
在它裡面有我們多年的生命， </p><p>...</p><p>我聽見了歎息和歡笑的回聲，
在這間黑洞洞的辦公室裡，
終端機閃耀著光芒，就像星星一樣。</p></blockquote>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[什麼是 Selenium?]]></title>
        <id>https://blog.gasolin.idv.tw/devtools/what-is-Selenium</id>
        <link href="https://blog.gasolin.idv.tw/devtools/what-is-Selenium"/>
        <updated>2006-02-15T08:18:12.000Z</updated>
        <summary type="html"><![CDATA[Selenium is a test tool for web applications. Selenium tests run directly in a browser, just as real users do]]></summary>
        <content type="html"><![CDATA[<blockquote><p>Selenium is a test tool for web applications. Selenium tests run directly in a browser, just as real users do</p></blockquote><p><a href="http://www.openqa.org/selenium/" target="_blank" rel="noopener noreferrer">Selenium</a> 是網頁程式測試工具，可以跨平台跨瀏覽器模擬各種使用者可能的操作.
主要的兩個功能是:</p><ul><li>瀏覽器相容性測試 (Browser compatability testing) </li><li>系統功能測試 (System functional testing)</li></ul><p>Selenium 在內頁框 (iframe) 中，使用 JavaScript 自動化引擎來模擬使用者操作網頁的動作，
可以安裝 <a href="http://www.openqa.org/selenium-ide/" target="_blank" rel="noopener noreferrer">IDE</a> (firefox 插件) 來使用 selenium,
或是在 TurboGears 中也可以使用 Selenium , 看看 <a href="http://www.checkandshare.com/blog/?p=36" target="_blank" rel="noopener noreferrer">Selenium4TurboGears</a> 的介紹影片吧</p>]]></content>
        <category label="TurboGears" term="TurboGears"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[關於 一分鐘 TurboGears]]></title>
        <id>https://blog.gasolin.idv.tw/python/about-one-minute-TurboGears</id>
        <link href="https://blog.gasolin.idv.tw/python/about-one-minute-TurboGears"/>
        <updated>2006-02-14T15:57:01.000Z</updated>
        <summary type="html"><![CDATA[最近生活中都是在寫 Code, 鑽研 boa web server 處理的流程,]]></summary>
        <content type="html"><![CDATA[<p>最近生活中都是在寫 Code, 鑽研 boa web server 處理的流程，
打開 Dreamweaver 也越來越少使用 Design View,
感覺自己越來越有軟體工程師的樣子.</p><p>這陣子寫的 "一分鐘 TurboGears" 系列，前數篇原本是在春節期間用英文寫成的，後來才決定先用最熟悉的中文來寫.</p><p>現在的網頁框架幾乎全部都套用 MVC 模式，將資料模型 (Model), 展示頁面 (View,Template) 分離，以控制邏輯 (Control logic) 來溝通兩者以呈現出設計者的思想。這樣的方式讓架構跟維護都變得更清楚更容易.</p><p>然而，在寫動態網頁原型的階段時，一定要一次就套用上 MVC 嗎？
我們在網頁程式早期做的頁面，有幾頁能不做大修改就能留用到最後呢？
我們什麼時候能一次就將資料庫欄位，互相間的關聯性一次設計好呢？
起碼對我來講，這兩個假設都是不可能的.</p><p>設計 MVC 程式一般理想的流程是:</p><p>設計資料庫欄位 -&gt; 產生資料庫 -&gt; 寫樣板 -&gt; 寫控制邏輯以填入資料 -&gt; 展示</p><p>但是在實做上</p><p>設計資料庫欄位 -&gt; 產生資料庫 -&gt; 寫樣板 -&gt; 寫控制邏輯
-&gt; 發現問題 -&gt; 修改資料庫欄位 -&gt; 重新產生資料庫</p><p>我在 Modeling 時發現，在早期設計階段修改欄位的需求很頻繁，(常有些是 paper design 時沒想到的)
碰到這樣的問題時，除了 update 資料庫，若與資料庫不相容時還得將資料庫刪除，再重新產生.</p><p>設計 MVC 程式在第一關就遇到 Modeling 問題，接下來當然很難繼續學下去.</p><p>有了方便的網頁程式框架，與動態網頁幾乎可忽略的編譯與重新載入時間的特性，我們當然可以用靈活 (agile) 編程的方式來寫我們的網頁程式. </p><p>我想最快速動態資料庫網頁 prototyping 的方法，也許就是像目前的範例這樣子先將 model, view 放一邊，純寫程式碼先掌握正確的控制邏輯吧.</p>]]></content>
        <category label="TurboGears" term="TurboGears"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[深入 TurboGears - 多頁面的階層式網頁 (Multiple pages - Hierarchy)]]></title>
        <id>https://blog.gasolin.idv.tw/python/divein-TurboGears-Multiple-pages-Hierarchy</id>
        <link href="https://blog.gasolin.idv.tw/python/divein-TurboGears-Multiple-pages-Hierarchy"/>
        <updated>2006-02-08T10:32:50.000Z</updated>
        <summary type="html"><![CDATA[TurboGears 網頁階層的有兩類, 第一類是用"參數"來對應網頁階層, 第二類是用物件樹結構(即類別實體)來對應網頁階層.]]></summary>
        <content type="html"><![CDATA[<p>TurboGears 網頁階層的有兩類，第一類是用 "參數" 來對應網頁階層，第二類是用物件樹結構 (即類別實體) 來對應網頁階層. </p><ol><li>參數對應結構</li></ol><p>例如 http://localhost:8080/calcit/4/8
"4", "8" 會被分別當成 calcit 方法的第一，第二個參數傳入，作用等同於
http://localhost:8080/calcit?A=4&amp;B=5</p><p>如果 calcit 方法不存在，即連結資料夾名稱沒有對應到方法的話，就會被當成參數傳到最近物件的 default () 中當作參數 (在本例為 TurboGears 預設建立的 Root 物件).</p><ol start="2"><li>物件樹結構</li></ol><p>另外三種情形都是用物件樹結構的 "類別實體"(instance) 來對應網頁階層。可以實現超過一層的網頁. TurboGears 中會自動建立 Root 類別的實體，我們可以建立其他的類別，然後在 Root 類別中建立其他相關類別的實體.(恩... 要把這個概念寫成文字真不容易) 範例如下:</p><p>CASE1: controllers.py 內</p><p>在 controllers.py 內編寫多個類別 (class)</p><div class="language-py codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-py codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token number" style="color:#36acaa">0</span><span class="token plain">  </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> turbogears </span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> controllers</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">expose</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token number" style="color:#36acaa">1</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token number" style="color:#36acaa">2</span><span class="token plain">  </span><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">Subfolder</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">controllers</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">RootController</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token number" style="color:#36acaa">3</span><span class="token plain">     @expose</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token number" style="color:#36acaa">4</span><span class="token plain">     </span><span class="token keyword" style="color:#00009f">def</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">index</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">self</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token number" style="color:#36acaa">5</span><span class="token plain">         </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"I am B"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token number" style="color:#36acaa">6</span><span class="token plain">     @expose</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token number" style="color:#36acaa">7</span><span class="token plain">     </span><span class="token keyword" style="color:#00009f">def</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">C</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">self</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token number" style="color:#36acaa">8</span><span class="token plain">         </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"I am C"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token number" style="color:#36acaa">9</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token number" style="color:#36acaa">10</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">Root</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">controllers</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">RootController</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token number" style="color:#36acaa">11</span><span class="token plain">    @expose</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token number" style="color:#36acaa">12</span><span class="token plain">    </span><span class="token keyword" style="color:#00009f">def</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">index</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">self</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token number" style="color:#36acaa">13</span><span class="token plain">        </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"I am Root"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token number" style="color:#36acaa">14</span><span class="token plain">    @expose</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token number" style="color:#36acaa">15</span><span class="token plain">    </span><span class="token keyword" style="color:#00009f">def</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">A</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">self</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token number" style="color:#36acaa">16</span><span class="token plain">        </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"I am A"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token number" style="color:#36acaa">17</span><span class="token plain">    B </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> Subfolder</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>我們在 2~8 行編寫了一個類別，在 Root 類別內第 17 行建立該類別的實體，最後我們會得到像下面的網頁階層樹</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">   Root</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   /    A    B</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                 C</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>網頁 localhost/ 跟網頁 localhost/B 的文字是由各自類別的 index () 方法來處理.</p><p>CASE2: controllers.py 外 (同目錄):</p><p>將 Subfolder 類別存成 subfolder.py , 保存在與 controllers.py 同目錄下. subfolder.py 內容如下:</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">0  from turbogears import controllers,expose</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">2  class Subfolder(controllers.RootController):</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">3     @expose()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">4     def index(self):</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">5         return "I am B"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">6     @expose()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">7     def C(self):</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">8         return "I am C"</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>TurboGears 可以從 controllers.py 內調用同目錄下的其他類別</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">from subfolder import Subfolder</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">from turbogears import controllers,expose</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">class Root(controllers.RootController):</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    @expose()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    def index(self):</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        return "Root"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    @expose()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    def A(self):</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        return "I am A"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    B = Subfolder()</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>"from subfolder import Subfolder" 前面小寫的 "subfolder" 是檔名 (subfolder.py), 後面的 Subfolder 是類別名</p><p>CASE3: 子目錄下 (子系統)</p><p>TurboGears 也可以從 controllers.py 內調用子目錄下的其他類別
(待補)</p>]]></content>
        <category label="TurboGears" term="TurboGears"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Explore the Linux memory model]]></title>
        <id>https://blog.gasolin.idv.tw/devtools/Explore-the-Linux-memory-model</id>
        <link href="https://blog.gasolin.idv.tw/devtools/Explore-the-Linux-memory-model"/>
        <updated>2006-01-27T15:22:30.000Z</updated>
        <summary type="html"><![CDATA[From IBM]]></summary>
        <content type="html"><![CDATA[<p>From IBM
<a href="http://www-128.ibm.com/developerworks/linux/library/l-memmod/?ca=dgr-lnxw01MemModel" target="_blank" rel="noopener noreferrer">http://www-128.ibm.com/developerworks/linux/library/l-memmod/?ca=dgr-lnxw01MemModel</a></p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[另一個 OMNeT++ 教學]]></title>
        <id>https://blog.gasolin.idv.tw/ipv6/另一個-OMNeT-教學</id>
        <link href="https://blog.gasolin.idv.tw/ipv6/另一個-OMNeT-教學"/>
        <updated>2006-01-13T10:51:10.000Z</updated>
        <summary type="html"><![CDATA[http://www.ece.stevens-tech.edu/~ccomanic/ee_cpe345f.html]]></summary>
        <content type="html"><![CDATA[<p></p><p>起碼有兩個學校使用 OMNeT++ 作教學工具了：)</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[IPv6 tunnel broker tool]]></title>
        <id>https://blog.gasolin.idv.tw/ipv6/IPv6-tunnel-broker-tool</id>
        <link href="https://blog.gasolin.idv.tw/ipv6/IPv6-tunnel-broker-tool"/>
        <updated>2006-01-13T06:10:40.000Z</updated>
        <summary type="html"><![CDATA[http://carmen.cselt.it/ipv6/tools/ipv6tb/index.html]]></summary>
        <content type="html"><![CDATA[<p></p>]]></content>
        <category label="IPv6" term="IPv6"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[[公告] 翻譯 Linux+IPv6 HOWTO 計畫暫停]]></title>
        <id>https://blog.gasolin.idv.tw/ipv6/公告-翻譯-Linux-IPv6-HOWTO-計畫暫停</id>
        <link href="https://blog.gasolin.idv.tw/ipv6/公告-翻譯-Linux-IPv6-HOWTO-計畫暫停"/>
        <updated>2006-01-11T00:14:55.000Z</updated>
        <summary type="html"><![CDATA[由於該文件更新過慢,]]></summary>
        <content type="html"><![CDATA[<p>由於該文件更新過慢，
許多未翻譯部分的內容已經偏舊 (例如 site-local 已經被取消).
主要內容也都翻譯完成，因此尚未翻譯的其餘部分暫停翻譯.</p>]]></content>
        <category label="IPv6" term="IPv6"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[TurboGears develop setup steps]]></title>
        <id>https://blog.gasolin.idv.tw/python/TurboGears-develop-setup-steps</id>
        <link href="https://blog.gasolin.idv.tw/python/TurboGears-develop-setup-steps"/>
        <updated>2006-01-10T14:31:40.000Z</updated>
        <summary type="html"><![CDATA[I get a idea of building a OMNeT++ NED and ini setting application via web interface.]]></summary>
        <content type="html"><![CDATA[<p>I get a idea of building a OMNeT++ NED and ini setting application via web interface.
I'm consider to use new pthon web framework "TurboGears" to implement it.</p><p>Try instructions in <a href="http://www.turbogears.org/community/contributing.html" target="_blank" rel="noopener noreferrer">Contributing to TurboGears</a></p><p>or Bill Woodward posted the TurboGears develop setup steps on <a href="http://groups.google.com.tw/group/turbogears" target="_blank" rel="noopener noreferrer">google TurboGears group</a></p>]]></content>
        <category label="TurboGears" term="TurboGears"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Nautilus6 IPv6 DEMO]]></title>
        <id>https://blog.gasolin.idv.tw/ipv6/Nautilus6-IPv6-DEMO</id>
        <link href="https://blog.gasolin.idv.tw/ipv6/Nautilus6-IPv6-DEMO"/>
        <updated>2005-10-07T02:46:36.000Z</updated>
        <summary type="html"><![CDATA[鸚鵡螺6]]></summary>
        <content type="html"><![CDATA[<p>鸚鵡螺 6 </p><p>有 NEMO 的 DEMO 喔
<a href="http://demo.nautilus6.org/" target="_blank" rel="noopener noreferrer">http://demo.nautilus6.org/</a></p>]]></content>
        <category label="IPv6" term="IPv6"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[OMNeT++ 教學]]></title>
        <id>https://blog.gasolin.idv.tw/ipv6/OMNeT-教學</id>
        <link href="https://blog.gasolin.idv.tw/ipv6/OMNeT-教學"/>
        <updated>2005-10-05T14:22:16.000Z</updated>
        <summary type="html"><![CDATA[Investigation of the Internet's Protocols via Simulation]]></summary>
        <content type="html"><![CDATA[<p>Investigation of the Internet's Protocols via Simulation
<a href="http://www.tkn.tu-berlin.de/curricula/SimPrak/#Course%20Outline" target="_blank" rel="noopener noreferrer">http://www.tkn.tu-berlin.de/curricula/SimPrak/#Course%20Outline</a></p><p>OMNeT++ 與  prosim 模組的教學</p>]]></content>
        <category label="OMNET++" term="OMNET++"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[排版更清楚的 RFC 收集庫: Zvon]]></title>
        <id>https://blog.gasolin.idv.tw/tools/RFC-repo-Zvon</id>
        <link href="https://blog.gasolin.idv.tw/tools/RFC-repo-Zvon"/>
        <updated>2005-09-17T03:53:46.000Z</updated>
        <summary type="html"><![CDATA[看 RFC 時最大的問題就是純文字格式並不適合電腦閱讀,]]></summary>
        <content type="html"><![CDATA[<p>看 RFC 時最大的問題就是純文字格式並不適合電腦閱讀，
<a href="http://www.zvon.org/tmRFC/RFC_share/Output/index.html" target="_blank" rel="noopener noreferrer">Zvon</a> 重新整理了大多數的 RFC, 提供適合線上閱讀的 RFC 格式.
我透過 Zvon 來閱讀 RFC , 感覺確實輕鬆不少.</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Feel the IPv6]]></title>
        <id>https://blog.gasolin.idv.tw/ipv6/Feel-the-IPv6</id>
        <link href="https://blog.gasolin.idv.tw/ipv6/Feel-the-IPv6"/>
        <updated>2005-09-06T13:55:13.000Z</updated>
        <summary type="html"><![CDATA[我一直在找可以在家裡面使用 IPv6 網路的方法.]]></summary>
        <content type="html"><![CDATA[<p>我一直在找可以在家裡面使用 IPv6 網路的方法.</p><p>今天因為工作的關係，接觸到了日本的<a href="http://start.feel6.jp/" target="_blank" rel="noopener noreferrer">feel6</a>這個服務.
免費註冊，取得帳號後需先下載它所附的程式，
附的程式裡面除了有撥接上網用的 PPPoE 等設定之外，也會幫忙自動設定一個 IPv6 Tunnel 連線</p><p>因此以後在家要連上網路時只要直接用它附的程式在家一次就直接接上了 IP/IPv6 網路！</p><p>不過要會點日文才能通過前面重重註冊帳號的關卡啦，
我是有好心人士在電話裡手把手教會的：D</p>]]></content>
        <category label="IPv6" term="IPv6"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Debian packages for OMNeT++]]></title>
        <id>https://blog.gasolin.idv.tw/ipv6/Debian-packages-for-OMNeT</id>
        <link href="https://blog.gasolin.idv.tw/ipv6/Debian-packages-for-OMNeT"/>
        <updated>2005-08-30T14:18:25.000Z</updated>
        <summary type="html"><![CDATA[From Tom Parker:]]></summary>
        <content type="html"><![CDATA[<p>From Tom Parker:</p><p>They are available by adding the following lines to your /etc/apt/sources.list</p><p>deb <a href="http://tevp.net/debian/" target="_blank" rel="noopener noreferrer">http://tevp.net/debian/</a> binary/
deb-src <a href="http://tevp.net/debian/" target="_blank" rel="noopener noreferrer">http://tevp.net/debian/</a> source/</p><p>and then running "apt-get update", followed by "apt-get install omnetpp-static".
As the name suggests, the package only currently has static library versions of
OMNeT++ not the shared versions, but I will be expanding this to include shared
versions at a later date.</p>]]></content>
        <category label="OMNET++" term="OMNET++"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[模擬工具-偶得]]></title>
        <id>https://blog.gasolin.idv.tw/devtools/imho-simulator</id>
        <link href="https://blog.gasolin.idv.tw/devtools/imho-simulator"/>
        <updated>2005-08-26T15:40:06.000Z</updated>
        <summary type="html"><![CDATA[模擬工具對研究來說，就是為了省事，省下實際設置多臺設備、無意間弄壞設備、從多臺設備取得測量數據等的麻煩。對剛接觸模擬的新手而言，再更深入探索或開發之前，模擬工具是否能提供需要的模擬模組、方便地配置、明顯可觀察的結果是大家最關切的事。]]></summary>
        <content type="html"><![CDATA[<p>模擬工具對研究來說，就是為了省事，省下實際設置多臺設備、無意間弄壞設備、從多臺設備取得測量數據等的麻煩。對剛接觸模擬的新手而言，再更深入探索或開發之前，模擬工具是否能提供需要的模擬模組、方便地配置、明顯可觀察的結果是大家最關切的事。</p><p>但是相對的，認真的模擬是沒有捷徑的。因為網路模擬的專業性高，目前沒有任何工具可以協助你判斷要完成某種模擬需要使用哪些模組、需要修改哪些地方。這些都有賴要作網路模擬的人抉擇：</p><ul><li>（先學）清楚相關網路設備運作模式，傳輸模式，（邊學）相關設定。</li><li>（必要）清楚待模擬的模型 / 要達成的模擬目標。（至少先備好原型）</li><li>(選擇) 選擇適當模擬工具 ()
**  選擇適當模擬模組</li><li>對模擬結果做效能評估</li></ul>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[KAME SHISA How To]]></title>
        <id>https://blog.gasolin.idv.tw/ipv6/KAME-SHISA-How-To</id>
        <link href="https://blog.gasolin.idv.tw/ipv6/KAME-SHISA-How-To"/>
        <updated>2005-08-22T03:05:43.000Z</updated>
        <summary type="html"><![CDATA[FreeBSD MIPv6 Implimentation]]></summary>
        <content type="html"><![CDATA[<p>FreeBSD MIPv6 Implimentation</p><p></p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Just how big is IPv6? or where did all those addresses go?]]></title>
        <id>https://blog.gasolin.idv.tw/ipv6/Just-how-big-is-IPv6-or-where-did-all-those-addresses-go</id>
        <link href="https://blog.gasolin.idv.tw/ipv6/Just-how-big-is-IPv6-or-where-did-all-those-addresses-go"/>
        <updated>2005-08-09T13:39:53.000Z</updated>
        <summary type="html"><![CDATA[[Just how big is IPv6?]]></summary>
        <content type="html"><![CDATA[<p>[Just how big is IPv6?</p><ul><li>or where did all those addresses go? ](<a href="http://ispcolumn.isoc.org/2005-07/ipv6size.html" target="_blank" rel="noopener noreferrer">http://ispcolumn.isoc.org/2005-07/ipv6size.html</a>)</li></ul><p>An intresting and well-described article about IPv6 addressing.</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Home Automation]]></title>
        <id>https://blog.gasolin.idv.tw/tools/Home-Automation</id>
        <link href="https://blog.gasolin.idv.tw/tools/Home-Automation"/>
        <updated>2005-07-24T15:19:22.000Z</updated>
        <summary type="html"><![CDATA[自動化設定的家庭網路]]></summary>
        <content type="html"><![CDATA[<p>自動化設定的家庭網路</p><p></p><p></p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[IBM: Writing a simple IPv6 program]]></title>
        <id>https://blog.gasolin.idv.tw/ipv6/IBM-Writing-a-simple-IPv6-program</id>
        <link href="https://blog.gasolin.idv.tw/ipv6/IBM-Writing-a-simple-IPv6-program"/>
        <updated>2005-07-24T15:15:30.000Z</updated>
        <summary type="html"><![CDATA[IBM developerworks]]></summary>
        <content type="html"><![CDATA[<p></p>]]></content>
        <category label="IPv6" term="IPv6"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[INET TCP Tutorial]]></title>
        <id>https://blog.gasolin.idv.tw/ipv6/INET-TCP-Tutorial</id>
        <link href="https://blog.gasolin.idv.tw/ipv6/INET-TCP-Tutorial"/>
        <updated>2005-07-21T06:22:38.000Z</updated>
        <summary type="html"><![CDATA[From Andras, You can find the OMNeT++ INET TCP tutorial here:]]></summary>
        <content type="html"><![CDATA[<p>From Andras, You can find the OMNeT++ INET TCP tutorial here:
<a href="http://www.omnetpp.org/doc/INET/tcp-tutorial/" target="_blank" rel="noopener noreferrer">http://www.omnetpp.org/doc/INET/tcp-tutorial/</a></p><p>The tutorial will sometime be completed with advice on configuring TCP and
writing applications for it.</p>]]></content>
        <category label="OMNET++" term="OMNET++"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[MIPL]]></title>
        <id>https://blog.gasolin.idv.tw/ipv6/MIPL</id>
        <link href="https://blog.gasolin.idv.tw/ipv6/MIPL"/>
        <updated>2005-07-14T05:50:46.000Z</updated>
        <summary type="html"><![CDATA[http://www.mobile-ipv6.org/]]></summary>
        <content type="html"><![CDATA[<p><a href="http://www.mobile-ipv6.org/" target="_blank" rel="noopener noreferrer">http://www.mobile-ipv6.org/</a>
MIPL Mobile IPv6 for Linux is an implementation of Mobility support in IPv6<!-- -->.<!-- --> Mobility support allows a mobile device to be tracked as it migrates between networks or even ISPs, allowing packets to be forwarded to where the device is currently located.</p><p>Download the stuff at these locations:</p><p><a href="http://mobile-ipv6.org/software/download/mipv6-2.0-rc2.tar.gz" target="_blank" rel="noopener noreferrer">mipv6-2.0-rc2.tar.gz</a> (Latest <strong>USER SPACE</strong> part)</p><p><a href="http://mobile-ipv6.org/software/download/mipv6-2.0-rc2-linux-2.6.8.1.patch.gz" target="_blank" rel="noopener noreferrer">mipv6-2.0-rc2-linux-2.6.8.1.patch.gz</a> (Latest <strong>KERNEL</strong> part)</p><p>Remember, you need both of those. First is the user space daemon, and the other is a patch to enable MIPv6 in the kernel. INSTALL and INSTALL.kernel should get you started.</p><p>The NEPL NEMO Platform for Linux is a NEMO implementation based on the MIPL 2 architecture.</p><p>It aims to be fully RFC 3963 compliant supporting both implicit and explicit mode signalling.
Version 0.1 only supports static routing between the HA and MR.</p><p><a href="http://www.mobile-ipv6.org/software/download/nemo-0.1.tar.gz" target="_blank" rel="noopener noreferrer">nemo-0.1.tar.gz</a> (NEMO Basic Support Protocol (RFC 3963) and MIPv6 userspace daemon, works with the patched 2.6 kernel)
<a href="http://www.mobile-ipv6.org/software/download/radvd-0.7.2-NEMO.tar.gz" target="_blank" rel="noopener noreferrer">
radvd-0.7.2-NEMO.tar.gz</a> (Modified router advertisement daemon needed for proper operation of a NEMO Home Agent)</p>]]></content>
        <category label="IPv6" term="IPv6"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Modeling Work]]></title>
        <id>https://blog.gasolin.idv.tw/digest/Modeling-Work</id>
        <link href="https://blog.gasolin.idv.tw/digest/Modeling-Work"/>
        <updated>2005-07-14T05:26:41.000Z</updated>
        <summary type="html"><![CDATA[Any serious modeling work is difficult. My experience is that it needs a couple of month's full-time work to reach a stage that you can have sufficient understanding for creating useful models for research work.]]></summary>
        <content type="html"><![CDATA[<p>Any serious modeling work is difficult. My experience is that it needs a couple of month's full-time work to reach a stage that you can have sufficient understanding for creating useful models for research work.</p><ul><li>Ahmet Sekercioglu</li></ul><p>這段是 OMNeT++ maillist 裡 Ahmet Sekercioglu 回答某個妄想幾天內有人手把手教他完成模擬的某個白爛博士候選人的話</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[IPv6 IPsec Adoption]]></title>
        <id>https://blog.gasolin.idv.tw/ipv6/IPv6-IPsec-Adoption</id>
        <link href="https://blog.gasolin.idv.tw/ipv6/IPv6-IPsec-Adoption"/>
        <updated>2005-07-07T18:31:00.000Z</updated>
        <summary type="html"><![CDATA[Rediscovering IPv6: Why Is IPv6 IPsec Not Widely Used?]]></summary>
        <content type="html"><![CDATA[<p><a href="http://www.ipv6style.jp/en/tech/20050704/index.shtml" target="_blank" rel="noopener noreferrer">Rediscovering IPv6: Why Is IPv6 IPsec Not Widely Used?</a>
這篇在談為什麼 IPSec 推不起來</p><blockquote><p>IPsec is still not used for purposes other than connecting to organization network, or making connections among corporate sites. In other words, IPsec is not used for P2P communications, which is one of the main motives for using IPv6.</p></blockquote><p>Technical: IPsec: a basis for IPv6 security
<a href="http://www.ipv6style.jp/en/tech/20040707/index.shtml" target="_blank" rel="noopener noreferrer">Part1</a>
<a href="http://www.ipv6style.jp/en/tech/20040722/index.shtml" target="_blank" rel="noopener noreferrer">Part2</a></p><ul><li>容易使用的產品才有銷路</li><li>與其加入所有功能，不如專注作好一件事</li></ul>]]></content>
        <category label="IPv6" term="IPv6"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Better Than Nothing Security (BTNS)]]></title>
        <id>https://blog.gasolin.idv.tw/ipv6/Better-Than-Nothing-Security-BTNS</id>
        <link href="https://blog.gasolin.idv.tw/ipv6/Better-Than-Nothing-Security-BTNS"/>
        <updated>2005-07-06T17:01:35.000Z</updated>
        <summary type="html"><![CDATA[http://www.ietf.org/html.charters/btns-charter.html]]></summary>
        <content type="html"><![CDATA[<p></p><p>題目定的非常有趣的 Working Group, 由於 IPSec 跟 IKE 實在是太繁瑣以致於並未被廣泛採用，
IETF 抱著 "有點安全性總比完全沒有好" 的宗旨新加入了此 Working Group :D</p><p>目前只有一篇 problem statement draft, 不過感覺敢提這個 Topic 真的是個蠻實際的 Group</p>]]></content>
        <category label="IPv6" term="IPv6"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Congress To Study Slow Pace Of Migration To IPv6]]></title>
        <id>https://blog.gasolin.idv.tw/ipv6/Congress-To-Study-Slow-Pace-Of-Migration-To-IPv6</id>
        <link href="https://blog.gasolin.idv.tw/ipv6/Congress-To-Study-Slow-Pace-Of-Migration-To-IPv6"/>
        <updated>2005-07-01T22:26:54.000Z</updated>
        <summary type="html"><![CDATA[Congress To Study Slow Pace Of Migration To IPv6]]></summary>
        <content type="html"><![CDATA[<p></p><p>現已知的一些進一步推廣 IPv6 所遇上的問題.</p>]]></content>
        <category label="IPv6" term="IPv6"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Get ready for IPv6: Five security issues to consider]]></title>
        <id>https://blog.gasolin.idv.tw/ipv6/Get-ready-for-IPv6-Five-security-issues-to-consider</id>
        <link href="https://blog.gasolin.idv.tw/ipv6/Get-ready-for-IPv6-Five-security-issues-to-consider"/>
        <updated>2005-07-01T22:21:19.000Z</updated>
        <summary type="html"><![CDATA[Get ready for IPv6: Five security issues to consider]]></summary>
        <content type="html"><![CDATA[<p></p><p>security 其實是無處不在的，許多技術領域都存在著 security 問題，
只有底層的支撐技術到一定階段才能夠考慮安全因素，而越面向大眾的東西就越多非安全因素</p><p>IPv6 雖號稱更安全，但仍有不少引入的安全問題可以談，
多數 IPv6 Security issue 都是因認識不足，或是來自位址轉換 / 隧道技術 (Tunneling) 引入衍伸的問題...</p>]]></content>
        <category label="IPv6" term="IPv6"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[The TCP/IP Guide]]></title>
        <id>https://blog.gasolin.idv.tw/ipv6/The-TCP-IP-Guide</id>
        <link href="https://blog.gasolin.idv.tw/ipv6/The-TCP-IP-Guide"/>
        <updated>2005-06-21T14:41:23.000Z</updated>
        <summary type="html"><![CDATA[The TCP/IP Guide]]></summary>
        <content type="html"><![CDATA[<p>The TCP/IP Guide
<a href="http://www.tcpipguide.com/free/t_toc.htm" target="_blank" rel="noopener noreferrer">http://www.tcpipguide.com/free/t_toc.htm</a>
我所看過最全的免費線上版網路書，難能可貴的是可以用短短幾頁將每個主題說明清楚，萬分拜服</p><p>以下是 IPv6 相關章節
<strong><a href="http://www.tcpipguide.com/free/t_InternetProtocolVersion6IPv6IPNextGenerationIPng.htm" target="_blank" rel="noopener noreferrer">Internet Protocol Version 6 (IPv6) / IP Next Generation (IPng)</a>
**</strong><a href="http://www.tcpipguide.com/free/t_IPSecurityIPSecProtocols.htm" target="_blank" rel="noopener noreferrer">IP Security (IPSec) Protocols</a>*<strong>*<a href="http://www.tcpipguide.com/free/t_InternetProtocolMobilitySupportMobileIP.htm" target="_blank" rel="noopener noreferrer"></a>
**</strong><a href="http://www.tcpipguide.com/free/t_InternetControlMessageProtocolICMPICMPv4andICMPv6.htm" target="_blank" rel="noopener noreferrer">Internet Control Message Protocol (ICMP/ICMPv4 and ICMPv6)</a>
*<strong>*<a href="http://www.tcpipguide.com/free/t_TCPIPIPv6NeighborDiscoveryProtocolND.htm" target="_blank" rel="noopener noreferrer">TCP/IP IPv6 Neighbor Discovery Protocol (ND)</a>
**</strong><a href="http://www.tcpipguide.com/free/t_TCPIPRoutingProtocolsGatewayProtocols.htm" target="_blank" rel="noopener noreferrer">TCP/IP Routing Protocols (Gateway Protocols)</a></p><p>**</p>]]></content>
        <category label="IPv6" term="IPv6"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[IPv6 Autoconfiguration]]></title>
        <id>https://blog.gasolin.idv.tw/ipv6/IPv6-Autoconfiguration</id>
        <link href="https://blog.gasolin.idv.tw/ipv6/IPv6-Autoconfiguration"/>
        <updated>2005-06-21T14:11:28.000Z</updated>
        <summary type="html"><![CDATA[IPv6 Autoconfiguration]]></summary>
        <content type="html"><![CDATA[<p></p><p>Good introduction article by <em>François Donzé, HP</em></p>]]></content>
        <category label="IPv6" term="IPv6"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Solve problems]]></title>
        <id>https://blog.gasolin.idv.tw/digest/Solve-problems</id>
        <link href="https://blog.gasolin.idv.tw/digest/Solve-problems"/>
        <updated>2005-06-21T13:58:03.000Z</updated>
        <summary type="html"><![CDATA[We approach the problem the same way network systems, themselves, are approached. We break the problem down into smaller pieces, and try to solve each piece individually. When we have solved each of the smaller pieces, we recombine them, and see what needs to be adjusted to make it all work together properly.]]></summary>
        <content type="html"><![CDATA[<blockquote><p>We approach the problem the same way network systems, themselves, are approached. We break the problem down into smaller pieces, and try to solve each piece individually. When we have solved each of the smaller pieces, we recombine them, and see what needs to be adjusted to make it all work together properly.
-- <em>Russ White, <a href="http://www.cisco.com/en/US/about/ac123/ac147/archived_issues/ipj_7-1/high_availability_routing.html" target="_blank" rel="noopener noreferrer">High Availability in Routing</a></em>
Not only routing problems, but also others (i.e. Cross Layer problems)</p></blockquote>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[KNOPPIX/IPv6]]></title>
        <id>https://blog.gasolin.idv.tw/ipv6/KNOPPIX-IPv6</id>
        <link href="https://blog.gasolin.idv.tw/ipv6/KNOPPIX-IPv6"/>
        <updated>2005-06-13T16:19:52.000Z</updated>
        <summary type="html"><![CDATA[http://www.alpha.co.jp/knoppix/ipv6/]]></summary>
        <content type="html"><![CDATA[<p></p><p>提供 6to4, DHCPv6 等接續方法的 knoppix 套件</p>]]></content>
        <category label="IPv6" term="IPv6"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Address Autoconfiguration in IPv6]]></title>
        <id>https://blog.gasolin.idv.tw/ipv6/Address-Autoconfiguration-in-IPv6</id>
        <link href="https://blog.gasolin.idv.tw/ipv6/Address-Autoconfiguration-in-IPv6"/>
        <updated>2005-06-13T15:36:56.000Z</updated>
        <summary type="html"><![CDATA[Address Autoconfiguration in IPv6]]></summary>
        <content type="html"><![CDATA[<p></p><p>IPv6 Plug Play with Prefix Delegation
<a href="http://www.ipv6style.jp/en/tech/20031128/index.shtml" target="_blank" rel="noopener noreferrer">Part 1 How Prefix Delegation Came Into Play</a><a href="http://www.ipv6style.jp/en/tech/20031226/index.shtml" target="_blank" rel="noopener noreferrer">
Part 2 Proposals to Make Prefix Delegation a Reality</a></p>]]></content>
        <category label="IPv6" term="IPv6"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Small office IPv6 manual with FreeBSD]]></title>
        <id>https://blog.gasolin.idv.tw/ipv6/Small-office-IPv6-manual-with-FreeBSD</id>
        <link href="https://blog.gasolin.idv.tw/ipv6/Small-office-IPv6-manual-with-FreeBSD"/>
        <updated>2005-06-13T15:24:53.000Z</updated>
        <summary type="html"><![CDATA[[Part1]]></summary>
        <content type="html"><![CDATA[<p><a href="http://www.ipv6style.jp/en/building/20040526/index.shtml" target="_blank" rel="noopener noreferrer">Part1
</a><a href="http://www.ipv6style.jp/en/building/20040608/index.shtml" target="_blank" rel="noopener noreferrer">Part 2</a></p>]]></content>
        <category label="IPv6" term="IPv6"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[A Discussion on IPv6 Transition Mechanisms]]></title>
        <id>https://blog.gasolin.idv.tw/ipv6/A-Discussion-on-IPv6-Transition-Mechanisms</id>
        <link href="https://blog.gasolin.idv.tw/ipv6/A-Discussion-on-IPv6-Transition-Mechanisms"/>
        <updated>2005-06-13T15:20:53.000Z</updated>
        <summary type="html"><![CDATA[Part1: From Dual Stack to 6to4 and ISATAP]]></summary>
        <content type="html"><![CDATA[<p></p><p></p>]]></content>
        <category label="IPv6" term="IPv6"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[IPv6 Contest 2004]]></title>
        <id>https://blog.gasolin.idv.tw/ipv6/IPv6-Contest-2004</id>
        <link href="https://blog.gasolin.idv.tw/ipv6/IPv6-Contest-2004"/>
        <updated>2005-06-13T15:14:44.000Z</updated>
        <summary type="html"><![CDATA[[IPv6 Contest 2004]]></summary>
        <content type="html"><![CDATA[<p></p>]]></content>
        <category label="IPv6" term="IPv6"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[IPv6 Programming in 5 minutes]]></title>
        <id>https://blog.gasolin.idv.tw/ipv6/IPv6-Programming-in-5-minutes</id>
        <link href="https://blog.gasolin.idv.tw/ipv6/IPv6-Programming-in-5-minutes"/>
        <updated>2005-06-13T14:58:30.000Z</updated>
        <summary type="html"><![CDATA[IPv6 Programming in 5 minutes in IPv6Style]]></summary>
        <content type="html"><![CDATA[<p><a href="http://www.ipv6style.jp/en/apps/20030617/index.shtml" target="_blank" rel="noopener noreferrer">IPv6 Programming in 5 minutes</a> in IPv6Style</p><p>Use DNS record to check dual stack:</p><ol><li><p>Try accessing the IPv6 address written in the AAAA record.</p></li><li><p>If an attempt to connect using IPv6 fails, try accessing the IPv4 address  written in the A record. Use address family independent function: getaddrinfo()</p></li></ol>]]></content>
        <category label="IPv6" term="IPv6"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[MObile Nodes And Multiple Interfaces in IPv6]]></title>
        <id>https://blog.gasolin.idv.tw/ipv6/MObile-Nodes-And-Multiple-Interfaces-in-IPv6</id>
        <link href="https://blog.gasolin.idv.tw/ipv6/MObile-Nodes-And-Multiple-Interfaces-in-IPv6"/>
        <updated>2005-06-09T17:46:57.000Z</updated>
        <summary type="html"><![CDATA[MONAMI6]]></summary>
        <content type="html"><![CDATA[<p></p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Requirement of a Car Manufacturer for real MIPv6 large]]></title>
        <id>https://blog.gasolin.idv.tw/ipv6/Requirement-of-a-Car-Manufacturer-for-real-MIPv6-large</id>
        <link href="https://blog.gasolin.idv.tw/ipv6/Requirement-of-a-Car-Manufacturer-for-real-MIPv6-large"/>
        <updated>2005-06-06T01:53:21.000Z</updated>
        <summary type="html"><![CDATA[These slides are digested and organized from this mail, which was posted in NEMO group:]]></summary>
        <content type="html"><![CDATA[<p>These slides are digested and organized from <a href="http://www1.ietf.org/mail-archive/web/nemo/current/msg02525.html" target="_blank" rel="noopener noreferrer">this</a> mail, which was posted in NEMO group:</p><p>Edouard LASNIER REDDAN, Telecom Solution for Telematics, RENAULT, on May
2nd, 2005</p><p>Keyword: MIPv6, Tunnel, NAT mapping</p><p>Quote: MIPv6 with a NAT traversal feature is urgent.
The HA should Independent from telecom operators.</p><ul><li>RENAULT is involved in several research projects dealing with IP mobility since 2001</li><li>RENAULT Laguna "IPv6 Car", supporting Mobile IPv6.
<strong> Received the "Murai Award" in 2003 in Tokyo
</strong> Capability to support GPRS (2G European cellular network) / Wifi vertical handover
** Using Mobile IPv6 with IPv4 NAT traversal feature</li></ul><p>DOORS:</p><ul><li>The NAT traversal function,</li><li>Developed by Cisco Systems</li><li>Provide efficient results</li><li>Compatible with our deployment constraints for further commercial exploitations.</li></ul><p>Mobile IPv6</p><ul><li>Is considered by the car manufacturers as a key technology for
<strong> Deployment of next generation Telematic services
*</strong> Remote diagnosis
*** Fleet management</li></ul><p>GST</p><ul><li>Global System for Telematics
<strong> RENAULT, BMW, DAIMLER CHRYSLER,FIAT
</strong> Other actors of the Telematic Industry</li><li>IPv6 is now part of the core specification for a European standard for telematics, mainly because of its mobility features.</li></ul><p>Challenges for the car manufacturers</p><ul><li>Be deployed soon on top of existing cellular networks, all based
on IPv4.</li><li>It is mandatory to deploy Mobile IPv6 with a NAT traversal support,
to remain independent from the mobile telecom operator.</li></ul><p>Note: If it is agreed by the automotive industry that IPv6 paves the future of the
telematic market, the existing constraints on the deployment of Mobile IPv6
makes the finalization of the standard very sensitive:</p><p>Note: If the car manufacturers have to setup technical agreements with the mobile telecom operators to deploy MIPv6, then many other solutions can be considered.
Dependence toward the mobile telecom operators is not acceptable.</p><p>Note: MIPv6 should enable the actors of the value chain to define their business model,
it means that MIPv6 should be flexible and not compel the Home Agent to be directly connected to the Internet.</p><p>NAT traversal</p><ul><li>NAT traversal is a required feature</li><li>Technical solution defined at the IETF should take into consideration the deployment constraints.</li><li>The Home Agent is in many cases in existing small networks dedicated to pilot
experiments initially designed for IPv4, with NAT boxes on the Internet interface.</li></ul><p>** This constraint is a fact, and is valid for many projects.</p><p>Long term perspective: HA consideration</p><ul><li>Car manufacturers - or any actors from the telematic industry supplying IP mobility support for the cars</li><li>Will deploy MIPv6 on their enterprise networks.</li><li>Those networks are secured, designed for IPv4, and most probably the Home Agent will not be directly interfaced with the Internet</li><li>It will be a secured equipment in the core of the network, behind NATs.</li></ul><p>Note: This problem is in fact very common as enterprise networks are connected to
the Internet behind NATs in general.</p><p>Multiple IPv4 Network Address Translation</p><ul><li>Mobile IPv6 should support it</li><li>In the access networks, and in front of the Home network.</li><li>The Home Agent may be deployed on IPv4 networks behind NAT access to the Internet.</li></ul><p>Conclution:
If the deployment of Mobile IPv6 requires re-designing the car manufacturers networks because security policies and existing NAT features are not supported, then Mobile IPv6 will remain a beautiful idea that no company will be able to deploy.
I could deploy MIPv6 for real if the IPv4 NAT traversal would be normalized and enable Home
Agent to be connected to the internet behind NATs and other boxes.</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[修改模組心得]]></title>
        <id>https://blog.gasolin.idv.tw/ipv6/修改模組心得</id>
        <link href="https://blog.gasolin.idv.tw/ipv6/修改模組心得"/>
        <updated>2005-06-05T16:16:56.000Z</updated>
        <summary type="html"><![CDATA[修改模組就是由實際 class, procedure 到目標理想 class, procedure 的過程.]]></summary>
        <content type="html"><![CDATA[<p>修改模組就是由實際 class, procedure 到目標理想 class, procedure 的過程.
在動手修改模組之前必定先規劃好目標系統.</p><p>使用類似重構的開發方法，一次只做一點點的改動，</p><p>make (nmake) 的特性是只重編改動到的檔案，因此如果你一次只改動一兩個檔案，
並用上一個還行的 CPU (~1G), 就不用擔心重新編譯所需時間過長的問題.</p><p>每次作改動的時候將之清楚紀錄下來，這樣多作幾次下來的結果就會越來越熟悉，考慮的越來越完整，每步的幅度就越來越精準.</p><p>當 然，你對模擬工具組成架構越清楚，在模擬工具程式架構清楚的情況下，你的目標理想 class, procedure 可能就會越接近實際 class, procedure. 為了修改模組順暢，適當參考相關模擬程式提供的架構是必要的。不然會遇到規劃出來的目標架構無法從模擬程式順利修改的窘境.</p><p>OMNeT++ 比起 NS2 很大的優勢就在此，
感謝 Andras 開發的 IPv6SuiteWithINET 模組，讓我們可以用很接近實作的 Code 來模擬.
另一個例子是 S. Dulman 開發的 NesCT, 可以用此模組在 OMNeT++ 上跑 TinyOS 程式.</p>]]></content>
        <category label="OMNET++" term="OMNET++"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[INET QnA]]></title>
        <id>https://blog.gasolin.idv.tw/ipv6/INET-QnA</id>
        <link href="https://blog.gasolin.idv.tw/ipv6/INET-QnA"/>
        <updated>2005-06-01T18:09:20.000Z</updated>
        <summary type="html"><![CDATA[Q: INET framework without dynamic nedfile]]></summary>
        <content type="html"><![CDATA[<p>Q: INET framework without dynamic nedfile</p><p>A: Easiest way to switch from dynamic NED to compiled-in NED for INET is
to remove the "-N" flag from OPTS at the top of the makemake script, then
regenerate the makefiles (./makemake) and make.  (And of course remove
preload-ned-files lines from omnetpp.ini's.)</p><p>Q:I'll use an example from Omnet Documentation:</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">module RoutingTestNetwork</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    parameters:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        routingNodeType: string; // should hold the name</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                  // of an existing module type</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    gates: //...</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    submodules:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        node1: routingNodeType like RoutingNode;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        node2: routingNodeType like RoutingNode;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //...</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    connections nocheck:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        node1.out0 --&gt; node2.in0;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //...</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">endmodule</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>What happens if I declare a routingNodeType in omnet.ini file which would be different from that declared in my .ned file?
e.g. omnetpp.ini:
*<em>.node</em>.routingNodeType = "Routingsomething"</p><p>Or perhaps I have to define this module in RoutingNode.ned and add some parameters in Routingsomething.ned if I want.</p><p>A:The setting in the NED file, if present, takes precedence over omnetpp.ini
(basically, omnetpp.ini is only consulted if param is not set in the NED).</p><p>The module Routingsomething MUST have at least the parameters and gates
RoutingNode has, but it can add new ones as well.</p><p>Q:I wish to create shared libs in each of the subdirectories then link them to an executable for each of the networks like the old IPv6Suite.</p><p>A: we haven't actually had this option available for the IPv6SuiteWithINET.</p><p>Currently, all c++ objects are statically linked into bin/INET. A batch file is provided in each network directory to run the executable, bin/INET and load omnetpp.ini (or -f &lt;your_own_network_ini&gt;) in the current network directory. (Eric)</p><p>Q:&lt;/your_own_network_ini&gt; I've installed TCL/TK but while executing make command, it can't found them
&lt;your_own_network_ini&gt;A:&lt;/your_own_network_ini&gt; Go to the installing directory and edit configure.user. Specifiy the path to
the TCL/TK header files. On my mashine tcl.h and tk.h are in /usr/include/:</p><p>TK_CFLAGS="-I/usr/include/tcl8 </p><p>4 -fwritable-strings"
TK_LIBS="-L/usr/lib -ltk8.4 -ltcl8.4"</p><p>You should change the compiler flags if you want to debug your sessions:</p><p>CFLAGS='-gstabs+3 -Wall'</p>]]></content>
        <category label="OMNET++" term="OMNET++"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[用協議分析工具學習TCP/IP]]></title>
        <id>https://blog.gasolin.idv.tw/ipv6/用協議分析工具學習TCP-IP</id>
        <link href="https://blog.gasolin.idv.tw/ipv6/用協議分析工具學習TCP-IP"/>
        <updated>2005-05-14T21:25:20.000Z</updated>
        <summary type="html"><![CDATA[覺得 INET 的 ARP tutorial 還是太難讀嗎?]]></summary>
        <content type="html"><![CDATA[<p>覺得 INET 的 ARP tutorial 還是太難讀嗎？
可能您對網路的 ARP 或 TCP/IP 還不夠了解，</p><p>可以看看這篇用協議分析工具學習 TCP/IP, 會有相輔相乘的效果
<a href="http://www.cnpaf.net/Class/OtherAnalysis/0532918532942694.html" target="_blank" rel="noopener noreferrer">http://www.cnpaf.net/Class/OtherAnalysis/0532918532942694.html</a></p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[SRTT]]></title>
        <id>https://blog.gasolin.idv.tw/ipv6/SRTT</id>
        <link href="https://blog.gasolin.idv.tw/ipv6/SRTT"/>
        <updated>2005-05-13T11:52:06.000Z</updated>
        <summary type="html"><![CDATA[把計算並儲存 RTT (Round-Trip Time) 的方式改成多計算 SRTT 並儲存 SRTT]]></summary>
        <content type="html"><![CDATA[<p>把計算並儲存 RTT (Round-Trip Time) 的方式改成多計算 SRTT 並儲存 SRTT</p><p>Round-Trip Time Estimates
<a href="http://www.opalsoft.net/qos/TCP-10.htm" target="_blank" rel="noopener noreferrer">http://www.opalsoft.net/qos/TCP-10.htm</a></p>]]></content>
        <category label="OMNET++" term="OMNET++"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Build an INET Application layer Module: Initial Test]]></title>
        <id>https://blog.gasolin.idv.tw/ipv6/Build-an-INET-Application-layer-Module-Initial-Test</id>
        <link href="https://blog.gasolin.idv.tw/ipv6/Build-an-INET-Application-layer-Module-Initial-Test"/>
        <updated>2005-05-12T03:24:06.000Z</updated>
        <summary type="html"><![CDATA[----in IPv6SuiteWithINET: work----]]></summary>
        <content type="html"><![CDATA[<p>----in IPv6SuiteWithINET: work----
Applications/UDPApp 下新增 "NDSBasicApp.cc", "NDSBasicApp.h", "NDSBasicApp.ned".</p><blockquote><p>makemake
nmake -f makefile.vc depend (option)
m.bat</p></blockquote><p>----in INET: not work----
Our goal is to build a UDP based Application named NDSApp.</p><p>1<!-- -->.<!-- --> Add "NDSApp" folder in "INET/Applications" folder</p><p>2<!-- -->.<!-- --> Modifiy "INET/makemake.cmd" to generate makefile for the new App(If you add/remove/rename directories).
set ALL_INET_INCLUDES:
append -I%root%/Applications/NDSApp</p><p>We copied the line "cd %root%\Applications\UDPApp &amp;&amp; ....." and change "UDPApp" to "NDSApp"</p><p>cd %root%\Nodes\INET:
append -I..<!-- -->.<!-- -->.\Applications\NDSApp</p><p>3<!-- -->.<!-- --> Copy files "UDPApp.cc", "UDPApp.h", "UDPApp.ned" from "UDPApp" folder,
Rename "UDPApp.cc", "UDPApp.h", "UDPApp.ned" to "NDSApp.cc", "NDSApp.h", "NDSApp.ned".</p><p>4<!-- -->.<!-- --> In file "NDSApp.cc"
"#include "UDPApp.h"" to "#include "NDSApp.h""
Replace the class inherits and function names from "UDP"xx to "NDS"xx,
ex: "UDPSink::initialize();" to "NDSSink::initialize();"</p><p>5<!-- -->.<!-- --> Add NDSApp to StandardHost
Modifiy INET/Nodes/StandardHost.ned
At import section:
append "NDSApp,"</p><p>At module StandardHost parameters section:
Append
"numNdsApps : numeric const,
"ndsAppType : string,"</p><p>At module StandardHost submodules section:
Append
ndsApp: ndsAppType<!-- -->[numNdsApps]<!-- --> like NDSApp;
display: "i=block/app;p=392,67";</p><p>At module StandardHost connections section:
Append
"for i=0..numNdsApps-1 do
ndsApp<!-- -->[i]<!-- -->.to_udp --&gt; udp.from_application++;
ndsApp<!-- -->[i]<!-- -->.from_udp &lt;-- udp.to_application++;
endfor;"</p><blockquote><p>makemake
nmake -f makefile.vc depend
m.bat</p></blockquote><p>Then test it in Example/INET/Multicast</p><p>modify its omnetpp.ini</p><p>set UDPApp off</p><h1>udp app (off)</h1><p><strong>.numUdpApps=0
</strong>.udpAppType="UDPApp"</p><p>modified udp app configuration to nds app configuration,
note the captions.</p>]]></content>
        <category label="OMNET++" term="OMNET++"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[3rd day of tracing INET6: Application/UDPBasicApp]]></title>
        <id>https://blog.gasolin.idv.tw/ipv6/3rd-day-of-tracing-INET6-Application-UDPBasicApp</id>
        <link href="https://blog.gasolin.idv.tw/ipv6/3rd-day-of-tracing-INET6-Application-UDPBasicApp"/>
        <updated>2005-05-12T03:23:42.000Z</updated>
        <summary type="html"><![CDATA[If the dest_addresses parameter contains more than one address,]]></summary>
        <content type="html"><![CDATA[<p>If the dest_addresses parameter contains more than one address,
one of them is randomly chosen for each packet.</p><p>An address may be given in the dotted decimal notation, or with the module name. (The IPAddressResolver class is used to resolve the address.)</p><p>To disable the model, set dest_addresses to "".</p><p>The peer can be UDPSink or another UDPBasicApp (it handles received packets exactly like UDPSink).</p><hr><p>UDPAppBase:
*** void UDPAppBase::bindToPort(int port)</p><p>   cMessage <em>msg = new cMessage ("UDP_C_BIND", UDP_C_BIND);
建立新 message "</em>msg", 使用 UDP_C_BIND 格式</p><p>   UDPControlInfo <em>ctrl = new UDPControlInfo ();
建立新 record "</em>ctrl"</p><p>   ctrl-&gt;setSrcPort (port);
將 port 參數設定進 ctrl 的 SrcPort 參數中</p><p>   msg-&gt;setControlInfo (ctrl);
將 ctrl 包進 msg 中的 ControlInfo 參數中</p><p>   send (msg, "to_udp");
送到傳輸層的 udp 做處理</p><p>void UDPAppBase::sendToUDP(cMessage *msg, int srcPort, const IPvXAddress&amp; destAddr, int destPort)</p><p>msg-&gt;setKind(UDP_C_DATA);
Send message to UDP, with the appropriate control info attached</p><p>其他類似 bindToPort ()</p><hr><p>UDPSink:
void UDPSink::initialize()</p><p>WATCH (numReceived);
TKenv 中顯示 numReceived 變數</p><p>if (port!=-1)
bindToPort (port);
port 數字正常就將 port 參數繫結到埠號</p><p>void UDPSink::handleMessage (cMessage *msg)
處理封包並秀 numReceived 狀態在畫面中</p><p>void UDPSink::processPacket (cMessage *msg)
收到封包後刪除，numReceived 數 +1</p><hr><p>UDPBaseApp</p><p>const char <em>destAddrs = par ("dest_addresses");
讀入目的位址
cStringTokenizer tokenizer (destAddrs);
const char </em>token;
while ((token = tokenizer.nextToken ())!=NULL)
destAddresses.push_back (IPAddressResolver ().resolve (token));
解析 string 成可辨識的位址格式</p><p>void UDPBasicApp::sendPacket ()
IPvXAddress destAddr = chooseDestAddr ();
超過一個目的位址時從中選擇隨機目的位址</p><p>IPvXAddress UDPBasicApp::chooseDestAddr ()
{
int k = intrand (destAddresses.size ());
destAddresses.size () 即目標位址數量，intrand (n) 從 n 中隨機取一數</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">return destAddresses[k];</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>}</p>]]></content>
        <category label="IPv6" term="IPv6"/>
        <category label="OMNET++" term="OMNET++"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[12th. day of porting INET6 (Mile Stone: Pre-work Finished)]]></title>
        <id>https://blog.gasolin.idv.tw/ipv6/12th-day-of-porting-INET6-Mile-Stone-Pre-work-Finished</id>
        <link href="https://blog.gasolin.idv.tw/ipv6/12th-day-of-porting-INET6-Mile-Stone-Pre-work-Finished"/>
        <updated>2005-05-12T03:23:24.000Z</updated>
        <summary type="html"><![CDATA[22th. Part:]]></summary>
        <content type="html"><![CDATA[<p>22th. Part:
修改 IPControlInfo.msg:
協定對應改成 IP6NextHeaderFieldId</p><p>檢討：在修改一陣子模組之後，對整個架構更了解的同時，
也更了解修改整個 IP 協定的難度.
因為了解，而越來越缺少每個部分改好兜起來就能跑的自信.</p><p>所以檢討了現在 porting 的方法，歸納出下面幾條新的 porting 步驟:</p><p>第一階段：多方嘗試 (完成)
1<!-- -->.<!-- --> 初步對各主要模組了解，trace code 同時並做初步 porting.
2<!-- -->.<!-- --> 儲存當前 porting slices 成果</p><p>第二階段：系統化調試
1<!-- -->.<!-- --> 一切修改都應該先以能執行，能隨時觀察模擬流程為目標.
(每次修改都能編出可用的快照檔 (snapshot))
2<!-- -->.<!-- --> 將 IP 相關模組複製一份，編譯，確定可用的新增協定方式
3<!-- -->.<!-- --> 階段修改
2<!-- -->.<!-- --> 修改 Mac 層加入訊息
3<!-- -->.<!-- --> 修改 IPDatagram.msg 新增協定
4<!-- -->.<!-- --> 修改協定訊息
5<!-- -->.<!-- --> 修改各 Class 名稱
6<!-- -->.<!-- --> 實際修改 Class
7<!-- -->.<!-- --> 路由表位址，位址解譯，flatconfigurator</p><p>第三階段：新增功能
1<!-- -->.<!-- --> Neighbor Discovery
(Major Option). MIPv6 &amp; NEMO (After Wireless Support)
2<!-- -->.<!-- --> DualStack
3<!-- -->.<!-- --> Extension Header Proccessing
4<!-- -->.<!-- --> RSVP, Multicast</p>]]></content>
        <category label="IPv6" term="IPv6"/>
        <category label="OMNET++" term="OMNET++"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[網路模擬 Scenario]]></title>
        <id>https://blog.gasolin.idv.tw/devtools/network-simulator-Scenario</id>
        <link href="https://blog.gasolin.idv.tw/devtools/network-simulator-Scenario"/>
        <updated>2005-05-12T03:23:05.000Z</updated>
        <summary type="html"><![CDATA[說到網路模擬, 大家在試過各種模擬網路工具之後, 都會覺得模擬網路比起實際架設其實並不是容易的事情,]]></summary>
        <content type="html"><![CDATA[<p>說到網路模擬，大家在試過各種模擬網路工具之後，都會覺得模擬網路比起實際架設其實並不是容易的事情，</p><p>網路模擬 Scenario 主要都是由 4 個部分構成：點，線，面，時間</p><p>因為網路通訊本身就由 Physical/MAC, IP, Network, Application 等層構成，
就 Physical/MAC 來簡分就有無線，有線之別，IP, Network 層裡又有多樣的協定，
總合起來先天網路通訊本模擬上就有極高的複雜度.</p><p>先由網路模擬 Scenario 來說.
在 ns2 上是在 tcl 檔中定義，在 omnet++ 上是在 ned 檔與 omnetpp.ini 檔中定義</p>]]></content>
        <category label="NS2" term="NS2"/>
        <category label="TurboGears" term="TurboGears"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[NS2 無線模擬]]></title>
        <id>https://blog.gasolin.idv.tw/ipv6/NS2-無線模擬</id>
        <link href="https://blog.gasolin.idv.tw/ipv6/NS2-無線模擬"/>
        <updated>2005-05-12T03:22:30.000Z</updated>
        <summary type="html"><![CDATA[Digest from here :]]></summary>
        <content type="html"><![CDATA[<p>Digest from <a href="http://www.isi.edu/nsnam/ns/tutorial/nsscript6.html" target="_blank" rel="noopener noreferrer">here</a> :</p><p>In a mixed simulation involving wired and wireless nodes its necessary :
1<!-- -->.<!-- --> to turn on hierarchical routing
2<!-- -->.<!-- --> to create separate domains for wired and wireless nodes. There may be multiple wired and wireless domains to simulate multiple networks.
3<!-- -->.<!-- --> to have one base-station node in every wireless domain, thru which the wireless nodes may communicate with nodes outside their domain.</p><p>we need to use hierarchical routing in order to route packets between wireless and wired domains</p><ul><li>the routing information for wired nodes are based on connectivity of the topology</li><li>use base-stations which act as gateways between wired and wireless domains</li></ul><p>#Number of domains in this topology is 2 (one for the wired nodes and one for the wireless)
AddrParams set domain<em>num</em> 2</p><p>#Number of clusters in each of these domains
#which indicates the first domain (wired) to have 1 clusters and
#the second (wireless) to have 5 cluster.
AddrParams set cluster<em>num</em> {1 5}</p><p>#the number of nodes in each of these clusters
AddrParams set nodes<em>num</em> {1 1 3 1 1 1}</p><p>心得:
在 mobiwan 中，bs 可以當 rt 用，
因此 bs 也有路由功能</p><p>每個 bs 都可以當 HA, 因此 mobiwan 裡不必指定 HA,
mobile attach 上的那個點就自動做 HA.</p><p>所以 set mobile_ <!-- -->[create-mobile 1.4.1 1.4.0 1000 200 0 0 0.01]<!-- -->
表示 mobile 會把 1.4.0 這節點當作 HA</p><p>create-mobile 來自 proc-mipv6-config.tcl
啟動 def_mobile_config 來處理</p><p>base-station:
create-base-station
啟動 def_bs_config 來處理
讓 bs 可以處理 wired&amp;wireless 的重點是
#have wired routing mechanism turned on
-wiredRouting ON
開啟 MIPv6 功能
-mipv6 ON</p><p>router: def_transit_config
-mipv6 ON
-mipagent CN</p><p>NS2 上的 RO 即是把 CN 當作 HA, 接收 BU, 然後作 tunnel
欲啟動 RO , 則在檔案最前頭宣告:
Agent/MIPv6/MN set rt<em>opti</em>     1       ; # 0 if routing optimization OFF</p>]]></content>
        <category label="NS2" term="NS2"/>
        <category label="TurboGears" term="TurboGears"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[11th. day of porting INET6]]></title>
        <id>https://blog.gasolin.idv.tw/ipv6/11th-day-of-porting-INET6</id>
        <link href="https://blog.gasolin.idv.tw/ipv6/11th-day-of-porting-INET6"/>
        <updated>2005-05-12T03:22:10.000Z</updated>
        <summary type="html"><![CDATA[20th. Part:]]></summary>
        <content type="html"><![CDATA[<p>20th. Part:
IPv6suite 的 IPProccessing 用的是 IPv4d 資料夾中的架構.</p><p>21th. Part:
Mac 層要加入 0x86DD 代表 IPv6 訊息</p>]]></content>
        <category label="OMNET++" term="OMNET++"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[UML]]></title>
        <id>https://blog.gasolin.idv.tw/devtools/UML</id>
        <link href="https://blog.gasolin.idv.tw/devtools/UML"/>
        <updated>2005-05-12T03:21:55.000Z</updated>
        <summary type="html"><![CDATA[一個有經驗的Developer對於剛接手的已存在的只有程式碼軟體開發專案，要能]]></summary>
        <content type="html"><![CDATA[<p>一個有經驗的 Developer 對於剛接手的已存在的只有程式碼軟體開發專案，要能
了解這個軟體的架構是什麼至少要花數個小時，如果這個軟體專案有 Model
Diagram，則這個 Developer 則很快就可以了解這個軟體架構。</p><p>一般而言 Diagramming Language 都應該提供下列資訊：</p><p>　‧Overall architecture of the system
　‧System dependencies
　‧Complexity
　‧Flow of information through a system
　‧Business requirements
　‧Database organization and structure
　‧Source code – including almost every aspect of object-oriented
development
　‧Deployment configurations</p><p>一個軟體專案如果有使用 Visual Models，我們就能從比較高的層次去看這個 Project，
藉由從較高層次圖去找尋 Fine-Grained Diagram。
這樣的方法可以幫助 Architect 和 Engineer 直覺地 (Intuitively) 掌握住問題並解決它，
軟體問題容易掌握
，時間自然縮短，品質自然提高。</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[10th day of porting INET6]]></title>
        <id>https://blog.gasolin.idv.tw/ipv6/10th-day-of-porting-INET6</id>
        <link href="https://blog.gasolin.idv.tw/ipv6/10th-day-of-porting-INET6"/>
        <updated>2005-05-12T03:21:40.000Z</updated>
        <summary type="html"><![CDATA[18th. Part:]]></summary>
        <content type="html"><![CDATA[<p>18th. Part:
NetworkLayer6.ned:
disable OSPF, RSVP
原 protocolMapping = "6:0,17:1,1:2,2:3,46:4,89:5";
表示 TCP (6):0, UDP (17):1, ICMP (1):2, IGMP (2):3, RSVP (46):4, OSPF (89):5
考慮到保證將來 DualStack 相容性，因此不更改原對應數字，而從後面再繼續補加.</p><p>暫時補加
ICMPv6 (58):2, ROUTING (43), MOBILITY (135)
protocolMapping 後添上 58:6,43:7,135:8</p><ul><li>應再找資料確認 Neighbor Discovery -- ND 模組是否應包含在 ICMPv6 模組裡</li></ul><p>19th. Part:
照著 Winodws 步驟，以 TicToc10 為基礎編譯.
OMNET++/Sample/INET6Test:
修改 IP6Datagram.msg 以通過 compiler.</p><p>這次是針對 "模擬" 來做修正:</p><ul><li>因為 20 bits 不好宣告 (RFC 中是連 version, Traffic Class 一同宣告在一起),
因此 flow label 欄位訂的較 RFC 小 (20-&gt;16)
(反正沒在用，應該沒什麼關係)</li><li>在訂 IPv6 options message struct 時，Padding 不加似乎也沒關係</li><li>IP6FRAGMENT identification 欄位訂的較 RFC 小 (32-&gt;16) </li></ul><p>目前採用方式 -&gt; 全改用 int , short, long 來宣告，皆遠大於所需位元數</p>]]></content>
        <category label="OMNET++" term="OMNET++"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[論文寫作指引]]></title>
        <id>https://blog.gasolin.idv.tw/devtools/thesis-guidence</id>
        <link href="https://blog.gasolin.idv.tw/devtools/thesis-guidence"/>
        <updated>2005-05-12T03:21:18.000Z</updated>
        <summary type="html"><![CDATA[Review: Global Dynamic Home Agent Discovery on Mobile IPv6]]></summary>
        <content type="html"><![CDATA[<p>Review: Global Dynamic Home Agent Discovery on Mobile IPv6
Q1<!-- -->.<!-- --> 訊息流程一不一樣？
Ay: -&gt; 原不需用 RR
An: -&gt; 模擬該重做</p><p>外:
Paper 檢查注意:</p><ul><li>規格: A4, 上下 30mm, 左右 20mm, 中間 8mm, 左右對齊。字高 10pt.<em>   圖片引用次序</em>   參考引用次序
內:
Problem solving:</li></ul><ol><li>Setup sample space2.  Define probability law3.  Identify event of interest4.  Calculate...
原則:</li></ol><ul><li><p>先討論做某件事的老方法，</p></li><li><p>再和新解決方法建立關聯.</p></li><li><p>提案前先確定它有效，成功
提綱:</p></li><li><p>要有完整的 survey, 也就是完整的 view</p></li><li><p>針對某些很明確的問題來想出正確可靠的解決辦法，細節要想透及交待清楚</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">    1.  想解決什麼樣的問題</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">2.  清楚地告訴大家有人是如何解決</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">3.  想解決問題的完整步驟是什麼*   完整解決問題的方法及步驟</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p></p></li></ul><ol><li>Outline: An author's contribution is of value to the reader only if the information is presented in a clear and well-organized way. Papers and summaries that follow an outline similar to that below are likely to provide readers with the best information as to their value.</li><li>Introduction. This section should provide the motivation for the paper. Why is this an interesting and important topic to which the reader should allocate time and effort? How does it differ from prior art? A brief description of the research and development process, and the results, should follow.</li><li>Review and overview. The author should describe the present state of knowledge and, if appropriate, provide references. This should lead to an overview of the new direction taken.</li><li>Development method/procedures. The methods and reasons for the design choices should be described in sufficient detail for readers to be able to judge the validity, reliability and general applicability of the results.</li><li>Results. Important results should be well summarized. More complete experimental results are expected in a paper than space allows in a summary. The results should be directly related to the topics presented in the introduction and in the overview of the new direction taken.</li><li>Conclusion. The final section should highlight the author's contribution. That is, what do we now know that we did not know before this paper was presented? It should also mention limitations of the work and provide suggestions for future improvement in this area.</li><li>References. A good paper lists references that support key statements and assumptions.</li></ol>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[NS2 無線模擬結果 Trace 檔分析]]></title>
        <id>https://blog.gasolin.idv.tw/ipv6/NS2-無線模擬結果-Trace-檔分析</id>
        <link href="https://blog.gasolin.idv.tw/ipv6/NS2-無線模擬結果-Trace-檔分析"/>
        <updated>2005-05-12T03:20:48.000Z</updated>
        <summary type="html"><![CDATA[新 r 33.908773621 3 MAC  --- 334 mipv6_bu 70 [13a 1 4 800] ------- [41963530 32 4198400]]]></summary>
        <content type="html"><![CDATA[<p>新 r 33.908773621 <em>3</em> MAC  --- 334 mipv6_bu 70 <!-- -->[13a 1 4 800]<!-- --> ------- <!-- -->[4196353:0 0:0 32 4198400]<!-- -->
舊 s -t 1.000075000 -Hs 22 -Hd 2147483647 -Ni 22 -Nx 100.00 -Ny 2200.00 -Nz 0.00 -Ne -1.000000 -Nl MAC -Nw --- -Ma 0 -Md ffffffff -Ms 14 -Mt 800 -Is 4222977.0 -Id 2147483647.0 -It ipv6_sol -Il 100 -If 0 -Ii 1 -Iv 255</p><p>欄位: event type 事件類型)</p><p>有四種基本事件類型</p><ul><li>s: send (傳送)</li><li>r: receive (接收)</li><li>d:drop (丟棄)</li><li>f: forward (轉送)</li></ul><p>還有一種特別類型</p><ul><li>m: move (移動)</li></ul><p>欄位 2: general flag</p><p>-t: time (時間)</p><p>欄位
3: Next hop info (下一站的資訊)</p><p>-Hs: id for this node
-Hd: id for next hop towards the destination</p><p>欄位 4: Node property type tag (節點屬性類型標籤</p><p>-Ni: node id (節點 ID)
-Nx –Ny -Nz: node s x/y/z coordinate (節點 x/y/z 的座標位置)
-Ne: node energy level
-Nl: trace level, such as AGT, RTR, MAC
-Nw: reason for the event (事件發生原因)</p><p>欄位 5: packet info at MAC level (封包在 Mac 層的資訊)</p><p>-Ma: duration
-Md: dest’s ethernet address
-Ms: src’s ethernet address
-Mt: ethernet type</p><p>欄位 6: Packet information at IP level (封包在 IP 層的資訊)</p><p>-Is: source address. Source port number (來源位置，a.b 其中 a 為節點 ID, b 為埠號
-Id: dest address.dest port number (目的位置)
-It: packet type (封包類型)
-Il: packet size (封包大小)
-If: flow id (資料流 ID)
-Ii: unique id (唯一的 ID 編號)
-Iv: ttl value (Time To Live 的值)</p><p>欄位 7:
封包在應用層的資訊。</p><p>包含的應用程式類型如 arp, tcp 或者是 adhoc 路由協定，這個欄位都是以 P 所開頭的，
且標籤為隨著應用程式不同而不同</p><p>Trace 檔分析:</p><p>Packet Loss 數量計算:
不考慮 Out-of-Order 情況時，Packet Loss 數量的計算方法最簡單，每一個封包在傳送端發送前，傳送端都會給封包一個序號，序號是連續性的，因此若是在接收到發現序號有不連續的發生，則可視為有封包的移失。</p><p>OWD&amp;IPDV 計算:
最重要的欄位是 Sending Time (傳送時間) 和 Sequence Number (封包序號), 可以用來計算出 One Way Delay (OWD) 和 IP Delay Variance (IPDV，或是 Jitter)。</p><p><strong>One Way Delay = 接收時間 – 傳送時間</strong></p><p><strong>IPDV = | 目前量測到的 OWD - 上一次量測到的 OWD|</strong></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="reference">Reference:<a href="#reference" class="hash-link" aria-label="Direct link to Reference:" title="Direct link to Reference:">​</a></h2><p><a href="http://140.116.72.80/~smallko/ns2/wireless1.htm" target="_blank" rel="noopener noreferrer">http://140.116.72.80/~smallko/ns2/wireless1.htm</a>
<a href="http://www.k-lug.org/~griswold/NS2/ns2-trace-formats.html" target="_blank" rel="noopener noreferrer">http://www.k-lug.org/~griswold/NS2/ns2-trace-formats.html</a>
<a href="http://www.ee.surrey.ac.uk/Personal/L.Wood/ns/" target="_blank" rel="noopener noreferrer">http://www.ee.surrey.ac.uk/Personal/L.Wood/ns/</a></p>]]></content>
        <category label="NS2" term="NS2"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[9th. day of porting INET6 第九天]]></title>
        <id>https://blog.gasolin.idv.tw/ipv6/9th-day-of-porting-INET6-第九天</id>
        <link href="https://blog.gasolin.idv.tw/ipv6/9th-day-of-porting-INET6-第九天"/>
        <updated>2005-05-12T03:20:22.000Z</updated>
        <summary type="html"><![CDATA[17th Part:]]></summary>
        <content type="html"><![CDATA[<p>17th Part:</p><p>檔案管理方式決定:
用 freemind 畫好了 INET6 與 INET 檔案分佈圖，
隨時比較兩者間相應模組與進度</p><p>封包測試方式決定:
使用 tictoc scenario 先測試 IPv6, ICMPv6 封包格式的正確性</p>]]></content>
        <category label="OMNET++" term="OMNET++"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Module Functions]]></title>
        <id>https://blog.gasolin.idv.tw/ipv6/Module-Functions</id>
        <link href="https://blog.gasolin.idv.tw/ipv6/Module-Functions"/>
        <updated>2005-05-12T03:19:26.000Z</updated>
        <summary type="html"><![CDATA[The Mobility module provides a geographical position of the host and handles its movement.]]></summary>
        <content type="html"><![CDATA[<p>The <em>Mobility</em> module provides a geographical position of the host and handles its movement.</p><p>The <em>Blackboard</em> module is used for cross layer communication. It provides information relevant to more than one layer like the actual energy status of the host, the display appearance or the status of the radio.</p>]]></content>
        <category label="OMNET++" term="OMNET++"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[When less is more]]></title>
        <id>https://blog.gasolin.idv.tw/code/When-less-is-more</id>
        <link href="https://blog.gasolin.idv.tw/code/When-less-is-more"/>
        <updated>2005-05-12T03:18:35.000Z</updated>
        <summary type="html"><![CDATA[就好像 Unix Programming guide 講的, unix程式設計的哲學就是ㄧ件工具能將ㄧ件事做的最好, 然後再將各種工具"串接"(pipe)起來共同完成一項工作.]]></summary>
        <content type="html"><![CDATA[<p>就好像 Unix Programming guide 講的，unix 程式設計的哲學就是ㄧ件工具能將ㄧ件事做的最好，然後再將各種工具 "串接"(pipe) 起來共同完成一項工作.</p><p>在實體世界中，這種 "簡約"(Simplicity) 的思考，體現在 "ipod" 等商品熱賣上.
人們將會擁有一堆能將單一工作做的最好的工具.</p><p>使各種工具ㄧ起完成工作，工具之間的溝通當然是透過網路.
而擔任如 perl 或 python 在作業中 "膠合劑"(glue) 的腳色的會是我在ㄧ篇論文裡提出的個人化內容分散式網路的概念 (Personal Content Distribution Internetwork)</p><p>"Ubiquitous Computing"</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[8th. day of porting INET6 第八天]]></title>
        <id>https://blog.gasolin.idv.tw/ipv6/8th-day-of-porting-INET6-第八天</id>
        <link href="https://blog.gasolin.idv.tw/ipv6/8th-day-of-porting-INET6-第八天"/>
        <updated>2005-05-12T03:17:23.000Z</updated>
        <summary type="html"><![CDATA[15th Part:]]></summary>
        <content type="html"><![CDATA[<p>15th Part:</p><p>模組組成</p><ul><li>PING6, TraceRoute6</li><li>UDP6</li></ul><hr><p>IP6</p><ul><li>ICMP6</li><li>ND (replace ARP)
-- future --</li><li>MLD</li><li>IPSEC</li></ul><hr><p>封包處理流程:
收到封包 -&gt; 判斷是給自己或給別人的封包 (Deliver locally/Addressed to another node)
If 給別人 -&gt;Look up routing table -&gt; 轉送封包到對應介面上 (identified interface)</p><p>16th Part:
位址格式:</p><ul><li>unicast</li><li>link-local</li><li>multicast</li><li>IPv4-compatible address 評估: flatconfigurator6 是否可以先使用 IPv4-compatible address 的方式設定？</li></ul><p>Addressing format (參考 Smartbit-smartflow):</p><ul><li>Full hexadecimal</li><li>No leading zero (前面的 0 省略)</li><li>Compact (最簡化 ex: 2001::1)</li><li>Mixed (最後四碼接 IPv4 位址 ex: 2001::192.168.0.1)</li></ul>]]></content>
        <category label="OMNET++" term="OMNET++"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[7th. day of porting INET6 第七天]]></title>
        <id>https://blog.gasolin.idv.tw/ipv6/7th-day-of-porting-INET6-第七天</id>
        <link href="https://blog.gasolin.idv.tw/ipv6/7th-day-of-porting-INET6-第七天"/>
        <updated>2005-05-12T03:16:56.000Z</updated>
        <summary type="html"><![CDATA[13th. Part:]]></summary>
        <content type="html"><![CDATA[<p>13th. Part:
看 <a href="http://rfc-editor.org/rfc/rfc3493.txt" target="_blank" rel="noopener noreferrer">RFC3493</a> 與 <a href="http://rfc-editor.org/rfc/rfc3542.txt" target="_blank" rel="noopener noreferrer">RFC 2542</a>
一邊處理 IP6Address.h 位址格式設定的問題.</p><p>原本 IPAddress
內部結構是 unsigned char addr<!-- -->[4]<!-- -->;
用來儲存 32bits IP 位址
改成 IP6Address 後，
內部結構要儲存 128 bits IPv6 位址，因此改成
uint8_t  s6_addr<!-- -->[16]<!-- -->;</p><p>取消輸入值或回傳值為 int 型態的函數，因為與 IPv6 位址表示方式不符，
這部分需弄更清楚後再作加強.</p><p>14th. Part:
聯想:</p><p>猜測 OMNET++ 中的 IPControInfo 應該就是  RFC 中的 sockaddr_in ,
是用來與上層協定溝通的資料結構.</p><ul><li>IP 模組改變對上層 (APP , UDP) 影響研究</li><li>雖然已經有 NedDoc 和 Class relation Diagram 來表現模組跟類別的關係，
但要改模組時還是會困惑於各檔案用途還有互相間的關係.
想嘗試使用心智圖 (Mind Map) 來描繪實際檔案關係
<a href="http://web.hku.hk/~jwilam/PCEd_FT_2003_IT/mappingware.htm" target="_blank" rel="noopener noreferrer">http://web.hku.hk/~jwilam/PCEd_FT_2003_IT/mappingware.htm</a><a href="http://www.donews.net/zminjiao/archive/2004/11/12/167474.aspx" target="_blank" rel="noopener noreferrer">http://www.donews.net/zminjiao/archive/2004/11/12/167474.aspx</a>
查詢結果: "FreeMind 有個很好的功能是根據目錄創建文件，也就是可以根據某個目錄下的文件結構來直接生成一個 MindMap" 這功能正好可用上 :)</li></ul><p>該詢問 INET Wireless 模組部分的進度
The routing information for wired nodes are based on connectivity of the topology, i.e how are nodes connected to one another through Links.
This connectivity information is used to populate the forwarding tables in each wired node., however wireless nodes have no concept of "links".</p><p>Inorder to exchange pkts among these wired and wireless nodes, Base-stations(BS) is introduced to act as gateways between the two domains.</p><p>porting 學長模組時，
發現 OPNET/NS2 (Mobiwan2) 共同的缺點是模組用太多簡寫，
讓人剛開始沒有辦法一看就很清楚這模組的作用......
若能減少花在辨認簡寫上的時間，
使用者可以更容易明瞭各模組的作用，
也能更容易去使用它們.</p>]]></content>
        <category label="OMNET++" term="OMNET++"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[4th day of tracing INET6: Application/TCPApp Echo&Sink]]></title>
        <id>https://blog.gasolin.idv.tw/ipv6/4th-day-of-tracing-INET6-Application-TCPApp-Echo-Sink</id>
        <link href="https://blog.gasolin.idv.tw/ipv6/4th-day-of-tracing-INET6-Application-TCPApp-Echo-Sink"/>
        <updated>2005-05-09T12:03:19.000Z</updated>
        <summary type="html"><![CDATA[從 UDPApp 或 TCPApp 一堆檔案中, 總是要從 xxSinkApp 最先開始看,]]></summary>
        <content type="html"><![CDATA[<p>從 UDPApp 或 TCPApp 一堆檔案中，總是要從 xxSinkApp 最先開始看，
最簡單又能猜測到大致流程的一定是這幾個檔案，透過這樣 tracing code 熟悉了大致架構後，看其他相關檔案時會事半功倍.</p><p>因為 xxSinkApp 明顯講的都會是如何收到這種類型的封包，還有收到後如何將封包消滅的過程</p><hr><p>TCPSinkApp
void TCPSinkApp::initialize()</p><p>TCPSocket socket;
宣告 TCPSocket</p><p>socket.setOutputGate(gate("tcpOut"));</p><p>socket.bind(address<!-- -->[0]<!-- --> ? IPAddress (address) : IPAddress (), port);
繫結 "位址 - 埠號"</p><p>socket.listen(true);</p><p>.... 參考一般 socket 連線相關文件</p><p>void TCPSinkApp::handleMessage (cMessage *msg)
if (msg-&gt;kind ()==TCP_I_PEER_CLOSED)
如果狀態為 TCP_I_PEER_CLOSED</p><p>msg-&gt;setKind (TCP_C_CLOSE);
將狀態設成 TCP_C_CLOSE</p><p>send (msg, "tcpOut");
將訊息送到 "tcpOut"</p><p>else if (msg-&gt;kind ()==TCP_I_DATA || msg-&gt;kind ()==TCP_I_URGENT_DATA)
如果狀態為 TCP_I_DATA 或 TCP_I_URGENT_DATA</p><p>bytesRcvd += msg-&gt;length ()/8;
bytesRcvd += 收到的封包 bit 長度 / 8 (變成 byte)</p><p>delete msg;
並將訊息刪除</p><p>else delete msg;
收到其他狀態訊息的話都直接刪除</p><hr><p>TCPEchoApp
echoFactor=1 will result in sending back the same message unmodified
The lengths of the messages are multiplied by echoFactor before sending them back</p><p>void TCPEchoApp::sendOrSchedule(cMessage *msg)</p><p>if (delay==0)
若 delay 變數值為 0</p><p>bytesSent += msg-&gt;length ()/8;
紀錄總共送出的封包 byte 長度</p><p>send (msg, "tcpOut");
並送出訊息</p><p>else scheduleAt (simTime ()+delay, msg);
否則繼續等待 delay 這段時間</p><p>void TCPEchoApp::handleMessage(cMessage *msg)</p><p>if (msg-&gt;isSelfMessage ())
若訊息來自本身
紀錄總共送出的封包 byte 長度
並送出訊息</p><p>else if (msg-&gt;kind ()==TCP_I_PEER_CLOSED)
如果狀態為 TCP_I_PEER_CLOSED</p><p>msg-&gt;setKind (TCP_C_CLOSE);
將狀態設成 TCP_C_CLOSE</p><p>sendOrSchedule (msg);
將訊息傳到 sendOrSchedule () 處理</p><p>else if (msg-&gt;kind ()==TCP_I_DATA || msg-&gt;kind ()==TCP_I_URGENT_DATA)
如果狀態為 TCP_I_DATA 或 TCP_I_URGENT_DATA
紀錄總共收到的封包 byte 長度</p><p>if (echoFactor==0)
若 echoFactor==0
將訊息刪除</p><p>else
其他:
msg-&gt;setKind (TCP_C_SEND);
狀態設成 TCP_C_SEND</p><p>//reverse direction, modify length, and send it back</p><p>TCPCommand <em>ind = check_and_cast&lt;TCPCommand </em>&gt;(msg-&gt;removeControlInfo ());
將 msg 的 ControlInfo 去掉後，強制轉換型別成 TCPCommand</p><p>TCPSendCommand *cmd = new TCPSendCommand();</p><p>cmd-&gt;setConnId(ind-&gt;connId());
msg-&gt;setControlInfo(cmd);</p><p>delete ind;
將不再用到的 ind 刪除</p><p>計算回傳訊息大小:
long len = long (msg-&gt;length ()<em>echoFactor) &amp; ~7U;
將原訊息長度</em>echoFactor</p><p>if (len&lt;8) len=8;
若訊息長度小於 1 byte, 補足成 1 byte</p><p>msg-&gt;setLength (len);
設定回傳訊息長度
sendOrSchedule (msg);
排到 sendOrSchedule () 中</p><p>else delete msg;
收到其他狀態訊息的話都直接刪除</p>]]></content>
        <category label="IPv6" term="IPv6"/>
        <category label="OMNET++" term="OMNET++"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[5th day of tracing INET6: setStatusString()]]></title>
        <id>https://blog.gasolin.idv.tw/ipv6/5th-day-of-tracing-INET6-setStatusString</id>
        <link href="https://blog.gasolin.idv.tw/ipv6/5th-day-of-tracing-INET6-setStatusString"/>
        <updated>2005-05-09T04:45:18.000Z</updated>
        <summary type="html"><![CDATA[void TCPGenericCliAppBase::setStatusString(const char *s)]]></summary>
        <content type="html"><![CDATA[<p>void TCPGenericCliAppBase::setStatusString(const char *s)
{
if (ev.isGUI()) displayString().setTagArg("t", 0, s);
}</p><p>void TCPGenericCliAppBase::socketEstablished(int, void <em>)
{
// </em>redefine* to perform or schedule first sending
ev &lt;&lt; "connected\n";
setStatusString("connected");
}</p>]]></content>
        <category label="IPv6" term="IPv6"/>
        <category label="OMNET++" term="OMNET++"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[IPv6SuiteWithINET]]></title>
        <id>https://blog.gasolin.idv.tw/ipv6/IPv6SuiteWithINET</id>
        <link href="https://blog.gasolin.idv.tw/ipv6/IPv6SuiteWithINET"/>
        <updated>2005-05-08T22:59:24.000Z</updated>
        <summary type="html"><![CDATA[剛看到]]></summary>
        <content type="html"><![CDATA[<p>剛看到</p><p></p><p>上提供了 IPv6SuiteWithINET for <a href="http://ctieware.eng.monash.edu.au/twiki/bin/view/Simulation/OMNeT" target="_blank" rel="noopener noreferrer">OMNeT</a>++ 3.1, windows/linux 版.</p><p>趕快來試用，如果沒問題的話那 INET6 計畫的下一步就修正成寫 IPv6SuiteWithINET 文件推廣囉，
當然，要先自己 trace 一遍才知人家怎麼做的</p><p>4/21 quick revice:
必須安裝 VC 7.1 編譯程式才能編譯，6.0 的不行。程式可以由下面連結下載
<a href="http://www.microsoft.com/downloads/details.aspx?FamilyID=272be09d-40bb-49fd-9cb0-4bfa122fa91b&amp;displaylang=en" target="_blank" rel="noopener noreferrer">http://www.microsoft.com/downloads/details.aspx?FamilyID=272be09d-40bb-49fd-9cb0-4bfa122fa91b<!-- -->&amp;<!-- -->displaylang=en</a></p>]]></content>
        <category label="IPv6" term="IPv6"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[FreeBSD TCP/IP-Stack to OMNeT++]]></title>
        <id>https://blog.gasolin.idv.tw/ipv6/FreeBSD-TCP-IP-Stack-to-OMNeT</id>
        <link href="https://blog.gasolin.idv.tw/ipv6/FreeBSD-TCP-IP-Stack-to-OMNeT"/>
        <updated>2005-05-08T22:50:57.000Z</updated>
        <summary type="html"><![CDATA[I found this paper through IEEE Xplore, and intrest in  the topic]]></summary>
        <content type="html"><![CDATA[<p>I found this paper through IEEE Xplore, and intrest in  the topic
"Eval freeBSD protocol stack in OMNeT++".</p><p>Integration of the FreeBSD TCP/IP-Stack into the Discrete Event
Simulator OMNet++
Bless, R.; Doll, M.;
Simulation Conference, 2004<!-- -->.<!-- --> Proceedings of the 2004 Winter
Volume 2,  December 5-8, 2004 Page(s):487 - 492</p><p>--</p><ul><li>In asimulation environment one wants to run several hosts in parallel,
So every required global and static FreeBSD variable must be made local to each host. -&gt; a structure to store all the kernel variables for one host.
-&gt; Consequently,in the FreeBSD source every occurrence of the variables must be replaced by a reference into the corresponding structure.</li></ul><p>ex: xyz is replaced to D-&gt;xyz</p><p>where D points to the current host structure that contains all the global and static kernel variables for this particular host.</p><ul><li>Encapsulate the complete TCP/IP into one OMNeT++ simple module.</li></ul><p>Others are out of my knowledge......
In consequence, I think porting protocol stacks from different architecture is still not an easy way....</p>]]></content>
        <category label="OMNET++" term="OMNET++"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[2nd day of tracing INET6: Application/PingAPP]]></title>
        <id>https://blog.gasolin.idv.tw/ipv6/2nd-day-of-tracing-INET6-Application-PingAPP</id>
        <link href="https://blog.gasolin.idv.tw/ipv6/2nd-day-of-tracing-INET6-Application-PingAPP"/>
        <updated>2005-05-08T09:42:38.000Z</updated>
        <summary type="html"><![CDATA[Define_Module(PingApp);]]></summary>
        <content type="html"><![CDATA[<p>Define_Module (PingApp);
模組名稱是 PingApp</p><p>PingApp::initialize()</p><ol><li>讀入 omnetpp.ini 中設定的參數.</li><li>在 TKenv 中監視 </li></ol><ul><li>sendSeqNo</li><li>expectedReplySeqNo</li><li>dropCount</li><li>outOfOrderArrivalCount
這幾個結果 PingApp::handleMessage (cMessage *msg)</li></ul><p>if (msg-&gt;isSelfMessage ())
若訊息來自本身節點</p><p>destAddr = IPAddressResolver ().resolve (par ("destAddr"));
解析目的位址設定</p><p>來自其他節點則啟動回覆機制</p><p><code>processPingResponse(check_and_cast&lt;pingpayload&gt;(msg));</code></p><p>void PingApp::sendPing()</p><p>PingPayload <em>msg = new PingPayload (name);
新增封包，接著下面照著宣告的格式填入對應的值
msg-&gt;setLength (8</em>packetSize); //? 封包裡沒宣告</p><p>sendToICMP (msg, destAddr, srcAddr, hopLimit);
把訊息送到 ICMP 裡</p><p>PingApp::scheduleNextPing(cMessage *timer)</p><p>simtime_t nextPing = simTime () + intervalp-&gt;doubleValue ();
模擬時間加上間隔時間</p><p>void PingApp::sendToICMP(cMessage *msg, const IPvXAddress&amp; destAddr, const IPvXAddress<!-- -->&amp;<!-- --> srcAddr, int hopLimit)
判斷送出 v4/v6 icmp 格式封包</p><p>void PingApp::processPingResponse (PingPayload *msg)
收到 ICMP 封包，判斷<code>&lt;/pingpayload&gt;</code> v4/v6 並<code>&lt;pingpayload&gt;</code>處理
<code>&lt;/pingpayload&gt;</code></p>]]></content>
        <category label="IPv6" term="IPv6"/>
        <category label="OMNET++" term="OMNET++"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Tracegraph for NS2]]></title>
        <id>https://blog.gasolin.idv.tw/ipv6/Tracegraph-for-NS2</id>
        <link href="https://blog.gasolin.idv.tw/ipv6/Tracegraph-for-NS2"/>
        <updated>2005-04-30T08:07:56.000Z</updated>
        <summary type="html"><![CDATA[在 http://www.geocities.com/tracegraph/]]></summary>
        <content type="html"><![CDATA[<p>在 <a href="http://www.geocities.com/tracegraph/" target="_blank" rel="noopener noreferrer">http://www.geocities.com/tracegraph/</a></p><p>可下載 tracegraph 程式來分析 NS2 輸出的 tr 檔.</p><p>Yahoo Group:
<a href="http://groups.yahoo.com/group/tracegraph/" target="_blank" rel="noopener noreferrer">http://groups.yahoo.com/group/tracegraph/</a></p><p>Help
<a href="http://inesc-0.tagus.ist.utl.pt/~pmsrve/ns2/tracegraph.html" target="_blank" rel="noopener noreferrer">http://inesc-0.tagus.ist.utl.pt/~pmsrve/ns2/tracegraph.html</a></p><p>要了解 TraceGraph 的代號與 NodeID 間的對應關係，可以參考這篇
<a href="http://mailman.isi.edu/pipermail/ns-users/2005-March/047944.html" target="_blank" rel="noopener noreferrer">http://mailman.isi.edu/pipermail/ns-users/2005-March/047944.html</a></p>]]></content>
        <category label="NS2" term="NS2"/>
        <category label="TurboGears" term="TurboGears"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[如何在 VS C++ .Net 2003 底下編譯 INET]]></title>
        <id>https://blog.gasolin.idv.tw/ipv6/如何在-VS-C-Net-2003-底下編譯-INET</id>
        <link href="https://blog.gasolin.idv.tw/ipv6/如何在-VS-C-Net-2003-底下編譯-INET"/>
        <updated>2005-04-28T21:03:36.000Z</updated>
        <summary type="html"><![CDATA[針對我所要用的編譯器 還有 執行檔 定義一些所需要的set path]]></summary>
        <content type="html"><![CDATA[<p>針對我所要用的編譯器 還有 執行檔 定義一些所需要的 set path</p><p>在命令提示字元底下一定要找得到以下幾個可執行的程式:
nmake
cl
vcvars32.bat</p><p>我的電腦按右鍵 -&gt; 內容 -&gt; 進階 -&gt; 環境變數 -&gt; 系統變數 -&gt; 編輯 path, 加入
C:\Program Files\Microsoft Visual Studio .NET 2003\Vc7\bin;</p><p>切換到目錄，執行 vcvars32.bat 以設定 vc71 環境.
若 path 變數未設好，則會出現找不到這檔案的訊息.
接著執行 m.bat 編譯即可.</p><p>若發生問題，可以試著鍵入
makemake
重新產生 makefiles.
再打入
nmake -f makefile.vc depend
確認相依性.
之後再執行 m.bat 重新編譯一次即可</p><p>參考網址
<a href="http://java.csie.nctu.edu.tw/~deryann/paper/HowToSTL.htm" target="_blank" rel="noopener noreferrer">http://java.csie.nctu.edu.tw/~deryann/paper/HowToSTL.htm</a></p>]]></content>
        <category label="OMNET++" term="OMNET++"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[使用 OMNeT++ 跑 TinyOS 程式]]></title>
        <id>https://blog.gasolin.idv.tw/ipv6/使用-OMNeT-跑-TinyOS-程式</id>
        <link href="https://blog.gasolin.idv.tw/ipv6/使用-OMNeT-跑-TinyOS-程式"/>
        <updated>2005-04-28T16:54:59.000Z</updated>
        <summary type="html"><![CDATA[http://wwwes.cs.utwente.nl/ewsnsim/]]></summary>
        <content type="html"><![CDATA[<p></p><p>這裡有使用 OMNeT++ 跑 TinyOS 程式的 wireless framework,</p><p></p><p>看起來蠻適合用來做 sensor network/p2p 模擬的</p>]]></content>
        <category label="OMNET++" term="OMNET++"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[6th. day of porting INET6  第六天]]></title>
        <id>https://blog.gasolin.idv.tw/ipv6/6th-day-of-porting-INET6-第六天</id>
        <link href="https://blog.gasolin.idv.tw/ipv6/6th-day-of-porting-INET6-第六天"/>
        <updated>2005-04-05T10:24:06.000Z</updated>
        <summary type="html"><![CDATA[11th. Part:]]></summary>
        <content type="html"><![CDATA[<p>11th. Part:
IPv4d/IPProcessing 模組功能等同 IPv4/IP 模組</p><p>因此 IPv4 資料夾即已實作 IPv4 協定
IPv4d 資料夾內程式則是將 IP 模組內容拆開成多個子模組，
以此推論，若模擬的目標是 IP 協定運作情形，
單單只看到 IP 模組並不能滿足要求時，
則將 Nodes/INET/ 各 .ned 檔中的 "IP" 改成 "IPProcessing" 應該
就可以看到更詳細的 IP 協定運作情形。建議名稱: Routerd / Router6d?</p><p>節點先做 Nodes/INET6/BurstHost6 與 Router6, StandardHost6 稍後再處理</p><ul><li>要寫自行設定模組的 Tutorial</li></ul><p>12th. Part:
INET 比 NS2 好的特色:
FlatNetworkConfigurator,
只需指定網域 / 遮罩，
INET 即自動配置各節點模擬用的位址.</p><ul><li>要研究 AutoRouting 中 FlatNetworkConfigurator 的做法
(怎麼與 ND 互補？(有 ND 那 FlatNetworkConfigurator 就不應作用於 '*Host' 上) ex:</li><li>決定 Prefix/Prefix Lenth (Subnetmask),</li><li>設定啟不啟動 DAD 等)</li></ul><p>Neighbor Discovery vs ARP
IPv6d/ND 將作為一個模組來對應 NetworkInterfaces/ARP</p><p>IP protocol header is represented by the IPDatagram message class</p>]]></content>
        <category label="OMNET++" term="OMNET++"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[NS2 模組編譯心得]]></title>
        <id>https://blog.gasolin.idv.tw/ipv6/NS2-模組編譯心得</id>
        <link href="https://blog.gasolin.idv.tw/ipv6/NS2-模組編譯心得"/>
        <updated>2005-03-28T08:58:51.000Z</updated>
        <summary type="html"><![CDATA[(討論區整理得)]]></summary>
        <content type="html"><![CDATA[<p>(討論區整理得)</p><p>如果是已經 Compiler 過的 ns2, 則改 Makefile
然後在 ns2 的目錄下
例如: ns2.2x 則是在
ns-2.2x 目錄下執行</p><p>#make depand
#make</p><p>這樣就可以從新 compiler ns2 並且加入自己的模組</p><p>如果想要加入自己寫的程式，則可以修改 ns2 的 Makefile
如果是還未 Compiler 過的 ns2, 則修改 Makefile.in
然後依照 ns2 的安裝說明來安裝</p>]]></content>
        <category label="NS2" term="NS2"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[5th. day of porting INET6 第五天]]></title>
        <id>https://blog.gasolin.idv.tw/ipv6/5th-day-of-porting-INET6-第五天</id>
        <link href="https://blog.gasolin.idv.tw/ipv6/5th-day-of-porting-INET6-第五天"/>
        <updated>2005-03-27T00:34:01.000Z</updated>
        <summary type="html"><![CDATA[9th. Part:]]></summary>
        <content type="html"><![CDATA[<p>9th. Part:
編輯 IP6Datagram.msg
參考 <a href="http://www.iana.org/numbers.html" target="_blank" rel="noopener noreferrer">IANA</a> 上<a href="http://www.iana.org/assignments/protocol-numbers" target="_blank" rel="noopener noreferrer">PROTOCOL NUMBERS</a> 來改寫 IP6Datagram.msg</p><p>Protocol field -&gt;  Next Header field
因此 enum 名稱 IP6ProtocolFieldId 改成  IP6NextHeaderFieldId</p><p>IPv4 上叫 Protocol field, IPv6 上稱 Next Header field
為了相容性，將原本定義的 Protocol field 全保留之外，另外新增</p><ul><li>IP6_PROT_IPv6_Route = 43;  //Routing Header for IPv6       <!-- -->[Deering]</li><li>IP6_PROT_IPv6_Frag =  44;  //Fragment Header for IPv6     <!-- -->[Deering]</li><li>IP6_PROT_ESP   = 50;  //Encap Security Payload            <!-- -->[RFC2406]</li><li>IP6_PROT_AH   = 51;  //Authentication Header               <!-- -->[RFC2402]</li><li>IP6_PROT_IPv6_ICMP  = 58; //ICMP for IPv6                <!-- -->[RFC1883]<!-- -->
IP6_PROT_NONE  = 59; --&gt; IP6_PROT_NoNxt  = 59; //No Next Header for IPv6           <!-- -->[RFC1883]</li><li>IP6_PROT_Opts  = 60; //Destination Options for IPv6      <!-- -->[RFC1883]</li><li>IP6_PROT_ENCAP = 98; //Encapsulation Header         <!-- -->[RFC1241,RXB3]</li></ul><p>除了這些之外，順便把一些 Routing protocol 的號也加了上去.</p><p>IP6_PROT_IPv6_MOBILITY 原本給 62,  改成
IP6_PROT_IPv6_MOBILITY = 135; //Mobility Header for IPv6 <!-- -->[RFC3775]</p><p>從一串配給號碼中發現比較特別的是</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">61                 any host internal protocol           [IANA]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">63                 any local network                    [IANA]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">68                 any distributed file system          [IANA]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">99                 any private encryption scheme        [IANA]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">114                any 0-hop protocol                   [IANA]</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>剛開始看不知有何特別作用，後來想想這幾個保留位看起來對模擬工具好像不賴
--&gt; 有新協定要試作？
不必改到標頭定義，暫時先用這幾個吧！
不過沒有標頭名稱怎麼辦？
Orz ..... 還是暫時不要加進去好了</p><p>本檔案編完的下一步應是編輯 IP6Address.h 或  IP6ControInfo.msg 吧</p><p>Ref:  <a href="http://www.iana.org/assignments/ipv6-parameters" target="_blank" rel="noopener noreferrer">IP VERSION 6 PARAMETERS</a> ,   <a href="http://www.iana.org/assignments/icmpv6-parameters" target="_blank" rel="noopener noreferrer">ICMPv6 TYPE NUMBERS</a></p><p>10th. Part:</p><p>編輯 IP6Datagram.msg 中的 message IP6Datagram :
參考 IPv6Suite IP6Datagram.cc 來改寫 IP6Datagram.msg</p><p>ToDo:
1<!-- -->.<!-- --> 將相關各標頭定義在檔案裡.
2<!-- -->.<!-- --> 定義 flow_label 結構 (struct, 20 bit = double + short OR int + int + short OR?)
3<!-- -->.<!-- --> 訂 Options Types</p><p>IP6Datagram.cc 中標頭是如此定義出來的:</p><p>static const ipv6_hdr IPV6_INITIAL_HDR =
{
0x60000000, //version 6, traffic class of 0, flow label of 0
0,   //payload of 0
59,   //No next header yet
0,   //Hop Limit set to uninitialised
IPv6_ADDR_UNSPECIFIED,
IPv6_ADDR_UNSPECIFIED
};</p><p>完整的標頭:</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">message IP6Datagram</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> properties:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     //g Still unknown its func</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     omitGetVerb = true;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> fields:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     short version            = 6;                               // version 6</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     int traffic_class        = 0;                               // traffic class of 0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     IP6FlowLabel flow_label;                                    // flow label of 0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     double payload_length    = 0;                               // payload of 0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     int next_header enum(IP6NextHeaderFieldId) = IP_PROT_NONxt; // No next header yet</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     int hop_limit            = 0;                               //Hop Limit set to uninitialised</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     IP6Address srcAddress;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     IP6Address destAddress;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>即將碰到 day 3 提到的 延伸標頭處理 問題. <a href="http://ietf.org/rfc/rfc2460.txt?number=2460" target="_blank" rel="noopener noreferrer">RFC2460</a> 上的敘述是這樣的</p><p>4.1  Extension Header Order <!-- -->[Page 6]<!-- -->
When more than one extension header is used in the same packet, it is
recommended that those headers appear in the following order:</p><p>   IPv6 header
Hop-by-Hop Options header
Destination Options header (note 1)
Routing header
Authentication header (note 2)
Encapsulating Security Payload header (note 2)
Destination Options header (note 3)
upper-layer header
Fragment header</p><p>填 class IP6Options,
碰到 Option_Data: Variable-length field.  Option-Type-specific data 的問題</p><p>經 majorlee 學長指點
<a href="http://rfc-editor.org/rfc/rfc3493.txt" target="_blank" rel="noopener noreferrer">RFC 3493</a> Basic Socket Interface Extensions for IPv6.
<a href="http://rfc-editor.org/rfc/rfc3542.txt" target="_blank" rel="noopener noreferrer">RFC 3542</a> Advanced Sockets Application Program Interface (API) for IPv6
裡可能會有答案.</p>]]></content>
        <category label="OMNET++" term="OMNET++"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[4th. day of porting INET6 第四天]]></title>
        <id>https://blog.gasolin.idv.tw/ipv6/4th-day-of-porting-INET6-第四天</id>
        <link href="https://blog.gasolin.idv.tw/ipv6/4th-day-of-porting-INET6-第四天"/>
        <updated>2005-03-27T00:31:37.000Z</updated>
        <summary type="html"><![CDATA[7th Part:]]></summary>
        <content type="html"><![CDATA[<p>7th Part:
為了對將來開發好的程式進行測試，新增目錄
INET/Tests/IPv6
同時也發現原本 INET 程式的測試數量明顯不足，但還好結果不差.</p><p>發現 Firebird 的 scratchbook extension 可以編輯已截取的網頁文件，可以在原文件上畫重點並加上註解，
我想應該充分將這個特點利用在 INET 與 IPv6Suite 線上文件注釋上.</p><p>8th. Part:
分析 Mobiwan2 架構，並與學長留下的舊版程式碼作比對.
為此使用 <a href="http://sourceforge.net/projects/winmerge/" target="_blank" rel="noopener noreferrer">WinMerge</a> 程式來協助版本比對的工作.</p><p>OMNET++ INET 與 NS2 的比較:
目錄名: INET mobiwan
架構：按照 TCP/IP 作分層目錄 / 平行資料夾目錄
相依性：放到 OMNET++ 3.0 以上版本目錄下，依照 Readme 即可安裝 / 需 Patch 特定版本的 NS2</p><p>Mobiwan 新舊檔案比較
檔案：新 / 舊
ipv6.cc, ipv6.h:
Network --&gt; NetworkAgent</p><p>ipv6.cc - line 416
r line 497:
hdr<em>ipinip <strong>ppinhdr = (hdr_ipinip </strong>)p-&gt;access(off_ipinip</em>); 改成:
hdr_ipinip <strong>ppinhdr = (hdr_ipinip </strong>)hdr_ipinip::access(p);</p><p>mipv6.cc  大修改
mipv6.h: Binding 訊息，Mobile IPv6 Base Agent, Mobile IPv6 Node</p><p>ipv6routing.h, classifer-src.h 完全相同</p><p>tcl/lib 2.27 版多了很多檔案，包含 2.1b1 版所有檔案。尚不知是否會造成什麼影響</p>]]></content>
        <category label="OMNET++" term="OMNET++"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[3rd. day of porting INET6 第三天]]></title>
        <id>https://blog.gasolin.idv.tw/ipv6/3rd-day-of-porting-INET6-第三天</id>
        <link href="https://blog.gasolin.idv.tw/ipv6/3rd-day-of-porting-INET6-第三天"/>
        <updated>2005-03-27T00:29:39.000Z</updated>
        <summary type="html"><![CDATA[5th Part:]]></summary>
        <content type="html"><![CDATA[<p>5th Part:
閱讀論文: KAME IPv6 Impliment issue
文中指出 IPv6 遵照 IPv4 基礎來修改，所以基本觀念不變.
文中也提出一些 porting 中遇上的問題:
1<!-- -->.<!-- --> Scope 位址處理
2<!-- -->.<!-- --> 多重位址應綁介面 (Interface) 而非綁節點 (Node)
3<!-- -->.<!-- --> 延伸標頭處理
4<!-- -->.<!-- --> IPSec</p><p>目前可能會遇到的問題還不只這些:
1<!-- -->.<!-- --> 位址分析
2<!-- -->.<!-- --> 明確的參考資料
...., etc</p><p>6th. Part
閱讀書籍: C++ 風格與藝術 第二版 (Practical C++ Programming, 2e)
整本書說明都很清晰，應該買一本手邊隨時參考</p><p>程式碼要像文章一樣分段落章節，每段並加入主題說明，
變數避免用縮寫，以降低程式複雜度</p><p>原型：先寫規格中可以運作的部分，
當這一小部份運作正常之後，
再以它為基礎，
建立其他的功能.</p><p>程式檔中應包含:
Header 標題
Author 作者
Purpose 目的
Usage 用法
References 參考資料
File Formats 列出讀取 / 寫入的檔案與格式
Restrictions 限制 (Q by myself: 是否可延伸成代辦事項？Revice: ToDo 集中管理會比較有效率)
Revision History
Error Handling
Copyright and License
Notes 補充說明</p><ul><li>編輯提供 .ned 架構檔在 NodePad++ 編輯關鍵字加亮的定義，
但還沒找到獨立提供這個設定檔的方法</li></ul><p>3/11 update: 定義在 NodePad++ 資料夾下 userDefineLang.xml 檔中</p>]]></content>
        <category label="OMNET++" term="OMNET++"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[16.3. 使用方法]]></title>
        <id>https://blog.gasolin.idv.tw/ipv6/16-3-使用方法</id>
        <link href="https://blog.gasolin.idv.tw/ipv6/16-3-使用方法"/>
        <updated>2005-03-27T00:27:10.000Z</updated>
        <summary type="html"><![CDATA[16.3.1\. 確認是否支援]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="1631-確認是否支援">16.3.1<!-- -->.<!-- --> 確認是否支援<a href="#1631-確認是否支援" class="hash-link" aria-label="Direct link to 1631-確認是否支援" title="Direct link to 1631-確認是否支援">​</a></h2><p> 嘗試載入模組，確認是否編譯成功</p><p> <code># modprobe ip6_tables</code></p><p>確認相容性</p><div class="language-# codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-# codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">� 'ip6tables' firewalling (IPv6)!"</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="1632-學習如何使用-ip6tables">16.3.2<!-- -->.<!-- --> 學習如何使用 ip6tables<a href="#1632-學習如何使用-ip6tables" class="hash-link" aria-label="Direct link to 1632-學習如何使用-ip6tables" title="Direct link to 1632-學習如何使用-ip6tables">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="16321-列出所有-ipv6-netfilter-輸入條件">16.3.2.1<!-- -->.<!-- --> 列出所有 IPv6 netfilter 輸入條件<a href="#16321-列出所有-ipv6-netfilter-輸入條件" class="hash-link" aria-label="Direct link to 16321-列出所有-ipv6-netfilter-輸入條件" title="Direct link to 16321-列出所有-ipv6-netfilter-輸入條件">​</a></h3><ul><li>短指令</li></ul><p><code># ip6tables -L</code></p><ul><li>延伸指令
<code>ip6tables -n -v --line-numbers -L</code></li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="16322-列出特定過濾器">16.3.2.2<!-- -->.<!-- --> 列出特定過濾器<a href="#16322-列出特定過濾器" class="hash-link" aria-label="Direct link to 16322-列出特定過濾器" title="Direct link to 16322-列出特定過濾器">​</a></h3><p><code># ip6tables -n -v --line-numbers -L INPUT</code></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="16323-使用選項在輸入過濾器中插入紀錄規則">16.3.2.3<!-- -->.<!-- --> 使用選項在輸入過濾器中插入紀錄規則<a href="#16323-使用選項在輸入過濾器中插入紀錄規則" class="hash-link" aria-label="Direct link to 16323-使用選項在輸入過濾器中插入紀錄規則" title="Direct link to 16323-使用選項在輸入過濾器中插入紀錄規則">​</a></h3><div class="language-# codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-# codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">� --log-level 7</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="16324-在輸入過濾器中插入拋棄條件">16.3.2.4<!-- -->.<!-- --> 在輸入過濾器中插入拋棄條件<a href="#16324-在輸入過濾器中插入拋棄條件" class="hash-link" aria-label="Direct link to 16324-在輸入過濾器中插入拋棄條件" title="Direct link to 16324-在輸入過濾器中插入拋棄條件">​</a></h3><p> <code># ip6tables --table filter --append INPUT  -j DROP</code></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="16325-依號碼刪除一筆條件">16.3.2.5<!-- -->.<!-- --> 依號碼刪除一筆條件<a href="#16325-依號碼刪除一筆條件" class="hash-link" aria-label="Direct link to 16325-依號碼刪除一筆條件" title="Direct link to 16325-依號碼刪除一筆條件">​</a></h3><p><code># ip6tables --table filter --delete INPUT 1</code></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="16326-允許-icmpv6-訊息">16.3.2.6<!-- -->.<!-- --> 允許 ICMPv6 訊息<a href="#16326-允許-icmpv6-訊息" class="hash-link" aria-label="Direct link to 16326-允許-icmpv6-訊息" title="Direct link to 16326-允許-icmpv6-訊息">​</a></h3><p>使用較舊的 Linux 核心 (未修正的核心 2.4.5 與 iptables-1.2.2) 將無法指定類型 (type)     </p><ul><li>接受透過隧道 (Tunnel) 進來的 ICMPv6 通訊 </li></ul><p><code># ip6tables -A INPUT -i sit+ -p icmpv6 -j ACCEPT</code></p><ul><li>接受透過隧道 (Tunnel) 出去的 ICMPv6 通訊</li></ul><p><code># ip6tables -A OUTPUT -o sit+ -p icmpv6 -j ACCEPT</code></p><p>新的 Linux 核心可以指定 ICMPv6 類型:</p><p><code># ip6tables -A INPUT -p icmpv6 --icmpv6-type echo-request -j ACCEPT</code></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="16327-速率限制">16.3.2.7<!-- -->.<!-- --> 速率限制<a href="#16327-速率限制" class="hash-link" aria-label="Direct link to 16327-速率限制" title="Direct link to 16327-速率限制">​</a></h3><p></p>]]></content>
        <category label="IPv6" term="IPv6"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[16.2. 準備]]></title>
        <id>https://blog.gasolin.idv.tw/ipv6/16-2-準備</id>
        <link href="https://blog.gasolin.idv.tw/ipv6/16-2-準備"/>
        <updated>2005-03-27T00:26:39.000Z</updated>
        <summary type="html"><![CDATA[16.2.1\. 取得原始檔]]></summary>
        <content type="html"><![CDATA[<p>16.2.1<!-- -->.<!-- --> 取得原始檔 </p><p>取得最新的 Linux 核心原始檔: <a href="http://www.kernel.org/" target="_blank" rel="noopener noreferrer">http://www.kernel.org/</a>    </p><p>取得最新的 iptables 套件:     </p><ul><li>Source tarball (kernel 修正檔用): <a href="http://www.netfilter.org/" target="_blank" rel="noopener noreferrer">http://www.netfilter.org/</a></li><li>Source RPM for rebuild of binary (for RedHat systems): <a href="ftp://ftp.redhat.com/redhat/linux/rawhide/SRPMS/SRPMS/" target="_blank" rel="noopener noreferrer">ftp://ftp.redhat.com/redhat/linux/rawhide/SRPMS/SRPMS/</a> or perhaps also at <a href="http://www.netcore.fi/pekkas/linux/ipv6/" target="_blank" rel="noopener noreferrer">http://www.netcore.fi/pekkas/linux/ipv6/ </a></li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="1622-將原始檔解壓縮">16.2.2<!-- -->.<!-- --> 將原始檔解壓縮<a href="#1622-將原始檔解壓縮" class="hash-link" aria-label="Direct link to 1622-將原始檔解壓縮" title="Direct link to 1622-將原始檔解壓縮">​</a></h2><p>切換到原始檔所在目錄:</p><p><code># cd /path/to/src</code></p><p>將原始檔解開並更名
<code># tar z|jxf kernel-version.tar.gz|bz2</code></p><p><code># mv linux linux-version-iptables-version+IPv6</code></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="解壓縮iptables-原始檔">解壓縮 iptables 原始檔<a href="#解壓縮iptables-原始檔" class="hash-link" aria-label="Direct link to 解壓縮 iptables 原始檔" title="Direct link to 解壓縮 iptables 原始檔">​</a></h2><p><code># tar z|jxf iptables-version.tar.gz|bz2</code></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="1623-將最新-iptablesipv6-相關-修正檔修正到-linux-核心原始檔上">16.2.3<!-- -->.<!-- --> 將最新 iptables/IPv6 - 相關 修正檔修正到 Linux 核心原始檔上<a href="#1623-將最新-iptablesipv6-相關-修正檔修正到-linux-核心原始檔上" class="hash-link" aria-label="Direct link to 1623-將最新-iptablesipv6-相關-修正檔修正到-linux-核心原始檔上" title="Direct link to 1623-將最新-iptablesipv6-相關-修正檔修正到-linux-核心原始檔上">​</a></h2><p> 切換到 iptables 所在目錄:</p><p> <code># cd iptables-version</code></p><p>使用修正檔
<code># make pending-patches KERNEL_DIR=/path/to/src/linux-version-iptables-version/ </code></p><p>使用其他 IPv6 相關修正檔 (核心尚未包含的)</p><p><code># make patch-o-matic KERNEL_DIR=/path/to/src/linux-version-iptables-version/</code></p><p>在以下選項中選擇 yes (iptables-1.2.2)     </p><ul><li>ah-esp.patch</li><li>masq-dynaddr.patch (only needed for systems with dynamic IP assigned WAN connections like PPP or PPPoE)</li><li>ipv6-agr.patch.ipv6</li><li>ipv6-ports.patch.ipv6</li><li>LOG.patch.ipv6</li><li>REJECT.patch.ipv6 </li></ul><p>確認 IPv6 extensions     </p><div class="language-# codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-# codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">Extensions found: IPv6:owner IPv6:limit IPv6:mac IPv6:multipor</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">``</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">## 16.2.4\. 配置, 建立與安裝新 Linux 核心</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">切換到Linux核心所在目錄:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">`# cd /path/to/src/linux-version-iptables-version/`</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">編輯 Makefile</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">- EXTRAVERSION =</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">+ EXTRAVERSION = -iptables-version+IPv6-try</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">執行 configure, 啟動 IPv6 相關支援</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Code maturity level options
Prompt for development and/or incomplete code/drivers : yes
Networking options
Network packet filtering: yes
The IPv6 protocol: module
IPv6: Netfilter Configuration
IP6 tables support: module
All new options like following:
limit match support: module
MAC address match support: module
Multiple port match support: module
Owner match support: module
netfilter MARK match support: module
Aggregated address check: module
Packet filtering: module
REJECT target support: module
LOG target support: module
Packet mangling: module
MARK target support: module</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">同時亦配置其他與系統相關的參數. 完整的核心編譯與安裝請參照其他 HOWTOs</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">## 16.2.5\. 重新建立與安裝iptables binaries</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">確認核心原始碼已存在於 /usr/src/linux/     </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">將舊目錄更名</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">`# mv /usr/src/linux /usr/src/linux.old`</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">建立一個新的軟連結(softlink)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">`# ln -s /path/to/src/linux-version-iptables-version /usr/src/linux`</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">重新建立 SRPMS</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">`# rpm --rebuild /path/to/SRPMS/iptables-version-release.src.rpm`</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">安裝新的 iptables 套件 (iptables + iptables-ipv6)     </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">*   在 RH 7.1 系統上, 正常狀況下已安裝好舊版的 iptables , 因此我們"更新"它 </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">`# rpm -Fhv /path/to/RPMS/cpu/iptables*-version-release.cpu.rpm`</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">*   若尚未安裝, 就先"安裝"它</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">`# rpm -ihv /path/to/RPMS/cpu/iptables*-version-release.cpu.rpm`</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">*   On RH 6.2 systems, normally, no kernel 2.4.x is installed, therefore the requirements don't fit. Use "--nodeps" to install it </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">`# rpm -ihv --nodeps /path/to/RPMS/cpu/iptables*-version-release.cpu.rpm`</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">也許須先新建一個軟連結給 iptables 參照檔</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">`# ln -s /lib/iptables/ /usr/lib/iptables`</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content>
        <category label="IPv6" term="IPv6"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[16.1. 使用 netfilter6 作防火牆]]></title>
        <id>https://blog.gasolin.idv.tw/ipv6/16-1-使用-netfilter6-作防火牆</id>
        <link href="https://blog.gasolin.idv.tw/ipv6/16-1-使用-netfilter6-作防火牆"/>
        <updated>2005-03-27T00:26:02.000Z</updated>
        <summary type="html"><![CDATA[IPv6 原生防火牆僅 Linux 核心 2.4 版以上才有支援. 在較舊的 2.2 版以下你只能透過協定 41過濾IPv6-in-IPv4 封包.]]></summary>
        <content type="html"><![CDATA[<p>IPv6 原生防火牆僅 Linux 核心 2.4 版以上才有支援。在較舊的 2.2 版以下你只能透過協定 41 過濾 IPv6-in-IPv4 封包. </p><p>注意：以下敘述的規則或範例不一定能真正保護你的系統！本書對此不負任何責任    </p><p>在安裝後測試你的規則設定，可參照 <a href="http://www.tldp.org/HOWTO/Linux+IPv6-HOWTO/ipv6-security-auditing.html" target="_blank" rel="noopener noreferrer">Section 17.3</a> .   </p><p>注意 USAGI 專案正在處理 IPv6 結束連線追蹤問題！如此將可讓安全規則設定更加容易且更安全！</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="1611-更多資訊">16.1.1<!-- -->.<!-- --> 更多資訊<a href="#1611-更多資訊" class="hash-link" aria-label="Direct link to 1611-更多資訊" title="Direct link to 1611-更多資訊">​</a></h2><ul><li></li><li></li><li></li><li></li></ul>]]></content>
        <category label="IPv6" term="IPv6"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[16. 防火牆]]></title>
        <id>https://blog.gasolin.idv.tw/ipv6/16-防火牆</id>
        <link href="https://blog.gasolin.idv.tw/ipv6/16-防火牆"/>
        <updated>2005-03-27T00:25:13.000Z</updated>
        <summary type="html"><![CDATA[IPv6 防火牆相當重要, 特別是當在內部網路使用全球通用位址時. 因為IPv6不像在 IPv4 網路裡內部主機自動由私有 IPv4 位址保護, 如 RFC 1918 / Address Allocation for Private Internets 或私有 IPv4 位址自動分配 (Automatic Private IP Addressing, APIPA)Google search for Microsoft + APIPA, 在 IPv6上一般通常使用全球通用位址, 而任何具備IPv6 連線能力的節點都可以連結上所有內部 IPv6 支援節點.]]></summary>
        <content type="html"><![CDATA[<p>IPv6 防火牆相當重要，特別是當在內部網路使用全球通用位址時。因為 IPv6 不像在 IPv4 網路裡內部主機自動由私有 IPv4 位址保護，如 <a href="http://www.faqs.org/rfcs/rfc1918.html" target="_blank" rel="noopener noreferrer">RFC 1918 / Address Allocation for Private Internets</a> 或私有 IPv4 位址自動分配 (Automatic Private IP Addressing, APIPA)<a href="http://www.google.com/search?q=apipa+microsoft" target="_blank" rel="noopener noreferrer">Google search for Microsoft + APIPA</a>, 在 IPv6 上一般通常使用全球通用位址，而任何具備 IPv6 連線能力的節點都可以連結上所有內部 IPv6 支援節點.</p>]]></content>
        <category label="IPv6" term="IPv6"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[17.3. IPv6 安全性驗證]]></title>
        <id>https://blog.gasolin.idv.tw/ipv6/17-3-IPv6-安全性驗證</id>
        <link href="https://blog.gasolin.idv.tw/ipv6/17-3-IPv6-安全性驗證"/>
        <updated>2005-03-27T00:24:56.000Z</updated>
        <summary type="html"><![CDATA[目前並無合適的工具可用來確認系統上關於IPv6 網路的安全性問題. 目前即使是 Nessus 或其他商業性安全性檢測軟體都還無法掃描 IPv6 位址.]]></summary>
        <content type="html"><![CDATA[<p>目前並無合適的工具可用來確認系統上關於 IPv6 網路的安全性問題。目前即使是 <a href="http://www.nessus.org/" target="_blank" rel="noopener noreferrer">Nessus</a> 或其他商業性安全性檢測軟體都還無法掃描 IPv6 位址.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="1731-法律議題">17.3.1<!-- -->.<!-- --> 法律議題<a href="#1731-法律議題" class="hash-link" aria-label="Direct link to 1731-法律議題" title="Direct link to 1731-法律議題">​</a></h2><p>注意：僅可掃描自有或經過對方授權的電腦，否則您將有遭遇法律追訴的可能。在掃描前請多確認掃描目的 IPv6 位址是否正確. </p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="1732-使用-ipv6-支援-的-netcat-作-ipv6-安全性驗證">17.3.2<!-- -->.<!-- --> 使用 IPv6 - 支援 的 netcat 作 IPv6 安全性驗證<a href="#1732-使用-ipv6-支援-的-netcat-作-ipv6-安全性驗證" class="hash-link" aria-label="Direct link to 1732-使用-ipv6-支援-的-netcat-作-ipv6-安全性驗證" title="Direct link to 1732-使用-ipv6-支援-的-netcat-作-ipv6-安全性驗證">​</a></h2><p>透過使用 IPv6 - 支援 的 netcat (可參照 <a href="http://www.bieringer.de/linux/IPv6/status/IPv6+Linux-status-apps.html#security-auditing" target="_blank" rel="noopener noreferrer">IPv6+Linux-status-apps/security-auditing</a> ) 你可以包裝一個指令段 (wrapping a script) 以完成在特定通訊埠區段的掃描，或取得 banners 等等工作。使用範例:</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># nc6 ::1 daytime</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">13 JUL 2002 11:22:22 CEST</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="1733-使用-ipv6-支援-的-nmap-作-ipv6-安全性驗證">17.3.3<!-- -->.<!-- --> 使用 IPv6 - 支援 的 nmap 作 IPv6 安全性驗證<a href="#1733-使用-ipv6-支援-的-nmap-作-ipv6-安全性驗證" class="hash-link" aria-label="Direct link to 1733-使用-ipv6-支援-的-nmap-作-ipv6-安全性驗證" title="Direct link to 1733-使用-ipv6-支援-的-nmap-作-ipv6-安全性驗證">​</a></h2><p><a href="http://www.insecure.org/nmap/" target="_blank" rel="noopener noreferrer">NMap</a>, 作為世界上最棒的通訊埠掃描工具之一，從 3.10ALPHA1 版起即支援 IPv6 . 使用範例:</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># nmap -6 -sT ::1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Starting nmap V. 3.10ALPHA3 ( www.insecure.org/nmap/ )</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Interesting ports on localhost6 (::1):</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">(The 1600 ports scanned but not shown below are in state: closed)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Port       State       Service</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">22/tcp     open        ssh</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">53/tcp     open        domain</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">515/tcp    open        printer</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">2401/tcp   open        cvspserver</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Nmap run completed -- 1 IP address (1 host up) scanned in 0.525 seconds</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="1734-使用-ipv6-支援-的-strobe-作-ipv6-安全性驗證">17.3.4<!-- -->.<!-- --> 使用 IPv6 - 支援 的 strobe 作 IPv6 安全性驗證<a href="#1734-使用-ipv6-支援-的-strobe-作-ipv6-安全性驗證" class="hash-link" aria-label="Direct link to 1734-使用-ipv6-支援-的-strobe-作-ipv6-安全性驗證" title="Direct link to 1734-使用-ipv6-支援-的-strobe-作-ipv6-安全性驗證">​</a></h2><p>Strobe 是一個 (與 NMap 相較) 功能較簡單的通訊埠掃描工具，但也提供了 IPv6 - 支援修正檔 (參照 <a href="http://www.bieringer.de/linux/IPv6/status/IPv6+Linux-status-apps.html#security-auditing" target="_blank" rel="noopener noreferrer">IPv6+Linux-status-apps/security-auditing</a> ). </p><p>使用範例:</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># ./strobe ::1 strobe 1.05 (c) 1995-1999 Julian Assange</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">::1 2401 unassigned unknown</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">::1 22 ssh Secure Shell - RSA encrypted rsh</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">::1 515 printer spooler (lpd)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">::1 6010 unassigned unknown</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">::1 53 domain Domain Name Server</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>附註: strobe 並未繼續開發，在此顯示的版本並不十分正確.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="1735-驗證結果">17.3.5. 驗證結果<a href="#1735-驗證結果" class="hash-link" aria-label="Direct link to 17.3.5. 驗證結果" title="Direct link to 17.3.5. 驗證結果">​</a></h2><p>若驗證結果與你的 IPv6 安全策略不相符，使用 IPv6 防火牆來關閉漏洞，例如使用 netfilter6 (參照 <a href="http://www.tldp.org/HOWTO/Linux+IPv6-HOWTO/firewalling-netfilter6.html" target="_blank" rel="noopener noreferrer">Firewalling/Netfilter6</a> ).    資訊：更多關於 IP 安全性的資訊可在此取得:</p><ul><li><a href="http://www.ietf.org/internet-drafts/" target="_blank" rel="noopener noreferrer">Firewalling Considerations for IPv6 / draft-savola-v6ops-firewalling-??.txt</a>     </li><li><a href="http://www.ietf.org/internet-drafts/" target="_blank" rel="noopener noreferrer">IPv6 Neighbour Discovery trust models and threats / draft-ietf-send-psreq-??.txt</a>     </li><li><a href="http://www.ietf.org/internet-drafts/" target="_blank" rel="noopener noreferrer">Security Considerations for 6to4 / draft-savola-v6ops-6to4-security-??.txt</a>     </li><li><a href="http://www.ietf.org/internet-drafts/" target="_blank" rel="noopener noreferrer">Access Control Prefix Router Advertisement Option for IPv6 / draft-bellovin-ipv6-accessprefix-??.txt</a>     </li><li><a href="http://www.ietf.org/internet-drafts/" target="_blank" rel="noopener noreferrer">Requirements for Plug and Play IPsec for IPv6 applications /draft-kobayakawa-ipsec-ipv6-pnpipsec-reqts-??.txt </a>     </li><li></li></ul>]]></content>
        <category label="IPv6" term="IPv6"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[17.1. 節點安全性]]></title>
        <id>https://blog.gasolin.idv.tw/ipv6/17-1-節點安全性</id>
        <link href="https://blog.gasolin.idv.tw/ipv6/17-1-節點安全性"/>
        <updated>2005-03-27T00:21:08.000Z</updated>
        <summary type="html"><![CDATA[在此非常鼓勵更新所有修正檔並關閉所有非必要的服務. 也最好僅繫結必須的 IPv4/IPv6 位址到所使用的服務上. 同使也安裝上本地防火牆.]]></summary>
        <content type="html"><![CDATA[<p>在此非常鼓勵更新所有修正檔並關閉所有非必要的服務。也最好僅繫結必須的 IPv4/IPv6 位址到所使用的服務上。同使也安裝上本地防火牆. </p><p>More to be filled...</p>]]></content>
        <category label="IPv6" term="IPv6"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[17.2. 存取限制]]></title>
        <id>https://blog.gasolin.idv.tw/ipv6/17-2-存取限制</id>
        <link href="https://blog.gasolin.idv.tw/ipv6/17-2-存取限制"/>
        <updated>2005-03-27T00:20:51.000Z</updated>
        <summary type="html"><![CDATA[許多服務使用 tcpwrapper 作為存取限制的參照檔. 以下將描述 tcpwrapper 的使用方式.]]></summary>
        <content type="html"><![CDATA[<p>許多服務使用 tcp_wrapper 作為存取限制的參照檔。以下將描述<a href="http://www.tldp.org/HOWTO/Linux+IPv6-HOWTO/hints-daemons-tcpwrapper.html" target="_blank" rel="noopener noreferrer"> tcp_wrapper</a> 的使用方式.   </p><p>More to be filled...</p>]]></content>
        <category label="IPv6" term="IPv6"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[22. 連線相容性]]></title>
        <id>https://blog.gasolin.idv.tw/ipv6/22-連線相容性</id>
        <link href="https://blog.gasolin.idv.tw/ipv6/22-連線相容性"/>
        <updated>2005-03-27T00:20:33.000Z</updated>
        <summary type="html"><![CDATA[世界上有些專案專注於測試各作業系統實作 IPv6特性後的連線相容性. 在此提供一些聯結:]]></summary>
        <content type="html"><![CDATA[<p>世界上有些專案專注於測試各作業系統實作 IPv6 特性後的連線相容性。在此提供一些聯結: </p><ul><li><a href="http://www.tahi.org/" target="_blank" rel="noopener noreferrer">TAHI Project</a> </li></ul><p>More coming next...</p>]]></content>
        <category label="IPv6" term="IPv6"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[21. 程式設計 (使用 API)]]></title>
        <id>https://blog.gasolin.idv.tw/ipv6/21-程式設計-使用-API</id>
        <link href="https://blog.gasolin.idv.tw/ipv6/21-程式設計-使用-API"/>
        <updated>2005-03-27T00:19:37.000Z</updated>
        <summary type="html"><![CDATA[筆者並沒有寫作 IPv6 程式的經驗, 本章也許將由其他人接手或移至其他 HOWTO 中.]]></summary>
        <content type="html"><![CDATA[<p>筆者並沒有寫作 IPv6 程式的經驗，本章也許將由其他人接手或移至其他 HOWTO 中.  </p><p>可在此找到更多資訊:  </p><ul><li></li><li></li><li><a href="http://jungla.dit.upm.es/%7Eecastro/IPv6-web/ipv6.html" target="_blank" rel="noopener noreferrer">Porting applications to IPv6 HowTo</a> , Eva M. Castro</li></ul>]]></content>
        <category label="IPv6" term="IPv6"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[19. 服務品質 (QoS)]]></title>
        <id>https://blog.gasolin.idv.tw/ipv6/19-服務品質-QoS</id>
        <link href="https://blog.gasolin.idv.tw/ipv6/19-服務品質-QoS"/>
        <updated>2005-03-27T00:19:21.000Z</updated>
        <summary type="html"><![CDATA[IPv6 使用訊流標籤(Flow Labels) 與 Traffic Classes 支援服務品質. 我們可以使用 "tc" 指令來控制(包含在 "iproute"套件中).]]></summary>
        <content type="html"><![CDATA[<p>IPv6 使用訊流標籤 (Flow Labels) 與 Traffic Classes 支援服務品質。我們可以使用 "tc" 指令來控制 (包含在 "iproute" 套件中). </p><p>額外資訊:  </p><ul><li><a href="http://www.ietf.org/internet-drafts/draft-ietf-ipv6-flow-label-03.txt" target="_blank" rel="noopener noreferrer">IPv6 Flow Label Specification</a> </li></ul><p>待補充...</p>]]></content>
        <category label="IPv6" term="IPv6"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[18.4. 額外訊息]]></title>
        <id>https://blog.gasolin.idv.tw/ipv6/18-4-額外訊息</id>
        <link href="https://blog.gasolin.idv.tw/ipv6/18-4-額外訊息"/>
        <updated>2005-03-27T00:19:00.000Z</updated>
        <summary type="html"><![CDATA[在 Linux  2.6.x 版的核心中你可以同樣使用"ip"指令來獲取 IPsec 的策略(policy)與狀態 :]]></summary>
        <content type="html"><![CDATA[<p>在 Linux  2.6.x 版的核心中你可以同樣使用 "ip" 指令來獲取 IPsec 的策略 (policy) 與狀態 :</p><h1>ip xfrm policy</h1><p>...</p><h1>ip xfrm state</h1><p>...</p>]]></content>
        <category label="IPv6" term="IPv6"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[18.2. 核心支援(ESP與AH)]]></title>
        <id>https://blog.gasolin.idv.tw/ipv6/18-2-核心支援-ESP與AH</id>
        <link href="https://blog.gasolin.idv.tw/ipv6/18-2-核心支援-ESP與AH"/>
        <updated>2005-03-27T00:18:43.000Z</updated>
        <summary type="html"><![CDATA[18.2.1\. Linux 2.4.x  版的核心支援]]></summary>
        <content type="html"><![CDATA[<p>18.2.1<!-- -->.<!-- --> Linux 2.4.x  版的核心支援</p><p>目前 2.4 版未支援。在加密程式碼部分還有些法律上的問題。同樣的問題也發生在其他專案上</p><p>18.2.2<!-- -->.<!-- --> Linux 2.6.x  版的核心支援</p><p>目前的版本 (2.6.9 以上) 已支援 IPv4 與 IPv6 的 IPsec .</p><p>這部份的程式由 USAGI 專案協助實作.</p>]]></content>
        <category label="IPv6" term="IPv6"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[18.1. 使用加密與認證的模式]]></title>
        <id>https://blog.gasolin.idv.tw/ipv6/18-1-使用加密與認證的模式</id>
        <link href="https://blog.gasolin.idv.tw/ipv6/18-1-使用加密與認證的模式"/>
        <updated>2005-03-27T00:18:25.000Z</updated>
        <summary type="html"><![CDATA[有兩種加密與認證的模式可行:]]></summary>
        <content type="html"><![CDATA[<p>有兩種加密與認證的模式可行:</p><p>18.1.1<!-- -->.<!-- --> 傳輸模式 (Transport Mode)</p><p>傳輸模式是種真實的點對點連線模式。它的 IP 標頭並未被加密 (但通常已包含於認證中), 而只有負載 (通常為 ICMP, TCP 或 UDP) 被他們的特定標頭所加密</p><p> 使用 AES-128 來加密，並使用 SHA1 來做認證，此模式讓 MTU 減少 42 位元</p><p>18.1.1<!-- -->.<!-- --> 隧道模式 (Tunnel Mode)</p><p> 隧道模式可於點對點和閘道對閘道連線模式中使用。完整的 IP 封包將被加密並取得新的 IP 標頭
(The complete IP packet is being encrypted and gets a new IP header prepended .) </p><p>This mode usually decreases the MTU by 40 octets from the MTU of transport mode.<br>
<!-- -->在此模式下通常會讓使用了傳輸模式的 MTU 再減少 40 位元</p>]]></content>
        <category label="IPv6" term="IPv6"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[18.3. 自動金鑰交換(IKE)]]></title>
        <id>https://blog.gasolin.idv.tw/ipv6/18-3-自動金鑰交換-IKE</id>
        <link href="https://blog.gasolin.idv.tw/ipv6/18-3-自動金鑰交換-IKE"/>
        <updated>2005-03-27T00:18:07.000Z</updated>
        <summary type="html"><![CDATA[IPsec 需要透過一個安全的金鑰交換過程. 在Linux中是透過 IKE daemons 程式來達成. 它們也使用公用安全機制(common known secret, 即一般所言的"預先分享安全機制"(pre-shared secret)), 或使用RSA金鑰 (此金鑰也可用在 X.509 認證上)處理對方的認證. 目前Linux上提供有兩種不同的 IKE daemons, 兩者在使用與配置過程上完全不同. 相較於*S/WAN , 筆者比較偏好 "pluto"實作, 因為 "pluto"比較容易而且只需一步設定安裝.]]></summary>
        <content type="html"><![CDATA[<p>IPsec 需要透過一個安全的金鑰交換過程。在 Linux 中是透過 IKE daemons 程式來達成。它們也使用公用安全機制 (common known secret, 即一般所言的 "預先分享安全機制"(pre-shared secret)), 或使用 RSA 金鑰 (此金鑰也可用在 X.509 認證上) 處理對方的認證。目前 Linux 上提供有兩種不同的 IKE daemons, 兩者在使用與配置過程上完全不同。相較於 * S/WAN , 筆者比較偏好 "pluto" 實作，因為 "pluto" 比較容易而且只需一步設定安裝.</p>]]></content>
        <category label="IPv6" term="IPv6"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[1.2. 歸類]]></title>
        <id>https://blog.gasolin.idv.tw/ipv6/1-2-歸類</id>
        <link href="https://blog.gasolin.idv.tw/ipv6/1-2-歸類"/>
        <updated>2005-03-27T00:17:44.000Z</updated>
        <summary type="html"><![CDATA[此 HOWTO 文件應列於"網路/協定"分類]]></summary>
        <content type="html"><![CDATA[<p>此 HOWTO 文件應列於 "網路 / 協定" 分類</p><p>This HOWTO should be listed in category "Networking/Protocols".</p>]]></content>
        <category label="IPv6" term="IPv6"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[2.4. FAQ (基礎問題)]]></title>
        <id>https://blog.gasolin.idv.tw/ipv6/2-4-FAQ-基礎問題</id>
        <link href="https://blog.gasolin.idv.tw/ipv6/2-4-FAQ-基礎問題"/>
        <updated>2005-03-27T00:17:32.000Z</updated>
        <summary type="html"><![CDATA[2.4.1\. 為什麼稱作IPv6,而非繼IPv4之後稱為IPv5 ?]]></summary>
        <content type="html"><![CDATA[<p>2.4.1<!-- -->.<!-- --> 為什麼稱作 IPv6, 而非繼 IPv4 之後稱為 IPv5 ?
在任何 IP 標頭中，前 4 位元是為協定版本號所保留的。所以理論上一個協定的版本號在 0 和 15 之間都是可以的:</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">* 4 己經為IPv4所使用.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">* 5 為串流( Stream )協定所保留 (STP, RFC 1819 / 網際網路串流協定第二版)(不曾真正公開使用過)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>因此下一個可以用的號碼是 6, 因此 IPv6 就這樣誕生了！</p><p>2.4.2<!-- -->.<!-- --> IPv6 位址：為什麼 IPv6 位址位元數要這麼長？
在設計 IPv4 的時候，人們認為 32 位元的長度足夠全世界使用。回頭看看這些年來，32 位元就現在和未來幾年來仍足以使用.
然而，32 位元過不久將不能滿足各種網路設備對全球 IP 位址的需求。想一想將來要連結網路的移動電話，汽車 (包括電子總控系統), 烤麵包機，冰箱，照明開關...</p><p>所以設計者選擇了 128 位元，是今天 IPv4 大小 (2^96) 與長度的 4 倍.</p><p>雖然實際可使用的大小可能比它看起來的還要小。這是因為現在的定義位址設計，64 位元被用於界面識別.
另外 64 位元則用於路由。假設於目前嚴格的集合階層 (/48, /35, ...), IPv6 所能提供的位址空間仍可能有耗盡的一天，但在可見的將來中應仍不會發生.</p><p>您可由 RFC 1715 / The H Ratio for Address Assignment Efficiency and RFC 3194 / The Host-Density Ratio for Address Assignment Efficiency. 中得到更進一步的資訊</p><p>2.4.3<!-- -->.<!-- --> IPv6 位址：為什麼在新的設計裡位元數這麼少？
雖然，可能有些人在考慮 IPv8 和 IPv16, 然而這些設計無論從接受和執行都是那麼的遙遠.
目前 128bit 對於標頭和數據傳輸延遲來說是最佳的選擇.
考慮到在 IPv4 和 IPv6 的最小最大傳輸單位 (MTU), 它們分別是 576 位元組和 1280 位元組，
IPv4 的標頭長度為 20 位元組和 (最小值，加上 IPv4 位址選項可以增大到 60 位元組),
在 IPv6 的標頭中則是 48 位元組 (固定不變的), 標頭分別占它們 MTU 的 3.4% 和 3.8%, 這意味著兩個協定標頭所造成的負載幾乎相同.
更多位元的位址需要更大的標頭，因而佔據更大的負載.</p><p>同樣，考慮到正常連結的 MTU 最大值 (像現在的以太網): 1500 位元組 (特別的例子：Jumbo frames 使用了 9k 位元組).
最終，如果在要傳輸的第三層封包中 10% 或 20% 都用來傳送位址而非封包內容，這可能不是個很好的設計方式.</p>]]></content>
        <category label="IPv6" term="IPv6"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[2.1 什麼是 IPv6?]]></title>
        <id>https://blog.gasolin.idv.tw/ipv6/2-1-什麼是-IPv6</id>
        <link href="https://blog.gasolin.idv.tw/ipv6/2-1-什麼是-IPv6"/>
        <updated>2005-03-27T00:17:20.000Z</updated>
        <summary type="html"><![CDATA[IPv6是將用來取代 IPv4(也叫做IP) 的ㄧ種新的第三層協定 (請參考 linuxports/howto/introtonetworking/ISO - OSI Model) IPv4是很早以前設計的 (1980年一月, RFC 760 / 網路協定(Internet Protocol)) , 自協定設計之初即不斷地有人要求IP網路協定應提供更多的位址和更高的性能. RFC 2460 / 網路協定第六版 (Internet Protocol Version 6 Specification) 是最新的 RFC 版本. IPv6與IP最主要的不同點在於重新設計了封包標頭. 包括將位址的長度從 32 bits 增加到 128 bits. 因為第三層主要負責使用基於位址的封包路由來達成端對端位址傳輸. 因此與 IPv4 ㄧ樣, 傳輸時必需包含新的IPv6位址(來源和目標). 想知道更多關於 IPv6 歷史的資訊的話可以參考看看較舊版本的 IPv6 相關 RFC 列表 SWITCH IPv6 Pilot / References http://www.switch.ch/lan/ipv6/references.html]]></summary>
        <content type="html"><![CDATA[<p>IPv6 是將用來取代 IPv4 (也叫做 IP) 的ㄧ種新的第三層協定 (請參考 linuxports/howto/intro_to_networking/ISO - OSI Model) IPv4 是很早以前設計的 (1980 年一月，RFC 760 / 網路協定 (Internet Protocol)) , 自協定設計之初即不斷地有人要求 IP 網路協定應提供更多的位址和更高的性能. RFC 2460 / 網路協定第六版 (Internet Protocol Version 6 Specification) 是最新的 RFC 版本. IPv6 與 IP 最主要的不同點在於重新設計了封包標頭。包括將位址的長度從 32 bits 增加到 128 bits. 因為第三層主要負責使用基於位址的封包路由來達成端對端位址傳輸。因此與 IPv4 ㄧ樣，傳輸時必需包含新的 IPv6 位址 (來源和目標). 想知道更多關於 IPv6 歷史的資訊的話可以參考看看較舊版本的 IPv6 相關 RFC 列表 SWITCH IPv6 Pilot / References <a href="http://www.switch.ch/lan/ipv6/references.html" target="_blank" rel="noopener noreferrer">http://www.switch.ch/lan/ipv6/references.html</a></p>]]></content>
        <category label="IPv6" term="IPv6"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[2.3. IPv6 的位址格式 ?]]></title>
        <id>https://blog.gasolin.idv.tw/ipv6/2-3-IPv6-的位址格式</id>
        <link href="https://blog.gasolin.idv.tw/ipv6/2-3-IPv6-的位址格式"/>
        <updated>2005-03-27T00:17:02.000Z</updated>
        <summary type="html"><![CDATA[前文提到 IPv6 的位址為128位元. 這麼高的位元數換算成一般十進位數字表示法的話, 長度將達到10的39次方:]]></summary>
        <content type="html"><![CDATA[<p>前文提到 IPv6 的位址為 128 位元。這麼高的位元數換算成一般十進位數字表示法的話，長度將達到 10 的 39 次方:</p><p>2^128-1: 340282366920938463463374607431768211455</p><p>這麼長的數字或位址將很難記得住。而且，IPv6 的位址是逐位定位的 (就像 IPv4, 但這個觀點不是公認的).
所以透過十六進制表示法能更好地表示這些數字。將每 4 位元 (也叫做 "nibble") 表示為數字 (0-9) 或字符 a-f (10-15).
這種表示法可以將 IPv6 的地址長度縮減到可用 32 個字符來表示.</p><p>2^128-1: 0xffffffffffffffffffffffffffffffff</p><p>這種表示法仍然不是很方便. (因為這樣一長串看下來很容易就會混淆或遺漏了單個十六進制數字), 所以 IPv6 的設計者將地址形式定為每 16 位元就用 "冒號" 區分開來.
此外，開頭的 "0x"(在程式設計當中用來表示十六進制數值) 也被省略了:</p><p>2^128-1: ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff</p><p>如此一來，一個可用的地址 (請參考之後提到的地址類型) 如下:</p><p>3ffe:ffff:0100:f101:0210:a4ff:fee3:9566</p><p>為了簡化，每個 16 位元區塊中高位元的 0 可以被省略:</p><p>3ffe:ffff:0100:f101:0210:a4ff:fee3:9566  -&gt;
¬ 3ffe:ffff:100:f101:210:a4ff:fee3:9566</p><p>連續值為 0 的 16 位元位址區塊可以用 "::" 表示。但是在一個 IPv6 位址當中只能使用這種簡寫一次，否則就不再是唯一表示的位址了:</p><p>3ffe:ffff:100:f101:0:0:0:1  -&gt;  3ffe:ffff:100:f101::1</p><p>簡化得最短的 IPv6 本地位址:</p><p>0000:0000:0000:0000:0000:0000:0000:0001  -&gt;  ::1</p><p>也有一種方法叫做簡潔 (compact, base85 coded) 表示法。定義於 RFC 1924 / IPv6 簡潔位址表示法 (定於 1996 年四月一日),
但從沒有被廣泛使用過，可能只是個愚人節笑話。但還是給個例子:</p><h1>ipv6calc --addr_to_base85 3ffe:ffff:0100:f101:0210:a4ff:fee3:9566</h1><p>Itu<!-- -->&amp;<!-- -->-ZQ82s&gt;J%s99FJXT</p><p>資訊: ipv6calc 是一個 IPv6 地址格式的計算和轉換的計劃，您可以在 ipv6calc 首頁中找到: <a href="http://www.deepspace6.net/projects/ipv6calc.html" target="_blank" rel="noopener noreferrer">http://www.deepspace6.net/projects/ipv6calc.html</a>
鏡像站: <a href="http://mirrors.bieringer.de/www.deepspace6.net/projects/ipv6calc.html" target="_blank" rel="noopener noreferrer">http://mirrors.bieringer.de/www.deepspace6.net/projects/ipv6calc.html</a></p>]]></content>
        <category label="IPv6" term="IPv6"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[大綱]]></title>
        <id>https://blog.gasolin.idv.tw/ipv6/大綱</id>
        <link href="https://blog.gasolin.idv.tw/ipv6/大綱"/>
        <updated>2005-03-27T00:16:40.000Z</updated>
        <summary type="html"><![CDATA[//2/22/2005]]></summary>
        <content type="html"><![CDATA[<p>//2/22/2005
//8/6/2004</p><p>1<!-- -->.<!-- --> 概述</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">1.1\. 版權,許可與其它</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">1.2\. 歸類</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">1.3\. 版本, 歷史和待辦事項</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">1.4\. 翻譯</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">1.5\. 技術</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">1.6\. 序</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">1.7\. 使用詞彙與縮寫</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">1.8\. 了解這個 HOWTO 的必需條件</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>2<!-- -->.<!-- --> 基礎</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">2.1\. 什麼是 IPv6?</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">2.2\. IPv6 在 Linux 作業系統上的歷史</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">2.3\. IPv6 的位址格式的形式 ?</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">2.4\. FAQ 問與答(基礎)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>3<!-- -->.<!-- --> 位址格式</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">3.1\. 沒有特殊前綴的位址</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">3.2\. 位址前綴</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">3.3\. 位址格式 (主機部份)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">3.4\. 用作路由的位址前綴長度</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>4<!-- -->.<!-- --> IPv6 - 支援 (ready) 系統確認</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">4.1\. IPv6-支援 kernel</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">4.2\. IPv6-支援 網路設定工具</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">4.3\. IPv6-支援 測試/調試 程式</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">4.4\. IPv6-支援 程式</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">4.5\. IPv6-支援 客戶端程式 (selection)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">4.6\. IPv6-支援 伺服器端程式</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">4.7\. FAQ 問與答 (IPv6-支援 系統確認)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>5<!-- -->.<!-- --> 設定界面</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">5.1\. 不同的網路設備</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">5.2\. 啟動與關閉界面</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>6<!-- -->.<!-- --> 設定 IPv6 位址</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">6.1\. 顯示目前的 IPv6 位址</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">6.2\. 新增 IPv6 位址</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">6.3\. 移除 IPv6 位址</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>7<!-- -->.<!-- --> 設定正常 IPv6 路由</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">7.1\. 顯示目前的 IPv6 路由</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">7.2\. 新增 IPv6 通過閘道器的路由</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">7.3\. 移除 IPv6 通過閘道器的路由</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">7.4\. 新增 IPv6 通過介面的路由</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">7.5\. 移除 IPv6 通過介面的路由</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">7.6\. IPv6 路由FAQ</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>8<!-- -->.<!-- --> 芳鄰搜尋</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">8.1\. 使用 "ip" 指令顯示芳鄰</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">8.2\. 使用 "ip" 指令處理芳鄰列表</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>9<!-- -->.<!-- --> 設定 IPv6-in-IPv4 通道</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">9.1\. 通道的類型</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">9.2\. 顯示目前通道</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">9.3\. 設定點對點的通道</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">9.4\. 設定 6to4 通道</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>10<!-- -->.<!-- --> 設定 IPv4-in-IPv6 通道
11<!-- -->.<!-- --> 在 /proc-filesystem 的內核設定</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">11.1\. 如何存取 /proc-filesystem</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">11.2\. /proc/sys/net/ipv6/ 中的數值類型.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">11.3\. /proc/sys/net/ipv4/ 中 IPv6 相關的數值類型</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">11.4\. /proc/net/ 中 IPv6 相關的數值類型</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>12<!-- -->.<!-- --> Netlink-Interface to kernel
13<!-- -->.<!-- --> 網路調試</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">13.1\. 伺服器接口(socket) 繫結</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">13.2\. tcpdump 封包傾印範例</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>14<!-- -->.<!-- --> 在不同的發行版中設定 IPv6</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">14.1\. Red Hat Linux and "clones"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">14.2\. SuSE Linux</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">14.3\. Debian Linux</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>15. 自動設定與移動性</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">15.1\. 無狀態自動設定</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">15.2\. 使用Router Advertisement Daemon (radvd)達成有狀態自動設定</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">15.3\. 動態主機設定協定 v6 (DHCPv6)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">15.4\. 移動性</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>16<!-- -->.<!-- --> 防火牆</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">16.1\. 使用 netfilter6 防火牆</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">16.2\. 準備</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">16.3\. 使用方法</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>17. 安全性</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">17.1\. 節點安全性</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">17.2\. 存取限制</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">17.3\. IPv6 安全性驗證</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>18<!-- -->.<!-- --> 加密與認證
18.1<!-- -->.<!-- --> 使用加密與認證的模式
18.2<!-- -->.<!-- --> 核心支援 (ESP 與 AH)
18.3<!-- -->.<!-- --> 自動金鑰交換 (IKE)
18.4<!-- -->.<!-- --> 額外訊息</p><p>19<!-- -->.<!-- --> 服務品質 (QoS)
20<!-- -->.<!-- --> Hints for IPv6-enabled daemons</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">20.1\. Berkeley Internet Name Daemon BIND (named)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">20.2\. Internet super daemon (xinetd)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">20.3\. Webserver Apache2 (httpd2)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">20.4\. Router Advertisement Daemon (radvd)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">20.5\. tcp_wrapper</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>21<!-- -->.<!-- --> 程式設計 (使用 API)
22<!-- -->.<!-- --> Interoperability
23<!-- -->.<!-- --> 更多資訊與網址</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">23.1\. 書籍, 文章, 線上評論 (mixed)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">23.2\. Conferences, Meetings, Summits</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">23.3\. 線上資訊</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">23.4\. IPv6 基礎架構</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">23.5\. Maillists</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">23.6\. 線上工具</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">23.7\. Trainings, Seminars</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">23.8\. 'The Online Discovery' ...</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>24<!-- -->.<!-- --> Revision history / Credits / The End</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">24.1\. Revision history</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">24.2\. Credits</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">24.3\. 結語</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content>
        <category label="IPv6" term="IPv6"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[NS2.27 + Mobiwan2 安裝]]></title>
        <id>https://blog.gasolin.idv.tw/ipv6/NS2-27-Mobiwan2-安裝</id>
        <link href="https://blog.gasolin.idv.tw/ipv6/NS2-27-Mobiwan2-安裝"/>
        <updated>2005-03-10T13:46:39.000Z</updated>
        <summary type="html"><![CDATA[用來與 OMNET++ IPv6Suite 模組 作對照的模擬工具是 NS2 上的 Mobiwan2 模組.]]></summary>
        <content type="html"><![CDATA[<p>用來與 OMNET++ IPv6Suite 模組 作對照的模擬工具是 NS2 上的 Mobiwan2 模組.
這是目前最多人使用的模擬模組.
除了基礎對照系統架設之外，
還將根據之前學長在 NS2.1b1 上使用 Mobiwan 的程式，
改寫成 for NS2.27 的 Mobiwan2 版本.
以順便了解其架構，並利用其優點在 INET6 porting 上</p><p>剛開始照著 NS2 (Network Simulator) 教學手冊 的<a href="http://140.116.72.80/%7Esmallko/ns2/setup.htm" target="_blank" rel="noopener noreferrer"> 安裝篇</a> 裝，
成功後再裝 <a href="http://www.ti-wmc.nl/mobiwan2/" target="_blank" rel="noopener noreferrer">Mobiwan2</a> 卻遇到問題.</p><p>解決方法是在執行 NS2-AllinOne 安裝前先照著 Mobiwan2 網站上的指令 patch 好，</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># cd &lt;your&gt;ns-allinone-2.27/ns-2.27</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># zcat &lt;patchfile.gz&gt;&lt;/patchfile.gz&gt;&lt;/your&gt;patchfile.gz&lt;your&gt;&lt;patchfile.gz&gt; |patch -p1&lt;/patchfile.gz&gt;&lt;/your&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>然後再執行 NS2 安裝</p><h1>./install</h1><p>要是已經把 NS2 裝好了怎麼辦？還能怎麼辦，我只會一個笨方法......
先把之前裝的整個目錄砍掉後，再裝一次吧...Orz.</p><p>在 Cygwin 上測試的方法：命令列中輸入 startxwin.bat。會產生一個新的視窗，在此命令視窗中輸入</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ cd your path to ns-2.27</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ ./ns simple-mipv6.tcl</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>若要在 Fedora Core 3 上安裝，因為 gcc 版本太新 (3.34) 的關係，笨笨的 NS2 不懂得支援，
去下載 <a href="http://www.ececs.uc.edu/%7Ecdmc/ucbt/src/ns227-gcc34.patch" target="_blank" rel="noopener noreferrer">http://www.ececs.uc.edu/~cdmc/ucbt/src/ns227-gcc34.patch </a>
這個好心人寫的修正檔，
丟到 ns-allinone-2.27 目錄下，打入</p><p>#patch -p0 -p0 &lt; ns227-gcc34.patch</p><p>修正後再來裝就可以了.</p>]]></content>
        <category label="NS2" term="NS2"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[1st. Day of porting INET6 第一天: 從RFC2463開始]]></title>
        <id>https://blog.gasolin.idv.tw/ipv6/1st-Day-of-porting-INET6-第一天-從RFC2463開始</id>
        <link href="https://blog.gasolin.idv.tw/ipv6/1st-Day-of-porting-INET6-第一天-從RFC2463開始"/>
        <updated>2005-03-06T22:16:52.000Z</updated>
        <summary type="html"><![CDATA[這系列文章僅記錄過程, 目的是從紀錄中看到自己對的 ipv6 了解, 對做事方法的改進.]]></summary>
        <content type="html"><![CDATA[<p>這系列文章僅記錄過程，目的是從紀錄中看到自己對的 ipv6 了解，對做事方法的改進.
不總結經驗。因為一但總結經驗就會陷入長段撰寫文件的誤區。而且在現在階段，甚至不能確定此專案能否成功。希望我能有寫出總結經驗文章來的一天吧：)</p><p>1st. Part:
第一步先從 ICMPv6 開始著手 Porting.
在熟悉 INET 目錄規劃後，首先是根據 INET 目錄規則來建立 INET 專案所應用到的目錄，
剛開始在 Network 目錄下先建立 IPv6 與 IPv6d 兩個目錄。並在 Nodes 目錄下建立 INET6 目錄.</p><p>從 IETF <a href="http://www.ietf.org/iesg/1rfc_index.txt" target="_blank" rel="noopener noreferrer">RFC 列表</a> 中挖出了 RFC 2463, Internet Control Message Protocol (ICMPv6) for the Internet Protocol Version 6 (IPv6) Specification, 依此為憑開始 porting.</p><p>編輯 Network/IPv6/ICMPv6.ned
參照<a href="http://ctieware.eng.monash.edu.au/twiki/bin/view/Simulation/IPv6Suite" target="_blank" rel="noopener noreferrer"> IPv6Suite</a>, 從 IPv6Suite/IP/IPv6/Generic 目錄下的 ICMPv6.ned. 觀察它的 ICMPv6 模組組成.
發現該模組與 INET 的 ICMP.ned 大不相同，是由 IPv6Core, Neighbourdiscovery, ICMPv6Combine, 還有 MLD (multicast) 模組組成的複合模組.
MLD 模組在剛開始 porting 時可以忽略暫時不處理。剩下的三塊中... 應不應分拆成三個檔案三個 simplemodule? , 是否要使用到 ICMPv6Combine 這塊呢？我馬上陷入了第一個難題中.</p><p>2nd. Part:
告解式除錯 (Confessional Debug): 為何不先弄好 IP header 呢？這絕對是問題.
還好意識到這件事情的時間點還算早。更堅定了我 "只有邊寫邊紀錄才能意識到自己的錯誤" 的想法，因此接下來應先搜尋 IP header 定義的部分，從這裡開始作修改.</p><p>暫時將 DualStack 放到一邊，完成純 IPv6 Support 的模組後再考慮 DualStack.
但一定會將之排入計畫裡.
因為雖然 DualStack 對我的論文模擬來說重要性不大，
但在實際工作上將會遇到. porting 過一遍心裡會先有點底，相信多少有些助益.</p>]]></content>
        <category label="OMNET++" term="OMNET++"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[2nd. day of porting INET6 第二天]]></title>
        <id>https://blog.gasolin.idv.tw/ipv6/2nd-day-of-porting-INET6-第二天</id>
        <link href="https://blog.gasolin.idv.tw/ipv6/2nd-day-of-porting-INET6-第二天"/>
        <updated>2005-03-06T22:14:32.000Z</updated>
        <summary type="html"><![CDATA[3rd. Part:]]></summary>
        <content type="html"><![CDATA[<p>3rd. Part:</p><p>再次瀏覽 INET 目錄，評估應該增修的檔案:
初步規劃大致如下:</p><ul><li>Network/IPv6     //.ned, .msg 資源檔，IP6 實作</li><li>Network/IPv6d  //IP6 分模組實作</li><li>Network/Autorouting/FlatNetworkConfigurator6.ned  // 模擬用位址自動設定</li><li>Nodes/INET6     // 組合模組成為節點</li><li>Applications/PingApp6</li></ul><p>這時又發現了 INET 的一個好處：模組所包含的目錄大致與 TCP/IP 架構分層符合，
對熟悉網路的我來說，很容易找到應該增修檔案的位址.</p><p>順便規劃 DualStack, 但暫時不做，原因如 Day1 2nd. Part:</p><ul><li>Network/DualStack</li><li>Network/Autorouting/FlatNetworkConfiguratorDS.ned</li><li>Nodes/DualStack
應用層不必修改.</li></ul><p>做 DualStack 的話還會另外引入 6to4 等 transition/tunnel 模組，
工作量會遠遠比目前列出的 DualStack 所需修改內容多上許多，
且現在自己還不具備白手疊床架屋的能力.
因此先弄好 IPv6 部分的 porting 才是最重要的.</p><p>昨天思考 ICMPv6 3 個模組部分，決定分拆成多個 simplemodule,
在 NetworkLayer6 裡再進行合作.</p><p>4th. Part:
編輯 Network/IPv6/IPv6.ned:</p><p>IPControlInfo:
When IPv6 sends up a packet to a higher layer protocol, it will also attach an IP6ControlInfo to the packet, with the source and destination IPv6 address</p><ul><li><p>與上層溝通的訊息，若名稱不改的話。以後做 DualStack 從上層傳下來的封包會否出問題？</p></li><li><p>另外弄個小 script 來判斷位址長度是否比改名造成的後果來的容易？
When delivering packets to higher-layer protocols, the output gate is determined from the Protocol field in the IPv6 header. The protocol-to-gateindex mapping must be given in the protocolMapping string parameter</p></li><li><p>protocolMapping 應該被 NextHeader 或延伸標頭分析取代
routing table 儲存在 RoutingTable6 模組裡.
if the route entry contained a next hop address, it will be passed to the interface in the attached IPRoutingDecision.</p></li></ul>]]></content>
        <category label="OMNET++" term="OMNET++"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[在 Windows 上安裝與使用 OMNET++]]></title>
        <id>https://blog.gasolin.idv.tw/ipv6/在-Windows-上安裝與使用-OMNET</id>
        <link href="https://blog.gasolin.idv.tw/ipv6/在-Windows-上安裝與使用-OMNET"/>
        <updated>2005-03-06T08:52:08.000Z</updated>
        <summary type="html"><![CDATA[//1.1.1 03/06/05 Doc is Included in INET6 Project]]></summary>
        <content type="html"><![CDATA[<p>//1.1.1 03/06/05 Doc is Included in INET6 Project
//1.1 01/05/05
//1.0 12/31/04
//0.9 12/28/04
//0.5 12/26/04 init</p><p>Install and Using OMNET++ on Windows
對開發者來說，儘管在 Linux 環境下編譯 OMNET++ 模擬套件也是個好選擇，
但是也有不少人希望能在 Windows 環境下順利利用 OMNET++ 編譯模擬套件.
而目前相關文件仍然極少.
本文總結了作者如何在 Windows 環境下利用 Microsoft Visual C++ 6 (MSVC6) 編譯 OMNET++ 模擬套件的經驗</p><p><strong>1<!-- -->.<!-- --> 安裝 MSVC6 &amp; MSVC Service Pack 6</strong>
安裝 MSVC6 時 "註冊變數" 選項一定要勾選</p><p><strong>2<!-- -->.<!-- --> 設定</strong>
打開選單 -&gt; 工具 (Tools) -&gt; 自訂 (Customize)
點選 Add-ins and Macro files 分頁標籤 (Tab) ,
看到 omnetpp 選項，將之勾選</p><p>回到命令 (Commands) 分頁標籤 (Tab),
分頁左上角的分類 (Category) 選單會多出巨集 (Macros) 選項.
選擇巨集 (Macros) 選項，看到 addNEDfileToProject 巨集，
點選 addNEDfileToProject 巨集，
使用鼠標將巨集拖曳到工具列上，
選擇合適的位置，圖示後按確定.</p><p>在完成上兩步之後，我們已經將 VC 環境設定完成，
可以準備開始在 VC 上建立新的 OMNET++ 專案，
或是匯入原本不是在 Windows 環境下執行的專案</p><p><strong>3<!-- -->.<!-- --> VC 中建立新專案</strong>
若要從頭開始建立新的模擬套件，
可以先在 Windows 檔案管理員中任意地點建立放置新專案的資料夾，
再從 OMNET++ 安裝目錄 /sample 中複製 .dsw, .dsp 專案檔到新專案的資料夾中.</p><p>複製範例專案檔的目的是因為範例專案檔已經將 OMNET++ 編譯所需的編譯器，
連結旗標，Tkenv/Cmdenv 參數等都設定好了，讓我們不需再重新設定.</p><p>點擊 .dsw 檔進入 VC 編輯畫面.
將檔案檢視 (File View) 中的檔案名稱清空後，即可開始編輯新的專案</p><p><strong>4<!-- -->.<!-- --> VC 中匯入專案</strong>
有時我們會想使用別人在 OMNET++ 中已完成的模擬套件或成果，
而對方使用的平台並非 Windows,
此時我們可以用類似前一步驟的方式為這個模擬套件加入新的 VC 專案檔.
從 omnet 安裝目錄 /sample 中複製 .dsw, .dsp 專案檔到原來模擬套件的資料夾中.
點擊 .dsw 檔進入 VC 編輯畫面.
將 File View 中的檔案名稱清空後，即可開始編輯新的專案</p><p><strong>5<!-- -->.<!-- --> VC 中編輯專案</strong>
在 IDE 環境下依照一般 VC 中編輯專案的方式增刪編輯檔案.
但要將其他平台上的 c++ 檔案拿來用時，注意檔案副檔名不能使用 .cc,
副檔名都要先改成 .cpp 後在 VC 下才能正常編譯
(這點好像不一定，至少在 INET 模組裡就不必改)</p><p>當遇到設計好 .ned 檔要加入 VC 時，
先點選工具列上新增的 addNEDfileToProject 巨集圖示，
輸入該 .ned 檔檔名 (包含副檔名),
之後  addNEDfileToProject 巨集會幫忙生成 .ned 對應的 cpp 檔.</p><p>詳細設定可參考 OMNeT++ 安裝目錄下 doc/Readme-MSVC.txt</p><p><strong>6, VC 中編譯專案</strong>
首先打開命令列，準備開始編譯的動作.
命令列開啟流程為按作業系統左下角的 "開始", 在選單中選擇 "執行",
其後將跳出輸入視窗，在視窗中鍵入 <code>cmd (或 Terminal)</code>  按下確定後即彈出類似 Dos 視窗.
接著用一般 Dos 指令切換到專案目錄下準備開始編譯，鍵入
<code>opp_nmakemake</code>  這動作會根據目錄中的來源檔案生成 Makefile.vc 檔案</p><p>接著使用下面指令來生成模擬:
<code>nmake -f Makefile.vc</code>  做完以上部驟之後就可以照一般 VC 編譯方式編譯啦：)</p><p><strong>7, 重新編譯專案</strong>
之前已編譯過時資料夾中會存有舊的 Makefile.vc 檔案，可鍵入 <code>opp_nmakemake -f</code>  來強制覆寫 Makefile.vc .</p><p>在編譯前要清除過時連結資料，可以在命令列中輸入
<code>nmake Makefile.vc clean</code>  也可以在 VC 中使用 選單 / Build/Clean 選項將過時連結資料清除</p><p><strong>8. 選擇 Tkenv 視窗模式模擬</strong>
在預設的情況下，使用 OMNET++ 編譯出來的檔案將是在 cmdenv 命令列環境下執行.
為了更容易檢視模擬結果，
我們可以透過以下方法將模擬切換到在 TKenv 環境下執行:</p><p>選單 / Build/Set Active Project Configuration
從四個選項中選取 xx- win32 Release Tkenv</p><p>參考資料:
1<!-- -->.<!-- --> OMNeT++ and MF build instructions for Windows
2<!-- -->.<!-- --> OMNeT/doc/Readme-MSVC.txt</p><p>refer: Make sure you enter these
settings for <em>all</em> configurations (In the Project|Settings dialog,
select 'All configurations' from the combo in the top-left corner.)</p><ul><li>include path: You must tell MSVC the location of omnetpp.h and other
header files.  Add c:\omnetpp-2.3\include to the include path in
Project|Settings --&gt; 'C/C++' tab --&gt; 'Preprocessor' category --&gt;
Additional include directories.</li><li>library path: MSVC needs to know where to find sim_std.lib, envir.lib
and other libraries. Add omnetpp/lib to the linker path in
Project|Settings --&gt; 'Link' tab --&gt; 'Input' category --&gt;
Additional library path.</li><li>nedc: It's advisable to put OMNeT++'s bin directory into the PATH
so that MSVC will find the NED compiler. (An alternative is to enter
explicit nedc path for each NED file's Custom build step, but that's
much more cumbersome.)</li></ul><p>Add the .ned files to the project and set custom build option for them:
Description:  NED Compiling $(InputPath)
Command:      nedc -s _n.cpp $(InputPath)
Outputs:      $(InputPath)_n.cpp
Hint: you can select all .ned files together, and 'All configurations'
from the combo at the left of the Settings dialog, and then you have to
type this settings only once.
Note: If you copied one of the sample projects, you'll have to adjust
Command, because they contain explicit nedc path (..<!-- -->.<!-- -->.\bin\nedc).</p>]]></content>
        <category label="OMNET++" term="OMNET++"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[INET6 Project]]></title>
        <id>https://blog.gasolin.idv.tw/ipv6/INET6-Project</id>
        <link href="https://blog.gasolin.idv.tw/ipv6/INET6-Project"/>
        <updated>2005-03-03T12:59:55.000Z</updated>
        <summary type="html"><![CDATA[動機:]]></summary>
        <content type="html"><![CDATA[<p>動機:
由於自己論文的模擬需求，嘗試了許多網路模擬工具，包括 OPNET, NS2, OMNET++ 等.
試用後發現 OPNET 架構完備，然而複雜度過高，因授權關係使用上亦受到重重限制.
NS2 使用免費，牌子老又擁有不可忽視的模組群，然而 OTCL 與 C 之間模組關係處理複雜，模組使用時還必需與版本配合，毫無可攜性.
而 OMNET++ 具有許多 NS2 沒有的優點，例如是物件導向式的模擬工具。跨平台通用，使用 C++ 語言撰寫.
在網路模擬上目前則提供了 INET, Mobility Framework, IPv6Suite 等網路模擬模組.
Mobility Framework 是一個相似於 NS2 的網路模擬模組，提供樣版檔案，讓使用者從 Mac 層至 Application 層自行挑選，組合出所需的網路.
而 INET 是三者中支援 OSI 七層最完整的網路模擬模組，使用上也最為簡便。然而目前並不支援 IPv6 與 IP Mobility.
IPv6Suite 提供 IPv6, IPv4, MIPv6 等的模擬，, 功能最為強大.
然而問題頗多，由於綁定太過額外模組，僅限於 Linux 平台，也不容易修改，
在網路模擬上具有分層不夠清楚，安裝不夠簡單，文件不夠友善等缺點.
因此一個主要目的以 INET 模組為基礎，依據 INET 網路分層，並以 IPv6Suite 為參考，
使 INET 支援 IPv6 的 INET6 計畫於焉成型</p><p>INET6 計畫包含</p><ul><li>IPv6 模組程式</li><li>nedDoc 模組程式碼生成文件</li><li>安裝步驟</li><li>導覽 Tutorial</li><li>模擬寫作指引</li></ul><p>未來計畫:</p><ul><li>MIPv6 模組程式 (待 Mobility Framework 整合後繼續開發)</li><li>NEMO 模組程式</li><li>DualStack 模組程式</li></ul><p>本計畫發展穩定後，最終將合併入 INET 模組中，提供 OMNET++ 平台上完整的網路模擬環境.</p>]]></content>
        <category label="OMNET++" term="OMNET++"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[這個網誌搞什麼?]]></title>
        <id>https://blog.gasolin.idv.tw/ipv6/這個網誌搞什麼</id>
        <link href="https://blog.gasolin.idv.tw/ipv6/這個網誌搞什麼"/>
        <updated>2005-03-02T06:00:46.000Z</updated>
        <summary type="html"><![CDATA[這個網誌搞什麼?]]></summary>
        <content type="html"><![CDATA[<p>這個網誌搞什麼？
這個網誌的目的就是放我翻譯的 Linux+IPv6 HOWTO,
還有紀錄我在自己發起的 INET6 計畫中 porting INET6 的過程，
與 porting 過程中所獲得的相關經驗.</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[網路模擬最重要應注意的事情]]></title>
        <id>https://blog.gasolin.idv.tw/devtools/network-simulator-notice</id>
        <link href="https://blog.gasolin.idv.tw/devtools/network-simulator-notice"/>
        <updated>2005-02-27T18:02:02.000Z</updated>
        <summary type="html"><![CDATA[網路模擬最重要應注意的事情, 就是找一台穩定可靠的機器.]]></summary>
        <content type="html"><![CDATA[<p>網路模擬最重要應注意的事情，就是找一台穩定可靠的機器.
一台穩定可靠的機器可以省下無限多測試安裝麻煩.</p><p>以前在好幾台機器上怎麼試都不太順利，換到新的這台 X30 後一切順利的不得了.
感覺這次的投資真是值得：)</p>]]></content>
        <category label="OMNET++" term="OMNET++"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[0. 大綱]]></title>
        <id>https://blog.gasolin.idv.tw/ipv6/0-大綱</id>
        <link href="https://blog.gasolin.idv.tw/ipv6/0-大綱"/>
        <updated>2005-02-24T18:35:46.000Z</updated>
        <summary type="html"><![CDATA[//2/25/2005]]></summary>
        <content type="html"><![CDATA[<p>//2/25/2005
//2/22/2005
//8/6/2004</p><p>1<!-- -->.<!-- --> 概述
1.1<!-- -->.<!-- --> 版權，許可與其它
1.2<!-- -->.<!-- --> 歸類
1.3<!-- -->.<!-- --> 版本，歷史和待辦事項
1.4<!-- -->.<!-- --> 翻譯
1.5<!-- -->.<!-- --> 技術
1.6<!-- -->.<!-- --> 序
1.7<!-- -->.<!-- --> 使用詞彙與縮寫
1.8<!-- -->.<!-- --> 了解這個 HOWTO 的必需條件
2<!-- -->.<!-- --> 基礎
2.1<!-- -->.<!-- --> 什麼是 IPv6?
2.2<!-- -->.<!-- --> IPv6 在 Linux 作業系統上的歷史
2.3<!-- -->.<!-- --> IPv6 的位址格式的形式？
2.4<!-- -->.<!-- --> FAQ 問與答 (基礎)
3<!-- -->.<!-- --> 位址格式
3.1<!-- -->.<!-- --> 沒有特殊前綴的位址
3.2<!-- -->.<!-- --> 位址前綴
3.3<!-- -->.<!-- --> 位址格式 (主機部份)
3.4<!-- -->.<!-- --> 用作路由的位址前綴長度
4<!-- -->.<!-- --> IPv6 - 支援 (ready) 系統確認
4.1<!-- -->.<!-- --> IPv6 - 支援 kernel
4.2<!-- -->.<!-- --> IPv6 - 支援 網路設定工具
4.3<!-- -->.<!-- --> IPv6 - 支援 測試 / 調試 程式
4.4<!-- -->.<!-- --> IPv6 - 支援 程式
4.5<!-- -->.<!-- --> IPv6 - 支援 客戶端程式 (selection)
4.6<!-- -->.<!-- --> IPv6 - 支援 伺服器端程式
4.7<!-- -->.<!-- --> FAQ 問與答 (IPv6 - 支援 系統確認)
5<!-- -->.<!-- --> 設定界面
5.1<!-- -->.<!-- --> 不同的網路設備
5.2<!-- -->.<!-- --> 啟動與關閉界面
6<!-- -->.<!-- --> 設定 IPv6 位址
6.1<!-- -->.<!-- --> 顯示目前的 IPv6 位址
6.2<!-- -->.<!-- --> 新增 IPv6 位址
6.3<!-- -->.<!-- --> 移除 IPv6 位址
7<!-- -->.<!-- --> 設定正常 IPv6 路由
7.1<!-- -->.<!-- --> 顯示目前的 IPv6 路由
7.2<!-- -->.<!-- --> 新增 IPv6 通過閘道器的路由
7.3<!-- -->.<!-- --> 移除 IPv6 通過閘道器的路由
7.4<!-- -->.<!-- --> 新增 IPv6 通過介面的路由
7.5<!-- -->.<!-- --> 移除 IPv6 通過介面的路由
7.6<!-- -->.<!-- --> IPv6 路由 FAQ
8<!-- -->.<!-- --> 芳鄰搜尋
8.1<!-- -->.<!-- --> 使用 "ip" 指令顯示芳鄰
8.2<!-- -->.<!-- --> 使用 "ip" 指令處理芳鄰列表
9<!-- -->.<!-- --> 設定 IPv6-in-IPv4 通道
9.1<!-- -->.<!-- --> 通道的類型
9.2<!-- -->.<!-- --> 顯示目前通道
9.3<!-- -->.<!-- --> 設定點對點的通道
9.4<!-- -->.<!-- --> 設定 6to4 通道
10<!-- -->.<!-- --> 設定 IPv4-in-IPv6 通道
11<!-- -->.<!-- --> 在 /proc-filesystem 的內核設定
11.1<!-- -->.<!-- --> 如何存取 /proc-filesystem
11.2<!-- -->.<!-- --> /proc/sys/net/ipv6/ 中的數值類型.
11.3<!-- -->.<!-- --> /proc/sys/net/ipv4/ 中 IPv6 相關的數值類型
11.4<!-- -->.<!-- --> /proc/net/ 中 IPv6 相關的數值類型
12<!-- -->.<!-- --> Netlink-Interface to kernel
13<!-- -->.<!-- --> 網路調試
13.1<!-- -->.<!-- --> 伺服器接口 (socket) 繫結
13.2<!-- -->.<!-- --> tcpdump 封包傾印範例
14<!-- -->.<!-- --> 在不同的發行版中設定 IPv6
14.1<!-- -->.<!-- --> Red Hat Linux and "clones"
14.2<!-- -->.<!-- --> SuSE Linux
14.3<!-- -->.<!-- --> Debian Linux
15. 自動設定與移動性
15.1<!-- -->.<!-- --> 無狀態自動設定
15.2<!-- -->.<!-- --> 使用 Router Advertisement Daemon (radvd) 達成有狀態自動設定
15.3<!-- -->.<!-- --> 動態主機設定協定 v6 (DHCPv6)
15.4<!-- -->.<!-- --> 移動性
16<!-- -->.<!-- --> 防火牆
16.1<!-- -->.<!-- --> 使用 netfilter6 作防火牆
16.2<!-- -->.<!-- --> 準備
16.3<!-- -->.<!-- --> 使用方法
17. 安全性
17.1<!-- -->.<!-- --> 節點安全性
17.2<!-- -->.<!-- --> 存取限制
17.3<!-- -->.<!-- --> IPv6 安全性驗證
18<!-- -->.<!-- --> 加密與認證
18.1<!-- -->.<!-- --> 使用加密與認證的模式
18.2<!-- -->.<!-- --> 核心支援 (ESP 與 AH)
18.3<!-- -->.<!-- --> 自動金鑰交換 (IKE)
18.4<!-- -->.<!-- --> 額外訊息
19<!-- -->.<!-- --> 服務品質 (QoS)
20<!-- -->.<!-- --> Hints for IPv6-enabled daemons
20.1<!-- -->.<!-- --> Berkeley Internet Name Daemon BIND (named)
20.2<!-- -->.<!-- --> Internet super daemon (xinetd)
20.3<!-- -->.<!-- --> Webserver Apache2 (httpd2)
20.4<!-- -->.<!-- --> Router Advertisement Daemon (radvd)
20.5<!-- -->.<!-- --> tcp_wrapper
21<!-- -->.<!-- --> 程式設計 (使用 API)
22<!-- -->.<!-- --> 互聯性
23<!-- -->.<!-- --> 更多資訊與網址
23.1<!-- -->.<!-- --> 書籍，文章，線上評論 (mixed)
23.2<!-- -->.<!-- --> Conferences, Meetings, Summits
23.3<!-- -->.<!-- --> 線上資訊
23.4<!-- -->.<!-- --> IPv6 基礎架構
23.5<!-- -->.<!-- --> 郵件列表
23.6<!-- -->.<!-- --> 線上工具
23.7<!-- -->.<!-- --> Trainings, Seminars
23.8<!-- -->.<!-- --> 'The Online Discovery' ...</p><p>24<!-- -->.<!-- --> Revision history / Credits / The End</p><p>  24.1<!-- -->.<!-- --> Revision history
24.2<!-- -->.<!-- --> Credits
24.3<!-- -->.<!-- --> 結語</p>]]></content>
        <category label="IPv6" term="IPv6"/>
    </entry>
</feed>